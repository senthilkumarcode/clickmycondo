{"version":3,"sources":["webpack:///src/app/modules/ams/assets/add-maintenance/add-maintenance.component.html","webpack:///src/app/modules/ams/assets/add-maintenance/add-maintenance-routing.module.ts","webpack:///src/app/modules/ams/assets/add-maintenance/add-maintenance.component.scss","webpack:///src/app/modules/ams/assets/add-maintenance/add-maintenance.component.ts","webpack:///src/app/modules/ams/assets/add-maintenance/add-maintenance.module.ts"],"names":["routes","path","component","canActivate","AddMaintenanceRoutingModule","imports","forChild","exports","AddMaintenanceComponent","route","assetService","lookupService","sessionService","sharedService","dialog","router","activatedRoute","staffService","_changeDetectorRef","translateService","asset","AssociationStaff","maintenance","addMaintForm","mainSubType","isFileAdded","fileList","listOfFiles","issueToStaff","staffList","assetSettings","statusList","dynamicForm","message","event","plannedMaintenanceDate","actualMaintDate","frequencyDays","nextPlannedMaintenance","add","isMaintainedbyStaff","maintenanceTypeId","maintenanceSubtypeId","maintainedbyStaff","queryParams","subscribe","params","type","assetId","paramMap","assetMaintenancePlanId","get","isEdit","getAllAssetMaintenancePlanById","res","customField","JSON","parse","customFields","length","queryParamBase","ApartmentId","apartmentId","LookupTypeId","getLookupValueByLookupTypeId","getAllMaintenance","getAsset","getAllStaff","id","mainType","filter","val","subCategory","staffId","maintFrequencyInDays","fileDetailsIds","staffParms","roleTypeIds","getAllStaffs","forEach","ele","customLabel","roleName","staffCategoryName","staffName","maintenanceTotalBilledAmt","maintLaborCost","Number","maintPartsCost","maintVat","maintWithTax","totalDiscount","addMaintenanceForm","valid","window","scroll","top","behavior","data","appearance","content","CONTENTREQUIREDFIELD","shake","showIcon","markForCheck","isAssetLoaded","assetMaintenancePlan","notes","maintenanceStatusId","isActive","insertedBy","userId","insertedOn","Date","toISOString","updatedBy","updatedOn","lastMaintenanceDate","maintenanceByCompany","maintenanceByPerson","maintenanceCompanyContactNo","alertBeforeDays","stringify","addAssetMaintenancePlan","openSnackBar","navigate","parseInt","updateAssetMaintenancePlan","CLOSETITLE","dialogData","CONFIRMACTION","dialogRef","open","panelClass","disableClose","afterClosed","dialogResult","resetForm","lookupTypeId","subCategoryLookupTypeId","getSubcategory","setMainSubType","getAllAssetByApartmentId","assetList","assetName","assetLocationName","assetSubLocationName","selector","template","encapsulation","None","animations","AddMaintenanceModule","declarations","forRoot"],"mappings":"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","file":"modules-ams-assets-add-maintenance-add-maintenance-module-es5.js","sourcesContent":["export default \"<div class=\\\"add-maintenance-assets-wrapper\\\">\\n\\t<div class=\\\"main\\\">\\n\\t\\t<condo-message class=\\\"mb-3\\\" *ngIf=\\\"message\\\"\\n\\t\\t\\t[appearance]=\\\"message.appearance\\\"\\n\\t\\t\\t[showIcon]=\\\"message.showIcon\\\"\\n\\t\\t\\t[type]=\\\"message.type\\\"\\n\\t\\t\\t[@shake]=\\\"message.shake\\\">\\n\\t\\t\\t{{message.content}}\\n\\t\\t</condo-message>\\n\\t\\t<div class=\\\"d-flex justify-content-between\\\">\\n\\t\\t\\t<h4 class=\\\"mb-4\\\">\\t\\t\\t\\n\\t\\t\\t\\t<span *ngIf=\\\"!isEdit\\\">Create Asset Maintenance </span>\\n\\t\\t\\t\\t<span *ngIf=\\\"isEdit\\\">Edit Asset Maintenance </span>\\t\\t\\t\\n\\t\\t\\t</h4>\\t\\t\\t\\n\\t\\t</div>\\n\\t\\t<app-loader *ngIf=\\\"isAssetLoaded\\\"></app-loader>\\n\\t\\t<form name=\\\"addMaintenanceForm\\\" #addMaintenanceForm=\\\"ngForm\\\" novalidate>\\n\\t\\t\\t<div class=\\\"bg-card shadow\\\">\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t\\t\\t\\t<condo-select\\n\\t\\t\\t\\t\\t\\tlabelText=\\\"Select Asset\\\"                                     \\n\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t fieldPlaceholder=\\\"Select Asset\\\"\\n\\t\\t\\t\\t\\t\\t [fieldList]=\\\"assetList\\\"                                     \\n\\t\\t\\t\\t\\t\\t fieldValue=\\\"customLabel\\\"\\n\\t\\t\\t\\t\\t\\t fieldId=\\\"assetId\\\"\\n\\t\\t\\t\\t\\t\\t [fieldModel]=\\\"maintenance.assetId\\\"\\n\\t\\t\\t\\t\\t\\t (fieldParams)=\\\"setAssetId($event)\\\"></condo-select>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<mat-accordion>\\n\\t\\t\\t\\t<mat-expansion-panel [expanded] = \\\"true\\\">\\n\\t\\t\\t\\t\\t<mat-expansion-panel-header>\\n\\t\\t\\t\\t\\t\\t<mat-panel-title>Current Maintenance</mat-panel-title>\\n\\t\\t\\t\\t\\t</mat-expansion-panel-header>\\n\\t\\t\\t\\t\\t<mat-panel-description>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<condo-select\\n\\t\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"Maint Type\\\"                                     \\n\\t\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t fieldPlaceholder=\\\"Select Maint type\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t [fieldList]=\\\"mainType\\\"                                     \\n\\t\\t\\t\\t\\t\\t\\t\\t fieldValue=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t fieldId=\\\"id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t [fieldModel]=\\\"maintenance.maintenanceTypeId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t (fieldParams)=\\\"setMaintTypeId($event)\\\"></condo-select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<condo-select\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"Maint Subtype\\\"                                     \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldPlaceholder=\\\"Select Maint Subtype\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldList]=\\\"mainSubType\\\"                                     \\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldValue=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldId=\\\"id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldModel]=\\\"maintenance.maintenanceSubtypeId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(fieldParams)=\\\"setSubTypeId($event)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</condo-select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<app-datepicker\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"Planned Maintenance Date\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldName=\\\"maitainPlannedDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"date\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldModel]=\\\"maintenance.plannedMaintenanceDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(fieldParams)=\\\"getPlannedMaintenanceDate($event)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</app-datepicker>\\n\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<app-datepicker\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"Actual Maintenance Date\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldName=\\\"actualMaintenance\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"date\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldModel]=\\\"maintenance.actualMaintDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(fieldParams)=\\\"getActualMaintDate($event)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</app-datepicker>\\n\\n\\t\\t\\t\\t\\t\\t\\t</div> \\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<condo-select\\n\\t\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"Staff Incharge\\\"                                     \\n\\t\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t fieldPlaceholder=\\\"Select Staff\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t [fieldList]=\\\"staffList | orderBy : 'staffName'\\\"                                     \\n\\t\\t\\t\\t\\t\\t\\t\\t fieldValue=\\\"customLabel\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t fieldId=\\\"staffId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t [fieldModel]=\\\"maintenance.maintainedbyStaff\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t (fieldParams)=\\\"setStaffId($event)\\\"></condo-select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\t\\n\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Maintenance by Vendor*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input name=\\\"isMaintainedbyStaff\\\" id=\\\"inactive\\\" [(ngModel)]=\\\"maintenance.isMaintainedbyStaff\\\"   (change)=\\\"maintenance.maintenanceByCompany =''\\\" [value]=\\\"true\\\" type=\\\"radio\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"inactive\\\">Yes</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input name=\\\"isMaintainedbyStaff\\\" id=\\\"active\\\" [(ngModel)]=\\\"maintenance.isMaintainedbyStaff\\\"  (change)=\\\"maintenance.maintenanceByCompany =''\\\" [value]=\\\"false\\\" type=\\\"radio\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"active\\\">No</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\"  *ngIf=\\\"maintenance.isMaintainedbyStaff\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Performed by Company/Vendor</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter Company/Vendor\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"Company\\\" [(ngModel)]=\\\"maintenance.maintenanceByCompany\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</div>  \\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\" *ngIf=\\\"isEdit\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Status</label>                 \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex\\\">                           \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\" *ngFor=\\\"let list of statusList;let i = index\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input name=\\\"status\\\" type=\\\"radio\\\" id=\\\"status{{i}}\\\" [(ngModel)]=\\\"maintenance.maintenanceStatusId\\\" [value]=\\\"list.lookupValueId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"radio-inline ml-2\\\" for=\\\"status{{i}}\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{list.lookupValueName | titlecase}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div> \\t\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Notes</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea placeholder=\\\"Enter Notes\\\" name=\\\"notes\\\" [(ngModel)]=\\\"maintenance.notes\\\" ></textarea>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</div>                                \\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</mat-panel-description>\\n\\t\\t\\t\\t</mat-expansion-panel>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<mat-expansion-panel>\\n\\t\\t\\t\\t\\t<mat-expansion-panel-header>\\n\\t\\t\\t\\t\\t\\t<mat-panel-title>Maintenance Expenses</mat-panel-title>\\n\\t\\t\\t\\t\\t</mat-expansion-panel-header>\\n\\t\\t\\t\\t\\t<mat-panel-description>\\t\\t\\t\\t\\t\\t  \\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Maintenance Labor Cost</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter Labor Cost\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"maintLaborCost\\\" OnlyNumber=\\\"true\\\" [(ngModel)]=\\\"maintenance.maintLaborCost\\\" (change)=\\\"totalAmt()\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Maintenance Parts Cost</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter Parts Cost\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"maintPartsCost\\\" OnlyNumber=\\\"true\\\" [(ngModel)]=\\\"maintenance.maintPartsCost\\\" (change)=\\\"totalAmt()\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>VAT</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter Vat\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"maintVat\\\" OnlyNumber=\\\"true\\\" [(ngModel)]=\\\"maintenance.maintVat\\\" (change)=\\\"totalAmt()\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>With Holding Tax</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter With Holding Tax\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"maintWithTax\\\" OnlyNumber=\\\"true\\\" [(ngModel)]=\\\"maintenance.maintWithTax\\\" (change)=\\\"totalAmt()\\\"  >\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Total Discount</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter Total Discount\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"totalTax\\\" OnlyNumber=\\\"true\\\" [(ngModel)]=\\\"maintenance.totalDiscount\\\" (change)=\\\"totalAmt()\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Total Billed Amount</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter Total Billed Amount\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"maintenanceTotalBilledAmt\\\" OnlyNumber=\\\"true\\\" readonly [(ngModel)]=\\\"maintenance.maintenanceTotalBilledAmt\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</mat-panel-description>\\n\\t\\t\\t\\t</mat-expansion-panel>\\n\\n\\t\\t\\t\\t<mat-expansion-panel>\\n\\t\\t\\t\\t\\t<mat-expansion-panel-header>\\n\\t\\t\\t\\t\\t\\t<mat-panel-title>Future Plan</mat-panel-title>\\n\\t\\t\\t\\t\\t</mat-expansion-panel-header>\\n\\t\\t\\t\\t\\t<mat-panel-description>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<app-datepicker\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"Next Planned Maint. Date\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldName=\\\"plannedDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"date\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldModel]=\\\"maintenance.nextPlannedMaintenance\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(fieldParams)=\\\"getNextPlannedMaintenance($event)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</app-datepicker>\\n\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Alert/Remind Before Days</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter Remind me days\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"alertBeforeDays\\\" OnlyNumber=\\\"true\\\" [(ngModel)]=\\\"maintenance.alertBeforeDays\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<app-upload\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[fileIds]=\\\"maintenance.fileDetailsIds\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[isEdit]=\\\"isEdit\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(outputParams)=\\\"getFileIds($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t></app-upload>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</mat-panel-description>\\n\\t\\t\\t\\t</mat-expansion-panel>\\n\\n\\t\\t\\t\\t<!-- Dynamic Form -->\\n\\t\\t\\t\\t<mat-expansion-panel *ngIf=\\\"assetId && dynamicForm?.length > 0\\\">\\n\\t\\t\\t\\t\\t<mat-expansion-panel-header>\\n\\t\\t\\t\\t\\t\\t<mat-panel-title>Check List Form</mat-panel-title>\\n\\t\\t\\t\\t\\t</mat-expansion-panel-header>\\n\\t\\t\\t\\t\\t<mat-panel-description>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\" *ngFor=\\\"let data of dynamicForm;let i=index\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- Input Field -->\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\" *ngIf=\\\"data.type == 'text-field'\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{data.question}}</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" [name]=\\\"data.question\\\" [(ngModel)]=\\\"data.answer\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- Check Box -->\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\" *ngIf=\\\"data.type == 'check-box'\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{data.question}}</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-check\\\" *ngFor=\\\"let box of data.option;let j=index\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"checkbox{{i}}{{j}}\\\" name=\\\"{{box.name}}{{i}}{{j}}\\\" [(ngModel)]=\\\"box.answer\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"checkbox{{i}}{{j}}\\\">{{box.name}}</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- Radio Button -->\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box radio-box\\\" *ngIf=\\\"data.type == 'radio'\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{data.question}}</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\" *ngFor=\\\"let opt of data.option;let j=index\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input name=\\\"ques{{i}}index{{j}}\\\" id=\\\"{{i}}index{{j}}\\\" [(ngModel)]=\\\"data.answer\\\" [value]=\\\"opt.name\\\" type=\\\"radio\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"{{i}}index{{j}}\\\">{{opt.name}}</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- Date -->\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\" *ngIf=\\\"data.type == 'date'\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{data.question}}</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"data.question{{i}}\\\" [owlDateTime]=\\\"dynamicDate\\\" [owlDateTimeTrigger]=\\\"dynamicDate\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Date\\\"[(ngModel)]=\\\"data.answer\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #dynamicDate [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"dynamicDate\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon svgIcon=\\\"feather:calendar\\\"></mat-icon>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</mat-panel-description>\\n\\t\\t\\t\\t</mat-expansion-panel>\\n\\t\\t\\t</mat-accordion>\\n\\t\\t\\t<div class=\\\"mt-4\\\">\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-12 text-right\\\">\\n\\t\\t\\t\\t\\t<button mat-flat-button *ngIf=\\\"!isEdit\\\"  [color]=\\\"'primary'\\\" (click)=\\\"addMaintenance()\\\" >Submit</button>\\n\\t\\t\\t\\t\\t<button mat-flat-button *ngIf=\\\"isEdit\\\"  [color]=\\\"'primary'\\\" (click)=\\\"updateMaintenance()\\\">Update</button>\\n\\t\\t\\t\\t\\t<button class=\\\"ml-3\\\" *ngIf=\\\"!isEdit\\\" mat-button (click)=\\\"clear()\\\">Cancel</button>\\n\\t\\t\\t\\t\\t<button class=\\\"ml-3\\\" *ngIf=\\\"isEdit\\\" mat-button (click)=\\\"back()\\\">Cancel</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t</form>\\n\\t</div>\\n</div>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from 'src/app/core/auth/guards/auth.guard';\n\nimport { AddMaintenanceComponent } from './add-maintenance.component';\n\n\nconst routes: Routes = [\n  { path: '', component: AddMaintenanceComponent, canActivate: [AuthGuard]},\n  { path: ':id', component: AddMaintenanceComponent, canActivate: [AuthGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AddMaintenanceRoutingModule { }\n","export default \".cardOuter {\\n  padding: 25px 20px;\\n}\\n\\n.cancelBtn {\\n  background: white;\\n  border: 1px solid #dadada;\\n}\\n\\n.uploadbtn {\\n  padding-top: 25px;\\n  margin: 0px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9hbXMvYXNzZXRzL2FkZC1tYWludGVuYW5jZS9hZGQtbWFpbnRlbmFuY2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBQTtBQUNKOztBQUNBO0VBRUksaUJBQUE7RUFDQSx5QkFBQTtBQUNKOztBQUNBO0VBQ0ksaUJBQUE7RUFDQSxXQUFBO0FBRUoiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2Ftcy9hc3NldHMvYWRkLW1haW50ZW5hbmNlL2FkZC1tYWludGVuYW5jZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkT3V0ZXIge1xuICAgIHBhZGRpbmc6IDI1cHggMjBweDsgXG59XG4uY2FuY2VsQnRuXG57XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RhZGFkYTtcbn1cbi51cGxvYWRidG57XG4gICAgcGFkZGluZy10b3A6IDI1cHg7XG4gICAgbWFyZ2luOiAwcHg7XG59Il19 */\";","import { Component, OnInit, ChangeDetectorRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmDialogModel, CommonConfirmModalComponent } from 'src/app/shared/components/common-confirm-modal/common-confirm-modal.component';\n\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { AssetService } from 'src/app/api/controllers/Asset';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { StaffService } from 'src/app/api/controllers/Staff';\nimport { CondoAnimations } from 'src/@condo/animations';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport moment from 'moment';\n\n\n@Component({\n  selector: 'app-add-maintenance',\n  templateUrl: './add-maintenance.component.html',\n  styleUrls: ['./add-maintenance.component.scss'],\n  encapsulation  : ViewEncapsulation.None,\n  animations   : CondoAnimations\n})\n\nexport class AddMaintenanceComponent implements OnInit {\n\n  public asset: any = {};\n  AssociationStaff: any = true;\n  public maintenance: any = {};\n  addMaintForm: any = {};\n  mainSubType: any = [];\n  public isEdit;\n  isFileAdded: boolean = false;\n  selectedFile: File;\n  fileList: File[] = [];\n  listOfFiles: any[] = [];\n  issueToStaff:any=[];\n\n  assetId: any;\n  isAssetLoaded: boolean;\n  mainType: any;\n  assetMaintenancePlanId: string;\n  assetList: any;\n  staffList:any =[];\n  assetSettings:any ={};\n\n  statusList:any = [];\n\n  dynamicForm = [];\n  frequencyDays:number;\n  message:any = null;\n\n  @ViewChild('addMaintenanceForm', {static: false}) addMaintenanceForm: NgForm;\n\n  constructor(\n    private route: ActivatedRoute,\n    private assetService: AssetService,\n    private lookupService: LookupService,\n    private sessionService: SessionService,\n    private sharedService: SharedService,\n    public dialog: MatDialog,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private staffService:StaffService,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private translateService: TranslateService\n  ) {\n\n  }\n\n  getPlannedMaintenanceDate(event) {\n    this.maintenance.plannedMaintenanceDate = event\n  }\n\n  getActualMaintDate(event) {\n    this.maintenance.actualMaintDate = event;\n    if(this.frequencyDays) {\n      this.maintenance.nextPlannedMaintenance =  moment(this.maintenance.actualMaintDate).add(this.frequencyDays, 'days');\n    } \n  }\n\n  getNextPlannedMaintenance(event) {\n    this.maintenance.nextPlannedMaintenance = event\n  }\n\n  ngOnInit(): void {\n    this.maintenance.isMaintainedbyStaff = true;\n    this.maintenance.maintenanceTypeId ='';\n    this.maintenance.maintenanceSubtypeId='';\n    this.maintenance.maintainedbyStaff ='';\n    // this.assetSettings = {\n\t\t// \tsingleSelection: true,\n\t\t// \ttext: \"Search\",\n\t\t// \tselectAllText: 'Select All',\n\t\t// \tunSelectAllText: 'UnSelect All',\n\t\t// \tenableSearchFilter: true,\n\t\t// \tbadgeShowLimit: 3,\n\t\t// \t// lazyLoading: true\n\t\t// };\n    this.activatedRoute.queryParams.subscribe(params => {\n      if (params && params.type == 'ADD') {\n        this.maintenance.assetId = params.assetId;\n      }\n    });\n    this.route.paramMap.subscribe(params => {\n      if (params) {\n        this.assetMaintenancePlanId = params.get('id');\n        if (this.assetMaintenancePlanId) {\n          let params: any = {\n            assetMaintenancePlanId : this.assetMaintenancePlanId \n          };\n          this.isEdit = true;\n          this.assetService.getAllAssetMaintenancePlanById(params).subscribe((res: any) => {\n            this.maintenance = res[0] ? res[0] : {};\n            this.maintenance.assetId = this.maintenance ? this.maintenance.assetId:'';\n            this.maintenance.isMaintainedbyStaff = !this.maintenance.isMaintainedbyStaff;\n            let customField = JSON.parse(this.maintenance.customFields);\n            if(customField && customField.length > 0 )\n            this.dynamicForm = customField;\n          });\n          //Status List\n          let queryParamBase = {\n            ApartmentId: this.sessionService.apartmentId,\n            LookupTypeId: 64,\n          };\n          this.lookupService.getLookupValueByLookupTypeId(queryParamBase).subscribe((res: any) => {\n            this.statusList = res;\n          });\n        }\n      }\n    });\n    this.getAllMaintenance();\n    this.getAsset();\n    this.getAllStaff();\n  }\n\n  setMainSubType(id) {\n    if (this.mainType && this.mainType.length > 0) {\n      this.mainType.filter(val => {\n        if (val.id == id) {\n          this.mainSubType = val.subCategory\n        }\n\n      })\n    }\n  }\n\n\tsetMaintTypeId(event){\n    this.maintenance.maintenanceTypeId = event[0].id;\n    this.mainSubType = event[0]?event[0].subCategory:[];\n  }\n\n  setSubTypeId(event){\n    this.maintenance.maintenanceSubtypeId = event[0].id;\n  }\n\n  setStaffId(event){\n    this.maintenance.maintainedbyStaff = event[0].staffId;\n  }\n\n  setAssetId(event){\n    this.maintenance.assetId = event[0].assetId;\n    this.dynamicForm = [];\n    this.frequencyDays = event[0].maintFrequencyInDays; \n    if(event[0].customFields)\n    this.dynamicForm = JSON.parse(event[0].customFields);\n\n  }\n\n  getFileIds(event) {\n    this.maintenance.fileDetailsIds = event[0];\n  }\n\n\n  getAllStaff() {\n    let staffParms = {\n      apartmentId: this.sessionService.apartmentId,\n      roleTypeIds: '1,3'\n    }\n    this.staffService.getAllStaffs(staffParms).subscribe((res:any) => {\n      if(res && res.length) {\n        res.forEach((ele)=>{\n          ele.customLabel = `${ele.roleName} - ${ele.staffCategoryName} -- ${ele.staffName}`;\n        })\n        this.staffList = res;\n      }\n    });\n\t}\n\n  totalAmt(){\n    this.maintenance.maintenanceTotalBilledAmt = 0;\n    this.maintenance.maintenanceTotalBilledAmt += this.maintenance.maintLaborCost?Number(this.maintenance.maintLaborCost):0\n    this.maintenance.maintenanceTotalBilledAmt += this.maintenance.maintPartsCost?Number(this.maintenance.maintPartsCost):0\n    this.maintenance.maintenanceTotalBilledAmt += this.maintenance.maintVat?Number(this.maintenance.maintVat):0\n    this.maintenance.maintenanceTotalBilledAmt += this.maintenance.maintWithTax?Number(this.maintenance.maintWithTax):0\n    this.maintenance.maintenanceTotalBilledAmt -= this.maintenance.totalDiscount?Number(this.maintenance.totalDiscount):0\n  }\n\n  addMaintenance() {\n    this.message = null;\n    if(!this.addMaintenanceForm.valid){\n      window.scroll({\n        top: 0,\n        behavior: 'smooth'\n      });\n      // Show the validation message\n      this.translateService.get('VALIDATION').subscribe((data:any)=> {\n      this.message = {\n        appearance: 'outline',\n        content   : `${data.CONTENTREQUIREDFIELD}`,\n        shake     : true,\n        showIcon  : true,\n        type      : 'error'\n      };\n    });\n      //Mark for check\n      this._changeDetectorRef.markForCheck();\n    } else {\n      this.isAssetLoaded = true;\n      let params: any = {\n        assetMaintenancePlan : {\n          assetMaintenancePlanId : 0,\n          apartmentId : this.sessionService.apartmentId,\n          assetId : this.maintenance.assetId,\n          notes : this.maintenance.notes,\n          maintenanceStatusId : 418,  //initially set Open Status\n          isActive : true,\n          insertedBy : this.sessionService.userId,\n          insertedOn : new Date().toISOString,\n          updatedBy : null,\n          updatedOn : null,\n          actualMaintDate : this.maintenance.actualMaintDate,\n          lastMaintenanceDate : this.maintenance.lastMaintenanceDate,\n          nextPlannedMaintenance : this.maintenance.nextPlannedMaintenance,\n          maintenanceTypeId : Number(this.maintenance.maintenanceTypeId),\n          maintenanceByCompany : this.maintenance.maintenanceByCompany ? this.maintenance.maintenanceByCompany : null,\n          maintenanceByPerson : null,\n          maintenanceCompanyContactNo : null,\n          maintLaborCost : this.maintenance.maintLaborCost,\n          maintPartsCost : this.maintenance.maintPartsCost,\n          maintVat : this.maintenance.maintVat,\n          maintWithTax : this.maintenance.maintWithTax,\n          maintenanceTotalBilledAmt : this.maintenance.maintenanceTotalBilledAmt,\n          isMaintainedbyStaff : !this.maintenance.isMaintainedbyStaff,\n          maintainedbyStaff : this.maintenance.maintainedbyStaff ? this.maintenance.maintainedbyStaff : null,\n          maintenanceSubtypeId : this.maintenance.maintenanceSubtypeId ? Number(this.maintenance.maintenanceSubtypeId) : null,\n          plannedMaintenanceDate : this.maintenance.plannedMaintenanceDate? this.maintenance.plannedMaintenanceDate:null, \n          totalDiscount : this.maintenance.totalDiscount? this.maintenance.totalDiscount:null,\n          alertBeforeDays : this.maintenance.alertBeforeDays? Number(this.maintenance.alertBeforeDays):null,\n          customFields : JSON.stringify(this.dynamicForm)\n        }\n      };\n      this.assetService.addAssetMaintenancePlan(params).subscribe((res: any) => {\n        if (res.message) {\n          this.sharedService.openSnackBar(\"Asset Maintenance added successfully\",'success');\n          this.isAssetLoaded = false;\n          this.router.navigate(['ams/assets/manage-maintenance']);\n        }\n      });\n    }\n  }\n\n  updateMaintenance() {\n    this.message = null;\n    if(!this.addMaintenanceForm.valid){\n      window.scroll({\n        top: 0,\n        behavior: 'smooth'\n      });\n      // Show the validation message\n      this.translateService.get('VALIDATION').subscribe((data:any)=> {\n      this.message = {\n        appearance: 'outline',\n        content   : `${data.CONTENTREQUIREDFIELD}`,\n        shake     : true,\n        showIcon  : true,\n        type      : 'error'\n      };\n      });\n      //Mark for check\n      this._changeDetectorRef.markForCheck();\n    } else {\n      this.isAssetLoaded = true;\n      let params: any = {\n        assetMaintenancePlan : {\n          assetMaintenancePlanId : this.maintenance.assetMaintenancePlanId,\n          apartmentId : this.sessionService.apartmentId,\n          assetId : this.maintenance.assetId,\n          notes : this.maintenance.notes,\n          maintenanceStatusId : this.maintenance.maintenanceStatusId,\n          isActive : true,\n          insertedBy : parseInt(this.sessionService.userId),\n          insertedOn : new Date().toISOString,\n          updatedBy : parseInt(this.sessionService.userId),\n          updatedOn : new Date().toISOString,\n          actualMaintDate : this.maintenance.actualMaintDate,\n          lastMaintenanceDate : this.maintenance.lastMaintenanceDate,\n          nextPlannedMaintenance : this.maintenance.nextPlannedMaintenance,\n          maintenanceTypeId : Number(this.maintenance.maintenanceTypeId),\n          maintenanceByCompany : this.maintenance.maintenanceByCompany ? this.maintenance.maintenanceByCompany : null,\n          maintenanceByPerson : null,\n          maintenanceCompanyContactNo : null,\n          maintLaborCost : Number(this.maintenance.maintLaborCost),\n          maintPartsCost : Number(this.maintenance.maintPartsCost),\n          maintVat : Number(this.maintenance.maintVat),\n          maintWithTax : Number(this.maintenance.maintWithTax),\n          maintenanceTotalBilledAmt : Number(this.maintenance.maintenanceTotalBilledAmt),\n          isMaintainedbyStaff : this.maintenance.isMaintainedbyStaff,\n          maintainedbyStaff : this.maintenance.maintainedbyStaff ? this.maintenance.maintainedbyStaff : null,\n          maintenanceSubtypeId : this.maintenance.maintenanceSubtypeId ? Number(this.maintenance.maintenanceSubtypeId) : null,\n          plannedMaintenanceDate : this.maintenance.plannedMaintenanceDate? this.maintenance.plannedMaintenanceDate:null, \n          totalDiscount : this.maintenance.totalDiscount? this.maintenance.totalDiscount:null,\n          alertBeforeDays : this.maintenance.alertBeforeDays? Number(this.maintenance.alertBeforeDays):null,\n          customFields : JSON.stringify(this.dynamicForm),\n        }\n      }\n      this.assetService.updateAssetMaintenancePlan(params).subscribe((res: any) => {\n        if (res) {\n          this.sharedService.openSnackBar(\"Asset maintenance updated successfully\",'success');\n          this.router.navigate(['ams/assets/manage-maintenance']);\n        }\n        this.isAssetLoaded = false;\n      });\n    }\n  }\n\n  back() {\n    this.translateService.get('POPUP').subscribe((data:any)=> {\n    const message = `${data.CLOSETITLE}`;\n\t\tconst dialogData = new ConfirmDialogModel(`${data.CONFIRMACTION}`, message);\n\t\tconst dialogRef = this.dialog.open(CommonConfirmModalComponent, {\n\t\t  panelClass: 'material-dialog-medium',\n\t\t  disableClose: true,\n\t\t  data: dialogData\n\t\t});\n\t\tdialogRef.afterClosed().subscribe(dialogResult => {\n\t\t\tif (dialogResult) \n      this.router.navigate(['/ams/assets/manage-maintenance'])\n\t\t})\n  });\n  }\n  \n  clear() {\n    this.addMaintenanceForm.resetForm()\n    this.maintenance = {}\n  }\n\n  getAllMaintenance() {\n    let queryParamBase: any = {};\n    queryParamBase = {\n      apartmentId: this.sessionService.apartmentId,\n      lookupTypeId: 167,\n      subCategoryLookupTypeId: 168,\n    };\n    this.isAssetLoaded = true;\n    this.lookupService.getSubcategory(queryParamBase).subscribe((res: any) => {\n      if (res) {\n        this.isAssetLoaded = false;\n        this.mainType = res ? res : [];\n        if (this.isEdit && this.maintenance.maintenanceTypeId) {\n          this.setMainSubType(this.maintenance.maintenanceTypeId);\n        } else {\n          // this.maintenance.maintenanceTypeId = this.mainType && this.mainType.length > 0 ? this.mainType[0].id : '';\n          // this.setMainSubType(this.maintenance.maintenanceTypeId);\n        }\n\n      }\n    });\n  }\n\n\n  /**\n   * get Asset list\n   * @param \n   */\n  getAsset() {\n    let params: any = {};\n    params.apartmentId = this.sessionService.apartmentId;\n\n    this.assetService.getAllAssetByApartmentId(params).subscribe((res: any) => {\n      if (res) {\n        this.assetList = res ? res : [];\n        this.assetList.forEach((data)=>{\n          data.customLabel = `${data.assetName} -- ${data.assetLocationName} - ${data.assetSubLocationName}`;\n        })\n        // this.maintenance.assetId = !this.maintenance.assetId ? (this.assetList && this.assetList.length > 0) && this.assetList[0].assetId :'';\n      }\n    });\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { SelectModule } from 'src/app/modules/ui/select/select.module';\nimport { UploadModule } from 'src/app/modules/ui/upload/upload.module';\nimport { DatepickerModule } from 'src/app/modules/ui/datepicker/datepicker.module';\nimport { CondoCardModule } from 'src/app/modules/ui/card/card.module';\nimport { CondoMessageModule } from 'src/app/modules/ui/message/message.module';\nimport { HelpTooltipModule } from 'src/app/modules/ui/help-tooltip/help-tooltip.module';\n\nimport { AddMaintenanceRoutingModule } from './add-maintenance-routing.module';\n\nimport { AddMaintenanceComponent } from './add-maintenance.component';\n\n\n@NgModule({\n  declarations: [AddMaintenanceComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    SelectModule,\n    CondoCardModule,\n    DatepickerModule.forRoot(),\n    UploadModule,\n    CondoMessageModule,\n    HelpTooltipModule,\n    AddMaintenanceRoutingModule\n  ]\n})\nexport class AddMaintenanceModule { }\n"]}