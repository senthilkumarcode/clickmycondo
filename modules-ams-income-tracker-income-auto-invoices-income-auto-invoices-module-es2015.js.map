{"version":3,"sources":["./src/app/modules/ams/income-tracker/income-auto-invoices/create-monthly-invoice/create-monthly-invoice.component.html","./src/app/modules/ams/income-tracker/income-auto-invoices/view-monthly-invoice/view-monthly-invoice.component.html","./src/app/modules/ams/income-tracker/income-auto-invoices/create-monthly-invoice/create-monthly-invoice.component.scss","./src/app/modules/ams/income-tracker/income-auto-invoices/create-monthly-invoice/create-monthly-invoice.component.ts","./src/app/modules/ams/income-tracker/income-auto-invoices/income-auto-invoices-routing.module.ts","./src/app/modules/ams/income-tracker/income-auto-invoices/income-auto-invoices.module.ts","./src/app/modules/ams/income-tracker/income-auto-invoices/view-monthly-invoice/view-monthly-invoice.component.scss","./src/app/modules/ams/income-tracker/income-auto-invoices/view-monthly-invoice/view-monthly-invoice.component.ts"],"names":[],"mappings":"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","file":"modules-ams-income-tracker-income-auto-invoices-income-auto-invoices-module-es2015.js","sourcesContent":["export default \"<div class=\\\"income-tracker-auto-monthly-invoice-wrapper\\\">\\n\\t<div class=\\\"main\\\">\\n        <h4 class=\\\"mb-4\\\">Create Automatic Monthly Invoice</h4>\\n\\t\\t<div>\\n\\t\\t\\t<form>\\n\\t\\t\\t\\t<div class=\\\"bg-card shadow\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-4\\\">\\n                            <div class=\\\"input-box\\\">\\n                                <label>Date Of Bill Creation</label>\\n                                <input class=\\\"form-control\\\" name=\\\"dateOfBill\\\" [owlDateTime]=\\\"dateOfBill\\\" [owlDateTimeTrigger]=\\\"dateOfBill\\\"\\n                                placeholder=\\\"Date\\\" [(ngModel)]=\\\"invoice.billCreationDate\\\" autocomplete=\\\"off\\\">\\n                                <owl-date-time #dateOfBill [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n                                <div class=\\\"date-btn\\\">\\n                                    <mat-icon svgIcon=\\\"feather:calendar\\\"></mat-icon>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <div class=\\\"input-box\\\">\\n                                <label>Due Date</label>\\n                                <input class=\\\"form-control\\\" name=\\\"dueDate\\\" [owlDateTime]=\\\"dueDate\\\" [owlDateTimeTrigger]=\\\"dueDate\\\"\\n                                    placeholder=\\\"Date\\\" [(ngModel)]=\\\"invoice.dueDate\\\" autocomplete=\\\"off\\\">\\n                                <owl-date-time #dueDate [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n                                <div class=\\\"date-btn\\\">\\n                                    <mat-icon svgIcon=\\\"feather:calendar\\\"></mat-icon>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\t\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"bg-card shadow p-0\\\">\\n                    <div class=\\\"text-right pr-3 py-4\\\">\\n                        <button mat-flat-button [color]=\\\"'primary'\\\" (click)=\\\"addForm()\\\">\\n                            <mat-icon class=\\\"mr-2\\\" [svgIcon]=\\\"'add'\\\"></mat-icon>Add\\n                        </button>\\n                    </div>\\n                    <table id=\\\"setupAutoInvoicingAccordion\\\" class=\\\"table table-resizable\\\" [ngClass]=\\\"isMobileView()\\\" *ngIf=\\\"generateAutoInvoiceForm.length > 0\\\">\\n                        <thead>\\n                            <tr>\\n                                <th scope=\\\"col\\\">Bill Amount</th>\\n                                <th scope=\\\"col\\\">Amount For Calc</th>\\n                                <th scope=\\\"col\\\">Fixed Amount</th>\\n                                <th scope=\\\"col\\\">GL Account</th>\\n                                <th scope=\\\"col\\\">Description</th>\\n                                <th scope=\\\"col\\\">Tax</th>\\n                                <th scope=\\\"col\\\">Vat</th>\\n                                <th scope=\\\"col\\\">Action</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <ng-container *ngFor=\\\"let item of generateAutoInvoiceForm; let i = index;\\\">\\n                                <tr>\\n                                    <td>\\n                                        <select name=\\\"billAmountType\\\" [(ngModel)]=\\\"item.typeId\\\" (change)=\\\"billAmountChange(item)\\\" class=\\\"form-control\\\">\\n                                            <option [ngValue]=\\\"null\\\" selected hidden>select</option>\\n                                            <option *ngFor=\\\"let data of billAmountList\\\" [ngValue]=\\\"data.lookupValueId\\\">\\n                                                {{ data.lookupValueName}}\\n                                            </option>\\n                                        </select>\\n                                    </td>\\n                                    <td>\\n                                        <div class=\\\"input-container\\\">\\n                                            <input class=\\\"form-control\\\" OnlyNumber=\\\"true\\\" name=\\\"amountCalculation\\\" placeholder=\\\"Amount\\\" \\n                                            [(ngModel)]=\\\"item.varAmount\\\" [disabled]=\\\"item.typeId == 386\\\">\\n                                        </div>\\n                                    </td>\\n                                    <td>\\n                                        <div class=\\\"input-container\\\">\\n                                            <input class=\\\"form-control\\\" OnlyNumber=\\\"true\\\" name=\\\"fixedAmount\\\" placeholder=\\\"Fixed\\\" \\n                                            [(ngModel)]=\\\"item.fixedAmount\\\" [disabled]=\\\"item.typeId == 387 || item.typeId == 388\\\">\\n                                        </div>\\n                                    </td>\\n                                    <td>\\n                                        <select name=\\\"accountId\\\" [(ngModel)]=\\\"item.glaccountId\\\" class=\\\"form-control\\\">\\n                                            <option [ngValue]=\\\"null\\\" selected hidden>select</option>\\n                                            <option *ngFor=\\\"let data of glAccountList\\\" [ngValue]=\\\"data.glaccountId\\\">\\n                                                {{ data.glaccountNumber}} - {{ data.glaccountName }}\\n                                            </option>\\n                                        </select>\\n                                    </td>\\n                                    <td>\\n                                        <div class=\\\"input-container\\\">\\n                                            <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"description\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"item.description\\\">\\n                                        </div>\\n                                    </td>\\n                                    <td>\\n                                        <select name=\\\"tax\\\" [(ngModel)]=\\\"item.taxId\\\" class=\\\"form-control\\\">\\n                                            <option [ngValue]=\\\"null\\\" selected hidden>select</option>\\n                                            <option *ngFor=\\\"let data of taxPecentageDataList\\\" [ngValue]=\\\"data.lookupValueId\\\">\\n                                                {{ data.lookupValueName}}\\n                                            </option>\\n                                        </select>\\n                                    </td>\\n                                    <td>\\n                                        <select name=\\\"vat\\\" [(ngModel)]=\\\"item.vatId\\\" class=\\\"form-control\\\">\\n                                            <option [ngValue]=\\\"null\\\" selected hidden>select</option>\\n                                            <option *ngFor=\\\"let data of vatPecentageDataList\\\" [ngValue]=\\\"data.lookupValueId\\\">\\n                                                {{ data.lookupValueName}}\\n                                            </option>\\n                                        </select>\\n                                    </td>\\n                                    <td>\\n                                        <mat-icon (click)=\\\"addAutoinvoiceConfig(item)\\\" svgIcon=\\\"mat_outline:save\\\" title=\\\"Save\\\"></mat-icon>\\n                                        <mat-icon class=\\\"ml-2\\\" [svgIcon]=\\\"'close'\\\" title=\\\"Close\\\" (click)=\\\"closeForm()\\\"></mat-icon>\\n                                    </td>\\n                                </tr>\\n                            </ng-container>\\n                        </tbody>\\n                    </table>\\n                </div>\\n                <div class=\\\"bg-card shadow\\\" *ngIf=\\\"generateAutoInvoiceForm.length > 0\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <p class=\\\"text-muted\\\"><span class=\\\"required\\\">*</span> Based on Sq.m - Maintain Sq.m in each unit to calculate the cost per Unit</p>\\n                            <p class=\\\"text-muted\\\"><span class=\\\"required\\\">*</span> Based on Consumption (Water) - Maintain Sq.m in each unit to calculate the cost per Unit</p>\\n                            <p class=\\\"text-muted\\\"><span class=\\\"required\\\">*</span> Based on Power Units Consumption - Maintain Entry in utilities Menu</p>                     \\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"text-right\\\">\\n                                <button mat-flat-button [color]=\\\"'primary'\\\" (click)=\\\"showInvoiceTable()\\\">Preview Invoice For All Units</button>\\n                                <button class=\\\"ml-3\\\" mat-flat-button [color]=\\\"'accent'\\\">Create Final Invoice</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                 </div>\\n\\t\\t\\t</form>\\n        </div>\\n        <div *ngIf=\\\"invoiceTable\\\">\\n            <app-view-monthly-invoice></app-view-monthly-invoice>\\n        </div>\\n\\t</div>\\n</div>\";","export default \"<div>\\n    <condo-card>\\n        <div CondoCardHeader>\\n            <div class=\\\"d-flex\\\">\\n                <div>\\n                    <h4>Preview Invoices</h4>\\n                    <p>{{totalItems}} results</p>\\n                </div>\\n                <div class=\\\"ml-auto d-none d-md-block mr-3\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"invoiceData\\\" (ngModelChange)=\\\"onGlSearchFilter()\\\">\\n                </div>\\n                <div>\\n                    <app-print-dropdown (outputParams) =\\\"getPrintParams($event)\\\"></app-print-dropdown>\\n                </div>\\n            </div>\\n        </div>\\n        <div CondoCardBody>\\n            <jqxGrid \\n                    [theme]=\\\"'material'\\\" \\n                    [width]=\\\"'100%'\\\"\\n                    [rowsheight]=\\\"48\\\"\\n                    [autoheight]=\\\"true\\\"\\n                    [pageable]=\\\"true\\\" \\n                    [filterable]=\\\"true\\\" \\n                    [sortable]=\\\"true\\\" \\n                    [source]=\\\"prevInvoiceDataList\\\"\\n                    [columns]=\\\"prevColumnData\\\"\\n                    [enablehover]=\\\"false\\\"\\n                #datagrid>\\n            </jqxGrid>\\n        </div>\\n    </condo-card>\\n\\n    <ng-template #viewInvoiceDetailsRef>\\n        <div class=\\\"invoice-info info-modal-box rel\\\">\\n            <div class=\\\"d-flex p-4\\\">\\n                <h4>Invoice Info</h4>\\n                <mat-icon class=\\\"ml-auto\\\" [svgIcon]=\\\"'close'\\\" mat-dialog-close></mat-icon>\\n            </div>\\n            <app-loader *ngIf=\\\"!isInvoicePrintLoaded\\\"></app-loader>\\n            <ng-container *ngIf=\\\"isInvoicePrintLoaded\\\">\\n                <div id=\\\"InvoiceElement\\\">\\n                    <div class=\\\"text-center bg-cool-gray-100 p-4\\\">\\n                        <h4 class=\\\"pb-3\\\">{{apartmentDetails.apartmentName}}</h4>\\n                        <h6>{{apartmentDetails.address1}}</h6>\\n                        <div class=\\\"mt-2\\\">\\n                            <p class=\\\"text-secondary\\\"><span class=\\\"font-medium mr-2\\\">Mobile No:</span>{{apartmentDetails.phoneNumber}}</p>\\n                            <p class=\\\"text-secondary\\\"><span class=\\\"font-medium mr-2\\\">Email:</span>{{apartmentDetails.emailId}}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"bg-card p-0 border-bottom\\\">\\n                        <div class=\\\"d-flex pt-4 pb-4 border-bottom\\\">\\n                            <div class=\\\"pl-4\\\">\\n                                <p class=\\\"text-secondary\\\"><span class=\\\"font-medium mr-2\\\">Tower Unit:</span> {{prevInvoice.apartmentBlockNumber}}</p>\\n                                <p class=\\\"text-secondary\\\"><span class=\\\"font-medium mr-2\\\">Contact Person:</span> {{prevInvoice.primaryContact}}</p>\\n                            </div>\\n                            <div class=\\\"ml-auto pr-4\\\">\\n                                <p class=\\\"text-secondary\\\"><span class=\\\"font-medium mr-2\\\">Invoice ID:</span> {{prevInvoice.custInvoiceId}}</p>\\n                                <p class=\\\"text-secondary\\\"><span class=\\\"font-medium mr-2\\\">Invoice Date:</span> {{getDate(invoice.postedOn)}}</p>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"\\\">{{invoice.length}}</div>\\n                        <table class=\\\"table card-table\\\" [ngClass]=\\\"isMobileView()\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th>Income Accounts</th>\\n                                    <th>Rate</th>\\n                                    <th>Comments</th>\\n                                    <th>Discount</th>\\n                                    <th>Tax</th>\\n                                    <th>Amount</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor=\\\"let item of prevInvoice.invoiceGLAccounts; let i = index\\\">\\n                                    <td>{{item.glaccountName}}</td>\\n                                    <td>{{item.amount}}</td>\\n                                    <td>{{item.comments}}</td>\\n                                    <td>{{item.discountAmount}} ({{item.discountTypeId}})</td>\\n                                    <td>{{item.vatamount}} <!-- [{{ getVatType(custTaxDetails[i])}}%] --></td>\\n                                    <td>{{item.lineItemTotal + item.vatamount}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td colspan=\\\"5\\\">Final Discount:</td>\\n                                    <td>{{invoice.invoicefinalinputdiscount}} ({{invoice.finalDiscountTypeName}})</td>\\n                                </tr>\\n                                <tr class=\\\"total font-medium\\\">\\n                                    <td colspan=\\\"5\\\">Total Amount:</td>\\n                                    <td>{{invoice.custInvoiceAmount}}</td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n                <div class=\\\"text-center m-5\\\">\\n                    <button class=\\\"print\\\" mat-flat-button [color]=\\\"'primary'\\\" (click)=\\\"printInvoice()\\\">\\n                        <mat-icon class=\\\"mr-2\\\" svgIcon=\\\"feather:printer\\\"></mat-icon>\\n                        Print\\n                    </button>\\n                </div>\\n            </ng-container>\\n    \\n    \\n        </div>\\n    </ng-template>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL2luY29tZS10cmFja2VyL2luY29tZS1hdXRvLWludm9pY2VzL2NyZWF0ZS1tb250aGx5LWludm9pY2UvY3JlYXRlLW1vbnRobHktaW52b2ljZS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, Injector, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { AccountsService } from 'src/app/api/controllers/Accounts';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { ModalService } from 'src/app/shared/services/modal.service';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport * as moment from 'moment';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-monthly-invoice',\n  templateUrl: './create-monthly-invoice.component.html',\n  styleUrls: ['./create-monthly-invoice.component.scss'],\n  encapsulation  : ViewEncapsulation.None\n})\n\nexport class CreateMonthlyInvoiceComponent implements OnInit {\n\tisAutoInvoicingDataLoaded: boolean = false;\n\ttotalItems: any;\n\tglAccountList: any = [];\n\tbillAmountList: any = [];\n\tvatPecentageDataList: any = [];\n\ttaxPecentageDataList: any = [];\n\tmodalService: any;\n\tgenerateAutoInvoiceForm = [];\n\tshowFields:number = -1;\n\tinvoice:any = {};\n\n\tinvoiceTable:boolean;\n  \n\tconstructor(private accountsService: AccountsService,\n\t\tprivate lookupService: LookupService,\n\t\tprivate sharedService: SharedService,\n\t\tprivate sessionService: SessionService,\n\t\tprivate apartmentService:ApartmentService,\n    \tprivate injector: Injector,\n    \tprivate router: Router\n \t){\n\t\tthis.modalService = this.injector.get(ModalService);\n  \t}\n    \n\tnavigateViewInvoice() {\n\t\tthis.router.navigate(['ams/income/auto-invoices/view-invoice'])\n\t}\n\n\tisMobileView() {\n\t\treturn window.innerWidth <= 767 ? 'table-responsive' : '';\n\t}\n\n\tgetDateFormat(date){\n\t\treturn moment(date).format(\"MM-DD-YYYY\");\n\t}\n\n\taddForm() {\n\t\tif(this.generateAutoInvoiceForm.length < 1) {\n\t\t\tlet data = {\n\t\t\t\ttypeId : null,\n\t\t\t\tvarAmount: null,\n\t\t\t\tfixedAmount : null,\n\t\t\t\tglaccountId : null,\n\t\t\t\tdescription : '',\n\t\t\t\tvatId : null,\n\t\t\t\ttaxId : null,\n\t\t\t}\n\t\t\tthis.generateAutoInvoiceForm.push(data);\n\t\t}\n\t\t//this.showFields = -1;\n\t}\n\n\tcloseForm() {\n\t\tthis.generateAutoInvoiceForm = [];\n  \t}\n  \n  \tbillAmountChange(data) {\n\t\tdata.amountCalc = null;\n\t\tdata.fixedAmount = null;\n\t\tdata.glaccountId = null;\n\t\tdata.description = ''; \n\t\tdata.vatId = null;\n\t\tdata.taxId = null;\n\t  }\n\t  \n\taddAutoinvoiceConfig(data) {\n\t\tlet entity = {\n\t\t\t\"apartmentId\": this.sessionService.apartmentId,\n\t\t\t\"billCreationDate\": this.invoice.billCreationDate,\n\t\t\t\"dueDate\" : this.invoice.dueDate,\n\t\t\t\"insertedBy\": this.sessionService.userId,\n\t\t\t\"autoInvoiceItem\": [\n\t\t\t\t{\n\t\t\t\t\t\"description\": data.description,\n\t\t\t\t\t\"glaccountId\": data.glaccountId,\n\t\t\t\t\t\"typeId\": data.typeId,\n\t\t\t\t\t\"taxId\": data.taxId,\n\t\t\t\t\t\"discountId\": 0,\n\t\t\t\t\t\"varAmount\": data.varAmount,\n\t\t\t\t\t\"fixedAmount\": data.fixedAmount,\n\t\t\t\t\t\"vatId\": data.vatId\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t\tlet res;\n\t\tif(res.message) {\n\t\t\tthis.sharedService.openSnackBar('Auto Invoice Created Successfully','success');\n\t\t} else {\n\t\t\tthis.sharedService.openSnackBar(res.errorMessage,'error');\n\t\t}\n\t}\n\n\t//Preview Invoice Logic \n\n\tshowInvoiceTable() {\n\t\tthis.invoiceTable = !this.invoiceTable;\n\t}\n\n\n\n\tngOnInit(): void {\n\t\t//Bill Amount List\n\t\tlet billAmountParams = {\n\t\t\tApartmentId: this.sessionService.apartmentId,\n\t\t\tLookupTypeId: 201\n\t\t}\n\t\tthis.lookupService.getLookupValueByLookupTypeId(billAmountParams).subscribe((res: any) => {\n      \t\tif (res.length > 0) {\n\t\t\t\tthis.billAmountList = res;\n\t\t\t}\n\t\t});\n\t\t//VAT List\n\t\tlet vatListParams = {\n\t\t\tApartmentId: this.sessionService.apartmentId,\n\t\t\tLookupTypeId: 77\n\t\t}\n\t\tthis.lookupService.getLookupValueByLookupTypeId(vatListParams).subscribe((res: any) => {\n      \t\tif (res.length > 0) {\n\t\t\t\tthis.vatPecentageDataList = res;\n\t\t\t}\n\t\t});\n\t\t//TAX List\n\t\tlet taxListParams = {\n\t\t\tApartmentId: this.sessionService.apartmentId,\n\t\t\tLookupTypeId: 183\n\t\t}\n\t\tthis.lookupService.getLookupValueByLookupTypeId(taxListParams).subscribe((res: any) => {\n\t\t\tif (res.length > 0) {\n\t\t\t\tthis.taxPecentageDataList = res;\n\t\t\t}\n    \t});\n\t\t//GL AccountList\n\t\tlet queryParamBase:any = {\n\t\t\tapartmentId: this.sessionService.apartmentId,\n\t\t\tGLAccountTypeId: 165\n\t\t};\n\t\tthis.accountsService.getGlAccountsIdbyGlAccountTypeId(queryParamBase).subscribe((res: any) => {\n\t\t\tif (res.length > 0) {\n\t\t\t\tthis.glAccountList = res;\n\t\t\t}\n   \t\t});\n\t}\n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CreateMonthlyInvoiceComponent } from './create-monthly-invoice/create-monthly-invoice.component';\n\nconst routes: Routes = [\n  {path:'', component: CreateMonthlyInvoiceComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class IncomeAutoInvoicesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CondoCardModule } from 'src/app/modules/ui/card/card.module';\nimport { SelectModule } from 'src/app/modules/ui/select/select.module';\nimport { ListModule } from 'src/app/modules/ui/list/list.module';\n\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nimport { IncomeAutoInvoicesRoutingModule } from './income-auto-invoices-routing.module';\nimport { CreateMonthlyInvoiceComponent } from './create-monthly-invoice/create-monthly-invoice.component';\nimport { ViewMonthlyInvoiceComponent } from './view-monthly-invoice/view-monthly-invoice.component';\n\n\n@NgModule({\n  declarations: [CreateMonthlyInvoiceComponent, ViewMonthlyInvoiceComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    CondoCardModule,\n    SelectModule,\n    ListModule,\n    CommonModule,\n    IncomeAutoInvoicesRoutingModule\n  ]\n})\nexport class IncomeAutoInvoicesModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL2luY29tZS10cmFja2VyL2luY29tZS1hdXRvLWludm9pY2VzL3ZpZXctbW9udGhseS1pbnZvaWNlL3ZpZXctbW9udGhseS1pbnZvaWNlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, AfterViewInit, ViewChild, HostListener, ViewEncapsulation, ViewContainerRef, TemplateRef } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\n\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\n\nimport { AccountsService } from 'src/app/api/controllers/Accounts';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { ConstantsService } from 'src/app/shared/services/constants.service';\nimport { SessionService } from 'src/app/core/session/session.service';\n\n\nimport * as _ from 'underscore';\nimport * as moment from 'moment';\n\nimport html2canvas from 'html2canvas';\nimport * as jsPDF from 'jspdf'\n\n@Component({\n  selector: 'app-view-monthly-invoice',\n  templateUrl: './view-monthly-invoice.component.html',\n  styleUrls: ['./view-monthly-invoice.component.scss']\n})\nexport class ViewMonthlyInvoiceComponent implements OnInit {\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n\tinvoiceTable:boolean;\n\tprevInvoiceSearch:string ='';\n\tprevInvoiceDataList:any;\n\tprevTotalItems:number;\n  prevColumnData:any;\n  @ViewChild(\"viewInvoiceDetailsRef\", { static: false }) viewInvoiceDetailsRef: TemplateRef<any>;\n  prevInvoice:any = {};\n  isInvoicePrintLoaded:boolean;\n  apartmentDetails:any;\n\n  constructor(\n    private _overlay: Overlay,\n    private _viewContainerRef: ViewContainerRef,\n    public dialog: MatDialog,\n  \tprivate router: Router,\n    private accountsService:AccountsService,\n    private apartmentService: ApartmentService,\n    private lookupService:LookupService,\n  \tprivate sharedService:SharedService,\n    private constantsService:ConstantsService,\n  \tprivate sessionService:SessionService\n  ) { }\n\n  onGlSearchFilter(event) {\n\t\tif(event != \"\"){\n\t\t\tlet filtergroup = new jqx.filter();\n\t\t\tlet filter_or_operator = 1;\n\t\t\tlet filtervalue = event;\n\t\t\tlet filtercondition = 'contains';\n\t\t\tlet filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n\t\t\tfiltergroup.operator = 'or';\n\t\t\tfiltergroup.addfilter(filter_or_operator, filterData);\n\t\t\tthis.datagrid.showfiltercolumnbackground(false);\n\t\t\tthis.prevColumnData.forEach(item => {\n\t\t\t\tif(item.datafield != 'Actions') {\n\t\t\t\tthis.datagrid.addfilter(item.datafield, filtergroup, true);\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.datagrid.applyfilters();\n\t\t}\n\t\telse {\n\t\t  \tthis.datagrid.clearfilters();\n\t\t}\n  }\n\n  @HostListener('window:onDownloadInvoice', ['$event.detail'])\n  onDownloadInvoice(detail) {\n    let row = this.datagrid.getrowdata(detail.rowId);\n    this.prevInvoice = {};\n    let invoiceParams = {\n      apartmentId: this.sessionService.apartmentId,\n      invoiceId: row.custInvoiceId\n    }\n    this.accountsService.getCustInvoicesByApartmentId(invoiceParams).subscribe((res:any) => {\n      this.prevInvoice = res[0]\n      let params = {\n        apartmentId: this.sessionService.apartmentId,\n        invoiceId: 2\n      }\n      this.isInvoicePrintLoaded = true;\n    })\n    this.dialog.open(this.viewInvoiceDetailsRef, {\n      panelClass: 'material-dialog-big'\n    });\n  }\n\n  getAllInvoicesData(fromDate, toDate){\n    let params = {\n      apartmentId: this.sessionService.apartmentId,\n      InvoiceFromDate: fromDate,\n      InvoiceToDate: toDate\n    }\n  \tthis.accountsService.getCustInvoicesByApartmentIdNew(params).subscribe((res:any) => {\n      var invoiceDataList = res.responseData.value;\n      _.each(invoiceDataList, item => {\n        item.towerUnit = item.apartmentBlockNumber + ' ' + item.apartmentBlockUnitNumber;\n      })\n      this.prevTotalItems = invoiceDataList.length;\n      let tableInfo = {\n        localdata: invoiceDataList,\n        datatype: \"array\"\n      }\n      this.prevInvoiceDataList = new jqx.dataAdapter(tableInfo);\n    })\n  }\n\n  printInvoice(){\n    var data = document.getElementById('InvoiceElement');  \n    html2canvas(data).then(canvas => {  \n      var imgWidth = 208;   \n      var pageHeight = 295;    \n      var imgHeight = canvas.height * imgWidth / canvas.width;  \n      var heightLeft = imgHeight;  \n  \n      const contentDataURL = canvas.toDataURL('image/png')  \n      let pdf = new jsPDF('p', 'mm', 'a4'); // A4 size page of PDF  \n      var position = 0;  \n      pdf.addImage(contentDataURL, 'PNG', 0, position, imgWidth, imgHeight)  \n      pdf.save('invoice.pdf');\n    });  \n  }\n\n  ngOnInit(): void {\n    this.getAllInvoicesData('','');\n    var cellsrenderer = (row, column, value) => {\n      return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n    }\n    var columnrenderer = (value) => {\n      return '<div style=\"padding: 14px\">' + value + '</div>';\n    }\n    this.prevColumnData = [{\n      text: 'Serial No',\n      datafield: 'serialNo',\n      width: 120,\n      pinned: true,\n      cellsrenderer: (row, column, value): string => {\n        return '<div class=\"jqx-custom-inner-cell\"><a href=\"javascript:void(0)\" class=\"mr-2 t-decor\" onClick=\"downloadInvoiceEvent('+ row +')\">'+ value +'</a></div>'\n      },\n      renderer: columnrenderer\n    },{\n        text: 'Posted By',\n        datafield: 'insertedBy_Label',\n        minwidth: 120,\n        cellsrenderer: cellsrenderer,\n        renderer: columnrenderer\n    },{\n        text: 'Tower Unit',\n        datafield: 'block_Unit',\n        minwidth: 120,\n        cellsrenderer: cellsrenderer,\n        renderer: columnrenderer\n    },{\n        text: 'Due',\n        datafield: 'custInvoiceAmount',\n        minwidth: 150,\n        cellsrenderer: cellsrenderer,\n        renderer: columnrenderer\n    },{\n      text: 'Due Date',\n      datafield: 'dueDate',\n      minwidth: 120,\n      cellsrenderer: cellsrenderer,\n      renderer: columnrenderer\n    }];\n  }\n\n}\n\nlet downloadInvoiceEvent = row => {\n  let event = new CustomEvent('onDownloadInvoice', {\n    detail: {\n        rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).downloadInvoiceEvent = downloadInvoiceEvent;\n"],"sourceRoot":"webpack:///"}