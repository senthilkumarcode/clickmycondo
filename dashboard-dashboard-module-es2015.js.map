{"version":3,"sources":["./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/drag-drop.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/grid-list.js","./node_modules/angular2gridster/__ivy_ngcc__/fesm2015/angular2gridster.js","./src/app/ams/dashboard/components/dashboard/admin-dashboard/admin-dashboard.component.html","./src/app/ams/dashboard/components/dashboard/custom-dashboard/custom-dashboard.component.html","./src/app/ams/dashboard/components/dashboard/security-dashboard/security-dashboard.component.html","./src/app/ams/dashboard/components/dashboard/staff-dashboard/staff-dashboard.component.html","./src/app/ams/dashboard/components/shared/admin-dash-first-row/admin-dash-first-row.component.html","./src/app/ams/dashboard/components/shared/admin-dash-second-row/admin-dash-second-row.component.html","./src/app/ams/dashboard/components/shared/bank-comp/bank-comp.component.html","./src/app/ams/dashboard/components/shared/dash-broad-cast/dash-broad-cast.component.html","./src/app/ams/dashboard/components/shared/dash-com-list/dash-com-list.component.html","./src/app/ams/dashboard/components/shared/dash-income-chart/dash-income-chart.component.html","./src/app/ams/dashboard/components/shared/dash-meeting/dash-meeting.component.html","./src/app/ams/dashboard/components/shared/dash-pie-chart/dash-pie-chart.component.html","./src/app/ams/dashboard/components/shared/date-model/date-model.component.html","./src/app/ams/dashboard/components/shared/expense-tracker-comp/expense-tracker-comp.component.html","./src/app/ams/dashboard/components/shared/helpdesk-chart/helpdesk-chart.component.html","./src/app/ams/dashboard/components/shared/income-tracker-comp/income-tracker-comp.component.html","./src/app/ams/dashboard/components/shared/ledger-comp/ledger-comp.component.html","./src/app/ams/dashboard/components/shared/payment-comp/payment-comp.component.html","./src/app/ams/dashboard/components/shared/unit-chart/unit-chart.component.html","./src/app/ams/dashboard/components/shared/users-chart/users-chart.component.html","./src/app/ams/dashboard/components/shared/visitors-comp/visitors-comp.component.html","./src/app/ams/dashboard/dashboard.component.html","./src/app/ams/dashboard/components/dashboard/admin-dashboard/admin-dashboard.component.scss","./src/app/ams/dashboard/components/dashboard/admin-dashboard/admin-dashboard.component.ts","./src/app/ams/dashboard/components/dashboard/custom-dashboard/custom-dashboard.component.scss","./src/app/ams/dashboard/components/dashboard/custom-dashboard/custom-dashboard.component.ts","./src/app/ams/dashboard/components/dashboard/security-dashboard/security-dashboard.component.scss","./src/app/ams/dashboard/components/dashboard/security-dashboard/security-dashboard.component.ts","./src/app/ams/dashboard/components/dashboard/staff-dashboard/staff-dashboard.component.scss","./src/app/ams/dashboard/components/dashboard/staff-dashboard/staff-dashboard.component.ts","./src/app/ams/dashboard/components/shared/admin-dash-first-row/admin-dash-first-row.component.scss","./src/app/ams/dashboard/components/shared/admin-dash-first-row/admin-dash-first-row.component.ts","./src/app/ams/dashboard/components/shared/admin-dash-second-row/admin-dash-second-row.component.scss","./src/app/ams/dashboard/components/shared/admin-dash-second-row/admin-dash-second-row.component.ts","./src/app/ams/dashboard/components/shared/bank-comp/bank-comp.component.scss","./src/app/ams/dashboard/components/shared/bank-comp/bank-comp.component.ts","./src/app/ams/dashboard/components/shared/dash-broad-cast/dash-broad-cast.component.scss","./src/app/ams/dashboard/components/shared/dash-broad-cast/dash-broad-cast.component.ts","./src/app/ams/dashboard/components/shared/dash-com-list/dash-com-list.component.scss","./src/app/ams/dashboard/components/shared/dash-com-list/dash-com-list.component.ts","./src/app/ams/dashboard/components/shared/dash-income-chart/dash-income-chart.component.scss","./src/app/ams/dashboard/components/shared/dash-income-chart/dash-income-chart.component.ts","./src/app/ams/dashboard/components/shared/dash-meeting/dash-meeting.component.scss","./src/app/ams/dashboard/components/shared/dash-meeting/dash-meeting.component.ts","./src/app/ams/dashboard/components/shared/dash-pie-chart/dash-pie-chart.component.scss","./src/app/ams/dashboard/components/shared/dash-pie-chart/dash-pie-chart.component.ts","./src/app/ams/dashboard/components/shared/date-model/date-model.component.scss","./src/app/ams/dashboard/components/shared/date-model/date-model.component.ts","./src/app/ams/dashboard/components/shared/expense-tracker-comp/expense-tracker-comp.component.scss","./src/app/ams/dashboard/components/shared/expense-tracker-comp/expense-tracker-comp.component.ts","./src/app/ams/dashboard/components/shared/helpdesk-chart/helpdesk-chart.component.scss","./src/app/ams/dashboard/components/shared/helpdesk-chart/helpdesk-chart.component.ts","./src/app/ams/dashboard/components/shared/income-tracker-comp/income-tracker-comp.component.scss","./src/app/ams/dashboard/components/shared/income-tracker-comp/income-tracker-comp.component.ts","./src/app/ams/dashboard/components/shared/ledger-comp/ledger-comp.component.scss","./src/app/ams/dashboard/components/shared/ledger-comp/ledger-comp.component.ts","./src/app/ams/dashboard/components/shared/payment-comp/payment-comp.component.scss","./src/app/ams/dashboard/components/shared/payment-comp/payment-comp.component.ts","./src/app/ams/dashboard/components/shared/unit-chart/unit-chart.component.scss","./src/app/ams/dashboard/components/shared/unit-chart/unit-chart.component.ts","./src/app/ams/dashboard/components/shared/users-chart/users-chart.component.scss","./src/app/ams/dashboard/components/shared/users-chart/users-chart.component.ts","./src/app/ams/dashboard/components/shared/visitors-comp/visitors-comp.component.scss","./src/app/ams/dashboard/components/shared/visitors-comp/visitors-comp.component.ts","./src/app/ams/dashboard/dashboard-routing.module.ts","./src/app/ams/dashboard/dashboard.component.scss","./src/app/ams/dashboard/dashboard.component.ts","./src/app/ams/dashboard/dashboard.module.ts","./src/app/api/controllers/DashBoard.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuR;AAC5O;AAC8B;AACe;AACwB;AACb;AAClB;AAC9B;;AAEnD;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACS;AACL;AAC5C,oCAAoC;AACpC,WAAW,EAKV;AACD;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,oCAAoC,EAAE;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,WAAW,EAaV;AACD;AACA;AACA,UAAU;AACV;AACA,oCAAoC,6FAA+B,EAAE,gBAAgB;AACrF;AACA;AACA,UAAU;AACV;AACA,mCAAmC,6FAA+B,EAAE,iBAAiB;AACrF;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,WAAW,EAOV;AACD;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,WAAW,EAGV;AACD;AACA;AACA;AACA;AACA,kBAAkB;AAClB,WAAW,EAKV;AACD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,+BAA+B,4CAAO;AACtC;AACA;AACA;AACA,wCAAwC,iDAAY;AACpD;AACA;AACA;AACA,sCAAsC,iDAAY;AAClD;AACA;AACA;AACA,mCAAmC,iDAAY;AAC/C;AACA;AACA;AACA,mCAAmC,iDAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA,4BAA4B,4CAAO;AACnC;AACA;AACA;AACA,yBAAyB,4CAAO;AAChC;AACA;AACA;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA,0BAA0B,4CAAO;AACjC;AACA;AACA;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,yFAAyF,EAAE;AAC3F,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,0DAA0D,kBAAkB,GAAG,kBAAkB;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,kBAAkB,2EAAa;AAC/B,oBAAoB,EAAE;AACtB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB,2EAAa;AACrC,oCAAoC,EAAE;AACtC,4BAA4B,EAAE;AAC9B,4BAA4B,EAAE,oDAAoD,EAAE;AACpF;AACA,8DAA8D,EAAE;AAChE,+DAA+D,EAAE;AACjE,wBAAwB,EAAE;AAC1B,wBAAwB,EAAE;AAC1B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE,iDAAiD,2EAAa;AACpF,oBAAoB,EAAE;AACtB;AACA,wBAAwB,EAAE,8CAA8C,EAAE;AAC1E;AACA;AACA,wBAAwB;AACxB;AACA,8BAA8B,EAAE;AAChC;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,EAAE;AACjE;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,iCAAiC;AACjC,kCAAkC;AAClC;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE,gCAAgC;AACtD,oBAAoB,EAAE;AACtB,oBAAoB,EAAE;AACtB,yBAAyB,EAAE;AAC3B,wBAAwB,EAAE;AAC1B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,EAAE;AACzD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,EAAE;AACjE;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,uCAAuC,EAAE;AACzC,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,wEAAwE,EAAE;AAC1E,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,gEAAS;AAC/E,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0CAA0C,aAAa;AACvD;AACA,mBAAmB,EAAE;AACrB;AACA,uCAAuC;AACvC,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,0CAA0C,EAAE;AAC5C,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,6BAA6B,yBAAyB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,gCAAgC,OAAO;AACvC;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,kCAAkC,oCAAoC,EAAE,4BAA4B;AACpG,4BAA4B,EAAE;AAC9B;AACA,kDAAkD,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C,8CAA8C,EAAE;AAChD,iBAAiB;AACjB,aAAa;AACb;AACA,oBAAoB,EAAE;AACtB,oBAAoB,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB,wCAAwC,EAAE,mFAAmF,EAAE;AAC/H;AACA;AACA;AACA,4BAA4B,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B,4CAA4C,EAAE;AAC9C,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,uDAAuD,EAAE;AACzD;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,+CAA+C,EAAE,2FAA2F,EAAE;AAC9I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,4CAA4C,EAAE;AAC9C,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,OAAO;AACtB,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,oBAAoB;AACpB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAwVV;AACD;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,0BAA0B,cAAc,MAAM,cAAc;AAC5D;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB,8BAA8B,EAAE;AAChC,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,+BAA+B;AACtD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,4BAA4B,iBAAiB;AAC7C,6BAA6B,kBAAkB;AAC/C;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,sBAAsB,UAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb;AACA,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,WAAW,EAgBV;AACD;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,WAAW,EAKV;AACD,WAAW,OAAO;AAClB;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA;AACA,0BAA0B,4CAAO;AACjC;AACA;AACA;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA,0BAA0B,4CAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mBAAmB,EAAE;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,iDAAY;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4CAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,YAAY,qDAAQ,IAAI,4DAAuB;AAC/C,sBAAsB,gEAAS;AAC/B;AACA,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,uBAAuB,2EAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,uBAAuB,2EAAa;AACpC;AACA;AACA;AACA;AACA;AACA,0EAA0E,EAAE;AAC5E,qBAAqB,EAAE;AACvB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,wBAAwB,EAAE;AAC1B;AACA;AACA;AACA,YAAY,2EAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+DAA+D;AAC1F;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,0BAA0B,wBAAwB;AAClD;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,oDAAoD,EAAE;AACtD,wBAAwB,EAAE;AAC1B,wBAAwB,EAAE;AAC1B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB,2EAAa,aAAa,EAAE;AACpD;AACA;AACA,oBAAoB,EAAE;AACtB;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,2BAA2B;AAC5F;AACA;AACA;AACA,oEAAoE,2BAA2B;AAC/F;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8GAA8G,EAAE;AAChH;AACA,6CAA6C,EAAE;AAC/C;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,gBAAgB;AACnC,uBAAuB,EAAE;AACzB,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wCAAwC,EAAE;AAC1C,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mDAAmD;AACpF;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,oBAAoB;AACpB,SAAS;AACT,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,uBAAuB,2EAAa;AACpC,qBAAqB,EAAE;AACvB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,UAAU,mBAAmB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,2CAA2C,EAAE;AAC7C,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,UAAU,aAAa;AACvB;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,UAAU,OAAO;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,6CAA6C,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,8BAA8B,2EAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2CAA2C,EAAE;AAC7C,2BAA2B,EAAE;AAC7B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,mCAAmC,EAAE;AACrC,2DAA2D,EAAE;AAC7D;AACA;AACA;AACA;AACA,8CAA8C,EAAE;AAChD,+CAA+C,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,2CAA2C,EAAE,KAAK,4EAAc,CAAC,2EAAa;AAC9E;AACA;AACA;AACA;AACA;AACA,WAAW,EAgNV;AACD;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,0CAA0C;AACrD,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,2BAA2B;AACtC;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,qBAAqB,EAAE;AACvB;AACA;AACA;AACA,qBAAqB,EAAE;AACvB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,qBAAqB,EAAE;AACvB;AACA;AACA;AACA,qBAAqB,EAAE;AACvB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,sBAAsB;AACjC,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,qBAAqB;AAChC,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,UAAU;AACV;AACA,oCAAoC,6FAA+B;AACnE;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAO;AACtC;AACA;AACA;AACA;AACA,6BAA6B,4CAAO;AACpC;AACA;AACA;AACA,0BAA0B,4CAAO;AACjC;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,yDAAyD,EAAE;AAC3D;AACA,aAAa;AACb;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,uDAAuD,EAAE;AACzD;AACA,aAAa;AACb;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8DAA8D,oCAAoC,sDAAe,CAAC,oDAAa,GAAG,sDAAe,CAAC,wDAAQ,GAAG;AAC7J;AACA;AACA,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACvE;AACA,4CAA4C,wEAAkB,EAAE,+CAA+C,6BAA6B,8DAAQ,CAAC,oDAAM,GAAG,8DAAQ,CAAC,wDAAQ,GAAG,EAAE,+CAA+C;AACnO,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,UAAU,OAAO,oDAAa,EAAE,GAAG;AACxD,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;AAC9B,WAAW,EA2DV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,8CAA8C,4BAA4B,sDAAe,CAAC,wDAAQ,GAAG,sDAAe,CAAC,oDAAa,GAAG,sDAAe,CAAC,oEAAoB,GAAG,sDAAe,oBAAoB;AAC/M;AACA;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,OAAO,oEAAa,EAAE;AAC3B,KAAK;AACL;AACA,oCAAoC,wEAAkB,EAAE,uCAAuC,qBAAqB,8DAAQ,CAAC,wDAAQ,GAAG,8DAAQ,CAAC,oDAAM,GAAG,8DAAQ,CAAC,oEAAa,GAAG,8DAAQ,oBAAoB,EAAE,uCAAuC;AACxP,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,GAAG,OAAO,oDAAa,EAAE,GAAG,OAAO,oEAAoB,EAAE,GAAG,yBAAyB,EAAE,EAAE,QAAQ,EAAE;AACnH,WAAW,EAqBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,WAAW,EAMV;AACD;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,WAAW,EAMV;AACD;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,WAAW,EAWV;AACD;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,WAAW,EAgBV;AACD;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,WAAW,EAWV;AACD;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,WAAW,EAoCV;AACD;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,WAAW,EA6BV;AACD;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,WAAW,EAqBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,4BAA4B,4DAAc;;AAE1C;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,wDAAwD,iCAAiC,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,sBAAsB;AACpL,qBAAqB,+DAAwB,EAAE,0GAA0G,kDAAkD,EAAE;AAC7M;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,gCAAgC,OAAO,oDAAM,4BAA4B,GAAG,OAAO,sDAAQ,EAAE;AAClG;AACA;AACA,gBAAgB,OAAO,mDAAK,oCAAoC;AAChE;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG;AAC5D,sBAAsB,oDAAM;AAC5B;AACA,aAAa;AACb,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,mDAAK;AACvB;AACA,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAoBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,kEAAkE,sCAAsC,+DAAwB,CAAC,yDAAkB,GAAG;AACtJ,0BAA0B,+DAAwB,EAAE,4FAA4F,eAAe,EAAE;AACjK;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,yDAAkB,EAAE,EAAE,EAAE,GAAG;AACjE,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAQV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,qBAAqB,wBAAwB;AAC7C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,0BAA0B,mBAAmB,mFAAqB,QAAQ;AAC1E;AACA,0DAA0D,kCAAkC,+DAAwB,CAAC,yDAAkB,GAAG;AAC1I,sBAAsB,+DAAwB,EAAE,oFAAoF,uCAAuC,EAAE;AAC7K;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,yDAAkB,EAAE,EAAE,EAAE,GAAG;AACjE,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAeV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,4BAA4B,4DAAc;AAC1C;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,WAAW,EAqBV;AACD;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,0BAA0B,4DAAc;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA,yBAAyB,0DAAY;AACrC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA,yBAAyB,+CAAU;AACnC,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,0DAA0D,0DAAG;AAC7D,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2DAAI,KAAK,gEAAS;AACpC;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uCAAuC,gEAAS;AAChD;AACA,YAAY,0DAAG;AACf,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY,gEAAS;AACrB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,mCAAmC,EAAE,KAAK,kDAAK;AAC/C,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,mDAAmD,gEAAS;AAC5D,iBAAiB;AACjB,aAAa,IAAI,gEAAS;AAC1B,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,0CAA0C,qBAAqB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB,2EAAa;AACrC,YAAY,+DAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,iBAAiB;AACjB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qCAAqC,kFAAoB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA,gCAAgC,eAAe;AAC/C,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,6BAA6B,yCAAyC;AACtE;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,oHAAoH;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,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CT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,6DAAe;AACjC,mCAAmC,oBAAoB;AACvD,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EA0JV;AACD;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB,qCAAqC,EAAE;AACvC;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,8DAA8D,sCAAsC;AACpG,wBAAwB,+DAAwB,EAAE,6EAA6E,qDAAqD,kCAAkC;AACtN;AACA,gBAAgB,OAAO,mDAAK,uCAAuC;AACnE;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB;AACA,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAaV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,mFAAqB;AAC3E;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,qHAAqH,aAAa;AAClI;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,sBAAsB,gEAAS,mBAAmB,gEAAS;AAC3D;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,6BAA6B,yEAAW;AACxC,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,gCAAgC,EAAE;AAClC,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA,aAAa;AACb;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,kCAAkC,mFAAqB;AACvD,qCAAqC,mFAAqB;AAC1D;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACp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AAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAmIV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,sBAAsB,8DAAuB,EAAE,uBAAuB;AACtE,sBAAsB,8DAAuB,EAAE,8CAA8C,oCAAoC,EAAE;AACnI;AACA,OAAO;AACP,cAAc,oDAAoD,gEAAyB,kBAAkB;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,EAAE,EAAE;AACjC,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;;AAEuV;;AAEvV,qC;;;;;;;;;;;;ACzoLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiL;AACtF;AAC9B;AACV;;AAEnD;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,UAAU;AACV;AACwC;AACI;;AAE5C;AACA;AACA;AACA,0BAA0B,4DAAc;AACxC;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,wBAAwB,4BAA4B,kFAAoB,SAAS;AACjF;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,wBAAwB,4BAA4B,kFAAoB,SAAS;AACjF;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qBAAqB,EAAE;AACvB;AACA;AACA,oDAAoD,+BAA+B,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,oBAAoB;AAC5K,mBAAmB,+DAAwB,EAAE,4JAA4J;AACzM,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,yCAAyC,wJAAwJ;AACnN,QAAQ,6DAAsB;AAC9B,QAAQ,4DAAqB;AAC7B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK,EAAE,2BAA2B,cAAc,kBAAkB,eAAe,cAAc,kBAAkB,gBAAgB,2BAA2B,MAAM,OAAO,QAAQ,SAAS,kBAAkB,aAAa,mBAAmB,uBAAuB,YAAY,UAAU,SAAS,0EAA0E,aAAa,mBAAmB,YAAY,WAAW,2BAA2B,gBAAgB,eAAe,kBAAkB,OAAO,QAAQ,8EAA8E,SAAS,UAAU,mBAAmB,kBAAkB,gGAAgG,YAAY,mCAAmC,aAAa,sBAAsB,WAAW,sBAAsB,gBAAgB,qCAAqC,SAAS,UAAU,mBAAmB,kBAAkB,yCAAyC,aAAa,qCAAqC,MAAM,qCAAqC,SAAS,gCAAgC,mBAAmB,0CAA0C,gBAAgB,kBAAkB,sCAAsC,aAAa,4CAA4C;AACjzC;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,0BAA0B;AAChG;AACA;AACA,eAAe,OAAO,mDAAK,EAAE;AAC7B,eAAe,OAAO,mDAAK,EAAE;AAC7B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD,yCAAyC,cAAc,kBAAkB,eAAe,cAAc,kBAAkB,gBAAgB,2BAA2B,MAAM,OAAO,QAAQ,SAAS,kBAAkB,aAAa,mBAAmB,uBAAuB,YAAY,UAAU,SAAS,0EAA0E,aAAa,mBAAmB,YAAY,WAAW,2BAA2B,gBAAgB,eAAe,kBAAkB,OAAO,QAAQ,8EAA8E,SAAS,UAAU,mBAAmB,kBAAkB,gGAAgG,YAAY,mCAAmC,aAAa,sBAAsB,WAAW,sBAAsB,gBAAgB,qCAAqC,SAAS,UAAU,mBAAmB,kBAAkB,yCAAyC,aAAa,qCAAqC,MAAM,qCAAqC,SAAS,gCAAgC,mBAAmB,0CAA0C,gBAAgB,kBAAkB,sCAAsC,aAAa;AAC5wC,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG;AAC5D,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAgBV;AACD;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,QAAQ,uEAAQ;AAChB;AACA;AACA,4DAA4D,mCAAmC,+DAAwB,CAAC,wDAAiB,GAAG;AAC5I,uBAAuB,+DAAwB,EAAE,qKAAqK;AACtN,QAAQ,4DAAqB,WAAW,8DAAO;AAC/C,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,yIAAyI;AAChJ,QAAQ,6DAAsB;AAC9B,QAAQ,0DAAmB;AAC3B,QAAQ,4DAAqB;AAC7B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK,EAAE,wCAAwC;AAC/C;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,cAAc,OAAO,6DAAe,SAAS,8DAAO,GAAG,oBAAoB,IAAI;AAC/E;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,EAAE,EAAE,GAAG;AAChE,kBAAkB,6DAAe;AACjC,mBAAmB,8DAAO,GAAG,oBAAoB;AACjD,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAQV;AACD;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,+CAA+C;AAC/H,iCAAiC,+DAAwB,EAAE,0IAA0I;AACrM,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,uBAAuB;AACvB,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF,mDAAmD;AAC3I,qCAAqC,+DAAwB,EAAE,qHAAqH;AACpL,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,uBAAuB;AACvB,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF,mDAAmD;AAC3I,qCAAqC,+DAAwB,EAAE,qHAAqH;AACpL,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,uBAAuB;AACvB,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,WAAW,EAWV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,4DAA4D,SAAS;AACrE,mCAAmC,oBAAoB;AACvD;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uCAAuC,yBAAyB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA,WAAW,EAqBV;AACD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY,OAAO,iBAAiB,KAAK,eAAe;AAC3E;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,6CAA6C,SAAS,KAAK,iBAAiB,MAAM,OAAO;AACzF;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,SAAS,KAAK,KAAK,OAAO,SAAS,KAAK,iBAAiB;AAC5E;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,iBAAiB,MAAM,cAAc;AACvD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,cAAc,KAAK,gCAAgC;AACrE;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,yBAAyB,aAAa;AACtC;AACA,WAAW,EA+BV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,8BAA8B,sCAAsC,KAAK,qBAAqB;AAC9F;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,EAGV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,qCAAqC,sCAAsC,KAAK,qBAAqB;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,+EAA+E,MAAM;AACrF;AACA;AACA;AACA;AACA,WAAW,EAQV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,IAAI;AACvB;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,qDAAqD,MAAM;AAC3D;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,mBAAmB;AACnC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,4CAA4C,kFAAoB;AAChE;AACA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,qBAAqB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,2BAA2B,mBAAmB,2BAA2B,EAAE;AAC3E;AACA;AACA,gBAAgB;AAChB;AACA,qBAAqB,wBAAwB;AAC7C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,4BAA4B,2BAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA,oDAAoD,+BAA+B,+DAAw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ACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;;AAE6Q;;AAE7Q,qC;;;;;;;;;;;;AC7qCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACgJ;AACzJ;AACoB;AAC2E;;AAEtG;;AAExC;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,mCAAmC,KAAK,KAAK,IAAI;AACjeAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA,0EAA0E,yBAAyB;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sBAAsB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,wBAAwB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4GAA4G,aAAa;AACzH;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,wBAAwB;AACxB;AACA,gCAAgC,6BAA6B;AAC7D,oCAAoC,6BAA6B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,4BAA4B,6BAA6B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,6BAA6B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,aAAa;AAC3C,kCAAkC,aAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB,GAAG,MAAM;AAC3D,4BAA4B,MAAM,GAAG,sBAAsB;AAC3D;AACA;AACA;AACA,iBAAiB,sBAAsB,GAAG,sBAAsB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iCAAiC;AACjE;AACA;AACA;AACA;AACA;AACA,oCAAoC,iCAAiC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,6BAA6B;AACzD,gCAAgC,6BAA6B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C,oCAAoC,6BAA6B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,4CAAO;AAChD,qCAAqC,4CAAO;AAC5C;AACA,oCAAoC,mEAAY;AAChD;AACA;AACA;AACA,SAAS;AACT,wCAAwC,mEAAY;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,+BAA+B;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,uCAAuC;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,eAAe,KAAK,gBAAgB;AAC5F,6DAA6D,WAAW,MAAM,WAAW;AACzF;AACA,4CAA4C,WAAW,GAAG,WAAW,MAAM,aAAa,GAAG,WAAW;AACtG,6CAA6C,WAAW,GAAG,WAAW,MAAM,aAAa,GAAG,WAAW;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,4DAA4D,qCAAqC;AACjG,wBAAwB,gEAAyB,EAAE,wDAAwD;AAC3G,kBAAkB,wDAAU,GAAG,wDAAU;AACzC;;AAEA;AACA;AACA;AACA,+BAA+B,4CAAO;AACtC,oCAAoC,4CAAO;AAC3C,mCAAmC,4CAAO;AAC1C;AACA;AACA,yCAAyC,6DAAM;AAC/C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS,GAAG,0DAAG;AACf;AACA,oCAAoC,qBAAqB;AACzD;AACA,SAAS;AACT;AACA;AACA,yCAAyC,6DAAM;AAC/C;AACA;AACA,SAAS,GAAG,0DAAG;AACf;AACA;AACA,SAAS;AACT;AACA;AACA,2CAA2C,0DAAG;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,+CAA+C,0DAAG;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,wBAAwB,kDAAK;AAC7B;AACA;AACA,mCAAmC,0DAAG,SAAS,2CAA2C,sBAAsB,2DAAI;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,GAAG,6DAAM;AAClB;AACA,SAAS,GAAG,4DAAK;AACjB;AACA;AACA;AACA,kBAAkB,gEAAS,6BAA6B,gEAAS,aAAa,0DAAG;AACjF,gBAAgB;AAChB;AACA;AACA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA,mCAAmC,cAAc;AACjD;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA;AACA,+BAA+B,6DAAM,yDAAyD,0DAAG,uBAAuB,0DAAG;AAC3H;AACA;AACA;AACA;AACA;AACA,+BAA+B,6DAAM,0BAA0B,0DAAG,uBAAuB,0DAAG;AAC5F;AACA;AACA;AACA;AACA;AACA,+BAA+B,6DAAM,wBAAwB,0DAAG,uBAAuB,0DAAG;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,8CAA8C;AAC5H,iCAAiC,gEAAyB,EAAE,0EAA0E;AACtI,2BAA2B,wDAAU,GAAG,wDAAU;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,kDAAK,CAAC,+CAAE,qEAAqE,sDAAS,wBAAwB,mEAAY,kCAAkC,0DAAG,sFAAsF,2EAAoB;AAC/R;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C,yBAAyB,0DAAY;AACrC,0BAA0B,0DAAY;AACtC,iCAAiC,0DAAY;AAC7C,kCAAkC,0DAAY;AAC9C,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iDAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,8BAA8B,sDAAS;AACvC,kBAAkB,mEAAY,iDAAiD,6DAAM;AACrF;AACA;AACA,kCAAkC,sDAAS,sBAAsB,gBAAgB;AACjF;AACA;AACA,sCAAsC,sDAAS,iCAAiC,gBAAgB;AAChkDAAkD,8BAA8B;AAChF;AACA;AACA;AACA;AAC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CA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,8BAA8B,mDAAmD;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,wDAAwD,aAAa;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sCAAsC;AAC7D;AACA;AACA,yBAAyB,sCAAsC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,kDAAkwEAAwE,yCAAyC,+DAAwB,CAAC,oDAAa,GAAG,+DAAwB,4BAA4B,+DAAwB,CAAC,wDAAU,GAAG,+DAAwB,mBAAmB;AAC/R,6BAA6B,+DAAwB,EAAE,mJAAmJ;AAC1M,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,ySAAyS,YAAY,+fAA+f,aAAa,kEAA2B,sjBAAsjB;AACp6C,QAAQ,6DAAsB;AAC9B,QAAQ,4DAAqB;AAC7B,QAAQ,0DAAmB;AAC3B,QAAQ,uDAAgB;AACxB,QAAQ,uDAAgB;AACxB,QAAQ,uDAAgB;AACxB,QAAQ,uDAAgB;AACxB,QAAQ,uDAAgB;AACxB,QAAQ,uDAAgB;AACxB,QAAQ,uDAAgB;AACxB,QAAQ,uDAAgB;AACxB,QAAQ,0DAAmB;AAC3B,KAAK,EAAE,qCAAqC,yBAAyB,6BAA6B,iBAAiB,kBAAkB,qBAAqB,mCAAmC,2BAA2B,OAAO,4CAA4C,qCAAqC,yCAAyC,OAAO,2DAA2D,yCAAyC,OAAO,6GAA6G,mCAAmC,2BAA2B,wBAAwB,OAAO,yCAAyC,mCAAmC,2BAA2B,OAAO,0DAA0D,6BAA6B,qBAAqB,wBAAwB,OAAO,qEAAqE,yBAAyB,qBAAqB,iBAAiB,eAAe,gBAAgB,OAAO,qEAAqE,yBAAyB,oBAAoB,kBAAkB,iBAAiB,eAAe,OAAO,qEAAqE,yBAAyB,qBAAqB,iBAAiB,kBAAkB,gBAAgB,OAAO,qEAAqE,yBAAyB,oBAAoB,gBAAgB,eAAe,kBAAkB,OAAO,sEAAsE,0BAA0B,oBAAoB,qBAAqB,iBAAiB,eAAe,OAAO,sEAAsE,0BAA0B,oBAAoB,qBAAqB,gBAAgB,eAAe,OAAO,sEAAsE,0BAA0B,iBAAiB,kBAAkB,iBAAiB,kBAAkB,4BAA4B,oCAAoC,kCAAkC,OAAO,sEAAsE,0BAA0B,oBAAoB,qBAAqB,gBAAgB,kBAAkB,OAAO,4EAA4E,yDAAyD,gDAAgD;AAC/gF;AACA,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,iCAAiC;AACtC,KAAK,OAAO,wDAAU,gBAAgB,OAAO,oDAAM,SAAS,wDAAU,IAAI,GAAG;AAC7E,KAAK,sCAAsC,OAAO,oDAAM,4BAA4B;AACpF;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,iEAAW;AACf,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,iEAAW;AACf,IAAI,wDAAU;AACd;AACA,wBAAwB,wDAAU,GAAG,qDAAO,IAAI,4DAAM,CAAC,wDAAU;AACjE,IAAI,qDAAO,IAAI,4DAAM;AACrB,IAAI,wDAAU,uBAAuB,oDAAM;AAC3C;AACA,QAAQ,wDAAU;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC,yBAAyB,0DAAY;AACrC,0BAA0B,0DAAY;AACtC,yBAAyB,0DAAY;AACrC,uBAAuB,0DAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,0BAA0B,kBAAkB;AAC5C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,0BAA0B,sDAAS;AACnC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,kBAAkB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,0FAA0F,kDAAkD,+DAAwB,CAAC,oDAAa,GAAG,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,4BAA4B;AACtR,sCAAsC,+DAAwB,EAAE,mGAAmG,iJAAiJ,YAAY,6EAA6E,EAAE;AAC/Y;AACA,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK;AACL;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,iCAAiC,wDAAU,GAAG,wDAAU,uBAAuB,oDAAM;AACrF,QAAQ,wDAAU;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8DAAuB,EAAE,uBAAuB;AACtE,sBAAsB,8DAAuB,EAAE,8CAA8C,oCAAoC,EAAE;AACnI,YAAY,4DAAY;AACxB,YAAY;AACZ,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;AAC5C,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;AAC5C,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,oDAAa,EAAE,GAAG,OAAO,wDAAiB,EAAE,GAAG,wBAAwB,GAAG,iCAAiC,EAAE,EAAE,GAAG;AACxJ,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,yDAAW;AAC7B;AACA,SAAS;AACT,kBAAkB,yDAAW;AAC7B;AACA,SAAS;AACT,kBAAkB,yDAAW;AAC7B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,uDAAS;AAC3B,yCAAyC,eAAe;AACxD,SAAS,GAAG,EAAE,EAAE;AAChB,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AA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","file":"dashboard-dashboard-module-es2015.js","sourcesContent":["import { Injectable, NgZone, Inject, ɵɵdefineInjectable, ɵɵinject, InjectionToken, Directive, ElementRef, Optional, Input, TemplateRef, EventEmitter, isDevMode, SkipSelf, ViewContainerRef, ChangeDetectorRef, ContentChildren, ContentChild, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ViewportRuler, ScrollDispatcher } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceNumberProperty, coerceArray } from '@angular/cdk/coercion';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { startWith, takeUntil, map, take, tap, switchMap } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-styling.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extended CSSStyleDeclaration that includes a couple of drag-related\n * properties that aren't in the built-in TS typings.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nfunction DragCSSStyleDeclaration() { }\nif (false) {\n    /** @type {?} */\n    DragCSSStyleDeclaration.prototype.webkitUserDrag;\n    /** @type {?} */\n    DragCSSStyleDeclaration.prototype.MozUserSelect;\n}\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * \\@docs-private\n * @param {?} dest\n * @param {?} source\n * @return {?}\n */\nfunction extendStyles(dest, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            dest[key] = (/** @type {?} */ (source[key]));\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * \\@docs-private\n * @param {?} element Element on which to toggle the drag interactions.\n * @param {?} enable Whether the drag interactions should be enabled.\n * @return {?}\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    /** @type {?} */\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        touchAction: enable ? '' : 'none',\n        webkitUserDrag: enable ? '' : 'none',\n        webkitTapHighlightColor: enable ? '' : 'transparent',\n        userSelect: userSelect,\n        msUserSelect: userSelect,\n        webkitUserSelect: userSelect,\n        MozUserSelect: userSelect\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/transition-duration.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Parses a CSS time value to milliseconds.\n * @param {?} value\n * @return {?}\n */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    /** @type {?} */\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/**\n * Gets the transform transition duration, including the delay, of an element in milliseconds.\n * @param {?} element\n * @return {?}\n */\nfunction getTransformTransitionDurationInMs(element) {\n    /** @type {?} */\n    const computedStyle = getComputedStyle(element);\n    /** @type {?} */\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    /** @type {?} */\n    const property = transitionedProperties.find((/**\n     * @param {?} prop\n     * @return {?}\n     */\n    prop => prop === 'transform' || prop === 'all'));\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    /** @type {?} */\n    const propertyIndex = transitionedProperties.indexOf(property);\n    /** @type {?} */\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    /** @type {?} */\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\n}\n/**\n * Parses out multiple values from a computed style into an array.\n * @param {?} computedStyle\n * @param {?} name\n * @return {?}\n */\nfunction parseCssPropertyValue(computedStyle, name) {\n    /** @type {?} */\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map((/**\n     * @param {?} part\n     * @return {?}\n     */\n    part => part.trim()));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Object that can be used to configure the behavior of DragRef.\n * @record\n */\nfunction DragRefConfig() { }\nif (false) {\n    /**\n     * Minimum amount of pixels that the user should\n     * drag, before the CDK initiates a drag sequence.\n     * @type {?}\n     */\n    DragRefConfig.prototype.dragStartThreshold;\n    /**\n     * Amount the pixels the user should drag before the CDK\n     * considers them to have changed the drag direction.\n     * @type {?}\n     */\n    DragRefConfig.prototype.pointerDirectionChangeThreshold;\n}\n/**\n * Options that can be used to bind a passive event listener.\n * @type {?}\n */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Options that can be used to bind an active event listener.\n * @type {?}\n */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n * @type {?}\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/**\n * Internal compile-time-only representation of a `DragRef`.\n * Used to avoid circular import issues between the `DragRef` and the `DropListRef`.\n * \\@docs-private\n * @record\n */\nfunction DragRefInternal() { }\n/**\n * Template that can be used to create a drag helper element (e.g. a preview or a placeholder).\n * @record\n * @template T\n */\nfunction DragHelperTemplate() { }\nif (false) {\n    /** @type {?} */\n    DragHelperTemplate.prototype.template;\n    /** @type {?} */\n    DragHelperTemplate.prototype.viewContainer;\n    /** @type {?} */\n    DragHelperTemplate.prototype.context;\n}\n/**\n * Template that can be used to create a drag preview element.\n * @record\n * @template T\n */\nfunction DragPreviewTemplate() { }\nif (false) {\n    /** @type {?|undefined} */\n    DragPreviewTemplate.prototype.matchSize;\n}\n/**\n * Point on the page or within an element.\n * @record\n */\nfunction Point() { }\nif (false) {\n    /** @type {?} */\n    Point.prototype.x;\n    /** @type {?} */\n    Point.prototype.y;\n}\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n * @template T\n */\nclass DragRef {\n    /**\n     * @param {?} element\n     * @param {?} _config\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?} _dragDropRegistry\n     */\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /**\n         * CSS `transform` that is applied to the element while it's being dragged.\n         */\n        this._activeTransform = { x: 0, y: 0 };\n        /**\n         * Emits when the item is being moved.\n         */\n        this._moveEvents = new Subject();\n        /**\n         * Subscription to pointer movement events.\n         */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the event that is dispatched when the user lifts their pointer.\n         */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the viewport being scrolled.\n         */\n        this._scrollSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the viewport being resized.\n         */\n        this._resizeSubscription = Subscription.EMPTY;\n        /**\n         * Cached reference to the boundary element.\n         */\n        this._boundaryElement = null;\n        /**\n         * Whether the native dragging interactions have been enabled on the root element.\n         */\n        this._nativeInteractionsEnabled = true;\n        /**\n         * Elements that can be used to drag the draggable item.\n         */\n        this._handles = [];\n        /**\n         * Registered handles that are currently disabled.\n         */\n        this._disabledHandles = new Set();\n        /**\n         * Layout direction of the item.\n         */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /**\n         * Emits as the drag sequence is being prepared.\n         */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user starts dragging the item.\n         */\n        this.started = new Subject();\n        /**\n         * Emits when the user has released a drag item, before any animations have started.\n         */\n        this.released = new Subject();\n        /**\n         * Emits when the user stops dragging an item in the container.\n         */\n        this.ended = new Subject();\n        /**\n         * Emits when the user has moved the item into a new container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes the item its container by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /**\n         * Emits when the user drops the item inside a container.\n         */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents.asObservable();\n        /**\n         * Handler for the `mousedown`/`touchstart` events.\n         */\n        this._pointerDown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                /** @type {?} */\n                const targetHandle = this._handles.find((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                handle => {\n                    /** @type {?} */\n                    const target = event.target;\n                    return !!target && (target === handle || handle.contains((/** @type {?} */ (target))));\n                }));\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        });\n        /**\n         * Handler that is invoked when the user moves their pointer after they've initiated a drag.\n         */\n        this._pointerMove = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Prevent the default action as early as possible in order to block\n            // native actions like dragging the selected text or images with the mouse.\n            event.preventDefault();\n            if (!this._hasStartedDragging) {\n                /** @type {?} */\n                const pointerPosition = this._getPointerPositionOnPage(event);\n                /** @type {?} */\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                /** @type {?} */\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                /** @type {?} */\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferrable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    /** @type {?} */\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!this._dropContainer || !this._dropContainer.isDragging()) {\n                        this._hasStartedDragging = true;\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this._startDragSequence(event)));\n                    }\n                }\n                return;\n            }\n            // We only need the preview dimensions if we have a boundary element.\n            if (this._boundaryElement) {\n                // Cache the preview element rect if we haven't cached it already or if\n                // we cached it too early before the element dimensions were computed.\n                if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n                    this._previewRect = (this._preview || this._rootElement).getBoundingClientRect();\n                }\n            }\n            /** @type {?} */\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(event);\n            this._hasMoved = true;\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition);\n            }\n            else {\n                /** @type {?} */\n                const activeTransform = this._activeTransform;\n                activeTransform.x =\n                    constrainedPointerPosition.x - this._pickupPositionOnPage.x + this._passiveTransform.x;\n                activeTransform.y =\n                    constrainedPointerPosition.y - this._pickupPositionOnPage.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n                // Apply transform as attribute if dragging and svg element to work for IE\n                if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n                    /** @type {?} */\n                    const appliedTransform = `translate(${activeTransform.x} ${activeTransform.y})`;\n                    this._rootElement.setAttribute('transform', appliedTransform);\n                }\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta\n                    });\n                }));\n            }\n        });\n        /**\n         * Handler that is invoked when the user lifts their pointer up, after initiating a drag.\n         */\n        this._pointerUp = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this._endDragSequence(event);\n        });\n        this.withRootElement(element);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /**\n     * Whether starting to drag this element is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._toggleNativeDragInteractions();\n        }\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     * @return {?}\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /**\n     * Returns the root draggable element.\n     * @return {?}\n     */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Gets the currently-visible element that represents the drag item.\n     * While dragging this is the placeholder, otherwise it's the root element.\n     * @return {?}\n     */\n    getVisibleElement() {\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n    }\n    /**\n     * Registers the handles that can be used to drag the element.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} handles\n     * @return {THIS}\n     */\n    withHandles(handles) {\n        (/** @type {?} */ (this))._handles = handles.map((/**\n         * @param {?} handle\n         * @return {?}\n         */\n        handle => coerceElement(handle)));\n        (/** @type {?} */ (this))._handles.forEach((/**\n         * @param {?} handle\n         * @return {?}\n         */\n        handle => toggleNativeDragInteractions(handle, false)));\n        (/** @type {?} */ (this))._toggleNativeDragInteractions();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} template Template that from which to stamp out the preview.\n     * @return {THIS}\n     */\n    withPreviewTemplate(template) {\n        (/** @type {?} */ (this))._previewTemplate = template;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} template Template that from which to stamp out the placeholder.\n     * @return {THIS}\n     */\n    withPlaceholderTemplate(template) {\n        (/** @type {?} */ (this))._placeholderTemplate = template;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} rootElement\n     * @return {THIS}\n     */\n    withRootElement(rootElement) {\n        /** @type {?} */\n        const element = coerceElement(rootElement);\n        if (element !== (/** @type {?} */ (this))._rootElement) {\n            if ((/** @type {?} */ (this))._rootElement) {\n                (/** @type {?} */ (this))._removeRootElementListeners((/** @type {?} */ (this))._rootElement);\n            }\n            element.addEventListener('mousedown', (/** @type {?} */ (this))._pointerDown, activeEventListenerOptions);\n            element.addEventListener('touchstart', (/** @type {?} */ (this))._pointerDown, passiveEventListenerOptions);\n            (/** @type {?} */ (this))._initialTransform = undefined;\n            (/** @type {?} */ (this))._rootElement = element;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} boundaryElement\n     * @return {THIS}\n     */\n    withBoundaryElement(boundaryElement) {\n        (/** @type {?} */ (this))._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        (/** @type {?} */ (this))._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            (/** @type {?} */ (this))._resizeSubscription = (/** @type {?} */ (this))._viewportRuler\n                .change(10)\n                .subscribe((/**\n             * @return {?}\n             */\n            () => (/** @type {?} */ (this))._containInsideBoundaryOnResize()));\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Removes the dragging functionality from the DOM element.\n     * @return {?}\n     */\n    dispose() {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            removeNode(this._rootElement);\n        }\n        removeNode(this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._resizeSubscription.unsubscribe();\n        this._boundaryElement = this._rootElement = this._placeholderTemplate =\n            this._previewTemplate = this._anchor = (/** @type {?} */ (null));\n    }\n    /**\n     * Checks whether the element is currently being dragged.\n     * @return {?}\n     */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /**\n     * Resets a standalone drag item to its initial position.\n     * @return {?}\n     */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param {?} handle Handle element that should be disabled.\n     * @return {?}\n     */\n    disableHandle(handle) {\n        if (this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param {?} handle Handle element to be enabled.\n     * @return {?}\n     */\n    enableHandle(handle) {\n        this._disabledHandles.delete(handle);\n    }\n    /**\n     * Sets the layout direction of the draggable item.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction\n     * @return {THIS}\n     */\n    withDirection(direction) {\n        (/** @type {?} */ (this))._direction = direction;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the container that the item is part of.\n     * @param {?} container\n     * @return {?}\n     */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     * @return {?}\n     */\n    getFreeDragPosition() {\n        /** @type {?} */\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} value New position to be set.\n     * @return {THIS}\n     */\n    setFreeDragPosition(value) {\n        (/** @type {?} */ (this))._activeTransform = { x: 0, y: 0 };\n        (/** @type {?} */ (this))._passiveTransform.x = value.x;\n        (/** @type {?} */ (this))._passiveTransform.y = value.y;\n        if (!(/** @type {?} */ (this))._dropContainer) {\n            (/** @type {?} */ (this))._applyRootElementTransform(value.x, value.y);\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Updates the item's sort order based on the last-known pointer position.\n     * @return {?}\n     */\n    _sortFromLastPointerPosition() {\n        /** @type {?} */\n        const position = this._pointerPositionAtLastDirectionChange;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(position);\n        }\n    }\n    /**\n     * Unsubscribes from the global subscriptions.\n     * @private\n     * @return {?}\n     */\n    _removeSubscriptions() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    }\n    /**\n     * Destroys the preview element and its ViewRef.\n     * @private\n     * @return {?}\n     */\n    _destroyPreview() {\n        if (this._preview) {\n            removeNode(this._preview);\n        }\n        if (this._previewRef) {\n            this._previewRef.destroy();\n        }\n        this._preview = this._previewRef = (/** @type {?} */ (null));\n    }\n    /**\n     * Destroys the placeholder element and its ViewRef.\n     * @private\n     * @return {?}\n     */\n    _destroyPlaceholder() {\n        if (this._placeholder) {\n            removeNode(this._placeholder);\n        }\n        if (this._placeholderRef) {\n            this._placeholderRef.destroy();\n        }\n        this._placeholder = this._placeholderRef = (/** @type {?} */ (null));\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @private\n     * @param {?} event Browser event object that ended the sequence.\n     * @return {?}\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then((/**\n             * @return {?}\n             */\n            () => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            }));\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(this._getPointerPositionOnPage(event))\n                });\n            }));\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /**\n     * Starts the dragging sequence.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _startDragSequence(event) {\n        // Emit the event on the item before the one on the container.\n        this.started.next({ source: this });\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        if (this._dropContainer) {\n            /** @type {?} */\n            const element = this._rootElement;\n            /** @type {?} */\n            const parent = (/** @type {?} */ (element.parentNode));\n            /** @type {?} */\n            const preview = this._preview = this._createPreviewElement();\n            /** @type {?} */\n            const placeholder = this._placeholder = this._createPlaceholderElement();\n            /** @type {?} */\n            const anchor = this._anchor = this._anchor || this._document.createComment('');\n            // Insert an anchor node so that we can restore the element's position in the DOM.\n            parent.insertBefore(anchor, element);\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            element.style.display = 'none';\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\n            getPreviewInsertionPoint(this._document).appendChild(preview);\n            this._dropContainer.start();\n            this._initialContainer = this._dropContainer;\n            this._initialIndex = this._dropContainer.getItemIndex(this);\n        }\n        else {\n            this._initialContainer = this._initialIndex = (/** @type {?} */ (undefined));\n        }\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @private\n     * @param {?} referenceElement Element that started the drag sequence.\n     * @param {?} event Browser event object that started the sequence.\n     * @return {?}\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Always stop propagation for the event that initializes\n        // the dragging sequence, in order to prevent it from potentially\n        // starting another sequence for a draggable parent somewhere up the DOM tree.\n        event.stopPropagation();\n        /** @type {?} */\n        const isDragging = this.isDragging();\n        /** @type {?} */\n        const isTouchSequence = isTouchEvent(event);\n        /** @type {?} */\n        const isAuxiliaryMouseButton = !isTouchSequence && ((/** @type {?} */ (event))).button !== 0;\n        /** @type {?} */\n        const rootElement = this._rootElement;\n        /** @type {?} */\n        const isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (event.target && ((/** @type {?} */ (event.target))).draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            this._rootElementTapHighlight = rootElement.style.webkitTapHighlightColor;\n            rootElement.style.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry.scroll.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        }));\n        if (this._boundaryElement) {\n            this._boundaryRect = this._boundaryElement.getBoundingClientRect();\n        }\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\n        // the same size as the root element, in which case we do know the size.\n        /** @type {?} */\n        const previewTemplate = this._previewTemplate;\n        this._pickupPositionInElement = previewTemplate && previewTemplate.template &&\n            !previewTemplate.matchSize ? { x: 0, y: 0 } :\n            this._getPointerPositionInElement(referenceElement, event);\n        /** @type {?} */\n        const pointerPosition = this._pickupPositionOnPage = this._getPointerPositionOnPage(event);\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /**\n     * Cleans up the DOM artifacts that were added to facilitate the element being dragged.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        this._rootElement.style.display = '';\n        (/** @type {?} */ (this._anchor.parentNode)).replaceChild(this._rootElement, this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._boundaryRect = this._previewRect = undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const container = (/** @type {?} */ (this._dropContainer));\n            /** @type {?} */\n            const currentIndex = container.getItemIndex(this);\n            /** @type {?} */\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            /** @type {?} */\n            const distance = this._getDragDistance(this._getPointerPositionOnPage(event));\n            /** @type {?} */\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialIndex,\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance\n            });\n            container.drop(this, currentIndex, this._initialContainer, isPointerOverContainer, distance, this._initialIndex);\n            this._dropContainer = this._initialContainer;\n        }));\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     * @private\n     * @param {?} __0\n     * @return {?}\n     */\n    _updateActiveDropContainer({ x, y }) {\n        // Drop container that draggable has been moved into.\n        /** @type {?} */\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer && this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: (/** @type {?} */ (this._dropContainer)) });\n                (/** @type {?} */ (this._dropContainer)).exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = (/** @type {?} */ (newContainer));\n                this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n                    // If we're re-entering the initial container and sorting is disabled,\n                    // put item the into its starting index to begin with.\n                    newContainer.sortingDisabled ? this._initialIndex : undefined);\n                this.entered.next({\n                    item: this,\n                    container: (/** @type {?} */ (newContainer)),\n                    currentIndex: (/** @type {?} */ (newContainer)).getItemIndex(this)\n                });\n            }));\n        }\n        (/** @type {?} */ (this._dropContainer))._startScrollingIfNecessary(x, y);\n        (/** @type {?} */ (this._dropContainer))._sortItem(this, x, y, this._pointerDirectionDelta);\n        this._preview.style.transform =\n            getTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n    }\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     * @private\n     * @return {?}\n     */\n    _createPreviewElement() {\n        /** @type {?} */\n        const previewConfig = this._previewTemplate;\n        /** @type {?} */\n        const previewClass = this.previewClass;\n        /** @type {?} */\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        /** @type {?} */\n        let preview;\n        if (previewTemplate) {\n            /** @type {?} */\n            const viewRef = (/** @type {?} */ (previewConfig)).viewContainer.createEmbeddedView(previewTemplate, (/** @type {?} */ (previewConfig)).context);\n            viewRef.detectChanges();\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            if ((/** @type {?} */ (previewConfig)).matchSize) {\n                matchElementSize(preview, this._rootElement);\n            }\n            else {\n                preview.style.transform =\n                    getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n            }\n        }\n        else {\n            /** @type {?} */\n            const element = this._rootElement;\n            preview = deepCloneNode(element);\n            matchElementSize(preview, element);\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            pointerEvents: 'none',\n            // We have to reset the margin, because it can throw off positioning relative to the viewport.\n            margin: '0',\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            zIndex: '1000'\n        });\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        if (previewClass) {\n            if (Array.isArray(previewClass)) {\n                previewClass.forEach((/**\n                 * @param {?} className\n                 * @return {?}\n                 */\n                className => preview.classList.add(className)));\n            }\n            else {\n                preview.classList.add(previewClass);\n            }\n        }\n        return preview;\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @private\n     * @return {?} Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        /** @type {?} */\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._preview.style.transform = getTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        /** @type {?} */\n        const duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            return new Promise((/**\n             * @param {?} resolve\n             * @return {?}\n             */\n            resolve => {\n                /** @type {?} */\n                const handler = (/** @type {?} */ (((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    if (!event || (event.target === this._preview && event.propertyName === 'transform')) {\n                        this._preview.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                }))));\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                /** @type {?} */\n                const timeout = setTimeout((/** @type {?} */ (handler)), duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            }));\n        }));\n    }\n    /**\n     * Creates an element that will be shown instead of the current element while dragging.\n     * @private\n     * @return {?}\n     */\n    _createPlaceholderElement() {\n        /** @type {?} */\n        const placeholderConfig = this._placeholderTemplate;\n        /** @type {?} */\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        /** @type {?} */\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = (/** @type {?} */ (placeholderConfig)).viewContainer.createEmbeddedView(placeholderTemplate, (/** @type {?} */ (placeholderConfig)).context);\n            this._placeholderRef.detectChanges();\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @private\n     * @param {?} referenceElement Element that initiated the dragging.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    _getPointerPositionInElement(referenceElement, event) {\n        /** @type {?} */\n        const elementRect = this._rootElement.getBoundingClientRect();\n        /** @type {?} */\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        /** @type {?} */\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        /** @type {?} */\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        /** @type {?} */\n        const x = point.pageX - referenceRect.left - this._scrollPosition.left;\n        /** @type {?} */\n        const y = point.pageY - referenceRect.top - this._scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y\n        };\n    }\n    /**\n     * Determines the point of the page that was touched by the user.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _getPointerPositionOnPage(event) {\n        // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n        /** @type {?} */\n        const point = isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;\n        return {\n            x: point.pageX - this._scrollPosition.left,\n            y: point.pageY - this._scrollPosition.top\n        };\n    }\n    /**\n     * Gets the pointer position on the page, accounting for any position constraints.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _getConstrainedPointerPosition(event) {\n        /** @type {?} */\n        const point = this._getPointerPositionOnPage(event);\n        /** @type {?} */\n        const constrainedPoint = this.constrainPosition ? this.constrainPosition(point, this) : point;\n        /** @type {?} */\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            constrainedPoint.y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            constrainedPoint.x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            const { x: pickupX, y: pickupY } = this._pickupPositionInElement;\n            /** @type {?} */\n            const boundaryRect = this._boundaryRect;\n            /** @type {?} */\n            const previewRect = (/** @type {?} */ (this._previewRect));\n            /** @type {?} */\n            const minY = boundaryRect.top + pickupY;\n            /** @type {?} */\n            const maxY = boundaryRect.bottom - (previewRect.height - pickupY);\n            /** @type {?} */\n            const minX = boundaryRect.left + pickupX;\n            /** @type {?} */\n            const maxX = boundaryRect.right - (previewRect.width - pickupX);\n            constrainedPoint.x = clamp(constrainedPoint.x, minX, maxX);\n            constrainedPoint.y = clamp(constrainedPoint.y, minY, maxY);\n        }\n        return constrainedPoint;\n    }\n    /**\n     * Updates the current drag delta, based on the user's current pointer position on the page.\n     * @private\n     * @param {?} pointerPositionOnPage\n     * @return {?}\n     */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        /** @type {?} */\n        const delta = this._pointerDirectionDelta;\n        /** @type {?} */\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        /** @type {?} */\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        /** @type {?} */\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /**\n     * Toggles the native drag interactions, based on how many handles are registered.\n     * @private\n     * @return {?}\n     */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        /** @type {?} */\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /**\n     * Removes the manually-added event listeners from the root element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @private\n     * @param {?} x New transform value along the X axis.\n     * @param {?} y New transform value along the Y axis.\n     * @return {?}\n     */\n    _applyRootElementTransform(x, y) {\n        /** @type {?} */\n        const transform = getTransform(x, y);\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        if (this._initialTransform == null) {\n            this._initialTransform = this._rootElement.style.transform || '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        this._rootElement.style.transform = this._initialTransform ?\n            transform + ' ' + this._initialTransform : transform;\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @private\n     * @param {?} currentPosition Current position of the user's pointer.\n     * @return {?}\n     */\n    _getDragDistance(currentPosition) {\n        /** @type {?} */\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /**\n     * Cleans up any cached element dimensions that we don't need after dragging has stopped.\n     * @private\n     * @return {?}\n     */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     * @private\n     * @return {?}\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        /** @type {?} */\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        /** @type {?} */\n        const elementRect = this._rootElement.getBoundingClientRect();\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\n        // different tab). Don't do anything in this case so we don't clear the user's position.\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n            (elementRect.width === 0 && elementRect.height === 0)) {\n            return;\n        }\n        /** @type {?} */\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        /** @type {?} */\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        /** @type {?} */\n        const topOverflow = boundaryRect.top - elementRect.top;\n        /** @type {?} */\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n    /**\n     * Gets the drag start delay, based on the event type.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _getDragStartDelay(event) {\n        /** @type {?} */\n        const value = this.dragStartDelay;\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (isTouchEvent(event)) {\n            return value.touch;\n        }\n        return value ? value.mouse : 0;\n    }\n}\nif (false) {\n    /**\n     * Element displayed next to the user's pointer while the element is dragged.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._preview;\n    /**\n     * Reference to the view of the preview element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._previewRef;\n    /**\n     * Reference to the view of the placeholder element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._placeholderRef;\n    /**\n     * Element that is rendered instead of the draggable item while it is being sorted.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._placeholder;\n    /**\n     * Coordinates within the element at which the user picked up the element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pickupPositionInElement;\n    /**\n     * Coordinates on the page at which the user picked up the element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pickupPositionOnPage;\n    /**\n     * Anchor node used to save the place in the DOM where the element was\n     * picked up so that it can be restored at the end of the drag sequence.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._anchor;\n    /**\n     * CSS `transform` applied to the element when it isn't being dragged. We need a\n     * passive transform in order for the dragged element to retain its new position\n     * after the user has stopped dragging and because we need to know the relative\n     * position in case they start dragging again. This corresponds to `element.style.transform`.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._passiveTransform;\n    /**\n     * CSS `transform` that is applied to the element while it's being dragged.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._activeTransform;\n    /**\n     * Inline `transform` value that the element had before the first dragging sequence.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._initialTransform;\n    /**\n     * Whether the dragging sequence has been started. Doesn't\n     * necessarily mean that the element has been moved.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._hasStartedDragging;\n    /**\n     * Whether the element has moved since the user started dragging it.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._hasMoved;\n    /**\n     * Drop container in which the DragRef resided when dragging began.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._initialContainer;\n    /**\n     * Index at which the item started in its initial container.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._initialIndex;\n    /**\n     * Cached scroll position on the page when the element was picked up.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._scrollPosition;\n    /**\n     * Emits when the item is being moved.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._moveEvents;\n    /**\n     * Keeps track of the direction in which the user is dragging along each axis.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerDirectionDelta;\n    /**\n     * Pointer position at which the last change in the delta occurred.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerPositionAtLastDirectionChange;\n    /**\n     * Root DOM node of the drag instance. This is the element that will\n     * be moved around as the user is dragging.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._rootElement;\n    /**\n     * Inline style value of `-webkit-tap-highlight-color` at the time the\n     * dragging was started. Used to restore the value once we're done dragging.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._rootElementTapHighlight;\n    /**\n     * Subscription to pointer movement events.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerMoveSubscription;\n    /**\n     * Subscription to the event that is dispatched when the user lifts their pointer.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerUpSubscription;\n    /**\n     * Subscription to the viewport being scrolled.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._scrollSubscription;\n    /**\n     * Subscription to the viewport being resized.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._resizeSubscription;\n    /**\n     * Time at which the last touch event occurred. Used to avoid firing the same\n     * events multiple times on touch devices where the browser will fire a fake\n     * mouse event for each touch event, after a certain time.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._lastTouchEventTime;\n    /**\n     * Time at which the last dragging sequence was started.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._dragStartTime;\n    /**\n     * Cached reference to the boundary element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._boundaryElement;\n    /**\n     * Whether the native dragging interactions have been enabled on the root element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._nativeInteractionsEnabled;\n    /**\n     * Cached dimensions of the preview element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._previewRect;\n    /**\n     * Cached dimensions of the boundary element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._boundaryRect;\n    /**\n     * Element that will be used as a template to create the draggable item's preview.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._previewTemplate;\n    /**\n     * Template for placeholder element rendered to show where a draggable would be dropped.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._placeholderTemplate;\n    /**\n     * Elements that can be used to drag the draggable item.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._handles;\n    /**\n     * Registered handles that are currently disabled.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._disabledHandles;\n    /**\n     * Droppable container that the draggable is a part of.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._dropContainer;\n    /**\n     * Layout direction of the item.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._direction;\n    /**\n     * Axis along which dragging is locked.\n     * @type {?}\n     */\n    DragRef.prototype.lockAxis;\n    /**\n     * Amount of milliseconds to wait after the user has put their\n     * pointer down before starting to drag the element.\n     * @type {?}\n     */\n    DragRef.prototype.dragStartDelay;\n    /**\n     * Class to be added to the preview element.\n     * @type {?}\n     */\n    DragRef.prototype.previewClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._disabled;\n    /**\n     * Emits as the drag sequence is being prepared.\n     * @type {?}\n     */\n    DragRef.prototype.beforeStarted;\n    /**\n     * Emits when the user starts dragging the item.\n     * @type {?}\n     */\n    DragRef.prototype.started;\n    /**\n     * Emits when the user has released a drag item, before any animations have started.\n     * @type {?}\n     */\n    DragRef.prototype.released;\n    /**\n     * Emits when the user stops dragging an item in the container.\n     * @type {?}\n     */\n    DragRef.prototype.ended;\n    /**\n     * Emits when the user has moved the item into a new container.\n     * @type {?}\n     */\n    DragRef.prototype.entered;\n    /**\n     * Emits when the user removes the item its container by dragging it into another container.\n     * @type {?}\n     */\n    DragRef.prototype.exited;\n    /**\n     * Emits when the user drops the item inside a container.\n     * @type {?}\n     */\n    DragRef.prototype.dropped;\n    /**\n     * Emits as the user is dragging the item. Use with caution,\n     * because this event will fire for every pixel that the user has dragged.\n     * @type {?}\n     */\n    DragRef.prototype.moved;\n    /**\n     * Arbitrary data that can be attached to the drag item.\n     * @type {?}\n     */\n    DragRef.prototype.data;\n    /**\n     * Function that can be used to customize the logic of how the position of the drag item\n     * is limited while it's being dragged. Gets called with a point containing the current position\n     * of the user's pointer on the page and should return a point describing where the item should\n     * be rendered.\n     * @type {?}\n     */\n    DragRef.prototype.constrainPosition;\n    /**\n     * Handler for the `mousedown`/`touchstart` events.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerDown;\n    /**\n     * Handler that is invoked when the user moves their pointer after they've initiated a drag.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerMove;\n    /**\n     * Handler that is invoked when the user lifts their pointer up, after initiating a drag.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerUp;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._config;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._dragDropRegistry;\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param {?} x Desired position of the element along the X axis.\n * @param {?} y Desired position of the element along the Y axis.\n * @return {?}\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/**\n * Creates a deep clone of an element.\n * @param {?} node\n * @return {?}\n */\nfunction deepCloneNode(node) {\n    /** @type {?} */\n    const clone = (/** @type {?} */ (node.cloneNode(true)));\n    /** @type {?} */\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    /** @type {?} */\n    const descendantCanvases = node.querySelectorAll('canvas');\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    // `cloneNode` won't transfer the content of `canvas` elements so we have to do it ourselves.\n    // We match up the cloned canvas to their sources using their index in the DOM.\n    if (descendantCanvases.length) {\n        /** @type {?} */\n        const cloneCanvases = clone.querySelectorAll('canvas');\n        for (let i = 0; i < descendantCanvases.length; i++) {\n            /** @type {?} */\n            const correspondingCloneContext = cloneCanvases[i].getContext('2d');\n            if (correspondingCloneContext) {\n                correspondingCloneContext.drawImage(descendantCanvases[i], 0, 0);\n            }\n        }\n    }\n    return clone;\n}\n/**\n * Clamps a value between a minimum and a maximum.\n * @param {?} value\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nfunction clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * Helper to remove a node from the DOM and to do all the necessary null checks.\n * @param {?} node Node to be removed.\n * @return {?}\n */\nfunction removeNode(node) {\n    if (node && node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\n/**\n * Determines whether an event is a touch event.\n * @param {?} event\n * @return {?}\n */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/**\n * Gets the element into which the drag preview should be inserted.\n * @param {?} documentRef\n * @return {?}\n */\nfunction getPreviewInsertionPoint(documentRef) {\n    // We can't use the body if the user is in fullscreen mode,\n    // because the preview will render under the fullscreen element.\n    // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n    return documentRef.fullscreenElement ||\n        documentRef.webkitFullscreenElement ||\n        documentRef.mozFullScreenElement ||\n        documentRef.msFullscreenElement ||\n        documentRef.body;\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n * @param {?} viewRef\n * @param {?} _document\n * @return {?}\n */\nfunction getRootNode(viewRef, _document) {\n    /** @type {?} */\n    const rootNode = viewRef.rootNodes[0];\n    if (rootNode.nodeType !== _document.ELEMENT_NODE) {\n        /** @type {?} */\n        const wrapper = _document.createElement('div');\n        wrapper.appendChild(rootNode);\n        return wrapper;\n    }\n    return (/** @type {?} */ (rootNode));\n}\n/**\n * Matches the target element's size to the source's size.\n * @param {?} target Element that needs to be resized.\n * @param {?} source Element whose size needs to be matched.\n * @return {?}\n */\nfunction matchElementSize(target, source) {\n    /** @type {?} */\n    const sourceRect = source.getBoundingClientRect();\n    target.style.width = `${sourceRect.width}px`;\n    target.style.height = `${sourceRect.height}px`;\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-utils.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Moves an item one index in an array to another.\n * @template T\n * @param {?} array Array in which to move the item.\n * @param {?} fromIndex Starting index of the item.\n * @param {?} toIndex Index to which the item should be moved.\n * @return {?}\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    /** @type {?} */\n    const from = clamp$1(fromIndex, array.length - 1);\n    /** @type {?} */\n    const to = clamp$1(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    /** @type {?} */\n    const target = array[from];\n    /** @type {?} */\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @template T\n * @param {?} currentArray Array from which to transfer the item.\n * @param {?} targetArray Array into which to put the item.\n * @param {?} currentIndex Index of the item in its current array.\n * @param {?} targetIndex Index at which to insert the item.\n * @return {?}\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    /** @type {?} */\n    const from = clamp$1(currentIndex, currentArray.length - 1);\n    /** @type {?} */\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @template T\n * @param {?} currentArray Array from which to copy the item.\n * @param {?} targetArray Array into which is copy the item.\n * @param {?} currentIndex Index of the item in its current array.\n * @param {?} targetIndex Index at which to insert the item.\n *\n * @return {?}\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    /** @type {?} */\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/**\n * Clamps a number between zero and a maximum.\n * @param {?} value\n * @param {?} max\n * @return {?}\n */\nfunction clamp$1(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drop-list-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n * @type {?}\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n * @type {?}\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Number of pixels to scroll for each frame when auto-scrolling an element.\n * The value comes from trying it out manually until it feels right.\n * @type {?}\n */\nconst AUTO_SCROLL_STEP = 2;\n/**\n * Entry in the position cache for draggable items.\n * \\@docs-private\n * @record\n */\nfunction CachedItemPosition() { }\nif (false) {\n    /**\n     * Instance of the drag item.\n     * @type {?}\n     */\n    CachedItemPosition.prototype.drag;\n    /**\n     * Dimensions of the item.\n     * @type {?}\n     */\n    CachedItemPosition.prototype.clientRect;\n    /**\n     * Amount by which the item has been moved since dragging started.\n     * @type {?}\n     */\n    CachedItemPosition.prototype.offset;\n}\n/**\n * Object holding the scroll position of something.\n * @record\n */\nfunction ScrollPosition() { }\nif (false) {\n    /** @type {?} */\n    ScrollPosition.prototype.top;\n    /** @type {?} */\n    ScrollPosition.prototype.left;\n}\n/** @enum {number} */\nconst AutoScrollVerticalDirection = {\n    NONE: 0, UP: 1, DOWN: 2,\n};\n/** @enum {number} */\nconst AutoScrollHorizontalDirection = {\n    NONE: 0, LEFT: 1, RIGHT: 2,\n};\n/**\n * Internal compile-time-only representation of a `DropListRef`.\n * Used to avoid circular import issues between the `DropListRef` and the `DragRef`.\n * \\@docs-private\n * @record\n */\nfunction DropListRefInternal() { }\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n * @template T\n */\nclass DropListRef {\n    /**\n     * @param {?} element\n     * @param {?} _dragDropRegistry\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     */\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /**\n         * Whether starting a dragging sequence from this container is disabled.\n         */\n        this.disabled = false;\n        /**\n         * Whether sorting items within the list is disabled.\n         */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = (/**\n         * @return {?}\n         */\n        () => true);\n        /**\n         * Emits right before dragging has started.\n         */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /**\n         * Emits when the user drops an item inside the container.\n         */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is swapping items while actively dragging.\n         */\n        this.sorted = new Subject();\n        /**\n         * Whether an item in the list is being dragged.\n         */\n        this._isDragging = false;\n        /**\n         * Cache of the dimensions of all the items inside the container.\n         */\n        this._itemPositions = [];\n        /**\n         * Cached positions of the scrollable parent elements.\n         */\n        this._parentPositions = new Map();\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as\n         * well as what direction the pointer was moving in when the swap occured.\n         */\n        this._previousSwap = { drag: (/** @type {?} */ (null)), delta: 0 };\n        /**\n         * Drop lists that are connected to the current one.\n         */\n        this._siblings = [];\n        /**\n         * Direction in which the list is oriented.\n         */\n        this._orientation = 'vertical';\n        /**\n         * Connected siblings that currently have a dragged item.\n         */\n        this._activeSiblings = new Set();\n        /**\n         * Layout direction of the drop list.\n         */\n        this._direction = 'ltr';\n        /**\n         * Subscription to the window being scrolled.\n         */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /**\n         * Vertical direction in which the list is currently scrolling.\n         */\n        this._verticalScrollDirection = 0 /* NONE */;\n        /**\n         * Horizontal direction in which the list is currently scrolling.\n         */\n        this._horizontalScrollDirection = 0 /* NONE */;\n        /**\n         * Used to signal to the current auto-scroll sequence when to stop.\n         */\n        this._stopScrollTimers = new Subject();\n        /**\n         * Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly.\n         */\n        this._cachedShadowRoot = null;\n        /**\n         * Starts the interval that'll auto-scroll the element.\n         */\n        this._startScrollInterval = (/**\n         * @return {?}\n         */\n        () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const node = this._scrollNode;\n                if (this._verticalScrollDirection === 1 /* UP */) {\n                    incrementVerticalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._verticalScrollDirection === 2 /* DOWN */) {\n                    incrementVerticalScroll(node, AUTO_SCROLL_STEP);\n                }\n                if (this._horizontalScrollDirection === 1 /* LEFT */) {\n                    incrementHorizontalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._horizontalScrollDirection === 2 /* RIGHT */) {\n                    incrementHorizontalScroll(node, AUTO_SCROLL_STEP);\n                }\n            }));\n        });\n        this.element = coerceElement(element);\n        this._document = _document;\n        this.withScrollableParents([this.element]);\n        _dragDropRegistry.registerDropContainer(this);\n    }\n    /**\n     * Removes the drop list functionality from the DOM element.\n     * @return {?}\n     */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._viewportScrollSubscription.unsubscribe();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = (/** @type {?} */ (null));\n        this._parentPositions.clear();\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /**\n     * Whether an item from this list is currently being dragged.\n     * @return {?}\n     */\n    isDragging() {\n        return this._isDragging;\n    }\n    /**\n     * Starts dragging an item.\n     * @return {?}\n     */\n    start() {\n        /** @type {?} */\n        const styles = coerceElement(this.element).style;\n        this.beforeStarted.next();\n        this._isDragging = true;\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n        // scrolling. The browser seems to round the value based on the snapping points which means\n        // that we can't increment/decrement the scroll position.\n        this._initialScrollSnap = styles.msScrollSnapType || ((/** @type {?} */ (styles))).scrollSnapType || '';\n        ((/** @type {?} */ (styles))).scrollSnapType = styles.msScrollSnapType = 'none';\n        this._cacheItems();\n        this._siblings.forEach((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        sibling => sibling._startReceiving(this)));\n        this._viewportScrollSubscription.unsubscribe();\n        this._listenToScrollEvents();\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param {?} item Item that was moved into the container.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @param {?=} index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     * @return {?}\n     */\n    enter(item, pointerX, pointerY, index) {\n        this.start();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        /** @type {?} */\n        let newIndex;\n        if (index == null) {\n            newIndex = this.sortingDisabled ? this._draggables.indexOf(item) : -1;\n            if (newIndex === -1) {\n                // We use the coordinates of where the item entered the drop\n                // zone to figure out at which index it should be inserted.\n                newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n            }\n        }\n        else {\n            newIndex = index;\n        }\n        /** @type {?} */\n        const activeDraggables = this._activeDraggables;\n        /** @type {?} */\n        const currentIndex = activeDraggables.indexOf(item);\n        /** @type {?} */\n        const placeholder = item.getPlaceholderElement();\n        /** @type {?} */\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            /** @type {?} */\n            const element = newPositionReference.getRootElement();\n            (/** @type {?} */ (element.parentElement)).insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else {\n            coerceElement(this.element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that the positions were already cached when we called `start` above,\n        // but we need to refresh them since the amount of items has changed.\n        this._cacheItemPositions();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param {?} item Item that was dragged out.\n     * @return {?}\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * \\@breaking-change 11.0.0 `previousIndex` parameter to become required.\n     * @param {?} item Item being dropped into the container.\n     * @param {?} currentIndex Index at which the item should be inserted.\n     * @param {?} previousContainer Container from which the item got dragged in.\n     * @param {?} isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param {?} distance Distance the user has dragged since the start of the dragging sequence.\n     * @param {?=} previousIndex Index of the item when dragging started.\n     *\n     * @return {?}\n     */\n    drop(item, currentIndex, previousContainer, isPointerOverContainer, distance, previousIndex) {\n        this._reset();\n        // @breaking-change 11.0.0 Remove this fallback logic once `previousIndex` is a required param.\n        if (previousIndex == null) {\n            previousIndex = previousContainer.getItemIndex(item);\n        }\n        this.dropped.next({ item,\n            currentIndex,\n            previousIndex,\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} items Items that are a part of this list.\n     * @return {THIS}\n     */\n    withItems(items) {\n        (/** @type {?} */ (this))._draggables = items;\n        items.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => item._withDropContainer((/** @type {?} */ (this)))));\n        if ((/** @type {?} */ (this)).isDragging()) {\n            (/** @type {?} */ (this))._cacheItems();\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the layout direction of the drop list.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction\n     * @return {THIS}\n     */\n    withDirection(direction) {\n        (/** @type {?} */ (this))._direction = direction;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} connectedTo Other containers that the current containers should be connected to.\n     * @return {THIS}\n     */\n    connectedTo(connectedTo) {\n        (/** @type {?} */ (this))._siblings = connectedTo.slice();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the orientation of the container.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} orientation New orientation for the container.\n     * @return {THIS}\n     */\n    withOrientation(orientation) {\n        (/** @type {?} */ (this))._orientation = orientation;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets which parent elements are can be scrolled while the user is dragging.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} elements Elements that can be scrolled.\n     * @return {THIS}\n     */\n    withScrollableParents(elements) {\n        /** @type {?} */\n        const element = coerceElement((/** @type {?} */ (this)).element);\n        // We always allow the current element to be scrollable\n        // so we need to ensure that it's in the array.\n        (/** @type {?} */ (this))._scrollableElements =\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param {?} item Item whose index should be determined.\n     * @return {?}\n     */\n    getItemIndex(item) {\n        if (!this._isDragging) {\n            return this._draggables.indexOf(item);\n        }\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        /** @type {?} */\n        const items = this._orientation === 'horizontal' && this._direction === 'rtl' ?\n            this._itemPositions.slice().reverse() : this._itemPositions;\n        return findIndex(items, (/**\n         * @param {?} currentItem\n         * @return {?}\n         */\n        currentItem => currentItem.drag === item));\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     * @return {?}\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param {?} item Item to be sorted.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @param {?} pointerDelta Direction in which the pointer is moving along each axis.\n     * @return {?}\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled || !isPointerNearClientRect(this._clientRect, pointerX, pointerY)) {\n            return;\n        }\n        /** @type {?} */\n        const siblings = this._itemPositions;\n        /** @type {?} */\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return;\n        }\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        const currentIndex = findIndex(siblings, (/**\n         * @param {?} currentItem\n         * @return {?}\n         */\n        currentItem => currentItem.drag === item));\n        /** @type {?} */\n        const siblingAtNewPosition = siblings[newIndex];\n        /** @type {?} */\n        const currentPosition = siblings[currentIndex].clientRect;\n        /** @type {?} */\n        const newPosition = siblingAtNewPosition.clientRect;\n        /** @type {?} */\n        const delta = currentIndex > newIndex ? 1 : -1;\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n        // How many pixels the item's placeholder should be offset.\n        /** @type {?} */\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        /** @type {?} */\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        /** @type {?} */\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        this.sorted.next({\n            previousIndex: currentIndex,\n            currentIndex: newIndex,\n            container: this,\n            item\n        });\n        siblings.forEach((/**\n         * @param {?} sibling\n         * @param {?} index\n         * @return {?}\n         */\n        (sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            /** @type {?} */\n            const isDraggedItem = sibling.drag === item;\n            /** @type {?} */\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            /** @type {?} */\n            const elementToOffset = isDraggedItem ? item.getPlaceholderElement() :\n                sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = `translate3d(${Math.round(sibling.offset)}px, 0, 0)`;\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = `translate3d(0, ${Math.round(sibling.offset)}px, 0)`;\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        }));\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param {?} pointerX User's pointer position along the x axis.\n     * @param {?} pointerY User's pointer position along the y axis.\n     * @return {?}\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        /** @type {?} */\n        let scrollNode;\n        /** @type {?} */\n        let verticalScrollDirection = 0 /* NONE */;\n        /** @type {?} */\n        let horizontalScrollDirection = 0 /* NONE */;\n        // Check whether we should start scrolling any of the parent containers.\n        this._parentPositions.forEach((/**\n         * @param {?} position\n         * @param {?} element\n         * @return {?}\n         */\n        (position, element) => {\n            // We have special handling for the `document` below. Also this would be\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\n            if (element === this._document || !position.clientRect || scrollNode) {\n                return;\n            }\n            if (isPointerNearClientRect(position.clientRect, pointerX, pointerY)) {\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections((/** @type {?} */ (element)), position.clientRect, pointerX, pointerY);\n                if (verticalScrollDirection || horizontalScrollDirection) {\n                    scrollNode = (/** @type {?} */ (element));\n                }\n            }\n        }));\n        // Otherwise check if we can start scrolling the viewport.\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            /** @type {?} */\n            const clientRect = { width, height, top: 0, right: width, bottom: height, left: 0 };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection ||\n            horizontalScrollDirection !== this._horizontalScrollDirection ||\n            scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /**\n     * Stops any currently-running auto-scroll sequences.\n     * @return {?}\n     */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /**\n     * Caches the positions of the configured scrollable parents.\n     * @private\n     * @return {?}\n     */\n    _cacheParentPositions() {\n        this._parentPositions.clear();\n        this._parentPositions.set(this._document, {\n            scrollPosition: (/** @type {?} */ (this._viewportRuler)).getViewportScrollPosition(),\n        });\n        this._scrollableElements.forEach((/**\n         * @param {?} element\n         * @return {?}\n         */\n        element => {\n            /** @type {?} */\n            const clientRect = getMutableClientRect(element);\n            // We keep the ClientRect cached in two properties, because it's referenced in a lot of\n            // performance-sensitive places and we want to avoid the extra lookups. The `element` is\n            // guaranteed to always be in the `_scrollableElements` so this should always match.\n            if (element === this.element) {\n                this._clientRect = clientRect;\n            }\n            this._parentPositions.set(element, {\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\n                clientRect\n            });\n        }));\n    }\n    /**\n     * Refreshes the position cache of the items and sibling containers.\n     * @private\n     * @return {?}\n     */\n    _cacheItemPositions() {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables.map((/**\n         * @param {?} drag\n         * @return {?}\n         */\n        drag => {\n            /** @type {?} */\n            const elementToMeasure = drag.getVisibleElement();\n            return { drag, offset: 0, clientRect: getMutableClientRect(elementToMeasure) };\n        })).sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => {\n            return isHorizontal ? a.clientRect.left - b.clientRect.left :\n                a.clientRect.top - b.clientRect.top;\n        }));\n    }\n    /**\n     * Resets the container to its initial state.\n     * @private\n     * @return {?}\n     */\n    _reset() {\n        this._isDragging = false;\n        /** @type {?} */\n        const styles = coerceElement(this.element).style;\n        ((/** @type {?} */ (styles))).scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => item.getRootElement().style.transform = ''));\n        this._siblings.forEach((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        sibling => sibling._stopReceiving(this)));\n        this._activeDraggables = [];\n        this._itemPositions = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._stopScrolling();\n        this._viewportScrollSubscription.unsubscribe();\n        this._parentPositions.clear();\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @private\n     * @param {?} currentIndex Index of the item currently being dragged.\n     * @param {?} siblings All of the items in the list.\n     * @param {?} delta Direction in which the user is moving.\n     * @return {?}\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        const currentPosition = siblings[currentIndex].clientRect;\n        /** @type {?} */\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        /** @type {?} */\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            /** @type {?} */\n            const start = isHorizontal ? 'left' : 'top';\n            /** @type {?} */\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @private\n     * @param {?} currentPosition Current position of the item.\n     * @param {?} newPosition Position of the item where the current item should be moved.\n     * @param {?} delta Direction in which the user is moving.\n     * @return {?}\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        let itemOffset = isHorizontal ? newPosition.left - currentPosition.left :\n            newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal ? newPosition.width - currentPosition.width :\n                newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @private\n     * @param {?} item Item that is being sorted.\n     * @param {?} pointerX Position of the user's pointer along the X axis.\n     * @param {?} pointerY Position of the user's pointer along the Y axis.\n     * @param {?=} delta Direction in which the user is moving their pointer.\n     * @return {?}\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        return findIndex(this._itemPositions, (/**\n         * @param {?} __0\n         * @param {?} _\n         * @param {?} array\n         * @return {?}\n         */\n        ({ drag, clientRect }, _, array) => {\n            if (drag === item) {\n                // If there's only one item left in the container, it must be\n                // the dragged item itself so we use it as a reference.\n                return array.length < 2;\n            }\n            if (delta) {\n                /** @type {?} */\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, and they didn't change\n                // the direction in which they're dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag && direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal ?\n                // Round these down since most browsers report client rects with\n                // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                pointerX >= Math.floor(clientRect.left) && pointerX <= Math.floor(clientRect.right) :\n                pointerY >= Math.floor(clientRect.top) && pointerY <= Math.floor(clientRect.bottom);\n        }));\n    }\n    /**\n     * Caches the current items in the list and their positions.\n     * @private\n     * @return {?}\n     */\n    _cacheItems() {\n        this._activeDraggables = this._draggables.slice();\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n    }\n    /**\n     * Updates the internal state of the container after a scroll event has happened.\n     * @private\n     * @param {?} scrolledParent Element that was scrolled.\n     * @param {?} newTop New top scroll position.\n     * @param {?} newLeft New left scroll position.\n     * @return {?}\n     */\n    _updateAfterScroll(scrolledParent, newTop, newLeft) {\n        // Used when figuring out whether an element is inside the scroll parent. If the scrolled\n        // parent is the `document`, we use the `documentElement`, because IE doesn't support `contains`\n        // on the `document`.\n        /** @type {?} */\n        const scrolledParentNode = scrolledParent === this._document ? scrolledParent.documentElement : scrolledParent;\n        /** @type {?} */\n        const scrollPosition = (/** @type {?} */ (this._parentPositions.get(scrolledParent))).scrollPosition;\n        /** @type {?} */\n        const topDifference = scrollPosition.top - newTop;\n        /** @type {?} */\n        const leftDifference = scrollPosition.left - newLeft;\n        // Go through and update the cached positions of the scroll\n        // parents that are inside the element that was scrolled.\n        this._parentPositions.forEach((/**\n         * @param {?} position\n         * @param {?} node\n         * @return {?}\n         */\n        (position, node) => {\n            if (position.clientRect && scrolledParent !== node && scrolledParentNode.contains(node)) {\n                adjustClientRect(position.clientRect, topDifference, leftDifference);\n            }\n        }));\n        // Since we know the amount that the user has scrolled we can shift all of the client rectangles\n        // ourselves. This is cheaper than re-measuring everything and we can avoid inconsistent\n        // behavior where we might be measuring the element before its position has changed.\n        this._itemPositions.forEach((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ clientRect }) => {\n            adjustClientRect(clientRect, topDifference, leftDifference);\n        }));\n        // We need two loops for this, because we want all of the cached\n        // positions to be up-to-date before we re-sort the item.\n        this._itemPositions.forEach((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ drag }) => {\n            if (this._dragDropRegistry.isDragging(drag)) {\n                // We need to re-sort the item manually, because the pointer move\n                // events won't be dispatched while the user is scrolling.\n                drag._sortFromLastPointerPosition();\n            }\n        }));\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param {?} x Pointer position along the X axis.\n     * @param {?} y Pointer position along the Y axis.\n     * @return {?}\n     */\n    _isOverContainer(x, y) {\n        return isInsideClientRect(this._clientRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param {?} item Drag item that is being moved.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        sibling => sibling._canReceive(item, x, y)));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param {?} item Item that is being dragged into the list.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    _canReceive(item, x, y) {\n        if (!isInsideClientRect(this._clientRect, x, y) || !this.enterPredicate(item, this)) {\n            return false;\n        }\n        /** @type {?} */\n        const elementFromPoint = (/** @type {?} */ (this._getShadowRoot().elementFromPoint(x, y)));\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        /** @type {?} */\n        const nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param {?} sibling Sibling in which dragging has started.\n     * @return {?}\n     */\n    _startReceiving(sibling) {\n        /** @type {?} */\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling)) {\n            activeSiblings.add(sibling);\n            this._cacheParentPositions();\n            this._listenToScrollEvents();\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param {?} sibling Sibling whose dragging has stopped.\n     * @return {?}\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     * @private\n     * @return {?}\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollSubscription = this._dragDropRegistry.scroll.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (this.isDragging()) {\n                /** @type {?} */\n                const target = (/** @type {?} */ (event.target));\n                /** @type {?} */\n                const position = this._parentPositions.get(target);\n                if (position) {\n                    /** @type {?} */\n                    let newTop;\n                    /** @type {?} */\n                    let newLeft;\n                    if (target === this._document) {\n                        /** @type {?} */\n                        const scrollPosition = (/** @type {?} */ (this._viewportRuler)).getViewportScrollPosition();\n                        newTop = scrollPosition.top;\n                        newLeft = scrollPosition.left;\n                    }\n                    else {\n                        newTop = ((/** @type {?} */ (target))).scrollTop;\n                        newLeft = ((/** @type {?} */ (target))).scrollLeft;\n                    }\n                    this._updateAfterScroll(target, newTop, newLeft);\n                }\n            }\n            else if (this.isReceiving()) {\n                this._cacheParentPositions();\n            }\n        }));\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     * @private\n     * @return {?}\n     */\n    _getShadowRoot() {\n        if (!this._cachedShadowRoot) {\n            /** @type {?} */\n            const shadowRoot = (/** @type {?} */ (_getShadowRoot(coerceElement(this.element))));\n            this._cachedShadowRoot = shadowRoot || this._document;\n        }\n        return this._cachedShadowRoot;\n    }\n}\nif (false) {\n    /**\n     * Element that the drop list is attached to.\n     * @type {?}\n     */\n    DropListRef.prototype.element;\n    /**\n     * Whether starting a dragging sequence from this container is disabled.\n     * @type {?}\n     */\n    DropListRef.prototype.disabled;\n    /**\n     * Whether sorting items within the list is disabled.\n     * @type {?}\n     */\n    DropListRef.prototype.sortingDisabled;\n    /**\n     * Locks the position of the draggable elements inside the container along the specified axis.\n     * @type {?}\n     */\n    DropListRef.prototype.lockAxis;\n    /**\n     * Whether auto-scrolling the view when the user\n     * moves their pointer close to the edges is disabled.\n     * @type {?}\n     */\n    DropListRef.prototype.autoScrollDisabled;\n    /**\n     * Function that is used to determine whether an item\n     * is allowed to be moved into a drop container.\n     * @type {?}\n     */\n    DropListRef.prototype.enterPredicate;\n    /**\n     * Emits right before dragging has started.\n     * @type {?}\n     */\n    DropListRef.prototype.beforeStarted;\n    /**\n     * Emits when the user has moved a new drag item into this container.\n     * @type {?}\n     */\n    DropListRef.prototype.entered;\n    /**\n     * Emits when the user removes an item from the container\n     * by dragging it into another container.\n     * @type {?}\n     */\n    DropListRef.prototype.exited;\n    /**\n     * Emits when the user drops an item inside the container.\n     * @type {?}\n     */\n    DropListRef.prototype.dropped;\n    /**\n     * Emits as the user is swapping items while actively dragging.\n     * @type {?}\n     */\n    DropListRef.prototype.sorted;\n    /**\n     * Arbitrary data that can be attached to the drop list.\n     * @type {?}\n     */\n    DropListRef.prototype.data;\n    /**\n     * Whether an item in the list is being dragged.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._isDragging;\n    /**\n     * Cache of the dimensions of all the items inside the container.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._itemPositions;\n    /**\n     * Cached positions of the scrollable parent elements.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._parentPositions;\n    /**\n     * Cached `ClientRect` of the drop list.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._clientRect;\n    /**\n     * Draggable items that are currently active inside the container. Includes the items\n     * from `_draggables`, as well as any items that have been dragged in, but haven't\n     * been dropped yet.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._activeDraggables;\n    /**\n     * Keeps track of the item that was last swapped with the dragged item, as\n     * well as what direction the pointer was moving in when the swap occured.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._previousSwap;\n    /**\n     * Draggable items in the container.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._draggables;\n    /**\n     * Drop lists that are connected to the current one.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._siblings;\n    /**\n     * Direction in which the list is oriented.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._orientation;\n    /**\n     * Connected siblings that currently have a dragged item.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._activeSiblings;\n    /**\n     * Layout direction of the drop list.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._direction;\n    /**\n     * Subscription to the window being scrolled.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._viewportScrollSubscription;\n    /**\n     * Vertical direction in which the list is currently scrolling.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._verticalScrollDirection;\n    /**\n     * Horizontal direction in which the list is currently scrolling.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._horizontalScrollDirection;\n    /**\n     * Node that is being auto-scrolled.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._scrollNode;\n    /**\n     * Used to signal to the current auto-scroll sequence when to stop.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._stopScrollTimers;\n    /**\n     * Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._cachedShadowRoot;\n    /**\n     * Reference to the document.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._document;\n    /**\n     * Elements that can be scrolled while the user is dragging.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._scrollableElements;\n    /**\n     * Initial value for the element's `scroll-snap-type` style.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._initialScrollSnap;\n    /**\n     * Starts the interval that'll auto-scroll the element.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._startScrollInterval;\n    /**\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._dragDropRegistry;\n    /**\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._viewportRuler;\n}\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param {?} clientRect `ClientRect` that should be updated.\n * @param {?} top Amount to add to the `top` position.\n * @param {?} left Amount to add to the `left` position.\n * @return {?}\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a ClientRect.\n * @param {?} rect ClientRect to check against.\n * @param {?} pointerX Coordinates along the X axis.\n * @param {?} pointerY Coordinates along the Y axis.\n * @return {?}\n */\nfunction isPointerNearClientRect(rect, pointerX, pointerY) {\n    const { top, right, bottom, left, width, height } = rect;\n    /** @type {?} */\n    const xThreshold = width * DROP_PROXIMITY_THRESHOLD;\n    /** @type {?} */\n    const yThreshold = height * DROP_PROXIMITY_THRESHOLD;\n    return pointerY > top - yThreshold && pointerY < bottom + yThreshold &&\n        pointerX > left - xThreshold && pointerX < right + xThreshold;\n}\n/**\n * Finds the index of an item that matches a predicate function. Used as an equivalent\n * of `Array.prototype.findIndex` which isn't part of the standard Google typings.\n * @template T\n * @param {?} array Array in which to look for matches.\n * @param {?} predicate Function used to determine whether an item is a match.\n * @return {?}\n */\nfunction findIndex(array, predicate) {\n    for (let i = 0; i < array.length; i++) {\n        if (predicate(array[i], i, array)) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param {?} clientRect ClientRect that is being checked.\n * @param {?} x Coordinates along the X axis.\n * @param {?} y Coordinates along the Y axis.\n * @return {?}\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Gets a mutable version of an element's bounding `ClientRect`.\n * @param {?} element\n * @return {?}\n */\nfunction getMutableClientRect(element) {\n    /** @type {?} */\n    const clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height\n    };\n}\n/**\n * Increments the vertical scroll position of a node.\n * @param {?} node Node whose scroll position should change.\n * @param {?} amount Amount of pixels that the `node` should be scrolled.\n * @return {?}\n */\nfunction incrementVerticalScroll(node, amount) {\n    if (node === window) {\n        ((/** @type {?} */ (node))).scrollBy(0, amount);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        ((/** @type {?} */ (node))).scrollTop += amount;\n    }\n}\n/**\n * Increments the horizontal scroll position of a node.\n * @param {?} node Node whose scroll position should change.\n * @param {?} amount Amount of pixels that the `node` should be scrolled.\n * @return {?}\n */\nfunction incrementHorizontalScroll(node, amount) {\n    if (node === window) {\n        ((/** @type {?} */ (node))).scrollBy(amount, 0);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        ((/** @type {?} */ (node))).scrollLeft += amount;\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param {?} clientRect Dimensions of the node.\n * @param {?} pointerY Position of the user's pointer along the y axis.\n * @return {?}\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    /** @type {?} */\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* DOWN */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param {?} clientRect Dimensions of the node.\n * @param {?} pointerX Position of the user's pointer along the x axis.\n * @return {?}\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    /** @type {?} */\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* RIGHT */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param {?} element Element for which we should calculate the scroll direction.\n * @param {?} clientRect Bounding client rectangle of the element.\n * @param {?} pointerX Position of the user's pointer along the x axis.\n * @param {?} pointerY Position of the user's pointer along the y axis.\n * @return {?}\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    /** @type {?} */\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    /** @type {?} */\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    /** @type {?} */\n    let verticalScrollDirection = 0 /* NONE */;\n    /** @type {?} */\n    let horizontalScrollDirection = 0 /* NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        /** @type {?} */\n        const scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        /** @type {?} */\n        const scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-drop-registry.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Event options that can be used to bind an active, capturing event.\n * @type {?}\n */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * \\@docs-private\n * @template I, C\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _document\n     */\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        /**\n         * Registered drop container instances.\n         */\n        this._dropInstances = new Set();\n        /**\n         * Registered drag item instances.\n         */\n        this._dragInstances = new Set();\n        /**\n         * Drag item instances that are currently being dragged.\n         */\n        this._activeDragInstances = new Set();\n        /**\n         * Keeps track of the event listeners that we've bound to the `document`.\n         */\n        this._globalListeners = new Map();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /**\n         * Emits when the viewport has been scrolled while the user is dragging an item.\n         */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this._activeDragInstances.size) {\n                event.preventDefault();\n            }\n        });\n        this._document = _document;\n    }\n    /**\n     * Adds a drop container to the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            this._dropInstances.add(drop);\n        }\n    }\n    /**\n     * Adds a drag item instance to the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._preventDefaultWhileDragging, activeCapturingEventOptions);\n            }));\n        }\n    }\n    /**\n     * Removes a drop container from the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /**\n     * Removes a drag item instance from the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._preventDefaultWhileDragging, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param {?} drag Drag instance which is being dragged.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.has(drag)) {\n            return;\n        }\n        this._activeDragInstances.add(drag);\n        if (this._activeDragInstances.size === 1) {\n            /** @type {?} */\n            const isTouchEvent = event.type.startsWith('touch');\n            /** @type {?} */\n            const moveEvent = isTouchEvent ? 'touchmove' : 'mousemove';\n            /** @type {?} */\n            const upEvent = isTouchEvent ? 'touchend' : 'mouseup';\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(moveEvent, {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => this.pointerMove.next((/** @type {?} */ (e)))),\n                options: activeCapturingEventOptions\n            })\n                .set(upEvent, {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => this.pointerUp.next((/** @type {?} */ (e)))),\n                options: true\n            })\n                .set('scroll', {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => this.scroll.next(e)),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions\n            });\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                this._globalListeners.forEach((/**\n                 * @param {?} config\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                }));\n            }));\n        }\n    }\n    /**\n     * Stops dragging a drag item instance.\n     * @param {?} drag\n     * @return {?}\n     */\n    stopDragging(drag) {\n        this._activeDragInstances.delete(drag);\n        if (this._activeDragInstances.size === 0) {\n            this._clearGlobalListeners();\n        }\n    }\n    /**\n     * Gets whether a drag item instance is currently being dragged.\n     * @param {?} drag\n     * @return {?}\n     */\n    isDragging(drag) {\n        return this._activeDragInstances.has(drag);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._dragInstances.forEach((/**\n         * @param {?} instance\n         * @return {?}\n         */\n        instance => this.removeDragItem(instance)));\n        this._dropInstances.forEach((/**\n         * @param {?} instance\n         * @return {?}\n         */\n        instance => this.removeDropContainer(instance)));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /**\n     * Clears out the global event listeners from the `document`.\n     * @private\n     * @return {?}\n     */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((/**\n         * @param {?} config\n         * @param {?} name\n         * @return {?}\n         */\n        (config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        }));\n        this._globalListeners.clear();\n    }\n}\nDragDropRegistry.ɵfac = function DragDropRegistry_Factory(t) { return new (t || DragDropRegistry)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nDragDropRegistry.ctorParameters = () => [\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ DragDropRegistry.ɵprov = ɵɵdefineInjectable({ factory: function DragDropRegistry_Factory() { return new DragDropRegistry(ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: DragDropRegistry, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDropRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._document;\n    /**\n     * Registered drop container instances.\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._dropInstances;\n    /**\n     * Registered drag item instances.\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._dragInstances;\n    /**\n     * Drag item instances that are currently being dragged.\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._activeDragInstances;\n    /**\n     * Keeps track of the event listeners that we've bound to the `document`.\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._globalListeners;\n    /**\n     * Emits the `touchmove` or `mousemove` events that are dispatched\n     * while the user is dragging a drag item instance.\n     * @type {?}\n     */\n    DragDropRegistry.prototype.pointerMove;\n    /**\n     * Emits the `touchend` or `mouseup` events that are dispatched\n     * while the user is dragging a drag item instance.\n     * @type {?}\n     */\n    DragDropRegistry.prototype.pointerUp;\n    /**\n     * Emits when the viewport has been scrolled while the user is dragging an item.\n     * @type {?}\n     */\n    DragDropRegistry.prototype.scroll;\n    /**\n     * Event listener that will prevent the default browser action while the user is dragging.\n     * \\@param event Event whose default action should be prevented.\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._preventDefaultWhileDragging;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-drop.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default configuration to be used when creating a `DragRef`.\n * @type {?}\n */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    /**\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?} _dragDropRegistry\n     */\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @template T\n     * @param {?} element Element to which to attach the dragging functionality.\n     * @param {?=} config Object used to configure the dragging behavior.\n     * @return {?}\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @template T\n     * @param {?} element Element to which to attach the drop list functionality.\n     * @return {?}\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n}\nDragDrop.ɵfac = function DragDrop_Factory(t) { return new (t || DragDrop)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DragDropRegistry)); };\n/** @nocollapse */\nDragDrop.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewportRuler },\n    { type: DragDropRegistry }\n];\n/** @nocollapse */ DragDrop.ɵprov = ɵɵdefineInjectable({ factory: function DragDrop_Factory() { return new DragDrop(ɵɵinject(DOCUMENT), ɵɵinject(NgZone), ɵɵinject(ViewportRuler), ɵɵinject(DragDropRegistry)); }, token: DragDrop, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDrop, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.ViewportRuler }, { type: DragDropRegistry }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDrop.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDrop.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDrop.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDrop.prototype._dragDropRegistry;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-events.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Event emitted when the user starts dragging a draggable.\n * @record\n * @template T\n */\nfunction CdkDragStart() { }\nif (false) {\n    /**\n     * Draggable that emitted the event.\n     * @type {?}\n     */\n    CdkDragStart.prototype.source;\n}\n/**\n * Event emitted when the user releases an item, before any animations have started.\n * @record\n * @template T\n */\nfunction CdkDragRelease() { }\nif (false) {\n    /**\n     * Draggable that emitted the event.\n     * @type {?}\n     */\n    CdkDragRelease.prototype.source;\n}\n/**\n * Event emitted when the user stops dragging a draggable.\n * @record\n * @template T\n */\nfunction CdkDragEnd() { }\nif (false) {\n    /**\n     * Draggable that emitted the event.\n     * @type {?}\n     */\n    CdkDragEnd.prototype.source;\n    /**\n     * Distance in pixels that the user has dragged since the drag sequence started.\n     * @type {?}\n     */\n    CdkDragEnd.prototype.distance;\n}\n/**\n * Event emitted when the user moves an item into a new drop container.\n * @record\n * @template T, I\n */\nfunction CdkDragEnter() { }\nif (false) {\n    /**\n     * Container into which the user has moved the item.\n     * @type {?}\n     */\n    CdkDragEnter.prototype.container;\n    /**\n     * Item that was moved into the container.\n     * @type {?}\n     */\n    CdkDragEnter.prototype.item;\n    /**\n     * Index at which the item has entered the container.\n     * @type {?}\n     */\n    CdkDragEnter.prototype.currentIndex;\n}\n/**\n * Event emitted when the user removes an item from a\n * drop container by moving it into another one.\n * @record\n * @template T, I\n */\nfunction CdkDragExit() { }\nif (false) {\n    /**\n     * Container from which the user has a removed an item.\n     * @type {?}\n     */\n    CdkDragExit.prototype.container;\n    /**\n     * Item that was removed from the container.\n     * @type {?}\n     */\n    CdkDragExit.prototype.item;\n}\n/**\n * Event emitted when the user drops a draggable item inside a drop container.\n * @record\n * @template T, O\n */\nfunction CdkDragDrop() { }\nif (false) {\n    /**\n     * Index of the item when it was picked up.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.previousIndex;\n    /**\n     * Current index of the item.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.currentIndex;\n    /**\n     * Item that is being dropped.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.item;\n    /**\n     * Container in which the item was dropped.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.container;\n    /**\n     * Container from which the item was picked up. Can be the same as the `container`.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.previousContainer;\n    /**\n     * Whether the user's pointer was over the container when the item was dropped.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.isPointerOverContainer;\n    /**\n     * Distance in pixels that the user has dragged since the drag sequence started.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.distance;\n}\n/**\n * Event emitted as the user is dragging a draggable item.\n * @record\n * @template T\n */\nfunction CdkDragMove() { }\nif (false) {\n    /**\n     * Item that is being dragged.\n     * @type {?}\n     */\n    CdkDragMove.prototype.source;\n    /**\n     * Position of the user's pointer on the page.\n     * @type {?}\n     */\n    CdkDragMove.prototype.pointerPosition;\n    /**\n     * Native event that is causing the dragging.\n     * @type {?}\n     */\n    CdkDragMove.prototype.event;\n    /**\n     * Distance in pixels that the user has dragged since the drag sequence started.\n     * @type {?}\n     */\n    CdkDragMove.prototype.distance;\n    /**\n     * Indicates the direction in which the user is dragging the element along each axis.\n     * `1` means that the position is increasing (e.g. the user is moving to the right or downwards),\n     * whereas `-1` means that it's decreasing (they're moving to the left or upwards). `0` means\n     * that the position hasn't changed.\n     * @type {?}\n     */\n    CdkDragMove.prototype.delta;\n}\n/**\n * Event emitted when the user swaps the position of two drag items.\n * @record\n * @template T, I\n */\nfunction CdkDragSortEvent() { }\nif (false) {\n    /**\n     * Index from which the item was sorted previously.\n     * @type {?}\n     */\n    CdkDragSortEvent.prototype.previousIndex;\n    /**\n     * Index that the item is currently in.\n     * @type {?}\n     */\n    CdkDragSortEvent.prototype.currentIndex;\n    /**\n     * Container that the item belongs to.\n     * @type {?}\n     */\n    CdkDragSortEvent.prototype.container;\n    /**\n     * Item that is being sorted.\n     * @type {?}\n     */\n    CdkDragSortEvent.prototype.item;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-parent.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drag-handle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Handle that can be used to drag and CdkDrag instance.\n */\nclass CdkDragHandle {\n    /**\n     * @param {?} element\n     * @param {?=} parentDrag\n     */\n    constructor(element, parentDrag) {\n        this.element = element;\n        /**\n         * Emits when the state of the handle has changed.\n         */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        this._parentDrag = parentDrag;\n        toggleNativeDragInteractions(element.nativeElement, false);\n    }\n    /**\n     * Whether starting to drag through this handle is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nCdkDragHandle.ɵfac = function CdkDragHandle_Factory(t) { return new (t || CdkDragHandle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_PARENT, 8)); };\nCdkDragHandle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragHandle, selectors: [[\"\", \"cdkDragHandle\", \"\"]], hostAttrs: [1, \"cdk-drag-handle\"], inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\"] } });\n/** @nocollapse */\nCdkDragHandle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DRAG_PARENT,] }, { type: Optional }] }\n];\nCdkDragHandle.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDragHandleDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragHandle, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDragHandle]',\n                host: {\n                    'class': 'cdk-drag-handle'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DRAG_PARENT]\n            }, {\n                type: Optional\n            }] }]; }, { disabled: [{\n            type: Input,\n            args: ['cdkDragHandleDisabled']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkDragHandle.ngAcceptInputType_disabled;\n    /**\n     * Closest parent draggable instance.\n     * @type {?}\n     */\n    CdkDragHandle.prototype._parentDrag;\n    /**\n     * Emits when the state of the handle has changed.\n     * @type {?}\n     */\n    CdkDragHandle.prototype._stateChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDragHandle.prototype._disabled;\n    /** @type {?} */\n    CdkDragHandle.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drag-placeholder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n * @template T\n */\nclass CdkDragPlaceholder {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkDragPlaceholder.ɵfac = function CdkDragPlaceholder_Factory(t) { return new (t || CdkDragPlaceholder)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkDragPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragPlaceholder, selectors: [[\"ng-template\", \"cdkDragPlaceholder\", \"\"]], inputs: { data: \"data\" } });\n/** @nocollapse */\nCdkDragPlaceholder.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPlaceholder.propDecorators = {\n    data: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPlaceholder]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { data: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Context data to be added to the placeholder template instance.\n     * @type {?}\n     */\n    CdkDragPlaceholder.prototype.data;\n    /** @type {?} */\n    CdkDragPlaceholder.prototype.templateRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drag-preview.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n * @template T\n */\nclass CdkDragPreview {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._matchSize = false;\n    }\n    /**\n     * Whether the preview should preserve the same size as the item that is being dragged.\n     * @return {?}\n     */\n    get matchSize() { return this._matchSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matchSize(value) { this._matchSize = coerceBooleanProperty(value); }\n}\nCdkDragPreview.ɵfac = function CdkDragPreview_Factory(t) { return new (t || CdkDragPreview)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkDragPreview.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragPreview, selectors: [[\"ng-template\", \"cdkDragPreview\", \"\"]], inputs: { matchSize: \"matchSize\", data: \"data\" } });\n/** @nocollapse */\nCdkDragPreview.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPreview.propDecorators = {\n    data: [{ type: Input }],\n    matchSize: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragPreview, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPreview]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { matchSize: [{\n            type: Input\n        }], data: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkDragPreview.ngAcceptInputType_matchSize;\n    /**\n     * Context data to be added to the preview template instance.\n     * @type {?}\n     */\n    CdkDragPreview.prototype.data;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDragPreview.prototype._matchSize;\n    /** @type {?} */\n    CdkDragPreview.prototype.templateRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n * @type {?}\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n/**\n * Object that can be used to configure the drag\n * items and drop lists within a module or a component.\n * @record\n */\nfunction DragDropConfig() { }\nif (false) {\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.lockAxis;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.dragStartDelay;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.constrainPosition;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.previewClass;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.boundaryElement;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.rootElementSelector;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.draggingDisabled;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.sortingDisabled;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.listAutoScrollDisabled;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.listOrientation;\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @return {?}\n */\nfunction CDK_DRAG_CONFIG_FACTORY() {\n    return { dragStartThreshold: 5, pointerDirectionChangeThreshold: 5 };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drag.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that is used to provide a CdkDropList instance to CdkDrag.\n * Used for avoiding circular imports.\n * @type {?}\n */\nconst CDK_DROP_LIST = new InjectionToken('CDK_DROP_LIST');\n/**\n * Element that can be moved inside a CdkDropList container.\n * @template T\n */\nclass CdkDrag {\n    /**\n     * @param {?} element\n     * @param {?} dropContainer\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewContainerRef\n     * @param {?} config\n     * @param {?} _dir\n     * @param {?} dragDrop\n     * @param {?} _changeDetectorRef\n     */\n    constructor(element, dropContainer, _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._destroyed = new Subject();\n        /**\n         * Emits when the user starts dragging the item.\n         */\n        this.started = new EventEmitter();\n        /**\n         * Emits when the user has released a drag item, before any animations have started.\n         */\n        this.released = new EventEmitter();\n        /**\n         * Emits when the user stops dragging an item in the container.\n         */\n        this.ended = new EventEmitter();\n        /**\n         * Emits when the user has moved the item into a new container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes the item its container by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /**\n         * Emits when the user drops the item inside a container.\n         */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const subscription = this._dragRef.moved.pipe(map((/**\n             * @param {?} movedEvent\n             * @return {?}\n             */\n            movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance\n            })))).subscribe(observer);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n            });\n        }));\n        this._dragRef = dragDrop.createDrag(element, {\n            dragStartThreshold: config && config.dragStartThreshold != null ?\n                config.dragStartThreshold : 5,\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null ?\n                config.pointerDirectionChangeThreshold : 5\n        });\n        this._dragRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n        // where there are no items on the first change detection pass, but the items get picked up as\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n        // is too late since the two modes save different kinds of information. We work around it by\n        // assigning the drop container both from here and the list.\n        if (dropContainer) {\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\n            dropContainer.addItem(this);\n        }\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /**\n     * Whether starting to drag this element is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._dragRef.disabled = this._disabled;\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     * @return {?}\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /**\n     * Returns the root draggable element.\n     * @return {?}\n     */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /**\n     * Resets a standalone drag item to its initial position.\n     * @return {?}\n     */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     * @return {?}\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // We need to wait for the zone to stabilize, in order for the reference\n        // element to be in the proper place in the DOM. This is mostly relevant\n        // for draggable elements inside portals since they get stamped out in\n        // their original DOM position and then they get transferred to the portal.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._updateRootElement();\n            // Listen for any newly-added handles.\n            this._handles.changes.pipe(startWith(this._handles), \n            // Sync the new handles with the DragRef.\n            tap((/**\n             * @param {?} handles\n             * @return {?}\n             */\n            (handles) => {\n                /** @type {?} */\n                const childHandleElements = handles\n                    .filter((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                handle => handle._parentDrag === this))\n                    .map((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                handle => handle.element));\n                this._dragRef.withHandles(childHandleElements);\n            })), \n            // Listen if the state of any of the handles changes.\n            switchMap((/**\n             * @param {?} handles\n             * @return {?}\n             */\n            (handles) => {\n                return (/** @type {?} */ (merge(...handles.map((/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                item => {\n                    return item._stateChanges.pipe(startWith(item));\n                })))));\n            })), takeUntil(this._destroyed)).subscribe((/**\n             * @param {?} handleInstance\n             * @return {?}\n             */\n            handleInstance => {\n                // Enabled/disable the handle that changed in the DragRef.\n                /** @type {?} */\n                const dragRef = this._dragRef;\n                /** @type {?} */\n                const handle = handleInstance.element.nativeElement;\n                handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n            }));\n            if (this.freeDragPosition) {\n                this._dragRef.setFreeDragPosition(this.freeDragPosition);\n            }\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const rootSelectorChange = changes['rootElementSelector'];\n        /** @type {?} */\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.dropContainer) {\n            this.dropContainer.removeItem(this);\n        }\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._dragRef.dispose();\n    }\n    /**\n     * Syncs the root element with the `DragRef`.\n     * @private\n     * @return {?}\n     */\n    _updateRootElement() {\n        /** @type {?} */\n        const element = this.element.nativeElement;\n        /** @type {?} */\n        const rootElement = this.rootElementSelector ?\n            getClosestMatchingAncestor(element, this.rootElementSelector) : element;\n        if (rootElement && rootElement.nodeType !== this._document.ELEMENT_NODE) {\n            throw Error(`cdkDrag must be attached to an element node. ` +\n                `Currently attached to \"${rootElement.nodeName}\".`);\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /**\n     * Gets the boundary element, based on the `boundaryElement` value.\n     * @private\n     * @return {?}\n     */\n    _getBoundaryElement() {\n        /** @type {?} */\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return getClosestMatchingAncestor(this.element.nativeElement, boundary);\n        }\n        /** @type {?} */\n        const element = coerceElement(boundary);\n        if (isDevMode() && !element.contains(this.element.nativeElement)) {\n            throw Error('Draggable element is not inside of the node passed into cdkDragBoundary.');\n        }\n        return element;\n    }\n    /**\n     * Syncs the inputs of the CdkDrag with the options of the underlying DragRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (!ref.isDragging()) {\n                /** @type {?} */\n                const dir = this._dir;\n                /** @type {?} */\n                const dragStartDelay = this.dragStartDelay;\n                /** @type {?} */\n                const placeholder = this._placeholderTemplate ? {\n                    template: this._placeholderTemplate.templateRef,\n                    context: this._placeholderTemplate.data,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                /** @type {?} */\n                const preview = this._previewTemplate ? {\n                    template: this._previewTemplate.templateRef,\n                    context: this._previewTemplate.data,\n                    matchSize: this._previewTemplate.matchSize,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay = (typeof dragStartDelay === 'object' && dragStartDelay) ?\n                    dragStartDelay : coerceNumberProperty(dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref.previewClass = this.previewClass;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview);\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        }));\n    }\n    /**\n     * Handles the events from the underlying `DragRef`.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _handleEvents(ref) {\n        ref.started.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.started.emit({ source: this });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.released.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.released.emit({ source: this });\n        }));\n        ref.ended.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.ended.emit({ source: this, distance: event.distance });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.entered.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.entered.emit({\n                container: event.container.data,\n                item: this,\n                currentIndex: event.currentIndex\n            });\n        }));\n        ref.exited.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.exited.emit({\n                container: event.container.data,\n                item: this\n            });\n        }));\n        ref.dropped.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                item: this,\n                distance: event.distance\n            });\n        }));\n    }\n    /**\n     * Assigns the default input values based on a provided config object.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _assignDefaults(config) {\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.dragStartDelay = dragStartDelay || 0;\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n        if (constrainPosition) {\n            this.constrainPosition = constrainPosition;\n        }\n        if (previewClass) {\n            this.previewClass = previewClass;\n        }\n        if (boundaryElement) {\n            this.boundaryElement = boundaryElement;\n        }\n        if (rootElementSelector) {\n            this.rootElementSelector = rootElementSelector;\n        }\n    }\n}\nCdkDrag.ɵfac = function CdkDrag_Factory(t) { return new (t || CdkDrag)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DROP_LIST, 12), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nCdkDrag.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDrag, selectors: [[\"\", \"cdkDrag\", \"\"]], contentQueries: function CdkDrag_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkDragPreview, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkDragPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkDragHandle, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previewTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._handles = _t);\n    } }, hostAttrs: [1, \"cdk-drag\"], hostVars: 4, hostBindings: function CdkDrag_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-drag-disabled\", ctx.disabled)(\"cdk-drag-dragging\", ctx._dragRef.isDragging());\n    } }, inputs: { disabled: [\"cdkDragDisabled\", \"disabled\"], dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"], previewClass: [\"cdkDragPreviewClass\", \"previewClass\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], data: [\"cdkDragData\", \"data\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, exportAs: [\"cdkDrag\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]), ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkDrag.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DROP_LIST,] }, { type: Optional }, { type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: DragDrop },\n    { type: ChangeDetectorRef }\n];\nCdkDrag.propDecorators = {\n    _handles: [{ type: ContentChildren, args: [CdkDragHandle, { descendants: true },] }],\n    _previewTemplate: [{ type: ContentChild, args: [CdkDragPreview,] }],\n    _placeholderTemplate: [{ type: ContentChild, args: [CdkDragPlaceholder,] }],\n    data: [{ type: Input, args: ['cdkDragData',] }],\n    lockAxis: [{ type: Input, args: ['cdkDragLockAxis',] }],\n    rootElementSelector: [{ type: Input, args: ['cdkDragRootElement',] }],\n    boundaryElement: [{ type: Input, args: ['cdkDragBoundary',] }],\n    dragStartDelay: [{ type: Input, args: ['cdkDragStartDelay',] }],\n    freeDragPosition: [{ type: Input, args: ['cdkDragFreeDragPosition',] }],\n    disabled: [{ type: Input, args: ['cdkDragDisabled',] }],\n    constrainPosition: [{ type: Input, args: ['cdkDragConstrainPosition',] }],\n    previewClass: [{ type: Input, args: ['cdkDragPreviewClass',] }],\n    started: [{ type: Output, args: ['cdkDragStarted',] }],\n    released: [{ type: Output, args: ['cdkDragReleased',] }],\n    ended: [{ type: Output, args: ['cdkDragEnded',] }],\n    entered: [{ type: Output, args: ['cdkDragEntered',] }],\n    exited: [{ type: Output, args: ['cdkDragExited',] }],\n    dropped: [{ type: Output, args: ['cdkDragDropped',] }],\n    moved: [{ type: Output, args: ['cdkDragMoved',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDrag, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDrag]',\n                exportAs: 'cdkDrag',\n                host: {\n                    'class': 'cdk-drag',\n                    '[class.cdk-drag-disabled]': 'disabled',\n                    '[class.cdk-drag-dragging]': '_dragRef.isDragging()'\n                },\n                providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DROP_LIST]\n            }, {\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_CONFIG]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: DragDrop }, { type: ɵngcc0.ChangeDetectorRef }]; }, { started: [{\n            type: Output,\n            args: ['cdkDragStarted']\n        }], released: [{\n            type: Output,\n            args: ['cdkDragReleased']\n        }], ended: [{\n            type: Output,\n            args: ['cdkDragEnded']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDragEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDragExited']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDragDropped']\n        }], moved: [{\n            type: Output,\n            args: ['cdkDragMoved']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDragDisabled']\n        }], dragStartDelay: [{\n            type: Input,\n            args: ['cdkDragStartDelay']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDragLockAxis']\n        }], constrainPosition: [{\n            type: Input,\n            args: ['cdkDragConstrainPosition']\n        }], previewClass: [{\n            type: Input,\n            args: ['cdkDragPreviewClass']\n        }], boundaryElement: [{\n            type: Input,\n            args: ['cdkDragBoundary']\n        }], rootElementSelector: [{\n            type: Input,\n            args: ['cdkDragRootElement']\n        }], _handles: [{\n            type: ContentChildren,\n            args: [CdkDragHandle, { descendants: true }]\n        }], _previewTemplate: [{\n            type: ContentChild,\n            args: [CdkDragPreview]\n        }], _placeholderTemplate: [{\n            type: ContentChild,\n            args: [CdkDragPlaceholder]\n        }], data: [{\n            type: Input,\n            args: ['cdkDragData']\n        }], freeDragPosition: [{\n            type: Input,\n            args: ['cdkDragFreeDragPosition']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkDrag.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._destroyed;\n    /**\n     * Reference to the underlying drag instance.\n     * @type {?}\n     */\n    CdkDrag.prototype._dragRef;\n    /**\n     * Elements that can be used to drag the draggable item.\n     * @type {?}\n     */\n    CdkDrag.prototype._handles;\n    /**\n     * Element that will be used as a template to create the draggable item's preview.\n     * @type {?}\n     */\n    CdkDrag.prototype._previewTemplate;\n    /**\n     * Template for placeholder element rendered to show where a draggable would be dropped.\n     * @type {?}\n     */\n    CdkDrag.prototype._placeholderTemplate;\n    /**\n     * Arbitrary data to attach to this drag instance.\n     * @type {?}\n     */\n    CdkDrag.prototype.data;\n    /**\n     * Locks the position of the dragged element along the specified axis.\n     * @type {?}\n     */\n    CdkDrag.prototype.lockAxis;\n    /**\n     * Selector that will be used to determine the root draggable element, starting from\n     * the `cdkDrag` element and going up the DOM. Passing an alternate root element is useful\n     * when trying to enable dragging on an element that you might not have access to.\n     * @type {?}\n     */\n    CdkDrag.prototype.rootElementSelector;\n    /**\n     * Node or selector that will be used to determine the element to which the draggable's\n     * position will be constrained. If a string is passed in, it'll be used as a selector that\n     * will be matched starting from the element's parent and going up the DOM until a match\n     * has been found.\n     * @type {?}\n     */\n    CdkDrag.prototype.boundaryElement;\n    /**\n     * Amount of milliseconds to wait after the user has put their\n     * pointer down before starting to drag the element.\n     * @type {?}\n     */\n    CdkDrag.prototype.dragStartDelay;\n    /**\n     * Sets the position of a `CdkDrag` that is outside of a drop container.\n     * Can be used to restore the element's position for a returning user.\n     * @type {?}\n     */\n    CdkDrag.prototype.freeDragPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._disabled;\n    /**\n     * Function that can be used to customize the logic of how the position of the drag item\n     * is limited while it's being dragged. Gets called with a point containing the current position\n     * of the user's pointer on the page and should return a point describing where the item should\n     * be rendered.\n     * @type {?}\n     */\n    CdkDrag.prototype.constrainPosition;\n    /**\n     * Class to be added to the preview element.\n     * @type {?}\n     */\n    CdkDrag.prototype.previewClass;\n    /**\n     * Emits when the user starts dragging the item.\n     * @type {?}\n     */\n    CdkDrag.prototype.started;\n    /**\n     * Emits when the user has released a drag item, before any animations have started.\n     * @type {?}\n     */\n    CdkDrag.prototype.released;\n    /**\n     * Emits when the user stops dragging an item in the container.\n     * @type {?}\n     */\n    CdkDrag.prototype.ended;\n    /**\n     * Emits when the user has moved the item into a new container.\n     * @type {?}\n     */\n    CdkDrag.prototype.entered;\n    /**\n     * Emits when the user removes the item its container by dragging it into another container.\n     * @type {?}\n     */\n    CdkDrag.prototype.exited;\n    /**\n     * Emits when the user drops the item inside a container.\n     * @type {?}\n     */\n    CdkDrag.prototype.dropped;\n    /**\n     * Emits as the user is dragging the item. Use with caution,\n     * because this event will fire for every pixel that the user has dragged.\n     * @type {?}\n     */\n    CdkDrag.prototype.moved;\n    /**\n     * Element that the draggable is attached to.\n     * @type {?}\n     */\n    CdkDrag.prototype.element;\n    /**\n     * Droppable container that the draggable is a part of.\n     * @type {?}\n     */\n    CdkDrag.prototype.dropContainer;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._changeDetectorRef;\n}\n/**\n * Gets the closest ancestor of an element that matches a selector.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction getClosestMatchingAncestor(element, selector) {\n    /** @type {?} */\n    let currentElement = (/** @type {?} */ (element.parentElement));\n    while (currentElement) {\n        // IE doesn't support `matches` so we have to fall back to `msMatchesSelector`.\n        if (currentElement.matches ? currentElement.matches(selector) :\n            ((/** @type {?} */ (currentElement))).msMatchesSelector(selector)) {\n            return currentElement;\n        }\n        currentElement = currentElement.parentElement;\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drop-list-group.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n * @template T\n */\nclass CdkDropListGroup {\n    constructor() {\n        /**\n         * Drop lists registered inside the group.\n         */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    /**\n     * Whether starting a dragging sequence from inside this group is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._items.clear();\n    }\n}\nCdkDropListGroup.ɵfac = function CdkDropListGroup_Factory(t) { return new (t || CdkDropListGroup)(); };\nCdkDropListGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDropListGroup, selectors: [[\"\", \"cdkDropListGroup\", \"\"]], inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\"] }, exportAs: [\"cdkDropListGroup\"] });\nCdkDropListGroup.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDropListGroupDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDropListGroup, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropListGroup]',\n                exportAs: 'cdkDropListGroup'\n            }]\n    }], function () { return []; }, { disabled: [{\n            type: Input,\n            args: ['cdkDropListGroupDisabled']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkDropListGroup.ngAcceptInputType_disabled;\n    /**\n     * Drop lists registered inside the group.\n     * @type {?}\n     */\n    CdkDropListGroup.prototype._items;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDropListGroup.prototype._disabled;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drop-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter used to generate unique ids for drop zones.\n * @type {?}\n */\nlet _uniqueIdCounter = 0;\n/**\n * Internal compile-time-only representation of a `CdkDropList`.\n * Used to avoid circular import issues between the `CdkDropList` and the `CdkDrag`.\n * \\@docs-private\n * @record\n */\nfunction CdkDropListInternal() { }\nconst ɵ0 = undefined;\n/**\n * Container that wraps a set of draggable items.\n * @template T\n */\nclass CdkDropList {\n    /**\n     * @param {?} element\n     * @param {?} dragDrop\n     * @param {?} _changeDetectorRef\n     * @param {?=} _dir\n     * @param {?=} _group\n     * @param {?=} _scrollDispatcher\n     * @param {?=} config\n     */\n    constructor(element, dragDrop, _changeDetectorRef, _dir, _group, _scrollDispatcher, config) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._group = _group;\n        this._scrollDispatcher = _scrollDispatcher;\n        /**\n         * Emits when the list has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = (/**\n         * @return {?}\n         */\n        () => true);\n        /**\n         * Emits when the user drops an item inside the container.\n         */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /**\n         * Emits as the user is swapping items while actively dragging.\n         */\n        this.sorted = new EventEmitter();\n        /**\n         * Keeps track of the items that are registered with this container. Historically we used to\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\n         * correctly. What we do instead is to have the items register themselves with the container\n         * and then we sort them based on their position in the DOM.\n         */\n        this._unsortedItems = new Set();\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        this._dropListRef.enterPredicate = (/**\n         * @param {?} drag\n         * @param {?} drop\n         * @return {?}\n         */\n        (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        });\n        this._setupInputSyncSubscription(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /**\n     * Whether starting a dragging sequence from this container is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n        // the user in a disabled state, so we also need to sync it as it's being set.\n        this._dropListRef.disabled = this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // @breaking-change 11.0.0 Remove null check for _scrollDispatcher once it's required.\n        if (this._scrollDispatcher) {\n            /** @type {?} */\n            const scrollableParents = this._scrollDispatcher\n                .getAncestorScrollContainers(this.element)\n                .map((/**\n             * @param {?} scrollable\n             * @return {?}\n             */\n            scrollable => scrollable.getElementRef().nativeElement));\n            this._dropListRef.withScrollableParents(scrollableParents);\n        }\n    }\n    /**\n     * Registers an items with the drop list.\n     * @param {?} item\n     * @return {?}\n     */\n    addItem(item) {\n        this._unsortedItems.add(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /**\n     * Removes an item from the drop list.\n     * @param {?} item\n     * @return {?}\n     */\n    removeItem(item) {\n        this._unsortedItems.delete(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /**\n     * Gets the registered items in the list, sorted by their position in the DOM.\n     * @return {?}\n     */\n    getSortedItems() {\n        return Array.from(this._unsortedItems).sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => {\n            /** @type {?} */\n            const documentPosition = a._dragRef.getVisibleElement().compareDocumentPosition(b._dragRef.getVisibleElement());\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n            // tslint:disable-next-line:no-bitwise\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._unsortedItems.clear();\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Starts dragging an item.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @return {?}\n     */\n    start() {\n        this._dropListRef.start();\n    }\n    /**\n     * Drops an item into this container.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @param {?} item Item being dropped into the container.\n     * @param {?} currentIndex Index at which the item should be inserted.\n     * @param {?} previousContainer Container from which the item got dragged in.\n     * @param {?} isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     *\n     * @return {?}\n     */\n    drop(item, currentIndex, previousContainer, isPointerOverContainer) {\n        this._dropListRef.drop(item._dragRef, currentIndex, previousContainer._dropListRef, isPointerOverContainer, { x: 0, y: 0 });\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @param {?} item Item that was moved into the container.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @return {?}\n     */\n    enter(item, pointerX, pointerY) {\n        this._dropListRef.enter(item._dragRef, pointerX, pointerY);\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @param {?} item Item that was dragged out.\n     * @return {?}\n     */\n    exit(item) {\n        this._dropListRef.exit(item._dragRef);\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @param {?} item Item whose index should be determined.\n     * @return {?}\n     */\n    getItemIndex(item) {\n        return this._dropListRef.getItemIndex(item._dragRef);\n    }\n    /**\n     * Syncs the inputs of the CdkDropList with the options of the underlying DropListRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _setupInputSyncSubscription(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => ref.withDirection(value)));\n        }\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const siblings = coerceArray(this.connectedTo).map((/**\n             * @param {?} drop\n             * @return {?}\n             */\n            drop => {\n                return typeof drop === 'string' ?\n                    (/** @type {?} */ (CdkDropList._dropLists.find((/**\n                     * @param {?} list\n                     * @return {?}\n                     */\n                    list => list.id === drop)))) : drop;\n            }));\n            if (this._group) {\n                this._group._items.forEach((/**\n                 * @param {?} drop\n                 * @return {?}\n                 */\n                drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                }));\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = coerceBooleanProperty(this.sortingDisabled);\n            ref.autoScrollDisabled = coerceBooleanProperty(this.autoScrollDisabled);\n            ref\n                .connectedTo(siblings.filter((/**\n             * @param {?} drop\n             * @return {?}\n             */\n            drop => drop && drop !== this)).map((/**\n             * @param {?} list\n             * @return {?}\n             */\n            list => list._dropListRef)))\n                .withOrientation(this.orientation);\n        }));\n    }\n    /**\n     * Handles events from the underlying DropListRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._syncItemsWithRef();\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.entered.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex\n            });\n        }));\n        ref.exited.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data\n            });\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.sorted.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data\n            });\n        }));\n        ref.dropped.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                item: event.item.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                distance: event.distance\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n    /**\n     * Assigns the default input values based on a provided config object.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _assignDefaults(config) {\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n        this.orientation = listOrientation || 'vertical';\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n    }\n    /**\n     * Syncs up the registered drag items with underlying drop list ref.\n     * @private\n     * @return {?}\n     */\n    _syncItemsWithRef() {\n        this._dropListRef.withItems(this.getSortedItems().map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => item._dragRef)));\n    }\n}\nCdkDropList.ɵfac = function CdkDropList_Factory(t) { return new (t || CdkDropList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(CdkDropListGroup, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8)); };\nCdkDropList.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDropList, selectors: [[\"\", \"cdkDropList\", \"\"], [\"cdk-drop-list\"]], hostAttrs: [1, \"cdk-drop-list\"], hostVars: 7, hostBindings: function CdkDropList_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵclassProp(\"cdk-drop-list-disabled\", ctx.disabled)(\"cdk-drop-list-dragging\", ctx._dropListRef.isDragging())(\"cdk-drop-list-receiving\", ctx._dropListRef.isReceiving());\n    } }, inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], id: \"id\", enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], disabled: [\"cdkDropListDisabled\", \"disabled\"], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"], data: [\"cdkDropListData\", \"data\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, exportAs: [\"cdkDropList\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Prevent child drop lists from picking up the same group as their parent.\n            { provide: CdkDropListGroup, useValue: ɵ0 },\n            { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n        ])] });\n/**\n * Keeps track of the drop lists that are currently on the page.\n */\nCdkDropList._dropLists = [];\n/** @nocollapse */\nCdkDropList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DragDrop },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: CdkDropListGroup, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: ScrollDispatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] }\n];\nCdkDropList.propDecorators = {\n    connectedTo: [{ type: Input, args: ['cdkDropListConnectedTo',] }],\n    data: [{ type: Input, args: ['cdkDropListData',] }],\n    orientation: [{ type: Input, args: ['cdkDropListOrientation',] }],\n    id: [{ type: Input }],\n    lockAxis: [{ type: Input, args: ['cdkDropListLockAxis',] }],\n    disabled: [{ type: Input, args: ['cdkDropListDisabled',] }],\n    sortingDisabled: [{ type: Input, args: ['cdkDropListSortingDisabled',] }],\n    enterPredicate: [{ type: Input, args: ['cdkDropListEnterPredicate',] }],\n    autoScrollDisabled: [{ type: Input, args: ['cdkDropListAutoScrollDisabled',] }],\n    dropped: [{ type: Output, args: ['cdkDropListDropped',] }],\n    entered: [{ type: Output, args: ['cdkDropListEntered',] }],\n    exited: [{ type: Output, args: ['cdkDropListExited',] }],\n    sorted: [{ type: Output, args: ['cdkDropListSorted',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDropList, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropList], cdk-drop-list',\n                exportAs: 'cdkDropList',\n                providers: [\n                    // Prevent child drop lists from picking up the same group as their parent.\n                    { provide: CdkDropListGroup, useValue: ɵ0 },\n                    { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n                ],\n                host: {\n                    'class': 'cdk-drop-list',\n                    '[id]': 'id',\n                    '[class.cdk-drop-list-disabled]': 'disabled',\n                    '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                    '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: DragDrop }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: CdkDropListGroup, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc1.ScrollDispatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_CONFIG]\n            }] }]; }, { connectedTo: [{\n            type: Input,\n            args: ['cdkDropListConnectedTo']\n        }], id: [{\n            type: Input\n        }], enterPredicate: [{\n            type: Input,\n            args: ['cdkDropListEnterPredicate']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDropListDropped']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDropListEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDropListExited']\n        }], sorted: [{\n            type: Output,\n            args: ['cdkDropListSorted']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDropListDisabled']\n        }], sortingDisabled: [{\n            type: Input,\n            args: ['cdkDropListSortingDisabled']\n        }], autoScrollDisabled: [{\n            type: Input,\n            args: ['cdkDropListAutoScrollDisabled']\n        }], orientation: [{\n            type: Input,\n            args: ['cdkDropListOrientation']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDropListLockAxis']\n        }], data: [{\n            type: Input,\n            args: ['cdkDropListData']\n        }] }); })();\nif (false) {\n    /**\n     * Keeps track of the drop lists that are currently on the page.\n     * @type {?}\n     * @private\n     */\n    CdkDropList._dropLists;\n    /** @type {?} */\n    CdkDropList.ngAcceptInputType_disabled;\n    /** @type {?} */\n    CdkDropList.ngAcceptInputType_sortingDisabled;\n    /** @type {?} */\n    CdkDropList.ngAcceptInputType_autoScrollDisabled;\n    /**\n     * Emits when the list has been destroyed.\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._destroyed;\n    /**\n     * Reference to the underlying drop list instance.\n     * @type {?}\n     */\n    CdkDropList.prototype._dropListRef;\n    /**\n     * Other draggable containers that this container is connected to and into which the\n     * container's items can be transferred. Can either be references to other drop containers,\n     * or their unique IDs.\n     * @type {?}\n     */\n    CdkDropList.prototype.connectedTo;\n    /**\n     * Arbitrary data to attach to this container.\n     * @type {?}\n     */\n    CdkDropList.prototype.data;\n    /**\n     * Direction in which the list is oriented.\n     * @type {?}\n     */\n    CdkDropList.prototype.orientation;\n    /**\n     * Unique ID for the drop zone. Can be used as a reference\n     * in the `connectedTo` of another `CdkDropList`.\n     * @type {?}\n     */\n    CdkDropList.prototype.id;\n    /**\n     * Locks the position of the draggable elements inside the container along the specified axis.\n     * @type {?}\n     */\n    CdkDropList.prototype.lockAxis;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._disabled;\n    /**\n     * Whether sorting within this drop list is disabled.\n     * @type {?}\n     */\n    CdkDropList.prototype.sortingDisabled;\n    /**\n     * Function that is used to determine whether an item\n     * is allowed to be moved into a drop container.\n     * @type {?}\n     */\n    CdkDropList.prototype.enterPredicate;\n    /**\n     * Whether to auto-scroll the view when the user moves their pointer close to the edges.\n     * @type {?}\n     */\n    CdkDropList.prototype.autoScrollDisabled;\n    /**\n     * Emits when the user drops an item inside the container.\n     * @type {?}\n     */\n    CdkDropList.prototype.dropped;\n    /**\n     * Emits when the user has moved a new drag item into this container.\n     * @type {?}\n     */\n    CdkDropList.prototype.entered;\n    /**\n     * Emits when the user removes an item from the container\n     * by dragging it into another container.\n     * @type {?}\n     */\n    CdkDropList.prototype.exited;\n    /**\n     * Emits as the user is swapping items while actively dragging.\n     * @type {?}\n     */\n    CdkDropList.prototype.sorted;\n    /**\n     * Keeps track of the items that are registered with this container. Historically we used to\n     * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n     * well which means that we can't handle cases like dragging the headers of a `mat-table`\n     * correctly. What we do instead is to have the items register themselves with the container\n     * and then we sort them based on their position in the DOM.\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._unsortedItems;\n    /**\n     * Element that the drop list is attached to.\n     * @type {?}\n     */\n    CdkDropList.prototype.element;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._group;\n    /**\n     * @deprecated _scrollDispatcher parameter to become required.\n     * \\@breaking-change 11.0.0\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._scrollDispatcher;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-drop-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DragDropModule {\n}\nDragDropModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DragDropModule });\nDragDropModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DragDropModule_Factory(t) { return new (t || DragDropModule)(); }, providers: [\n        DragDrop,\n    ] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DragDropModule, { declarations: [CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder], exports: [CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDropModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                exports: [\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                providers: [\n                    DragDrop,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_CONFIG_FACTORY, CDK_DROP_LIST, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem, CDK_DRAG_PARENT as ɵangular_material_src_cdk_drag_drop_drag_drop_b };\n\n//# sourceMappingURL=drag-drop.js.map","import { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, Input, ContentChildren, Directive, NgModule } from '@angular/core';\nimport { setLines, MatLine, MatLineModule, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-list-base.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to provide a grid list to a tile and to avoid circular imports.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\n\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c2 = [\"[mat-grid-avatar], [matGridAvatar]\", \"[mat-line], [matLine]\", \"*\"];\nconst MAT_GRID_LIST = new InjectionToken('MAT_GRID_LIST');\n/**\n * Base interface for a `MatGridList`.\n * \\@docs-private\n * @record\n */\nfunction MatGridListBase() { }\nif (false) {\n    /** @type {?} */\n    MatGridListBase.prototype.cols;\n    /** @type {?} */\n    MatGridListBase.prototype.gutterSize;\n    /** @type {?} */\n    MatGridListBase.prototype.rowHeight;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-tile.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatGridTile {\n    /**\n     * @param {?} _element\n     * @param {?=} _gridList\n     */\n    constructor(_element, _gridList) {\n        this._element = _element;\n        this._gridList = _gridList;\n        this._rowspan = 1;\n        this._colspan = 1;\n    }\n    /**\n     * Amount of rows that the grid tile takes up.\n     * @return {?}\n     */\n    get rowspan() { return this._rowspan; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set rowspan(value) { this._rowspan = Math.round(coerceNumberProperty(value)); }\n    /**\n     * Amount of columns that the grid tile takes up.\n     * @return {?}\n     */\n    get colspan() { return this._colspan; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set colspan(value) { this._colspan = Math.round(coerceNumberProperty(value)); }\n    /**\n     * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n     * \"Changed after checked\" errors that would occur with HostBinding.\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    _setStyle(property, value) {\n        ((/** @type {?} */ (this._element.nativeElement.style)))[property] = value;\n    }\n}\nMatGridTile.ɵfac = function MatGridTile_Factory(t) { return new (t || MatGridTile)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_GRID_LIST, 8)); };\nMatGridTile.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridTile, selectors: [[\"mat-grid-tile\"]], hostAttrs: [1, \"mat-grid-tile\"], hostVars: 2, hostBindings: function MatGridTile_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"rowspan\", ctx.rowspan)(\"colspan\", ctx.colspan);\n    } }, inputs: { rowspan: \"rowspan\", colspan: \"colspan\" }, exportAs: [\"matGridTile\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-figure\"]], template: function MatGridTile_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"figure\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatGridTile.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_GRID_LIST,] }] }\n];\nMatGridTile.propDecorators = {\n    rowspan: [{ type: Input }],\n    colspan: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTile, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-tile',\n                exportAs: 'matGridTile',\n                host: {\n                    'class': 'mat-grid-tile',\n                    // Ensures that the \"rowspan\" and \"colspan\" input value is reflected in\n                    // the DOM. This is needed for the grid-tile harness.\n                    '[attr.rowspan]': 'rowspan',\n                    '[attr.colspan]': 'colspan'\n                },\n                template: \"<!-- TODO(kara): Revisit why this is a figure.-->\\n<figure class=\\\"mat-figure\\\">\\n  <ng-content></ng-content>\\n</figure>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_GRID_LIST]\n            }] }]; }, { rowspan: [{\n            type: Input\n        }], colspan: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatGridTile.ngAcceptInputType_rowspan;\n    /** @type {?} */\n    MatGridTile.ngAcceptInputType_colspan;\n    /** @type {?} */\n    MatGridTile.prototype._rowspan;\n    /** @type {?} */\n    MatGridTile.prototype._colspan;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridTile.prototype._element;\n    /** @type {?} */\n    MatGridTile.prototype._gridList;\n}\nclass MatGridTileText {\n    /**\n     * @param {?} _element\n     */\n    constructor(_element) {\n        this._element = _element;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n}\nMatGridTileText.ɵfac = function MatGridTileText_Factory(t) { return new (t || MatGridTileText)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatGridTileText.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridTileText, selectors: [[\"mat-grid-tile-header\"], [\"mat-grid-tile-footer\"]], contentQueries: function MatGridTileText_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, ngContentSelectors: _c2, decls: 4, vars: 0, consts: [[1, \"mat-grid-list-text\"]], template: function MatGridTileText_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatGridTileText.ctorParameters = () => [\n    { type: ElementRef }\n];\nMatGridTileText.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTileText, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-tile-header, mat-grid-tile-footer',\n                template: \"<ng-content select=\\\"[mat-grid-avatar], [matGridAvatar]\\\"></ng-content>\\n<div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n<ng-content></ng-content>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatGridTileText.prototype._lines;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridTileText.prototype._element;\n}\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridAvatarCssMatStyler {\n}\nMatGridAvatarCssMatStyler.ɵfac = function MatGridAvatarCssMatStyler_Factory(t) { return new (t || MatGridAvatarCssMatStyler)(); };\nMatGridAvatarCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridAvatarCssMatStyler, selectors: [[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], hostAttrs: [1, \"mat-grid-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-grid-avatar], [matGridAvatar]',\n                host: { 'class': 'mat-grid-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridTileHeaderCssMatStyler {\n}\nMatGridTileHeaderCssMatStyler.ɵfac = function MatGridTileHeaderCssMatStyler_Factory(t) { return new (t || MatGridTileHeaderCssMatStyler)(); };\nMatGridTileHeaderCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridTileHeaderCssMatStyler, selectors: [[\"mat-grid-tile-header\"]], hostAttrs: [1, \"mat-grid-tile-header\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTileHeaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-grid-tile-header',\n                host: { 'class': 'mat-grid-tile-header' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridTileFooterCssMatStyler {\n}\nMatGridTileFooterCssMatStyler.ɵfac = function MatGridTileFooterCssMatStyler_Factory(t) { return new (t || MatGridTileFooterCssMatStyler)(); };\nMatGridTileFooterCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridTileFooterCssMatStyler, selectors: [[\"mat-grid-tile-footer\"]], hostAttrs: [1, \"mat-grid-tile-footer\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTileFooterCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-grid-tile-footer',\n                host: { 'class': 'mat-grid-tile-footer' }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/tile-coordinator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface describing a tile.\n * \\@docs-private\n * @record\n */\nfunction Tile() { }\nif (false) {\n    /**\n     * Amount of rows that the tile takes up.\n     * @type {?}\n     */\n    Tile.prototype.rowspan;\n    /**\n     * Amount of columns that the tile takes up.\n     * @type {?}\n     */\n    Tile.prototype.colspan;\n}\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n *\n * \\@docs-private\n */\nclass TileCoordinator {\n    constructor() {\n        /**\n         * Index at which the search for the next gap will start.\n         */\n        this.columnIndex = 0;\n        /**\n         * The current row index.\n         */\n        this.rowIndex = 0;\n    }\n    /**\n     * Gets the total number of rows occupied by tiles\n     * @return {?}\n     */\n    get rowCount() { return this.rowIndex + 1; }\n    /**\n     * Gets the total span of rows occupied by tiles.\n     * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n     * @return {?}\n     */\n    get rowspan() {\n        /** @type {?} */\n        const lastRowMax = Math.max(...this.tracker);\n        // if any of the tiles has a rowspan that pushes it beyond the total row count,\n        // add the difference to the rowcount\n        return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n    }\n    /**\n     * Updates the tile positions.\n     * @param {?} numColumns Amount of columns in the grid.\n     * @param {?} tiles Tiles to be positioned.\n     * @return {?}\n     */\n    update(numColumns, tiles) {\n        this.columnIndex = 0;\n        this.rowIndex = 0;\n        this.tracker = new Array(numColumns);\n        this.tracker.fill(0, 0, this.tracker.length);\n        this.positions = tiles.map((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => this._trackTile(tile)));\n    }\n    /**\n     * Calculates the row and col position of a tile.\n     * @private\n     * @param {?} tile\n     * @return {?}\n     */\n    _trackTile(tile) {\n        // Find a gap large enough for this tile.\n        /** @type {?} */\n        const gapStartIndex = this._findMatchingGap(tile.colspan);\n        // Place tile in the resulting gap.\n        this._markTilePosition(gapStartIndex, tile);\n        // The next time we look for a gap, the search will start at columnIndex, which should be\n        // immediately after the tile that has just been placed.\n        this.columnIndex = gapStartIndex + tile.colspan;\n        return new TilePosition(this.rowIndex, gapStartIndex);\n    }\n    /**\n     * Finds the next available space large enough to fit the tile.\n     * @private\n     * @param {?} tileCols\n     * @return {?}\n     */\n    _findMatchingGap(tileCols) {\n        if (tileCols > this.tracker.length) {\n            throw Error(`mat-grid-list: tile with colspan ${tileCols} is wider than ` +\n                `grid with cols=\"${this.tracker.length}\".`);\n        }\n        // Start index is inclusive, end index is exclusive.\n        /** @type {?} */\n        let gapStartIndex = -1;\n        /** @type {?} */\n        let gapEndIndex = -1;\n        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n        do {\n            // If we've reached the end of the row, go to the next row.\n            if (this.columnIndex + tileCols > this.tracker.length) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n            // If there are no more empty spaces in this row at all, move on to the next row.\n            if (gapStartIndex == -1) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapEndIndex = this._findGapEndIndex(gapStartIndex);\n            // If a gap large enough isn't found, we want to start looking immediately after the current\n            // gap on the next iteration.\n            this.columnIndex = gapStartIndex + 1;\n            // Continue iterating until we find a gap wide enough for this tile. Since gapEndIndex is\n            // exclusive, gapEndIndex is 0 means we didn't find a gap and should continue.\n        } while ((gapEndIndex - gapStartIndex < tileCols) || (gapEndIndex == 0));\n        // If we still didn't manage to find a gap, ensure that the index is\n        // at least zero so the tile doesn't get pulled out of the grid.\n        return Math.max(gapStartIndex, 0);\n    }\n    /**\n     * Move \"down\" to the next row.\n     * @private\n     * @return {?}\n     */\n    _nextRow() {\n        this.columnIndex = 0;\n        this.rowIndex++;\n        // Decrement all spaces by one to reflect moving down one row.\n        for (let i = 0; i < this.tracker.length; i++) {\n            this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n        }\n    }\n    /**\n     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n     * The gap ends when a non-zero value is found.\n     * @private\n     * @param {?} gapStartIndex\n     * @return {?}\n     */\n    _findGapEndIndex(gapStartIndex) {\n        for (let i = gapStartIndex + 1; i < this.tracker.length; i++) {\n            if (this.tracker[i] != 0) {\n                return i;\n            }\n        }\n        // The gap ends with the end of the row.\n        return this.tracker.length;\n    }\n    /**\n     * Update the tile tracker to account for the given tile in the given space.\n     * @private\n     * @param {?} start\n     * @param {?} tile\n     * @return {?}\n     */\n    _markTilePosition(start, tile) {\n        for (let i = 0; i < tile.colspan; i++) {\n            this.tracker[start + i] = tile.rowspan;\n        }\n    }\n}\nif (false) {\n    /**\n     * Tracking array (see class description).\n     * @type {?}\n     */\n    TileCoordinator.prototype.tracker;\n    /**\n     * Index at which the search for the next gap will start.\n     * @type {?}\n     */\n    TileCoordinator.prototype.columnIndex;\n    /**\n     * The current row index.\n     * @type {?}\n     */\n    TileCoordinator.prototype.rowIndex;\n    /**\n     * The computed (row, col) position of each tile (the output).\n     * @type {?}\n     */\n    TileCoordinator.prototype.positions;\n}\n/**\n * Simple data structure for tile position (row, col).\n * \\@docs-private\n */\nclass TilePosition {\n    /**\n     * @param {?} row\n     * @param {?} col\n     */\n    constructor(row, col) {\n        this.row = row;\n        this.col = col;\n    }\n}\nif (false) {\n    /** @type {?} */\n    TilePosition.prototype.row;\n    /** @type {?} */\n    TilePosition.prototype.col;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/tile-styler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * RegExp that can be used to check whether a value will\n * be allowed inside a CSS `calc()` expression.\n * @type {?}\n */\nconst cssCalcAllowedValue = /^-?\\d+((\\.\\d+)?[A-Za-z%$]?)+$/;\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * \\@docs-private\n * @abstract\n */\nclass TileStyler {\n    constructor() {\n        this._rows = 0;\n        this._rowspan = 0;\n    }\n    /**\n     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n     * because these properties haven't been calculated by that point.\n     *\n     * @param {?} gutterSize Size of the grid's gutter.\n     * @param {?} tracker Instance of the TileCoordinator.\n     * @param {?} cols Amount of columns in the grid.\n     * @param {?} direction Layout direction of the grid.\n     * @return {?}\n     */\n    init(gutterSize, tracker, cols, direction) {\n        this._gutterSize = normalizeUnits(gutterSize);\n        this._rows = tracker.rowCount;\n        this._rowspan = tracker.rowspan;\n        this._cols = cols;\n        this._direction = direction;\n    }\n    /**\n     * Computes the amount of space a single 1x1 tile would take up (width or height).\n     * Used as a basis for other calculations.\n     * @param {?} sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n     * @param {?} gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n     * @return {?} The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n     */\n    getBaseTileSize(sizePercent, gutterFraction) {\n        // Take the base size percent (as would be if evenly dividing the size between cells),\n        // and then subtracting the size of one gutter. However, since there are no gutters on the\n        // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n        // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n        // edge evenly among the cells).\n        return `(${sizePercent}% - (${this._gutterSize} * ${gutterFraction}))`;\n    }\n    /**\n     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} offset Number of tiles that have already been rendered in the row/column.\n     * @return {?} Position of the tile as a CSS calc() expression.\n     */\n    getTilePosition(baseSize, offset) {\n        // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n        // row/column (offset).\n        return offset === 0 ? '0' : calc(`(${baseSize} + ${this._gutterSize}) * ${offset}`);\n    }\n    /**\n     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} span The tile's rowspan or colspan.\n     * @return {?} Size of the tile as a CSS calc() expression.\n     */\n    getTileSize(baseSize, span) {\n        return `(${baseSize} * ${span}) + (${span - 1} * ${this._gutterSize})`;\n    }\n    /**\n     * Sets the style properties to be applied to a tile for the given row and column index.\n     * @param {?} tile Tile to which to apply the styling.\n     * @param {?} rowIndex Index of the tile's row.\n     * @param {?} colIndex Index of the tile's column.\n     * @return {?}\n     */\n    setStyle(tile, rowIndex, colIndex) {\n        // Percent of the available horizontal space that one column takes up.\n        /** @type {?} */\n        let percentWidthPerTile = 100 / this._cols;\n        // Fraction of the vertical gutter size that each column takes up.\n        // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n        /** @type {?} */\n        let gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n        this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n        this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    }\n    /**\n     * Sets the horizontal placement of the tile in the list.\n     * @param {?} tile\n     * @param {?} colIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    setColStyles(tile, colIndex, percentWidth, gutterWidth) {\n        // Base horizontal size of a column.\n        /** @type {?} */\n        let baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n        // The width and horizontal position of each tile is always calculated the same way, but the\n        // height and vertical position depends on the rowMode.\n        /** @type {?} */\n        let side = this._direction === 'rtl' ? 'right' : 'left';\n        tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n        tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n    }\n    /**\n     * Calculates the total size taken up by gutters across one axis of a list.\n     * @return {?}\n     */\n    getGutterSpan() {\n        return `${this._gutterSize} * (${this._rowspan} - 1)`;\n    }\n    /**\n     * Calculates the total size taken up by tiles across one axis of a list.\n     * @param {?} tileHeight Height of the tile.\n     * @return {?}\n     */\n    getTileSpan(tileHeight) {\n        return `${this._rowspan} * ${this.getTileSize(tileHeight, 1)}`;\n    }\n    /**\n     * Calculates the computed height and returns the correct style property to set.\n     * This method can be implemented by each type of TileStyler.\n     * \\@docs-private\n     * @return {?}\n     */\n    getComputedHeight() { return null; }\n}\nif (false) {\n    /** @type {?} */\n    TileStyler.prototype._gutterSize;\n    /** @type {?} */\n    TileStyler.prototype._rows;\n    /** @type {?} */\n    TileStyler.prototype._rowspan;\n    /** @type {?} */\n    TileStyler.prototype._cols;\n    /** @type {?} */\n    TileStyler.prototype._direction;\n    /**\n     * Sets the vertical placement of the tile in the list.\n     * This method will be implemented by each type of TileStyler.\n     * \\@docs-private\n     * @abstract\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    TileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) { };\n    /**\n     * Called when the tile styler is swapped out with a different one. To be used for cleanup.\n     * \\@docs-private\n     * @abstract\n     * @param {?} list Grid list that the styler was attached to.\n     * @return {?}\n     */\n    TileStyler.prototype.reset = function (list) { };\n}\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example `<mat-grid-list cols=\"3\" rowHeight=\"100px\">`\n * \\@docs-private\n */\nclass FixedTileStyler extends TileStyler {\n    /**\n     * @param {?} fixedRowHeight\n     */\n    constructor(fixedRowHeight) {\n        super();\n        this.fixedRowHeight = fixedRowHeight;\n    }\n    /**\n     * @param {?} gutterSize\n     * @param {?} tracker\n     * @param {?} cols\n     * @param {?} direction\n     * @return {?}\n     */\n    init(gutterSize, tracker, cols, direction) {\n        super.init(gutterSize, tracker, cols, direction);\n        this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n        if (!cssCalcAllowedValue.test(this.fixedRowHeight)) {\n            throw Error(`Invalid value \"${this.fixedRowHeight}\" set as rowHeight.`);\n        }\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex) {\n        tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n    }\n    /**\n     * @return {?}\n     */\n    getComputedHeight() {\n        return [\n            'height', calc(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        list._setListStyle(['height', null]);\n        if (list._tiles) {\n            list._tiles.forEach((/**\n             * @param {?} tile\n             * @return {?}\n             */\n            tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            }));\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    FixedTileStyler.prototype.fixedRowHeight;\n}\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example `<mat-grid-list cols=\"3\" rowHeight=\"3:1\">`\n * \\@docs-private\n */\nclass RatioTileStyler extends TileStyler {\n    /**\n     * @param {?} value\n     */\n    constructor(value) {\n        super();\n        this._parseRatio(value);\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex, percentWidth, gutterWidth) {\n        /** @type {?} */\n        let percentHeightPerTile = percentWidth / this.rowHeightRatio;\n        this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n        // Use padding-top and margin-top to maintain the given aspect ratio, as\n        // a percentage-based value for these properties is applied versus the *width* of the\n        // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n        tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n        tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n    }\n    /**\n     * @return {?}\n     */\n    getComputedHeight() {\n        return [\n            'paddingBottom', calc(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        list._setListStyle(['paddingBottom', null]);\n        list._tiles.forEach((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => {\n            tile._setStyle('marginTop', null);\n            tile._setStyle('paddingTop', null);\n        }));\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _parseRatio(value) {\n        /** @type {?} */\n        const ratioParts = value.split(':');\n        if (ratioParts.length !== 2) {\n            throw Error(`mat-grid-list: invalid ratio given for row-height: \"${value}\"`);\n        }\n        this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n    }\n}\nif (false) {\n    /**\n     * Ratio width:height given by user to determine row height.\n     * @type {?}\n     */\n    RatioTileStyler.prototype.rowHeightRatio;\n    /** @type {?} */\n    RatioTileStyler.prototype.baseTileHeight;\n}\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example `<mat-grid-list cols=\"3\" rowHeight=\"fit\">`\n *\n * \\@docs-private\n */\nclass FitTileStyler extends TileStyler {\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex) {\n        // Percent of the available vertical space that one row takes up.\n        /** @type {?} */\n        let percentHeightPerTile = 100 / this._rowspan;\n        // Fraction of the horizontal gutter size that each column takes up.\n        /** @type {?} */\n        let gutterHeightPerTile = (this._rows - 1) / this._rows;\n        // Base vertical size of a column.\n        /** @type {?} */\n        let baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n        tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        if (list._tiles) {\n            list._tiles.forEach((/**\n             * @param {?} tile\n             * @return {?}\n             */\n            tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            }));\n        }\n    }\n}\n/**\n * Wraps a CSS string in a calc function\n * @param {?} exp\n * @return {?}\n */\nfunction calc(exp) {\n    return `calc(${exp})`;\n}\n/**\n * Appends pixels to a CSS string if no units are given.\n * @param {?} value\n * @return {?}\n */\nfunction normalizeUnits(value) {\n    return value.match(/([A-Za-z%]+)$/) ? value : `${value}px`;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\n/** @type {?} */\nconst MAT_FIT_MODE = 'fit';\nclass MatGridList {\n    /**\n     * @param {?} _element\n     * @param {?} _dir\n     */\n    constructor(_element, _dir) {\n        this._element = _element;\n        this._dir = _dir;\n        /**\n         * The amount of space between tiles. This will be something like '5px' or '2em'.\n         */\n        this._gutter = '1px';\n    }\n    /**\n     * Amount of columns in the grid list.\n     * @return {?}\n     */\n    get cols() { return this._cols; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set cols(value) {\n        this._cols = Math.max(1, Math.round(coerceNumberProperty(value)));\n    }\n    /**\n     * Size of the grid list's gutter in pixels.\n     * @return {?}\n     */\n    get gutterSize() { return this._gutter; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set gutterSize(value) { this._gutter = `${value == null ? '' : value}`; }\n    /**\n     * Set internal representation of row height from the user-provided value.\n     * @return {?}\n     */\n    get rowHeight() { return this._rowHeight; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set rowHeight(value) {\n        /** @type {?} */\n        const newValue = `${value == null ? '' : value}`;\n        if (newValue !== this._rowHeight) {\n            this._rowHeight = newValue;\n            this._setTileStyler(this._rowHeight);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._checkCols();\n        this._checkRowHeight();\n    }\n    /**\n     * The layout calculation is fairly cheap if nothing changes, so there's little cost\n     * to run it frequently.\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._layoutTiles();\n    }\n    /**\n     * Throw a friendly error if cols property is missing\n     * @private\n     * @return {?}\n     */\n    _checkCols() {\n        if (!this.cols) {\n            throw Error(`mat-grid-list: must pass in number of columns. ` +\n                `Example: <mat-grid-list cols=\"3\">`);\n        }\n    }\n    /**\n     * Default to equal width:height if rowHeight property is missing\n     * @private\n     * @return {?}\n     */\n    _checkRowHeight() {\n        if (!this._rowHeight) {\n            this._setTileStyler('1:1');\n        }\n    }\n    /**\n     * Creates correct Tile Styler subtype based on rowHeight passed in by user\n     * @private\n     * @param {?} rowHeight\n     * @return {?}\n     */\n    _setTileStyler(rowHeight) {\n        if (this._tileStyler) {\n            this._tileStyler.reset(this);\n        }\n        if (rowHeight === MAT_FIT_MODE) {\n            this._tileStyler = new FitTileStyler();\n        }\n        else if (rowHeight && rowHeight.indexOf(':') > -1) {\n            this._tileStyler = new RatioTileStyler(rowHeight);\n        }\n        else {\n            this._tileStyler = new FixedTileStyler(rowHeight);\n        }\n    }\n    /**\n     * Computes and applies the size and position for all children grid tiles.\n     * @private\n     * @return {?}\n     */\n    _layoutTiles() {\n        if (!this._tileCoordinator) {\n            this._tileCoordinator = new TileCoordinator();\n        }\n        /** @type {?} */\n        const tracker = this._tileCoordinator;\n        /** @type {?} */\n        const tiles = this._tiles.filter((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => !tile._gridList || tile._gridList === this));\n        /** @type {?} */\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._tileCoordinator.update(this.cols, tiles);\n        this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n        tiles.forEach((/**\n         * @param {?} tile\n         * @param {?} index\n         * @return {?}\n         */\n        (tile, index) => {\n            /** @type {?} */\n            const pos = tracker.positions[index];\n            this._tileStyler.setStyle(tile, pos.row, pos.col);\n        }));\n        this._setListStyle(this._tileStyler.getComputedHeight());\n    }\n    /**\n     * Sets style on the main grid-list element, given the style name and value.\n     * @param {?} style\n     * @return {?}\n     */\n    _setListStyle(style) {\n        if (style) {\n            ((/** @type {?} */ (this._element.nativeElement.style)))[style[0]] = style[1];\n        }\n    }\n}\nMatGridList.ɵfac = function MatGridList_Factory(t) { return new (t || MatGridList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8)); };\nMatGridList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridList, selectors: [[\"mat-grid-list\"]], contentQueries: function MatGridList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatGridTile, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tiles = _t);\n    } }, hostAttrs: [1, \"mat-grid-list\"], hostVars: 1, hostBindings: function MatGridList_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"cols\", ctx.cols);\n    } }, inputs: { cols: \"cols\", gutterSize: \"gutterSize\", rowHeight: \"rowHeight\" }, exportAs: [\"matGridList\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_GRID_LIST,\n                useExisting: MatGridList\n            }])], ngContentSelectors: _c0, decls: 2, vars: 0, template: function MatGridList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatGridList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatGridList.propDecorators = {\n    _tiles: [{ type: ContentChildren, args: [MatGridTile, { descendants: true },] }],\n    cols: [{ type: Input }],\n    gutterSize: [{ type: Input }],\n    rowHeight: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-list',\n                exportAs: 'matGridList',\n                template: \"<div>\\n  <ng-content></ng-content>\\n</div>\",\n                host: {\n                    'class': 'mat-grid-list',\n                    // Ensures that the \"cols\" input value is reflected in the DOM. This is\n                    // needed for the grid-list harness.\n                    '[attr.cols]': 'cols'\n                },\n                providers: [{\n                        provide: MAT_GRID_LIST,\n                        useExisting: MatGridList\n                    }],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { cols: [{\n            type: Input\n        }], gutterSize: [{\n            type: Input\n        }], rowHeight: [{\n            type: Input\n        }], _tiles: [{\n            type: ContentChildren,\n            args: [MatGridTile, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatGridList.ngAcceptInputType_cols;\n    /**\n     * Number of columns being rendered.\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._cols;\n    /**\n     * Used for determiningthe position of each tile in the grid.\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._tileCoordinator;\n    /**\n     * Row height value passed in by user. This can be one of three types:\n     * - Number value (ex: \"100px\"):  sets a fixed row height to that value\n     * - Ratio value (ex: \"4:3\"): sets the row height based on width:height ratio\n     * - \"Fit\" mode (ex: \"fit\"): sets the row height to total height divided by number of rows\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._rowHeight;\n    /**\n     * The amount of space between tiles. This will be something like '5px' or '2em'.\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._gutter;\n    /**\n     * Sets position and size styles for a tile\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._tileStyler;\n    /**\n     * Query list of tiles that are being rendered.\n     * @type {?}\n     */\n    MatGridList.prototype._tiles;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-list-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatGridListModule {\n}\nMatGridListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatGridListModule });\nMatGridListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatGridListModule_Factory(t) { return new (t || MatGridListModule)(); }, imports: [[MatLineModule, MatCommonModule],\n        MatLineModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatGridListModule, { declarations: function () { return [MatGridList,\n        MatGridTile,\n        MatGridTileText,\n        MatGridTileHeaderCssMatStyler,\n        MatGridTileFooterCssMatStyler,\n        MatGridAvatarCssMatStyler]; }, imports: function () { return [MatLineModule, MatCommonModule]; }, exports: function () { return [MatGridList,\n        MatGridTile,\n        MatGridTileText,\n        MatLineModule,\n        MatCommonModule,\n        MatGridTileHeaderCssMatStyler,\n        MatGridTileFooterCssMatStyler,\n        MatGridAvatarCssMatStyler]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatCommonModule],\n                exports: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ],\n                declarations: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatGridAvatarCssMatStyler, MatGridList, MatGridListModule, MatGridTile, MatGridTileFooterCssMatStyler, MatGridTileHeaderCssMatStyler, MatGridTileText, TileCoordinator as ɵTileCoordinator, MAT_GRID_LIST as ɵangular_material_src_material_grid_list_grid_list_a };\n\n//# sourceMappingURL=grid-list.js.map","import { __decorate, __metadata, __param } from 'tslib';\nimport { Injectable, EventEmitter, NgZone, ElementRef, Input, Output, ViewChild, HostBinding, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Directive, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Subject, merge, of, fromEvent, Subscription } from 'rxjs';\nimport { debounceTime, filter, tap, map, scan, share, switchMap, takeUntil, distinctUntilChanged, publish, take, skip } from 'rxjs/operators';\n\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"positionHighlight\"];\nconst _c1 = [\"*\"];\nconst ɵ0 = function ($element, position) {\n    $element.style.left = position.x + 'px';\n    $element.style.top = position.y + 'px';\n}, ɵ1 = function ($element) {\n    $element.style.left = '';\n    $element.style.top = '';\n}, ɵ2 = function ($element, position) {\n    const left = position.x;\n    const top = position.y;\n    // Replace unitless items with px\n    const translate = `translate(${left}px,${top}px)`;\n    $element.style['transform'] = translate;\n    $element.style['WebkitTransform'] = translate;\n    $element.style['MozTransform'] = translate;\n    $element.style['msTransform'] = translate;\n    $element.style['OTransform'] = translate;\n}, ɵ3 = function ($element) {\n    $element.style['transform'] = '';\n    $element.style['WebkitTransform'] = '';\n    $element.style['MozTransform'] = '';\n    $element.style['msTransform'] = '';\n    $element.style['OTransform'] = '';\n}, ɵ4 = () => {\n    if (document['selection']) {\n        document['selection'].empty();\n    }\n    else if (window.getSelection) {\n        window.getSelection().removeAllRanges();\n    }\n}, ɵ5 = function (element, containerEl) {\n    const containerRect = containerEl.getBoundingClientRect();\n    const elRect = element.getBoundingClientRect();\n    return elRect.left > containerRect.left &&\n        elRect.right < containerRect.right &&\n        elRect.top > containerRect.top &&\n        elRect.bottom < containerRect.bottom;\n}, ɵ6 = function (element, containerEl) {\n    const containerRect = containerEl.getBoundingClientRect();\n    const elRect = element.getBoundingClientRect();\n    const elWidth = elRect.right - elRect.left;\n    const elHeight = elRect.bottom - elRect.top;\n    return (elRect.left + (elWidth / 2)) > containerRect.left &&\n        (elRect.right - (elWidth / 2)) < containerRect.right &&\n        (elRect.top + (elHeight / 2)) > containerRect.top &&\n        (elRect.bottom - (elHeight / 2)) < containerRect.bottom;\n}, ɵ7 = function (element, containerEl) {\n    const containerRect = containerEl.getBoundingClientRect();\n    const elRect = element.getBoundingClientRect();\n    return elRect.right > containerRect.left &&\n        elRect.bottom > containerRect.top &&\n        elRect.left < containerRect.right &&\n        elRect.top < containerRect.bottom;\n}, ɵ8 = function (event, element) {\n    const elRect = element.getBoundingClientRect();\n    return event.pageX > elRect.left &&\n        event.pageX < elRect.right &&\n        event.pageY > elRect.top &&\n        event.pageY < elRect.bottom;\n}, ɵ9 = function ($element) {\n    const styleObj = window.getComputedStyle($element);\n    // NOTE: Manually calculating height because IE's `clientHeight` isn't always\n    // reliable.\n    return parseFloat(styleObj.getPropertyValue('height')) +\n        parseFloat(styleObj.getPropertyValue('padding-top')) +\n        parseFloat(styleObj.getPropertyValue('padding-bottom'));\n}, ɵ10 = (element, parentElement) => {\n    const parentElementRect = parentElement.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    return {\n        top: elementRect.top - parentElementRect.top,\n        left: elementRect.left - parentElementRect.left\n    };\n};\nconst utils = {\n    setCssElementPosition: ɵ0,\n    resetCSSElementPosition: ɵ1,\n    setTransform: ɵ2,\n    resetTransform: ɵ3,\n    clearSelection: ɵ4,\n    isElementFitContainer: ɵ5,\n    isElementIntersectContainer: ɵ6,\n    isElementTouchContainer: ɵ7,\n    isCursorAboveElement: ɵ8,\n    getElementOuterHeight: ɵ9,\n    getRelativeCoordinates: ɵ10,\n    getScrollableContainer(node) {\n        const regex = /(auto|scroll)/;\n        const parents = (_node, ps) => {\n            if (_node.parentNode === null) {\n                return ps;\n            }\n            return parents(_node.parentNode, ps.concat([_node]));\n        };\n        const style = (_node, prop) => {\n            return getComputedStyle(_node, null).getPropertyValue(prop);\n        };\n        const overflow = _node => {\n            return (style(_node, 'overflow') + style(_node, 'overflow-y') + style(_node, 'overflow-x'));\n        };\n        const scroll = _node => regex.test(overflow(_node));\n        /* eslint-disable consistent-return */\n        const scrollParent = _node => {\n            if (!(_node instanceof HTMLElement || _node instanceof SVGElement)) {\n                return;\n            }\n            const ps = parents(_node.parentNode, []);\n            for (let i = 0; i < ps.length; i += 1) {\n                if (scroll(ps[i])) {\n                    return ps[i];\n                }\n            }\n            return document.scrollingElement || document.documentElement;\n        };\n        return scrollParent(node);\n    }\n};\n\nconst GridCol = function (lanes) {\n    for (let i = 0; i < lanes; i++) {\n        this.push(null);\n    }\n};\nconst ɵ0$1 = GridCol;\n// Extend the Array prototype\nGridCol.prototype = [];\n/**\n * A GridList manages the two-dimensional positions from a list of items,\n * within a virtual matrix.\n *\n * The GridList's main function is to convert the item positions from one\n * grid size to another, maintaining as much of their order as possible.\n *\n * The GridList's second function is to handle collisions when moving an item\n * over another.\n *\n * The positioning algorithm places items in columns. Starting from left to\n * right, going through each column top to bottom.\n *\n * The size of an item is expressed using the number of cols and rows it\n * takes up within the grid (w and h)\n *\n * The position of an item is express using the col and row position within\n * the grid (x and y)\n *\n * An item is an object of structure:\n * {\n *   w: 3, h: 1,\n *   x: 0, y: 1\n * }\n */\nclass GridList {\n    constructor(items, options) {\n        this.options = options;\n        this.items = items;\n        this.adjustSizeOfItems();\n        this.generateGrid();\n    }\n    /**\n     * Illustrates grid as text-based table, using a number identifier for each\n     * item. E.g.\n     *\n     *  #|  0  1  2  3  4  5  6  7  8  9 10 11 12 13\n     *  --------------------------------------------\n     *  0| 00 02 03 04 04 06 08 08 08 12 12 13 14 16\n     *  1| 01 -- 03 05 05 07 09 10 11 11 -- 13 15 --\n     *\n     * Warn: Does not work if items don't have a width or height specified\n     * besides their position in the grid.\n     */\n    toString() {\n        const widthOfGrid = this.grid.length;\n        let output = '\\n #|', border = '\\n --', item, i, j;\n        // Render the table header\n        for (i = 0; i < widthOfGrid; i++) {\n            output += ' ' + this.padNumber(i, ' ');\n            border += '---';\n        }\n        output += border;\n        // Render table contents row by row, as we go on the y axis\n        for (i = 0; i < this.options.lanes; i++) {\n            output += '\\n' + this.padNumber(i, ' ') + '|';\n            for (j = 0; j < widthOfGrid; j++) {\n                output += ' ';\n                item = this.grid[j][i];\n                output += item\n                    ? this.padNumber(this.items.indexOf(item), '0')\n                    : '--';\n            }\n        }\n        output += '\\n';\n        return output;\n    }\n    setOption(name, value) {\n        this.options[name] = value;\n    }\n    /**\n     * Build the grid structure from scratch, with the current item positions\n     */\n    generateGrid() {\n        let i;\n        this.resetGrid();\n        for (i = 0; i < this.items.length; i++) {\n            this.markItemPositionToGrid(this.items[i]);\n        }\n    }\n    resizeGrid(lanes) {\n        let currentColumn = 0;\n        this.options.lanes = lanes;\n        this.adjustSizeOfItems();\n        this.sortItemsByPosition();\n        this.resetGrid();\n        // The items will be sorted based on their index within the this.items array,\n        // that is their \"1d position\"\n        for (let i = 0; i < this.items.length; i++) {\n            const item = this.items[i], position = this.getItemPosition(item);\n            this.updateItemPosition(item, this.findPositionForItem(item, { x: currentColumn, y: 0 }));\n            // New items should never be placed to the left of previous items\n            currentColumn = Math.max(currentColumn, position.x);\n        }\n        this.pullItemsToLeft();\n    }\n    /**\n     * This method has two options for the position we want for the item:\n     * - Starting from a certain row/column number and only looking for\n     *   positions to its right\n     * - Accepting positions for a certain row number only (use-case: items\n     *   being shifted to the left/right as a result of collisions)\n     *\n     * @param Object item\n     * @param Object start Position from which to start\n     *     the search.\n     * @param number [fixedRow] If provided, we're going to try to find a\n     *     position for the new item on it. If doesn't fit there, we're going\n     *     to put it on the first row.\n     *\n     * @returns Array x and y.\n     */\n    findPositionForItem(item, start, fixedRow) {\n        let x, y, position;\n        // Start searching for a position from the horizontal position of the\n        // rightmost item from the grid\n        for (x = start.x; x < this.grid.length; x++) {\n            if (fixedRow !== undefined) {\n                position = [x, fixedRow];\n                if (this.itemFitsAtPosition(item, position)) {\n                    return position;\n                }\n            }\n            else {\n                for (y = start.y; y < this.options.lanes; y++) {\n                    position = [x, y];\n                    if (this.itemFitsAtPosition(item, position)) {\n                        return position;\n                    }\n                }\n            }\n        }\n        // If we've reached this point, we need to start a new column\n        const newCol = this.grid.length;\n        let newRow = 0;\n        if (fixedRow !== undefined &&\n            this.itemFitsAtPosition(item, [newCol, fixedRow])) {\n            newRow = fixedRow;\n        }\n        return [newCol, newRow];\n    }\n    moveAndResize(item, newPosition, size) {\n        const position = this.getItemPosition({\n            x: newPosition[0],\n            y: newPosition[1],\n            w: item.w,\n            h: item.h\n        });\n        const width = size.w || item.w, height = size.h || item.h;\n        this.updateItemPosition(item, [position.x, position.y]);\n        this.updateItemSize(item, width, height);\n        this.resolveCollisions(item);\n    }\n    moveItemToPosition(item, newPosition) {\n        const position = this.getItemPosition({\n            x: newPosition[0],\n            y: newPosition[1],\n            w: item.w,\n            h: item.h\n        });\n        this.updateItemPosition(item, [position.x, position.y]);\n        this.resolveCollisions(item);\n    }\n    /**\n     * Resize an item and resolve collisions.\n     *\n     * @param Object item A reference to an item that's part of the grid.\n     * @param Object size\n     * @param number [size.w=item.w] The new width.\n     * @param number [size.h=item.h] The new height.\n     */\n    resizeItem(item, size) {\n        const width = size.w || item.w, height = size.h || item.h;\n        this.updateItemSize(item, width, height);\n        this.pullItemsToLeft(item);\n    }\n    /**\n     * Compare the current items against a previous snapshot and return only\n     * the ones that changed their attributes in the meantime. This includes both\n     * position (x, y) and size (w, h)\n     *\n     * Each item that is returned is not the GridListItem but the helper that holds GridListItem\n     * and list of changed properties.\n     */\n    getChangedItems(initialItems, breakpoint) {\n        return this.items\n            .map((item) => {\n            const changes = [];\n            const oldValues = {};\n            const initItem = initialItems.find(initItm => initItm.$element === item.$element);\n            if (!initItem) {\n                return { item, changes: ['x', 'y', 'w', 'h'], isNew: true };\n            }\n            const oldX = initItem.getValueX(breakpoint);\n            if (item.getValueX(breakpoint) !== oldX) {\n                changes.push('x');\n                if (oldX || oldX === 0) {\n                    oldValues.x = oldX;\n                }\n            }\n            const oldY = initItem.getValueY(breakpoint);\n            if (item.getValueY(breakpoint) !== oldY) {\n                changes.push('y');\n                if (oldY || oldY === 0) {\n                    oldValues.y = oldY;\n                }\n            }\n            if (item.getValueW(breakpoint) !==\n                initItem.getValueW(breakpoint)) {\n                changes.push('w');\n                oldValues.w = initItem.w;\n            }\n            if (item.getValueH(breakpoint) !==\n                initItem.getValueH(breakpoint)) {\n                changes.push('h');\n                oldValues.h = initItem.h;\n            }\n            return { item, oldValues, changes, isNew: false };\n        })\n            .filter((itemChange) => {\n            return itemChange.changes.length;\n        });\n    }\n    resolveCollisions(item) {\n        if (!this.tryToResolveCollisionsLocally(item)) {\n            this.pullItemsToLeft(item);\n        }\n        if (this.options.floating) {\n            this.pullItemsToLeft();\n        }\n        else if (this.getItemsCollidingWithItem(item).length) {\n            this.pullItemsToLeft();\n        }\n    }\n    pushCollidingItems(fixedItem) {\n        // Start a fresh grid with the fixed item already placed inside\n        this.sortItemsByPosition();\n        this.resetGrid();\n        this.generateGrid();\n        this.items\n            .filter(item => !this.isItemFloating(item) && item !== fixedItem)\n            .forEach(item => {\n            if (!this.tryToResolveCollisionsLocally(item)) {\n                this.pullItemsToLeft(item);\n            }\n        });\n    }\n    /**\n     * Build the grid from scratch, by using the current item positions and\n     * pulling them as much to the left as possible, removing as space between\n     * them as possible.\n     *\n     * If a \"fixed item\" is provided, its position will be kept intact and the\n     * rest of the items will be layed around it.\n     */\n    pullItemsToLeft(fixedItem) {\n        if (this.options.direction === 'none') {\n            return;\n        }\n        // Start a fresh grid with the fixed item already placed inside\n        this.sortItemsByPosition();\n        this.resetGrid();\n        // Start the grid with the fixed item as the first positioned item\n        if (fixedItem) {\n            const fixedPosition = this.getItemPosition(fixedItem);\n            this.updateItemPosition(fixedItem, [\n                fixedPosition.x,\n                fixedPosition.y\n            ]);\n        }\n        this.items\n            .filter((item) => {\n            return !item.dragAndDrop && item !== fixedItem;\n        })\n            .forEach((item) => {\n            const fixedPosition = this.getItemPosition(item);\n            this.updateItemPosition(item, [\n                fixedPosition.x,\n                fixedPosition.y\n            ]);\n        });\n        for (let i = 0; i < this.items.length; i++) {\n            const item = this.items[i], position = this.getItemPosition(item);\n            // The fixed item keeps its exact position\n            if ((fixedItem && item === fixedItem) ||\n                !item.dragAndDrop ||\n                (!this.options.floating &&\n                    this.isItemFloating(item) &&\n                    !this.getItemsCollidingWithItem(item).length)) {\n                continue;\n            }\n            const x = this.findLeftMostPositionForItem(item), newPosition = this.findPositionForItem(item, { x: x, y: 0 }, position.y);\n            this.updateItemPosition(item, newPosition);\n        }\n    }\n    isOverFixedArea(x, y, w, h, item = null) {\n        let itemData = { x, y, w, h };\n        if (this.options.direction !== 'horizontal') {\n            itemData = { x: y, y: x, w: h, h: w };\n        }\n        for (let i = itemData.x; i < itemData.x + itemData.w; i++) {\n            for (let j = itemData.y; j < itemData.y + itemData.h; j++) {\n                if (this.grid[i] &&\n                    this.grid[i][j] &&\n                    this.grid[i][j] !== item &&\n                    !this.grid[i][j].dragAndDrop) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    checkItemAboveEmptyArea(item, newPosition) {\n        let itemData = {\n            x: newPosition.x,\n            y: newPosition.y,\n            w: item.w,\n            h: item.h\n        };\n        if (!item.itemPrototype &&\n            item.x === newPosition.x &&\n            item.y === newPosition.y) {\n            return true;\n        }\n        if (this.options.direction === 'horizontal') {\n            itemData = {\n                x: newPosition.y,\n                y: newPosition.x,\n                w: itemData.h,\n                h: itemData.w\n            };\n        }\n        return !this.checkItemsInArea(itemData.y, itemData.y + itemData.h - 1, itemData.x, itemData.x + itemData.w - 1, item);\n    }\n    fixItemsPositions(options) {\n        // items with x, y that fits gird with size of options.lanes\n        const validItems = this.items\n            .filter((item) => item.itemComponent)\n            .filter((item) => this.isItemValidForGrid(item, options));\n        // items that x, y must be generated\n        const invalidItems = this.items\n            .filter((item) => item.itemComponent)\n            .filter((item) => !this.isItemValidForGrid(item, options));\n        const gridList = new GridList([], options);\n        // put items with defined positions to the grid\n        gridList.items = validItems.map((item) => {\n            return item.copyForBreakpoint(options.breakpoint);\n        });\n        gridList.generateGrid();\n        invalidItems.forEach(item => {\n            // TODO: check if this change does not broke anything\n            // const itemCopy = item.copy();\n            const itemCopy = item.copyForBreakpoint(options.breakpoint);\n            const position = gridList.findPositionForItem(itemCopy, {\n                x: 0,\n                y: 0\n            });\n            gridList.items.push(itemCopy);\n            gridList.setItemPosition(itemCopy, position);\n            gridList.markItemPositionToGrid(itemCopy);\n        });\n        gridList.pullItemsToLeft();\n        gridList.pushCollidingItems();\n        this.items.forEach((itm) => {\n            const cachedItem = gridList.items.filter(cachedItm => {\n                return cachedItm.$element === itm.$element;\n            })[0];\n            itm.setValueX(cachedItem.x, options.breakpoint);\n            itm.setValueY(cachedItem.y, options.breakpoint);\n            itm.setValueW(cachedItem.w, options.breakpoint);\n            itm.setValueH(cachedItem.h, options.breakpoint);\n            itm.autoSize = cachedItem.autoSize;\n        });\n    }\n    deleteItemPositionFromGrid(item) {\n        const position = this.getItemPosition(item);\n        let x, y;\n        for (x = position.x; x < position.x + position.w; x++) {\n            // It can happen to try to remove an item from a position not generated\n            // in the grid, probably when loading a persisted grid of items. No need\n            // to create a column to be able to remove something from it, though\n            if (!this.grid[x]) {\n                continue;\n            }\n            for (y = position.y; y < position.y + position.h; y++) {\n                // Don't clear the cell if it's been occupied by a different widget in\n                // the meantime (e.g. when an item has been moved over this one, and\n                // thus by continuing to clear this item's previous position you would\n                // cancel the first item's move, leaving it without any position even)\n                if (this.grid[x][y] === item) {\n                    this.grid[x][y] = null;\n                }\n            }\n        }\n    }\n    isItemFloating(item) {\n        if (item.itemComponent && item.itemComponent.isDragging) {\n            return false;\n        }\n        const position = this.getItemPosition(item);\n        if (position.x === 0) {\n            return false;\n        }\n        const rowBelowItem = this.grid[position.x - 1];\n        return (rowBelowItem || [])\n            .slice(position.y, position.y + position.h)\n            .reduce((isFloating, cellItem) => {\n            return isFloating && !cellItem;\n        }, true);\n    }\n    isItemValidForGrid(item, options) {\n        const itemData = options.direction === 'horizontal'\n            ? {\n                x: item.getValueY(options.breakpoint),\n                y: item.getValueX(options.breakpoint),\n                w: item.getValueH(options.breakpoint),\n                h: Math.min(item.getValueW(this.options.breakpoint), options.lanes)\n            }\n            : {\n                x: item.getValueX(options.breakpoint),\n                y: item.getValueY(options.breakpoint),\n                w: Math.min(item.getValueW(this.options.breakpoint), options.lanes),\n                h: item.getValueH(options.breakpoint)\n            };\n        return (typeof itemData.x === 'number' &&\n            typeof itemData.y === 'number' &&\n            itemData.x + itemData.w <= options.lanes);\n    }\n    findDefaultPositionHorizontal(width, height) {\n        for (const col of this.grid) {\n            const colIdx = this.grid.indexOf(col);\n            let rowIdx = 0;\n            while (rowIdx < col.length - height + 1) {\n                if (!this.checkItemsInArea(colIdx, colIdx + width - 1, rowIdx, rowIdx + height - 1)) {\n                    return [colIdx, rowIdx];\n                }\n                rowIdx++;\n            }\n        }\n        return [this.grid.length, 0];\n    }\n    findDefaultPositionVertical(width, height) {\n        for (const row of this.grid) {\n            const rowIdx = this.grid.indexOf(row);\n            let colIdx = 0;\n            while (colIdx < row.length - width + 1) {\n                if (!this.checkItemsInArea(rowIdx, rowIdx + height - 1, colIdx, colIdx + width - 1)) {\n                    return [colIdx, rowIdx];\n                }\n                colIdx++;\n            }\n        }\n        return [0, this.grid.length];\n    }\n    checkItemsInArea(rowStart, rowEnd, colStart, colEnd, item) {\n        for (let i = rowStart; i <= rowEnd; i++) {\n            for (let j = colStart; j <= colEnd; j++) {\n                if (this.grid[i] &&\n                    this.grid[i][j] &&\n                    (item ? this.grid[i][j] !== item : true)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    sortItemsByPosition() {\n        this.items.sort((item1, item2) => {\n            const position1 = this.getItemPosition(item1), position2 = this.getItemPosition(item2);\n            // Try to preserve columns.\n            if (position1.x !== position2.x) {\n                return position1.x - position2.x;\n            }\n            if (position1.y !== position2.y) {\n                return position1.y - position2.y;\n            }\n            // The items are placed on the same position.\n            return 0;\n        });\n    }\n    /**\n     * Some items can have 100% height or 100% width. Those dimmensions are\n     * expressed as 0. We need to ensure a valid width and height for each of\n     * those items as the number of items per lane.\n     */\n    adjustSizeOfItems() {\n        for (let i = 0; i < this.items.length; i++) {\n            const item = this.items[i];\n            // This can happen only the first time items are checked.\n            // We need the property to have a value for all the items so that the\n            // `cloneItems` method will merge the properties properly. If we only set\n            // it to the items that need it then the following can happen:\n            //\n            // cloneItems([{id: 1, autoSize: true}, {id: 2}],\n            //            [{id: 2}, {id: 1, autoSize: true}]);\n            //\n            // will result in\n            //\n            // [{id: 1, autoSize: true}, {id: 2, autoSize: true}]\n            if (item.autoSize === undefined) {\n                item.autoSize = item.w === 0 || item.h === 0;\n            }\n            if (item.autoSize) {\n                if (this.options.direction === 'horizontal') {\n                    item.h = this.options.lanes;\n                }\n                else {\n                    item.w = this.options.lanes;\n                }\n            }\n        }\n    }\n    resetGrid() {\n        this.grid = [];\n    }\n    /**\n     * Check that an item wouldn't overlap with another one if placed at a\n     * certain position within the grid\n     */\n    itemFitsAtPosition(item, newPosition) {\n        const position = this.getItemPosition(item);\n        let x, y;\n        // No coordonate can be negative\n        if (newPosition[0] < 0 || newPosition[1] < 0) {\n            return false;\n        }\n        // Make sure the item isn't larger than the entire grid\n        if (newPosition[1] + Math.min(position.h, this.options.lanes) >\n            this.options.lanes) {\n            return false;\n        }\n        if (this.isOverFixedArea(item.x, item.y, item.w, item.h)) {\n            return false;\n        }\n        // Make sure the position doesn't overlap with an already positioned\n        // item.\n        for (x = newPosition[0]; x < newPosition[0] + position.w; x++) {\n            const col = this.grid[x];\n            // Surely a column that hasn't even been created yet is available\n            if (!col) {\n                continue;\n            }\n            for (y = newPosition[1]; y < newPosition[1] + position.h; y++) {\n                // Any space occupied by an item can continue to be occupied by the\n                // same item.\n                if (col[y] && col[y] !== item) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    updateItemPosition(item, position) {\n        if (item.x !== null && item.y !== null) {\n            this.deleteItemPositionFromGrid(item);\n        }\n        this.setItemPosition(item, position);\n        this.markItemPositionToGrid(item);\n    }\n    /**\n     * @param Object item A reference to a grid item.\n     * @param number width The new width.\n     * @param number height The new height.\n     */\n    updateItemSize(item, width, height) {\n        if (item.x !== null && item.y !== null) {\n            this.deleteItemPositionFromGrid(item);\n        }\n        item.w = width;\n        item.h = height;\n        this.markItemPositionToGrid(item);\n    }\n    /**\n     * Mark the grid cells that are occupied by an item. This prevents items\n     * from overlapping in the grid\n     */\n    markItemPositionToGrid(item) {\n        const position = this.getItemPosition(item);\n        let x, y;\n        // Ensure that the grid has enough columns to accomodate the current item.\n        this.ensureColumns(position.x + position.w);\n        for (x = position.x; x < position.x + position.w; x++) {\n            for (y = position.y; y < position.y + position.h; y++) {\n                this.grid[x][y] = item;\n            }\n        }\n    }\n    /**\n     * Ensure that the grid has at least N columns available.\n     */\n    ensureColumns(N) {\n        for (let i = 0; i < N; i++) {\n            if (!this.grid[i]) {\n                this.grid.push(new GridCol(this.options.lanes));\n            }\n        }\n    }\n    getItemsCollidingWithItem(item) {\n        const collidingItems = [];\n        for (let i = 0; i < this.items.length; i++) {\n            if (item !== this.items[i] &&\n                this.itemsAreColliding(item, this.items[i])) {\n                collidingItems.push(i);\n            }\n        }\n        return collidingItems;\n    }\n    itemsAreColliding(item1, item2) {\n        const position1 = this.getItemPosition(item1), position2 = this.getItemPosition(item2);\n        return !(position2.x >= position1.x + position1.w ||\n            position2.x + position2.w <= position1.x ||\n            position2.y >= position1.y + position1.h ||\n            position2.y + position2.h <= position1.y);\n    }\n    /**\n     * Attempt to resolve the collisions after moving an item over one or more\n     * other items within the grid, by shifting the position of the colliding\n     * items around the moving one. This might result in subsequent collisions,\n     * in which case we will revert all position permutations. To be able to\n     * revert to the initial item positions, we create a virtual grid in the\n     * process\n     */\n    tryToResolveCollisionsLocally(item) {\n        const collidingItems = this.getItemsCollidingWithItem(item);\n        if (!collidingItems.length) {\n            return true;\n        }\n        const _gridList = new GridList(this.items.map(itm => {\n            return itm.copy();\n        }), this.options);\n        let leftOfItem;\n        let rightOfItem;\n        let aboveOfItem;\n        let belowOfItem;\n        for (let i = 0; i < collidingItems.length; i++) {\n            const collidingItem = _gridList.items[collidingItems[i]], collidingPosition = this.getItemPosition(collidingItem);\n            // We use a simple algorithm for moving items around when collisions occur:\n            // In this prioritized order, we try to move a colliding item around the\n            // moving one:\n            // 1. to its left side\n            // 2. above it\n            // 3. under it\n            // 4. to its right side\n            const position = this.getItemPosition(item);\n            leftOfItem = [\n                position.x - collidingPosition.w,\n                collidingPosition.y\n            ];\n            rightOfItem = [position.x + position.w, collidingPosition.y];\n            aboveOfItem = [\n                collidingPosition.x,\n                position.y - collidingPosition.h\n            ];\n            belowOfItem = [collidingPosition.x, position.y + position.h];\n            if (_gridList.itemFitsAtPosition(collidingItem, leftOfItem)) {\n                _gridList.updateItemPosition(collidingItem, leftOfItem);\n            }\n            else if (_gridList.itemFitsAtPosition(collidingItem, aboveOfItem)) {\n                _gridList.updateItemPosition(collidingItem, aboveOfItem);\n            }\n            else if (_gridList.itemFitsAtPosition(collidingItem, belowOfItem)) {\n                _gridList.updateItemPosition(collidingItem, belowOfItem);\n            }\n            else if (_gridList.itemFitsAtPosition(collidingItem, rightOfItem)) {\n                _gridList.updateItemPosition(collidingItem, rightOfItem);\n            }\n            else {\n                // Collisions failed, we must use the pullItemsToLeft method to arrange\n                // the other items around this item with fixed position. This is our\n                // plan B for when local collision resolving fails.\n                return false;\n            }\n        }\n        // If we reached this point it means we managed to resolve the collisions\n        // from one single iteration, just by moving the colliding items around. So\n        // we accept this scenario and merge the branched-out grid instance into the\n        // original one\n        this.items.forEach((itm, idx) => {\n            const cachedItem = _gridList.items.filter(cachedItm => {\n                return cachedItm.$element === itm.$element;\n            })[0];\n            itm.x = cachedItem.x;\n            itm.y = cachedItem.y;\n            itm.w = cachedItem.w;\n            itm.h = cachedItem.h;\n            itm.autoSize = cachedItem.autoSize;\n        });\n        this.generateGrid();\n        return true;\n    }\n    /**\n     * When pulling items to the left, we need to find the leftmost position for\n     * an item, with two considerations in mind:\n     * - preserving its current row\n     * - preserving the previous horizontal order between items\n     */\n    findLeftMostPositionForItem(item) {\n        let tail = 0;\n        const position = this.getItemPosition(item);\n        for (let i = 0; i < this.grid.length; i++) {\n            for (let j = position.y; j < position.y + position.h; j++) {\n                const otherItem = this.grid[i][j];\n                if (!otherItem) {\n                    continue;\n                }\n                const otherPosition = this.getItemPosition(otherItem);\n                if (this.items.indexOf(otherItem) < this.items.indexOf(item)) {\n                    tail = otherPosition.x + otherPosition.w;\n                }\n            }\n        }\n        return tail;\n    }\n    findItemByPosition(x, y) {\n        for (let i = 0; i < this.items.length; i++) {\n            if (this.items[i].x === x && this.items[i].y === y) {\n                return this.items[i];\n            }\n        }\n    }\n    getItemByAttribute(key, value) {\n        for (let i = 0; i < this.items.length; i++) {\n            if (this.items[i][key] === value) {\n                return this.items[i];\n            }\n        }\n        return null;\n    }\n    padNumber(nr, prefix) {\n        // Currently works for 2-digit numbers (<100)\n        return nr >= 10 ? nr : prefix + nr;\n    }\n    /**\n     * If the direction is vertical we need to rotate the grid 90 deg to the\n     * left. Thus, we simulate the fact that items are being pulled to the top.\n     *\n     * Since the items have widths and heights, if we apply the classic\n     * counter-clockwise 90 deg rotation\n     *\n     *     [0 -1]\n     *     [1  0]\n     *\n     * then the top left point of an item will become the bottom left point of\n     * the rotated item. To adjust for this, we need to subtract from the y\n     * position the height of the original item - the width of the rotated item.\n     *\n     * However, if we do this then we'll reverse some actions: resizing the\n     * width of an item will stretch the item to the left instead of to the\n     * right; resizing an item that doesn't fit into the grid will push the\n     * items around it instead of going on a new row, etc.\n     *\n     * We found it better to do a vertical flip of the grid after rotating it.\n     * This restores the direction of the actions and greatly simplifies the\n     * transformations.\n     */\n    getItemPosition(item) {\n        if (this.options.direction === 'horizontal') {\n            return item;\n        }\n        else {\n            return {\n                x: item.y,\n                y: item.x,\n                w: item.h,\n                h: item.w\n            };\n        }\n    }\n    /**\n     * See getItemPosition.\n     */\n    setItemPosition(item, position) {\n        if (this.options.direction === 'horizontal') {\n            item.x = position[0];\n            item.y = position[1];\n        }\n        else {\n            // We're supposed to subtract the rotated item's height which is actually\n            // the non-rotated item's width.\n            item.x = position[1];\n            item.y = position[0];\n        }\n    }\n}\n\nlet GridsterService = class GridsterService {\n    constructor() {\n        this.items = [];\n        this._items = [];\n        this._itemsMap = {};\n        this.disabledItems = [];\n        this.debounceRenderSubject = new Subject();\n        this.itemRemoveSubject = new Subject();\n        this.isInit = false;\n        this.itemRemoveSubject.pipe(debounceTime(0)).subscribe(() => {\n            this.gridList.pullItemsToLeft();\n            this.render();\n            this.updateCachedItems();\n        });\n        this.debounceRenderSubject.pipe(debounceTime(0)).subscribe(() => this.render());\n    }\n    isInitialized() {\n        return this.isInit;\n    }\n    /**\n     * Must be called before init\n     * @param item\n     */\n    registerItem(item) {\n        this.items.push(item);\n        return item;\n    }\n    init(gridsterComponent) {\n        this.gridsterComponent = gridsterComponent;\n        this.draggableOptions = gridsterComponent.draggableOptions;\n        this.gridsterOptions = gridsterComponent.gridsterOptions;\n    }\n    start() {\n        this.updateMaxItemSize();\n        // Used to highlight a position an element will land on upon drop\n        if (this.$positionHighlight) {\n            this.removePositionHighlight();\n        }\n        this.initGridList();\n        this.isInit = true;\n        setTimeout(() => {\n            this.copyItems();\n            this.fixItemsPositions();\n            this.gridsterComponent.reflowGridster(true);\n            this.gridsterComponent.setReady();\n        });\n    }\n    initGridList() {\n        // Create instance of GridList (decoupled lib for handling the grid\n        // positioning and sorting post-drag and dropping)\n        this.gridList = new GridList(this.items, this.options);\n    }\n    render() {\n        this.updateMaxItemSize();\n        this.gridList.generateGrid();\n        this.applySizeToItems();\n        this.applyPositionToItems();\n        this.refreshLines();\n    }\n    reflow() {\n        this.calculateCellSize();\n        this.render();\n    }\n    fixItemsPositions() {\n        if (this.options.responsiveSizes) {\n            this.gridList.fixItemsPositions(this.options);\n        }\n        else {\n            this.gridList.fixItemsPositions(this.gridsterOptions.basicOptions);\n            this.gridsterOptions.responsiveOptions.forEach((options) => {\n                this.gridList.fixItemsPositions(options);\n            });\n        }\n        this.updateCachedItems();\n    }\n    removeItem(item) {\n        const idx = this.items.indexOf(item);\n        if (idx >= 0) {\n            this.items.splice(this.items.indexOf(item), 1);\n        }\n        this.gridList.deleteItemPositionFromGrid(item);\n        this.removeItemFromCache(item);\n    }\n    onResizeStart(item) {\n        this.currentElement = item.$element;\n        this.copyItems();\n        this._maxGridCols = this.gridList.grid.length;\n        this.highlightPositionForItem(item);\n        this.gridsterComponent.isResizing = true;\n        this.refreshLines();\n    }\n    onResizeDrag(item) {\n        const newSize = this.snapItemSizeToGrid(item);\n        const sizeChanged = this.dragSizeChanged(newSize);\n        const newPosition = this.snapItemPositionToGrid(item);\n        const positionChanged = this.dragPositionChanged(newPosition);\n        if (sizeChanged || positionChanged) {\n            // Regenerate the grid with the positions from when the drag started\n            this.restoreCachedItems();\n            this.gridList.generateGrid();\n            this.previousDragPosition = newPosition;\n            this.previousDragSize = newSize;\n            this.gridList.moveAndResize(item, newPosition, { w: newSize[0], h: newSize[1] });\n            // Visually update item positions and highlight shape\n            this.applyPositionToItems(true);\n            this.highlightPositionForItem(item);\n        }\n    }\n    onResizeStop(item) {\n        this.currentElement = undefined;\n        this.updateCachedItems();\n        this.previousDragSize = null;\n        this.removePositionHighlight();\n        this.gridsterComponent.isResizing = false;\n        this.gridList.pullItemsToLeft(item);\n        this.debounceRenderSubject.next();\n        this.fixItemsPositions();\n    }\n    onStart(item) {\n        this.currentElement = item.$element;\n        // itemCtrl.isDragging = true;\n        // Create a deep copy of the items; we use them to revert the item\n        // positions after each drag change, making an entire drag operation less\n        // distructable\n        this.copyItems();\n        // Since dragging actually alters the grid, we need to establish the number\n        // of cols (+1 extra) before the drag starts\n        this._maxGridCols = this.gridList.grid.length;\n        this.gridsterComponent.isDragging = true;\n        this.gridsterComponent.updateGridsterElementData();\n        this.refreshLines();\n    }\n    onDrag(item) {\n        const newPosition = this.snapItemPositionToGrid(item);\n        if (this.dragPositionChanged(newPosition)) {\n            // Regenerate the grid with the positions from when the drag started\n            this.restoreCachedItems();\n            this.gridList.generateGrid();\n            this.previousDragPosition = newPosition;\n            if (this.options.direction === 'none' &&\n                !this.gridList.checkItemAboveEmptyArea(item, { x: newPosition[0], y: newPosition[1] })) {\n                return;\n            }\n            // Since the items list is a deep copy, we need to fetch the item\n            // corresponding to this drag action again\n            this.gridList.moveItemToPosition(item, newPosition);\n            // Visually update item positions and highlight shape\n            this.applyPositionToItems(true);\n            this.highlightPositionForItem(item);\n        }\n    }\n    cancel() {\n        this.restoreCachedItems();\n        this.previousDragPosition = null;\n        this.updateMaxItemSize();\n        this.applyPositionToItems();\n        this.removePositionHighlight();\n        this.currentElement = undefined;\n        this.gridsterComponent.isDragging = false;\n    }\n    onDragOut(item) {\n        this.cancel();\n        const idx = this.items.indexOf(item);\n        if (idx >= 0) {\n            this.items.splice(idx, 1);\n        }\n        this.gridList.pullItemsToLeft();\n        this.render();\n    }\n    onStop(item) {\n        this.currentElement = undefined;\n        this.updateCachedItems();\n        this.previousDragPosition = null;\n        this.removePositionHighlight();\n        this.gridList.pullItemsToLeft(item);\n        this.gridsterComponent.isDragging = false;\n        this.refreshLines();\n    }\n    calculateCellSize() {\n        if (this.options.direction === 'horizontal') {\n            this.cellHeight = this.calculateCellHeight();\n            this.cellWidth = this.options.cellWidth || this.cellHeight * this.options.widthHeightRatio;\n        }\n        else {\n            this.cellWidth = this.calculateCellWidth();\n            this.cellHeight = this.options.cellHeight || this.cellWidth / this.options.widthHeightRatio;\n        }\n        if (this.options.heightToFontSizeRatio) {\n            this._fontSize = this.cellHeight * this.options.heightToFontSizeRatio;\n        }\n    }\n    applyPositionToItems(increaseGridsterSize) {\n        if (!this.options.shrink) {\n            increaseGridsterSize = true;\n        }\n        // TODO: Implement group separators\n        for (let i = 0; i < this.items.length; i++) {\n            // Don't interfere with the positions of the dragged items\n            if (this.isCurrentElement(this.items[i].$element)) {\n                continue;\n            }\n            this.items[i].applyPosition(this);\n        }\n        const child = this.gridsterComponent.$element.firstChild;\n        // Update the width of the entire grid container with enough room on the\n        // right to allow dragging items to the end of the grid.\n        if (this.options.direction === 'horizontal') {\n            const increaseWidthWith = (increaseGridsterSize) ? this.maxItemWidth : 0;\n            child.style.height = '';\n            child.style.width = ((this.gridList.grid.length + increaseWidthWith) * this.cellWidth) + 'px';\n        }\n        else if (this.gridList.grid.length) {\n            const increaseHeightWith = (increaseGridsterSize) ? this.maxItemHeight : 0;\n            child.style.height = ((this.gridList.grid.length + increaseHeightWith) * this.cellHeight) + 'px';\n            child.style.width = '';\n        }\n    }\n    refreshLines() {\n        const gridsterContainer = this.gridsterComponent.$element.firstChild;\n        if (this.options.lines && this.options.lines.visible &&\n            (this.gridsterComponent.isDragging || this.gridsterComponent.isResizing || this.options.lines.always)) {\n            const linesColor = this.options.lines.color || '#d8d8d8';\n            const linesBgColor = this.options.lines.backgroundColor || 'transparent';\n            const linesWidth = this.options.lines.width || 1;\n            const bgPosition = linesWidth / 2;\n            gridsterContainer.style.backgroundSize = `${this.cellWidth}px ${this.cellHeight}px`;\n            gridsterContainer.style.backgroundPosition = `-${bgPosition}px -${bgPosition}px`;\n            gridsterContainer.style.backgroundImage = `\n                linear-gradient(to right, ${linesColor} ${linesWidth}px, ${linesBgColor} ${linesWidth}px),\n                linear-gradient(to bottom, ${linesColor} ${linesWidth}px, ${linesBgColor} ${linesWidth}px)\n            `;\n        }\n        else {\n            gridsterContainer.style.backgroundSize = '';\n            gridsterContainer.style.backgroundPosition = '';\n            gridsterContainer.style.backgroundImage = '';\n        }\n    }\n    removeItemFromCache(item) {\n        this._items = this._items\n            .filter(cachedItem => cachedItem.$element !== item.$element);\n        Object.keys(this._itemsMap)\n            .forEach((breakpoint) => {\n            this._itemsMap[breakpoint] = this._itemsMap[breakpoint]\n                .filter(cachedItem => cachedItem.$element !== item.$element);\n        });\n    }\n    copyItems() {\n        this._items = this.items\n            .filter(item => this.isValidGridItem(item))\n            .map((item) => {\n            return item.copyForBreakpoint(null);\n        });\n        this.gridsterOptions.responsiveOptions.forEach((options) => {\n            this._itemsMap[options.breakpoint] = this.items\n                .filter(item => this.isValidGridItem(item))\n                .map((item) => {\n                return item.copyForBreakpoint(options.breakpoint);\n            });\n        });\n    }\n    /**\n     * Update maxItemWidth and maxItemHeight vales according to current state of items\n     */\n    updateMaxItemSize() {\n        this.maxItemWidth = Math.max.apply(null, this.items.map((item) => {\n            return item.w;\n        }));\n        this.maxItemHeight = Math.max.apply(null, this.items.map((item) => {\n            return item.h;\n        }));\n    }\n    /**\n     * Update items properties of previously cached items\n     */\n    restoreCachedItems() {\n        const items = this.options.breakpoint ? this._itemsMap[this.options.breakpoint] : this._items;\n        this.items\n            .filter(item => this.isValidGridItem(item))\n            .forEach((item) => {\n            const cachedItem = items.filter(cachedItm => {\n                return cachedItm.$element === item.$element;\n            })[0];\n            item.x = cachedItem.x;\n            item.y = cachedItem.y;\n            item.w = cachedItem.w;\n            item.h = cachedItem.h;\n            item.autoSize = cachedItem.autoSize;\n        });\n    }\n    /**\n     * If item should react on grid\n     * @param GridListItem item\n     * @returns boolean\n     */\n    isValidGridItem(item) {\n        if (this.options.direction === 'none') {\n            return !!item.itemComponent;\n        }\n        return true;\n    }\n    calculateCellWidth() {\n        const gridsterWidth = parseFloat(window.getComputedStyle(this.gridsterComponent.$element).width);\n        return gridsterWidth / this.options.lanes;\n    }\n    calculateCellHeight() {\n        const gridsterHeight = parseFloat(window.getComputedStyle(this.gridsterComponent.$element).height);\n        return gridsterHeight / this.options.lanes;\n    }\n    applySizeToItems() {\n        for (let i = 0; i < this.items.length; i++) {\n            this.items[i].applySize();\n            if (this.options.heightToFontSizeRatio) {\n                this.items[i].$element.style['font-size'] = this._fontSize;\n            }\n        }\n    }\n    isCurrentElement(element) {\n        if (!this.currentElement) {\n            return false;\n        }\n        return element === this.currentElement;\n    }\n    snapItemSizeToGrid(item) {\n        const itemSize = {\n            width: parseInt(item.$element.style.width, 10) - 1,\n            height: parseInt(item.$element.style.height, 10) - 1\n        };\n        let colSize = Math.round(itemSize.width / this.cellWidth);\n        let rowSize = Math.round(itemSize.height / this.cellHeight);\n        // Keep item minimum 1\n        colSize = Math.max(colSize, 1);\n        rowSize = Math.max(rowSize, 1);\n        // check if element is pinned\n        if (this.gridList.isOverFixedArea(item.x, item.y, colSize, rowSize, item)) {\n            return [item.w, item.h];\n        }\n        return [colSize, rowSize];\n    }\n    generateItemPosition(item) {\n        let position;\n        if (item.itemPrototype) {\n            const coords = item.itemPrototype.getPositionToGridster(this);\n            position = {\n                x: Math.round(coords.x / this.cellWidth),\n                y: Math.round(coords.y / this.cellHeight)\n            };\n        }\n        else {\n            position = {\n                x: Math.round(item.positionX / this.cellWidth),\n                y: Math.round(item.positionY / this.cellHeight)\n            };\n        }\n        return position;\n    }\n    snapItemPositionToGrid(item) {\n        const position = this.generateItemPosition(item);\n        let col = position.x;\n        let row = position.y;\n        // Keep item position within the grid and don't let the item create more\n        // than one extra column\n        col = Math.max(col, 0);\n        row = Math.max(row, 0);\n        if (this.options.direction === 'horizontal') {\n            col = Math.min(col, this._maxGridCols);\n        }\n        else {\n            col = Math.min(col, Math.max(0, this.options.lanes - item.w));\n        }\n        // check if element is pinned\n        if (this.gridList.isOverFixedArea(col, row, item.w, item.h)) {\n            return [item.x, item.y];\n        }\n        return [col, row];\n    }\n    dragSizeChanged(newSize) {\n        if (!this.previousDragSize) {\n            return true;\n        }\n        return (newSize[0] !== this.previousDragSize[0] ||\n            newSize[1] !== this.previousDragSize[1]);\n    }\n    dragPositionChanged(newPosition) {\n        if (!this.previousDragPosition) {\n            return true;\n        }\n        return (newPosition[0] !== this.previousDragPosition[0] ||\n            newPosition[1] !== this.previousDragPosition[1]);\n    }\n    highlightPositionForItem(item) {\n        const size = item.calculateSize(this);\n        const position = item.calculatePosition(this);\n        this.$positionHighlight.style.width = size.width + 'px';\n        this.$positionHighlight.style.height = size.height + 'px';\n        this.$positionHighlight.style.left = position.left + 'px';\n        this.$positionHighlight.style.top = position.top + 'px';\n        this.$positionHighlight.style.display = '';\n        if (this.options.heightToFontSizeRatio) {\n            this.$positionHighlight.style['font-size'] = this._fontSize;\n        }\n    }\n    updateCachedItems() {\n        // Notify the user with the items that changed since the previous snapshot\n        this.triggerOnChange(null);\n        this.gridsterOptions.responsiveOptions.forEach((options) => {\n            this.triggerOnChange(options.breakpoint);\n        });\n        this.copyItems();\n    }\n    triggerOnChange(breakpoint) {\n        const items = breakpoint ? this._itemsMap[breakpoint] : this._items;\n        const changeItems = this.gridList.getChangedItems(items || [], breakpoint);\n        changeItems\n            .filter((itemChange) => {\n            return itemChange.item.itemComponent;\n        })\n            .forEach((itemChange) => {\n            if (itemChange.changes.indexOf('x') >= 0) {\n                itemChange.item.triggerChangeX(breakpoint);\n            }\n            if (itemChange.changes.indexOf('y') >= 0) {\n                itemChange.item.triggerChangeY(breakpoint);\n            }\n            if (itemChange.changes.indexOf('w') >= 0) {\n                itemChange.item.triggerChangeW(breakpoint);\n            }\n            if (itemChange.changes.indexOf('h') >= 0) {\n                itemChange.item.triggerChangeH(breakpoint);\n            }\n            // should be called only once (not for each breakpoint)\n            itemChange.item.itemComponent.change.emit({\n                item: itemChange.item,\n                oldValues: itemChange.oldValues || {},\n                isNew: itemChange.isNew,\n                changes: itemChange.changes,\n                breakpoint: breakpoint\n            });\n        });\n    }\n    removePositionHighlight() {\n        this.$positionHighlight.style.display = 'none';\n    }\n};\nGridsterService.ɵfac = function GridsterService_Factory(t) { return new (t || GridsterService)(); };\nGridsterService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: GridsterService, factory: GridsterService.ɵfac });\nGridsterService = __decorate([ __metadata(\"design:paramtypes\", [])\n], GridsterService);\n\nlet GridsterPrototypeService = class GridsterPrototypeService {\n    constructor() {\n        this.isDragging = false;\n        this.dragSubject = new Subject();\n        this.dragStartSubject = new Subject();\n        this.dragStopSubject = new Subject();\n    }\n    observeDropOver(gridster) {\n        return this.dragStopSubject.pipe(filter((data) => {\n            const gridsterEl = gridster.gridsterComponent.$element;\n            const isOverNestedGridster = [].slice.call(gridsterEl.querySelectorAll('gridster'))\n                .reduce((isOverGridster, nestedGridsterEl) => {\n                return isOverGridster ||\n                    this.isOverGridster(data.item, nestedGridsterEl, data.event, gridster.options);\n            }, false);\n            if (isOverNestedGridster) {\n                return false;\n            }\n            return this.isOverGridster(data.item, gridsterEl, data.event, gridster.options);\n        }), tap((data) => {\n            // TODO: what we should provide as a param?\n            // prototype.drop.emit({item: prototype.item});\n            data.item.onDrop(gridster);\n        }));\n    }\n    observeDropOut(gridster) {\n        return this.dragStopSubject.pipe(filter((data) => {\n            const gridsterEl = gridster.gridsterComponent.$element;\n            return !this.isOverGridster(data.item, gridsterEl, data.event, gridster.options);\n        }), tap((data) => {\n            // TODO: what we should provide as a param?\n            data.item.onCancel();\n        }));\n    }\n    observeDragOver(gridster) {\n        const over = this.dragSubject.pipe(map((data) => {\n            const gridsterEl = gridster.gridsterComponent.$element;\n            return {\n                item: data.item,\n                event: data.event,\n                isOver: this.isOverGridster(data.item, gridsterEl, data.event, gridster.options),\n                isDrop: false\n            };\n        }));\n        const drop = this.dragStopSubject.pipe(map((data) => {\n            const gridsterEl = gridster.gridsterComponent.$element;\n            return {\n                item: data.item,\n                event: data.event,\n                isOver: this.isOverGridster(data.item, gridsterEl, data.event, gridster.options),\n                isDrop: true\n            };\n        }));\n        const dragExt = merge(\n        // dragStartSubject is connected in case when item prototype is placed above gridster\n        // and drag enter is not fired\n        this.dragStartSubject.pipe(map(() => ({ item: null, isOver: false, isDrop: false }))), over, drop).pipe(scan((prev, next) => {\n            return {\n                item: next.item,\n                event: next.event,\n                isOver: next.isOver,\n                isEnter: prev.isOver === false && next.isOver === true,\n                isOut: prev.isOver === true && next.isOver === false && !prev.isDrop,\n                isDrop: next.isDrop\n            };\n        }), filter((data) => {\n            return !data.isDrop;\n        }), share());\n        const dragEnter = this.createDragEnterObservable(dragExt, gridster);\n        const dragOut = this.createDragOutObservable(dragExt, gridster);\n        const dragOver = dragEnter\n            .pipe(switchMap(() => this.dragSubject.pipe(takeUntil(dragOut))), map((data) => data.item));\n        return { dragEnter, dragOut, dragOver };\n    }\n    dragItemStart(item, event) {\n        this.isDragging = true;\n        this.dragStartSubject.next({ item, event });\n    }\n    dragItemStop(item, event) {\n        this.isDragging = false;\n        this.dragStopSubject.next({ item, event });\n    }\n    updatePrototypePosition(item, event) {\n        this.dragSubject.next({ item, event });\n    }\n    /**\n     * Creates observable that is fired on dragging over gridster container.\n     */\n    createDragOverObservable(dragIsOver, gridster) {\n        return dragIsOver.pipe(filter((data) => data.isOver && !data.isEnter && !data.isOut), map((data) => data.item), tap((item) => item.onOver(gridster)));\n    }\n    /**\n     * Creates observable that is fired on drag enter gridster container.\n     */\n    createDragEnterObservable(dragIsOver, gridster) {\n        return dragIsOver.pipe(filter((data) => data.isEnter), map((data) => data.item), tap((item) => item.onEnter(gridster)));\n    }\n    /**\n     * Creates observable that is fired on drag out gridster container.\n     */\n    createDragOutObservable(dragIsOver, gridster) {\n        return dragIsOver.pipe(filter((data) => data.isOut), map((data) => data.item), tap((item) => item.onOut(gridster)));\n    }\n    /**\n     * Checks whether \"element\" position fits inside \"containerEl\" position.\n     * It checks if \"element\" is totally covered by \"containerEl\" area.\n     */\n    isOverGridster(item, gridsterEl, event, options) {\n        const el = item.$element;\n        const parentItem = gridsterEl.parentElement &&\n            gridsterEl.parentElement.closest('gridster-item');\n        if (parentItem) {\n            return this.isOverGridster(item, parentItem, event, options);\n        }\n        switch (options.tolerance) {\n            case 'fit':\n                return utils.isElementFitContainer(el, gridsterEl);\n            case 'intersect':\n                return utils.isElementIntersectContainer(el, gridsterEl);\n            case 'touch':\n                return utils.isElementTouchContainer(el, gridsterEl);\n            default:\n                return utils.isCursorAboveElement(event, gridsterEl);\n        }\n    }\n};\nGridsterPrototypeService.ɵfac = function GridsterPrototypeService_Factory(t) { return new (t || GridsterPrototypeService)(); };\nGridsterPrototypeService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: GridsterPrototypeService, factory: GridsterPrototypeService.ɵfac });\nGridsterPrototypeService = __decorate([ __metadata(\"design:paramtypes\", [])\n], GridsterPrototypeService);\n\nclass GridsterOptions {\n    constructor(config, gridsterElement) {\n        this.defaults = {\n            lanes: 5,\n            direction: 'horizontal',\n            widthHeightRatio: 1,\n            shrink: false,\n            responsiveView: true,\n            responsiveSizes: false,\n            responsiveToParent: false,\n            dragAndDrop: true,\n            resizable: false,\n            useCSSTransforms: false,\n            floating: true,\n            tolerance: 'pointer'\n        };\n        this.responsiveOptions = [];\n        this.breakpointsMap = {\n            sm: 576,\n            md: 768,\n            lg: 992,\n            xl: 1200 // Extra large\n        };\n        const responsiveContainer = config.responsiveToParent ? gridsterElement : window;\n        this.basicOptions = config;\n        this.responsiveOptions = this.extendResponsiveOptions(config.responsiveOptions || []);\n        this.change = merge(of(this.getOptionsByWidth(this.getElementWidth(responsiveContainer))), fromEvent(window, 'resize').pipe(debounceTime(config.responsiveDebounce || 0), map((event) => this.getOptionsByWidth(this.getElementWidth(responsiveContainer))))).pipe(distinctUntilChanged(null, (options) => options.minWidth));\n    }\n    getOptionsByWidth(width) {\n        let i = 0;\n        let options = Object.assign({}, this.defaults, this.basicOptions);\n        while (this.responsiveOptions[i]) {\n            if (this.responsiveOptions[i].minWidth <= width) {\n                options = this.responsiveOptions[i];\n            }\n            i++;\n        }\n        return options;\n    }\n    extendResponsiveOptions(responsiveOptions) {\n        return responsiveOptions\n            // responsive options are valid only with \"breakpoint\" property\n            .filter(options => options.breakpoint)\n            // set default minWidth if not given\n            .map((options) => {\n            return Object.assign({\n                minWidth: this.breakpointsMap[options.breakpoint] || 0\n            }, options);\n        })\n            .sort((curr, next) => curr.minWidth - next.minWidth)\n            .map((options) => Object.assign({}, this.defaults, this.basicOptions, options));\n    }\n    getElementWidth($element) {\n        if ($element === window) {\n            return window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n        }\n        return $element.clientWidth;\n    }\n}\n\nlet GridsterComponent = class GridsterComponent {\n    constructor(zone, elementRef, gridster, gridsterPrototype) {\n        this.zone = zone;\n        this.gridsterPrototype = gridsterPrototype;\n        this.optionsChange = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.reflow = new EventEmitter();\n        this.prototypeDrop = new EventEmitter();\n        this.prototypeEnter = new EventEmitter();\n        this.prototypeOut = new EventEmitter();\n        this.draggableOptions = {};\n        this.isDragging = false;\n        this.isResizing = false;\n        this.isReady = false;\n        this.isPrototypeEntered = false;\n        this.isDisabled = false;\n        this.subscription = new Subscription();\n        this.gridster = gridster;\n        this.$element = elementRef.nativeElement;\n    }\n    ngOnInit() {\n        this.gridsterOptions = new GridsterOptions(this.options, this.$element);\n        if (this.options.useCSSTransforms) {\n            this.$element.classList.add('css-transform');\n        }\n        this.subscription.add(this.gridsterOptions.change.subscribe(options => {\n            this.gridster.options = options;\n            if (this.gridster.gridList) {\n                this.gridster.gridList.options = options;\n            }\n            setTimeout(() => this.optionsChange.emit(options));\n        }));\n        this.gridster.init(this);\n        this.subscription.add(fromEvent(window, 'resize')\n            .pipe(debounceTime(this.gridster.options.responsiveDebounce || 0), filter(() => this.gridster.options.responsiveView))\n            .subscribe(() => this.reload()));\n        this.zone.runOutsideAngular(() => {\n            this.subscription.add(fromEvent(document, 'scroll', { passive: true }).subscribe(() => this.updateGridsterElementData()));\n            const scrollableContainer = utils.getScrollableContainer(this.$element);\n            if (scrollableContainer) {\n                this.subscription.add(fromEvent(scrollableContainer, 'scroll', { passive: true })\n                    .subscribe(() => this.updateGridsterElementData()));\n            }\n        });\n    }\n    ngAfterContentInit() {\n        this.gridster.start();\n        this.updateGridsterElementData();\n        this.connectGridsterPrototype();\n        this.gridster.$positionHighlight = this.$positionHighlight.nativeElement;\n    }\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n    /**\n     * Change gridster config option and rebuild\n     * @param string name\n     * @param any value\n     * @return GridsterComponent\n     */\n    setOption(name, value) {\n        if (name === 'dragAndDrop') {\n            if (value) {\n                this.enableDraggable();\n            }\n            else {\n                this.disableDraggable();\n            }\n        }\n        if (name === 'resizable') {\n            if (value) {\n                this.enableResizable();\n            }\n            else {\n                this.disableResizable();\n            }\n        }\n        if (name === 'lanes') {\n            this.gridster.options.lanes = value;\n            this.gridster.gridList.fixItemsPositions(this.gridster.options);\n            this.reflowGridster();\n        }\n        if (name === 'direction') {\n            this.gridster.options.direction = value;\n            this.gridster.gridList.pullItemsToLeft();\n        }\n        if (name === 'widthHeightRatio') {\n            this.gridster.options.widthHeightRatio = parseFloat(value || 1);\n        }\n        if (name === 'responsiveView') {\n            this.gridster.options.responsiveView = !!value;\n        }\n        this.gridster.gridList.setOption(name, value);\n        return this;\n    }\n    reload() {\n        setTimeout(() => {\n            this.gridster.fixItemsPositions();\n            this.reflowGridster();\n        });\n        return this;\n    }\n    reflowGridster(isInit = false) {\n        this.gridster.reflow();\n        this.reflow.emit({\n            isInit: isInit,\n            gridsterComponent: this\n        });\n    }\n    updateGridsterElementData() {\n        this.gridster.gridsterScrollData = this.getScrollPositionFromParents(this.$element);\n        this.gridster.gridsterRect = this.$element.getBoundingClientRect();\n    }\n    setReady() {\n        setTimeout(() => (this.isReady = true));\n        this.ready.emit();\n    }\n    adjustItemsHeightToContent(scrollableItemElementSelector = '.gridster-item-inner') {\n        this.gridster.items\n            // convert each item to object with information about content height and scroll height\n            .map((item) => {\n            const scrollEl = item.$element.querySelector(scrollableItemElementSelector);\n            const contentEl = scrollEl.lastElementChild;\n            const scrollElDistance = utils.getRelativeCoordinates(scrollEl, item.$element);\n            const scrollElRect = scrollEl.getBoundingClientRect();\n            const contentRect = contentEl.getBoundingClientRect();\n            return {\n                item,\n                contentHeight: contentRect.bottom - scrollElRect.top,\n                scrollElDistance\n            };\n        })\n            // calculate required height in lanes amount and update item \"h\"\n            .forEach(data => {\n            data.item.h = Math.ceil(((data.contentHeight /\n                (this.gridster.cellHeight - data.scrollElDistance.top))));\n        });\n        this.gridster.fixItemsPositions();\n        this.gridster.reflow();\n    }\n    disable(item) {\n        const itemIdx = this.gridster.items.indexOf(item.itemComponent);\n        this.isDisabled = true;\n        if (itemIdx >= 0) {\n            delete this.gridster.items[this.gridster.items.indexOf(item.itemComponent)];\n        }\n        this.gridster.onDragOut(item);\n    }\n    enable() {\n        this.isDisabled = false;\n    }\n    getScrollPositionFromParents(element, data = { scrollTop: 0, scrollLeft: 0 }) {\n        if (element.parentElement && element.parentElement !== document.body) {\n            data.scrollTop += element.parentElement.scrollTop;\n            data.scrollLeft += element.parentElement.scrollLeft;\n            return this.getScrollPositionFromParents(element.parentElement, data);\n        }\n        return {\n            scrollTop: data.scrollTop,\n            scrollLeft: data.scrollLeft\n        };\n    }\n    /**\n     * Connect gridster prototype item to gridster dragging hooks (onStart, onDrag, onStop).\n     */\n    connectGridsterPrototype() {\n        this.gridsterPrototype.observeDropOut(this.gridster).subscribe();\n        const dropOverObservable = (this.gridsterPrototype\n            .observeDropOver(this.gridster)\n            .pipe(publish()));\n        const dragObservable = this.gridsterPrototype.observeDragOver(this.gridster);\n        dragObservable.dragOver\n            .pipe(filter(() => !this.isDisabled))\n            .subscribe((prototype) => {\n            if (!this.isPrototypeEntered) {\n                return;\n            }\n            this.gridster.onDrag(prototype.item);\n        });\n        dragObservable.dragEnter\n            .pipe(filter(() => !this.isDisabled))\n            .subscribe((prototype) => {\n            this.isPrototypeEntered = true;\n            if (this.gridster.items.indexOf(prototype.item) < 0) {\n                this.gridster.items.push(prototype.item);\n            }\n            this.gridster.onStart(prototype.item);\n            prototype.setDragContextGridster(this.gridster);\n            if (this.parent) {\n                this.parent.disable(prototype.item);\n            }\n            this.prototypeEnter.emit({ item: prototype.item });\n        });\n        dragObservable.dragOut\n            .pipe(filter(() => !this.isDisabled))\n            .subscribe((prototype) => {\n            if (!this.isPrototypeEntered) {\n                return;\n            }\n            this.gridster.onDragOut(prototype.item);\n            this.isPrototypeEntered = false;\n            this.prototypeOut.emit({ item: prototype.item });\n            if (this.parent) {\n                this.parent.enable();\n                this.parent.isPrototypeEntered = true;\n                if (this.parent.gridster.items.indexOf(prototype.item) < 0) {\n                    this.parent.gridster.items.push(prototype.item);\n                }\n                this.parent.gridster.onStart(prototype.item);\n                prototype.setDragContextGridster(this.parent.gridster);\n                // timeout is needed to be sure that \"enter\" event is fired after \"out\"\n                setTimeout(() => {\n                    this.parent.prototypeEnter.emit({\n                        item: prototype.item\n                    });\n                    prototype.onEnter(this.parent.gridster);\n                });\n            }\n        });\n        dropOverObservable\n            .pipe(filter(() => !this.isDisabled))\n            .subscribe(data => {\n            if (!this.isPrototypeEntered) {\n                return;\n            }\n            this.gridster.onStop(data.item.item);\n            this.gridster.removeItem(data.item.item);\n            this.isPrototypeEntered = false;\n            if (this.parent) {\n                this.parent.enable();\n            }\n            this.prototypeDrop.emit({ item: data.item.item });\n        });\n        dropOverObservable.connect();\n    }\n    enableDraggable() {\n        this.gridster.options.dragAndDrop = true;\n        this.gridster.items\n            .filter(item => item.itemComponent && item.itemComponent.dragAndDrop)\n            .forEach((item) => item.itemComponent.enableDragDrop());\n    }\n    disableDraggable() {\n        this.gridster.options.dragAndDrop = false;\n        this.gridster.items\n            .filter(item => item.itemComponent)\n            .forEach((item) => item.itemComponent.disableDraggable());\n    }\n    enableResizable() {\n        this.gridster.options.resizable = true;\n        this.gridster.items\n            .filter(item => item.itemComponent && item.itemComponent.resizable)\n            .forEach((item) => item.itemComponent.enableResizable());\n    }\n    disableResizable() {\n        this.gridster.options.resizable = false;\n        this.gridster.items.forEach((item) => item.itemComponent.disableResizable());\n    }\n};\nGridsterComponent.ɵfac = function GridsterComponent_Factory(t) { return new (t || GridsterComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(GridsterService), ɵngcc0.ɵɵdirectiveInject(GridsterPrototypeService)); };\nGridsterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: GridsterComponent, selectors: [[\"ngx-gridster\"]], viewQuery: function GridsterComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.$positionHighlight = _t.first);\n    } }, hostVars: 6, hostBindings: function GridsterComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"gridster--dragging\", ctx.isDragging)(\"gridster--resizing\", ctx.isResizing)(\"gridster--ready\", ctx.isReady);\n    } }, inputs: { draggableOptions: \"draggableOptions\", options: \"options\", parent: \"parent\" }, outputs: { optionsChange: \"optionsChange\", ready: \"ready\", reflow: \"reflow\", prototypeDrop: \"prototypeDrop\", prototypeEnter: \"prototypeEnter\", prototypeOut: \"prototypeOut\" }, features: [ɵngcc0.ɵɵProvidersFeature([GridsterService])], ngContentSelectors: _c1, decls: 5, vars: 0, consts: [[1, \"gridster-container\"], [1, \"position-highlight\", 2, \"display\", \"none\"], [\"positionHighlight\", \"\"], [1, \"inner\"]], template: function GridsterComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 1, 2);\n        ɵngcc0.ɵɵelement(4, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\"\\n            ngx-gridster {\\n                position: relative;\\n                display: block;\\n                left: 0;\\n                width: 100%;\\n            }\\n\\n            ngx-gridster.gridster--dragging {\\n                -moz-user-select: none;\\n                -khtml-user-select: none;\\n                -webkit-user-select: none;\\n                -ms-user-select: none;\\n                user-select: none;\\n            }\\n\\n            ngx-gridster .gridster-container {\\n                position: relative;\\n                width: 100%;\\n                list-style: none;\\n                -webkit-transition: width 0.2s, height 0.2s;\\n                transition: width 0.2s, height 0.2s;\\n            }\\n\\n            ngx-gridster .position-highlight {\\n                display: block;\\n                position: absolute;\\n                z-index: 1;\\n            }\\n        \"], encapsulation: 2, changeDetection: 0 });\nGridsterComponent.ctorParameters = () => [\n    { type: NgZone },\n    { type: ElementRef },\n    { type: GridsterService },\n    { type: GridsterPrototypeService }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], GridsterComponent.prototype, \"options\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterComponent.prototype, \"optionsChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterComponent.prototype, \"ready\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterComponent.prototype, \"reflow\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterComponent.prototype, \"prototypeDrop\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterComponent.prototype, \"prototypeEnter\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterComponent.prototype, \"prototypeOut\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], GridsterComponent.prototype, \"draggableOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", GridsterComponent)\n], GridsterComponent.prototype, \"parent\", void 0);\n__decorate([\n    ViewChild('positionHighlight', { static: true }),\n    __metadata(\"design:type\", Object)\n], GridsterComponent.prototype, \"$positionHighlight\", void 0);\n__decorate([\n    HostBinding('class.gridster--dragging'),\n    __metadata(\"design:type\", Object)\n], GridsterComponent.prototype, \"isDragging\", void 0);\n__decorate([\n    HostBinding('class.gridster--resizing'),\n    __metadata(\"design:type\", Object)\n], GridsterComponent.prototype, \"isResizing\", void 0);\n__decorate([\n    HostBinding('class.gridster--ready'),\n    __metadata(\"design:type\", Object)\n], GridsterComponent.prototype, \"isReady\", void 0);\nGridsterComponent = __decorate([ __metadata(\"design:paramtypes\", [NgZone,\n        ElementRef,\n        GridsterService,\n        GridsterPrototypeService])\n], GridsterComponent);\n\nclass GridListItem {\n    get $element() {\n        return this.getItem().$element;\n    }\n    get x() {\n        const item = this.getItem();\n        const breakpoint = item.gridster ? item.gridster.options.breakpoint : null;\n        return this.getValueX(breakpoint);\n    }\n    set x(value) {\n        const item = this.getItem();\n        const breakpoint = item.gridster ? item.gridster.options.breakpoint : null;\n        this.setValueX(value, breakpoint);\n    }\n    get y() {\n        const item = this.getItem();\n        const breakpoint = item.gridster ? item.gridster.options.breakpoint : null;\n        return this.getValueY(breakpoint);\n    }\n    set y(value) {\n        const item = this.getItem();\n        const breakpoint = item.gridster ? item.gridster.options.breakpoint : null;\n        this.setValueY(value, breakpoint);\n    }\n    get w() {\n        const item = this.getItem();\n        const breakpoint = item.gridster ? item.gridster.options.breakpoint : null;\n        return this.getValueW(breakpoint);\n    }\n    set w(value) {\n        const item = this.getItem();\n        const breakpoint = item.gridster ? item.gridster.options.breakpoint : null;\n        this.setValueW(value, breakpoint);\n    }\n    get h() {\n        const item = this.getItem();\n        const breakpoint = item.gridster ? item.gridster.options.breakpoint : null;\n        return this.getValueH(breakpoint);\n    }\n    set h(value) {\n        const item = this.getItem();\n        const breakpoint = item.gridster ? item.gridster.options.breakpoint : null;\n        this.setValueH(value, breakpoint);\n    }\n    get autoSize() {\n        return this.getItem().autoSize;\n    }\n    set autoSize(value) {\n        this.getItem().autoSize = value;\n    }\n    get dragAndDrop() {\n        return !!this.getItem().dragAndDrop;\n    }\n    get resizable() {\n        return !!this.getItem().resizable;\n    }\n    get positionX() {\n        const item = this.itemComponent || this.itemPrototype;\n        if (!item) {\n            return null;\n        }\n        return item.positionX;\n    }\n    get positionY() {\n        const item = this.itemComponent || this.itemPrototype;\n        if (!item) {\n            return null;\n        }\n        return item.positionY;\n    }\n    setFromGridsterItem(item) {\n        if (this.isItemSet()) {\n            throw new Error('GridListItem is already set.');\n        }\n        this.itemComponent = item;\n        return this;\n    }\n    setFromGridsterItemPrototype(item) {\n        if (this.isItemSet()) {\n            throw new Error('GridListItem is already set.');\n        }\n        this.itemPrototype = item;\n        return this;\n    }\n    setFromObjectLiteral(item) {\n        if (this.isItemSet()) {\n            throw new Error('GridListItem is already set.');\n        }\n        this.itemObject = item;\n        return this;\n    }\n    copy() {\n        const itemCopy = new GridListItem();\n        return itemCopy.setFromObjectLiteral({\n            $element: this.$element,\n            x: this.x,\n            y: this.y,\n            w: this.w,\n            h: this.h,\n            autoSize: this.autoSize,\n            dragAndDrop: this.dragAndDrop,\n            resizable: this.resizable\n        });\n    }\n    copyForBreakpoint(breakpoint) {\n        const itemCopy = new GridListItem();\n        return itemCopy.setFromObjectLiteral({\n            $element: this.$element,\n            x: this.getValueX(breakpoint),\n            y: this.getValueY(breakpoint),\n            w: this.getValueW(breakpoint),\n            h: this.getValueH(breakpoint),\n            autoSize: this.autoSize,\n            dragAndDrop: this.dragAndDrop,\n            resizable: this.resizable\n        });\n    }\n    getValueX(breakpoint) {\n        const item = this.getItem();\n        return item[this.getXProperty(breakpoint)];\n    }\n    getValueY(breakpoint) {\n        const item = this.getItem();\n        return item[this.getYProperty(breakpoint)];\n    }\n    getValueW(breakpoint) {\n        const item = this.getItem();\n        return item[this.getWProperty(breakpoint)] || 1;\n    }\n    getValueH(breakpoint) {\n        const item = this.getItem();\n        return item[this.getHProperty(breakpoint)] || 1;\n    }\n    setValueX(value, breakpoint) {\n        const item = this.getItem();\n        item[this.getXProperty(breakpoint)] = value;\n    }\n    setValueY(value, breakpoint) {\n        const item = this.getItem();\n        item[this.getYProperty(breakpoint)] = value;\n    }\n    setValueW(value, breakpoint) {\n        const item = this.getItem();\n        item[this.getWProperty(breakpoint)] = value;\n    }\n    setValueH(value, breakpoint) {\n        const item = this.getItem();\n        item[this.getHProperty(breakpoint)] = value;\n    }\n    triggerChangeX(breakpoint) {\n        const item = this.itemComponent;\n        if (item) {\n            item[this.getXProperty(breakpoint) + 'Change'].emit(this.getValueX(breakpoint));\n        }\n    }\n    triggerChangeY(breakpoint) {\n        const item = this.itemComponent;\n        if (item) {\n            item[this.getYProperty(breakpoint) + 'Change'].emit(this.getValueY(breakpoint));\n        }\n    }\n    triggerChangeW(breakpoint) {\n        const item = this.itemComponent;\n        if (item) {\n            item[this.getWProperty(breakpoint) + 'Change'].emit(this.getValueW(breakpoint));\n        }\n    }\n    triggerChangeH(breakpoint) {\n        const item = this.itemComponent;\n        if (item) {\n            item[this.getHProperty(breakpoint) + 'Change'].emit(this.getValueH(breakpoint));\n        }\n    }\n    hasPositions(breakpoint) {\n        const x = this.getValueX(breakpoint);\n        const y = this.getValueY(breakpoint);\n        return (x || x === 0) && (y || y === 0);\n    }\n    applyPosition(gridster) {\n        const position = this.calculatePosition(gridster);\n        this.itemComponent.positionX = position.left;\n        this.itemComponent.positionY = position.top;\n        this.itemComponent.updateElemenetPosition();\n    }\n    calculatePosition(gridster) {\n        if (!gridster && !this.itemComponent) {\n            return { left: 0, top: 0 };\n        }\n        gridster = gridster || this.itemComponent.gridster;\n        return {\n            left: this.x * gridster.cellWidth,\n            top: this.y * gridster.cellHeight\n        };\n    }\n    applySize(gridster) {\n        const size = this.calculateSize(gridster);\n        this.$element.style.width = size.width + 'px';\n        this.$element.style.height = size.height + 'px';\n    }\n    calculateSize(gridster) {\n        if (!gridster && !this.itemComponent) {\n            return { width: 0, height: 0 };\n        }\n        gridster = gridster || this.itemComponent.gridster;\n        let width = this.getValueW(gridster.options.breakpoint);\n        let height = this.getValueH(gridster.options.breakpoint);\n        if (gridster.options.direction === 'vertical') {\n            width = Math.min(width, gridster.options.lanes);\n        }\n        if (gridster.options.direction === 'horizontal') {\n            height = Math.min(height, gridster.options.lanes);\n        }\n        return {\n            width: width * gridster.cellWidth,\n            height: height * gridster.cellHeight\n        };\n    }\n    getXProperty(breakpoint) {\n        if (breakpoint && this.itemComponent) {\n            return GridListItem.X_PROPERTY_MAP[breakpoint];\n        }\n        else {\n            return 'x';\n        }\n    }\n    getYProperty(breakpoint) {\n        if (breakpoint && this.itemComponent) {\n            return GridListItem.Y_PROPERTY_MAP[breakpoint];\n        }\n        else {\n            return 'y';\n        }\n    }\n    getWProperty(breakpoint) {\n        if (this.itemPrototype) {\n            return this.itemPrototype[GridListItem.W_PROPERTY_MAP[breakpoint]] ?\n                GridListItem.W_PROPERTY_MAP[breakpoint] : 'w';\n        }\n        const item = this.getItem();\n        const responsiveSizes = item.gridster && item.gridster.options.responsiveSizes;\n        if (breakpoint && responsiveSizes) {\n            return GridListItem.W_PROPERTY_MAP[breakpoint];\n        }\n        else {\n            return 'w';\n        }\n    }\n    getHProperty(breakpoint) {\n        if (this.itemPrototype) {\n            return this.itemPrototype[GridListItem.H_PROPERTY_MAP[breakpoint]] ?\n                GridListItem.H_PROPERTY_MAP[breakpoint] : 'h';\n        }\n        const item = this.getItem();\n        const responsiveSizes = item.gridster && item.gridster.options.responsiveSizes;\n        if (breakpoint && responsiveSizes) {\n            return GridListItem.H_PROPERTY_MAP[breakpoint];\n        }\n        else {\n            return 'h';\n        }\n    }\n    getItem() {\n        const item = this.itemComponent || this.itemPrototype || this.itemObject;\n        if (!item) {\n            throw new Error('GridListItem is not set.');\n        }\n        return item;\n    }\n    isItemSet() {\n        return this.itemComponent || this.itemPrototype || this.itemObject;\n    }\n}\nGridListItem.BREAKPOINTS = ['sm', 'md', 'lg', 'xl'];\nGridListItem.X_PROPERTY_MAP = {\n    sm: 'xSm',\n    md: 'xMd',\n    lg: 'xLg',\n    xl: 'xXl'\n};\nGridListItem.Y_PROPERTY_MAP = {\n    sm: 'ySm',\n    md: 'yMd',\n    lg: 'yLg',\n    xl: 'yXl'\n};\nGridListItem.W_PROPERTY_MAP = {\n    sm: 'wSm',\n    md: 'wMd',\n    lg: 'wLg',\n    xl: 'wXl'\n};\nGridListItem.H_PROPERTY_MAP = {\n    sm: 'hSm',\n    md: 'hMd',\n    lg: 'hLg',\n    xl: 'hXl'\n};\n\nclass DraggableEvent {\n    constructor(event) {\n        if (event.touches) {\n            this.touchEvent = event;\n            this.setDataFromTouchEvent(this.touchEvent);\n        }\n        else {\n            this.mouseEvent = event;\n            this.setDataFromMouseEvent(this.mouseEvent);\n        }\n    }\n    isTouchEvent() {\n        return !!this.touchEvent;\n    }\n    pauseEvent() {\n        const event = this.touchEvent || this.mouseEvent;\n        if (event.stopPropagation) {\n            event.stopPropagation();\n        }\n        if (event.preventDefault) {\n            event.preventDefault();\n        }\n        event.cancelBubble = true;\n        event.returnValue = false;\n        return false;\n    }\n    getRelativeCoordinates(container) {\n        const scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;\n        const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft;\n        const rect = container.getBoundingClientRect();\n        return {\n            x: this.pageX - rect.left - scrollLeft,\n            y: this.pageY - rect.top - scrollTop,\n        };\n    }\n    setDataFromMouseEvent(event) {\n        this.target = event.target;\n        this.clientX = event.clientX;\n        this.clientY = event.clientY;\n        this.pageX = event.pageX;\n        this.pageY = event.pageY;\n        this.type = event.type;\n    }\n    setDataFromTouchEvent(event) {\n        const touch = event.touches[0] || event.changedTouches[0];\n        this.target = event.target;\n        this.clientX = touch.clientX;\n        this.clientY = touch.clientY;\n        this.pageX = touch.pageX;\n        this.pageY = touch.pageY;\n        this.type = event.type;\n    }\n}\n\nclass Draggable {\n    constructor(element, config = {}) {\n        this.mousemove = merge(fromEvent(document, 'mousemove'), fromEvent(document, 'touchmove', { passive: false })).pipe(share());\n        this.mouseup = merge(fromEvent(document, 'mouseup'), fromEvent(document, 'touchend'), fromEvent(document, 'touchcancel')).pipe(share());\n        this.config = {\n            handlerClass: null,\n            scroll: true,\n            scrollEdge: 36,\n            scrollDirection: null\n        };\n        // reference to auto scrolling listeners\n        this.autoScrollingInterval = [];\n        this.element = element;\n        this.mousedown = merge(fromEvent(element, 'mousedown'), fromEvent(element, 'touchstart')).pipe(share());\n        this.config = Object.assign(Object.assign({}, this.config), config);\n        this.dragStart = this.createDragStartObservable().pipe(share());\n        this.dragMove = this.createDragMoveObservable(this.dragStart);\n        this.dragStop = this.createDragStopObservable(this.dragStart);\n        this.fixProblemWithDnDForIE(element);\n        this.requestAnimationFrame =\n            window.requestAnimationFrame || (callback => setTimeout(callback, 1000 / 60));\n        this.cancelAnimationFrame = window.cancelAnimationFrame || (cafID => clearTimeout(cafID));\n    }\n    createDragStartObservable() {\n        return this.mousedown.pipe(map(md => new DraggableEvent(md)), filter((event) => this.isDragingByHandler(event)), tap(e => {\n            if (!e.isTouchEvent()) {\n                e.pauseEvent();\n            }\n            if (document.activeElement) {\n                document.activeElement.blur();\n            }\n            // prevents rendering performance issues while dragging item with selection inside\n            utils.clearSelection();\n        }), switchMap((startEvent) => {\n            return this.mousemove.pipe(map(mm => new DraggableEvent(mm)), filter((moveEvent) => this.inRange(startEvent, moveEvent, 5)), map(() => startEvent), takeUntil(this.mouseup), take(1));\n        }));\n    }\n    createDragMoveObservable(dragStart) {\n        return dragStart.pipe(tap(event => {\n            this.addTouchActionNone(event.target);\n        }), switchMap(startEvent => {\n            return this.mousemove.pipe(skip(1), map(mm => new DraggableEvent(mm)), tap(event => {\n                event.pauseEvent();\n                startEvent.pauseEvent();\n            }), takeUntil(this.mouseup));\n        }), filter(val => !!val), tap((event) => {\n            if (this.config.scroll) {\n                this.startScroll(this.element, event);\n            }\n        }));\n    }\n    createDragStopObservable(dragStart) {\n        return dragStart.pipe(switchMap(() => {\n            return this.mouseup.pipe(take(1));\n        }), map(e => new DraggableEvent(e)), tap(e => {\n            if (e.target) {\n                this.removeTouchActionNone(e.target);\n            }\n            this.autoScrollingInterval.forEach(raf => this.cancelAnimationFrame(raf));\n        }));\n    }\n    startScroll(item, event) {\n        const scrollContainer = this.getScrollContainer(item);\n        this.autoScrollingInterval.forEach(raf => this.cancelAnimationFrame(raf));\n        if (scrollContainer) {\n            this.startScrollForContainer(event, scrollContainer);\n        }\n        else {\n            this.startScrollForWindow(event);\n        }\n    }\n    startScrollForContainer(event, scrollContainer) {\n        if (!this.config.scrollDirection || this.config.scrollDirection === 'vertical') {\n            this.startScrollVerticallyForContainer(event, scrollContainer);\n        }\n        if (!this.config.scrollDirection || this.config.scrollDirection === 'horizontal') {\n            this.startScrollHorizontallyForContainer(event, scrollContainer);\n        }\n    }\n    startScrollVerticallyForContainer(event, scrollContainer) {\n        if (event.pageY - this.getOffset(scrollContainer).top < this.config.scrollEdge) {\n            this.startAutoScrolling(scrollContainer, -Draggable.SCROLL_SPEED, 'scrollTop');\n        }\n        else if (this.getOffset(scrollContainer).top +\n            scrollContainer.getBoundingClientRect().height -\n            event.pageY <\n            this.config.scrollEdge) {\n            this.startAutoScrolling(scrollContainer, Draggable.SCROLL_SPEED, 'scrollTop');\n        }\n    }\n    startScrollHorizontallyForContainer(event, scrollContainer) {\n        if (event.pageX - scrollContainer.getBoundingClientRect().left < this.config.scrollEdge) {\n            this.startAutoScrolling(scrollContainer, -Draggable.SCROLL_SPEED, 'scrollLeft');\n        }\n        else if (this.getOffset(scrollContainer).left +\n            scrollContainer.getBoundingClientRect().width -\n            event.pageX <\n            this.config.scrollEdge) {\n            this.startAutoScrolling(scrollContainer, Draggable.SCROLL_SPEED, 'scrollLeft');\n        }\n    }\n    startScrollForWindow(event) {\n        if (!this.config.scrollDirection || this.config.scrollDirection === 'vertical') {\n            this.startScrollVerticallyForWindow(event);\n        }\n        if (!this.config.scrollDirection || this.config.scrollDirection === 'horizontal') {\n            this.startScrollHorizontallyForWindow(event);\n        }\n    }\n    startScrollVerticallyForWindow(event) {\n        const scrollingElement = document.scrollingElement || document.documentElement || document.body;\n        // NOTE: Using `window.pageYOffset` here because IE doesn't have `window.scrollY`.\n        if (event.pageY - window.pageYOffset < this.config.scrollEdge) {\n            this.startAutoScrolling(scrollingElement, -Draggable.SCROLL_SPEED, 'scrollTop');\n        }\n        else if (window.innerHeight - (event.pageY - window.pageYOffset) <\n            this.config.scrollEdge) {\n            this.startAutoScrolling(scrollingElement, Draggable.SCROLL_SPEED, 'scrollTop');\n        }\n    }\n    startScrollHorizontallyForWindow(event) {\n        const scrollingElement = document.scrollingElement || document.documentElement || document.body;\n        // NOTE: Using `window.pageXOffset` here because IE doesn't have `window.scrollX`.\n        if (event.pageX - window.pageXOffset < this.config.scrollEdge) {\n            this.startAutoScrolling(scrollingElement, -Draggable.SCROLL_SPEED, 'scrollLeft');\n        }\n        else if (window.innerWidth - (event.pageX - window.pageXOffset) <\n            this.config.scrollEdge) {\n            this.startAutoScrolling(scrollingElement, Draggable.SCROLL_SPEED, 'scrollLeft');\n        }\n    }\n    getScrollContainer(node) {\n        const nodeOuterHeight = utils.getElementOuterHeight(node);\n        if (node.scrollHeight > Math.ceil(nodeOuterHeight)) {\n            return node;\n        }\n        if (!new RegExp('(body|html)', 'i').test(node.parentNode.tagName)) {\n            return this.getScrollContainer(node.parentNode);\n        }\n        return null;\n    }\n    startAutoScrolling(node, amount, direction) {\n        this.autoScrollingInterval.push(this.requestAnimationFrame(function () {\n            this.startAutoScrolling(node, amount, direction);\n        }.bind(this)));\n        return (node[direction] += amount * 0.25);\n    }\n    getOffset(el) {\n        const rect = el.getBoundingClientRect();\n        return {\n            left: rect.left + this.getScroll('scrollLeft', 'pageXOffset'),\n            top: rect.top + this.getScroll('scrollTop', 'pageYOffset')\n        };\n    }\n    getScroll(scrollProp, offsetProp) {\n        if (typeof window[offsetProp] !== 'undefined') {\n            return window[offsetProp];\n        }\n        if (document.documentElement.clientHeight) {\n            return document.documentElement[scrollProp];\n        }\n        return document.body[scrollProp];\n    }\n    isDragingByHandler(event) {\n        if (!this.isValidDragHandler(event.target)) {\n            return false;\n        }\n        return (!this.config.handlerClass ||\n            (this.config.handlerClass &&\n                this.hasElementWithClass(this.config.handlerClass, event.target)));\n    }\n    isValidDragHandler(targetEl) {\n        return ['input', 'textarea'].indexOf(targetEl.tagName.toLowerCase()) === -1;\n    }\n    inRange(startEvent, moveEvent, range) {\n        return (Math.abs(moveEvent.clientX - startEvent.clientX) > range ||\n            Math.abs(moveEvent.clientY - startEvent.clientY) > range);\n    }\n    hasElementWithClass(className, target) {\n        while (target !== this.element) {\n            if (target.classList.contains(className)) {\n                return true;\n            }\n            target = target.parentElement;\n        }\n        return false;\n    }\n    pauseEvent(e) {\n        if (e.stopPropagation) {\n            e.stopPropagation();\n        }\n        if (e.preventDefault) {\n            e.preventDefault();\n        }\n        e.cancelBubble = true;\n        e.returnValue = false;\n    }\n    fixProblemWithDnDForIE(element) {\n        if (this.isTouchDevice() && this.isIEorEdge() && element.style) {\n            element.style['touch-action'] = 'none';\n        }\n    }\n    removeTouchActionNone(element) {\n        if (!element.style) {\n            return;\n        }\n        element.style['touch-action'] = '';\n    }\n    addTouchActionNone(element) {\n        if (!element.style) {\n            return;\n        }\n        element.style['touch-action'] = 'none';\n    }\n    isTouchDevice() {\n        return ('ontouchstart' in window || navigator.maxTouchPoints // works on most browsers\n        ); // works on IE10/11 and Surface\n    }\n    isIEorEdge() {\n        const ua = window.navigator.userAgent;\n        const msie = ua.indexOf('MSIE ');\n        if (msie > 0) {\n            // IE 10 or older => return version number\n            return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n        }\n        const trident = ua.indexOf('Trident/');\n        if (trident > 0) {\n            // IE 11 => return version number\n            const rv = ua.indexOf('rv:');\n            return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n        }\n        const edge = ua.indexOf('Edge/');\n        if (edge > 0) {\n            // Edge (IE 12+) => return version number\n            return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n        }\n        // other browser\n        return false;\n    }\n}\nDraggable.SCROLL_SPEED = 20;\n\nlet GridsterItemComponent = class GridsterItemComponent {\n    constructor(zone, gridsterPrototypeService, elementRef, gridster) {\n        this.zone = zone;\n        this.gridsterPrototypeService = gridsterPrototypeService;\n        this.xChange = new EventEmitter(true);\n        this.yChange = new EventEmitter(true);\n        this.xSmChange = new EventEmitter(true);\n        this.ySmChange = new EventEmitter(true);\n        this.xMdChange = new EventEmitter(true);\n        this.yMdChange = new EventEmitter(true);\n        this.xLgChange = new EventEmitter(true);\n        this.yLgChange = new EventEmitter(true);\n        this.xXlChange = new EventEmitter(true);\n        this.yXlChange = new EventEmitter(true);\n        this.wChange = new EventEmitter(true);\n        this.hChange = new EventEmitter(true);\n        this.wSmChange = new EventEmitter(true);\n        this.hSmChange = new EventEmitter(true);\n        this.wMdChange = new EventEmitter(true);\n        this.hMdChange = new EventEmitter(true);\n        this.wLgChange = new EventEmitter(true);\n        this.hLgChange = new EventEmitter(true);\n        this.wXlChange = new EventEmitter(true);\n        this.hXlChange = new EventEmitter(true);\n        this.change = new EventEmitter(true);\n        this.start = new EventEmitter(true);\n        this.end = new EventEmitter(true);\n        this.dragAndDrop = true;\n        this.resizable = true;\n        this.options = {};\n        this.isDragging = false;\n        this.isResizing = false;\n        this.defaultOptions = {\n            minWidth: 1,\n            minHeight: 1,\n            maxWidth: Infinity,\n            maxHeight: Infinity,\n            defaultWidth: 1,\n            defaultHeight: 1\n        };\n        this.subscriptions = [];\n        this.dragSubscriptions = [];\n        this.resizeSubscriptions = [];\n        this.gridster = gridster;\n        this.elementRef = elementRef;\n        this.$element = elementRef.nativeElement;\n        this.item = (new GridListItem()).setFromGridsterItem(this);\n        // if gridster is initialized do not show animation on new grid-item construct\n        if (this.gridster.isInitialized()) {\n            this.preventAnimation();\n        }\n    }\n    set positionX(value) {\n        this._positionX = value;\n    }\n    get positionX() {\n        return this._positionX;\n    }\n    set positionY(value) {\n        this._positionY = value;\n    }\n    get positionY() {\n        return this._positionY;\n    }\n    ngOnInit() {\n        this.options = Object.assign(this.defaultOptions, this.options);\n        this.w = this.w || this.options.defaultWidth;\n        this.h = this.h || this.options.defaultHeight;\n        this.wSm = this.wSm || this.w;\n        this.hSm = this.hSm || this.h;\n        this.wMd = this.wMd || this.w;\n        this.hMd = this.hMd || this.h;\n        this.wLg = this.wLg || this.w;\n        this.hLg = this.hLg || this.h;\n        this.wXl = this.wXl || this.w;\n        this.hXl = this.hXl || this.h;\n        if (this.gridster.isInitialized()) {\n            this.setPositionsOnItem();\n        }\n        this.gridster.registerItem(this.item);\n        this.gridster.calculateCellSize();\n        this.item.applySize();\n        this.item.applyPosition();\n        if (this.gridster.options.dragAndDrop && this.dragAndDrop) {\n            this.enableDragDrop();\n        }\n        if (this.gridster.isInitialized()) {\n            this.gridster.render();\n            this.gridster.updateCachedItems();\n        }\n    }\n    ngAfterViewInit() {\n        if (this.gridster.options.resizable && this.item.resizable) {\n            this.enableResizable();\n        }\n    }\n    ngOnChanges(changes) {\n        if (!this.gridster.gridList) {\n            return;\n        }\n        let rerender = false;\n        ['w', ...Object.keys(GridListItem.W_PROPERTY_MAP).map(breakpoint => GridListItem.W_PROPERTY_MAP[breakpoint])]\n            .filter(propName => changes[propName] && !changes[propName].isFirstChange())\n            .forEach((propName) => {\n            if (changes[propName].currentValue > this.options.maxWidth) {\n                this[propName] = this.options.maxWidth;\n                setTimeout(() => this[propName + 'Change'].emit(this[propName]));\n            }\n            rerender = true;\n        });\n        ['h', ...Object.keys(GridListItem.H_PROPERTY_MAP).map(breakpoint => GridListItem.H_PROPERTY_MAP[breakpoint])]\n            .filter(propName => changes[propName] && !changes[propName].isFirstChange())\n            .forEach((propName) => {\n            if (changes[propName].currentValue > this.options.maxHeight) {\n                this[propName] = this.options.maxHeight;\n                setTimeout(() => this[propName + 'Change'].emit(this[propName]));\n            }\n            rerender = true;\n        });\n        ['x', 'y',\n            ...Object.keys(GridListItem.X_PROPERTY_MAP).map(breakpoint => GridListItem.X_PROPERTY_MAP[breakpoint]),\n            ...Object.keys(GridListItem.Y_PROPERTY_MAP).map(breakpoint => GridListItem.Y_PROPERTY_MAP[breakpoint])]\n            .filter(propName => changes[propName] && !changes[propName].isFirstChange())\n            .forEach((propName) => rerender = true);\n        if (changes['dragAndDrop'] && !changes['dragAndDrop'].isFirstChange()) {\n            if (changes['dragAndDrop'].currentValue && this.gridster.options.dragAndDrop) {\n                this.enableDragDrop();\n            }\n            else {\n                this.disableDraggable();\n            }\n        }\n        if (changes['resizable'] && !changes['resizable'].isFirstChange()) {\n            if (changes['resizable'].currentValue && this.gridster.options.resizable) {\n                this.enableResizable();\n            }\n            else {\n                this.disableResizable();\n            }\n        }\n        if (rerender && this.gridster.gridsterComponent.isReady) {\n            this.gridster.debounceRenderSubject.next();\n        }\n    }\n    ngOnDestroy() {\n        this.gridster.removeItem(this.item);\n        this.gridster.itemRemoveSubject.next(this.item);\n        this.subscriptions.forEach((sub) => {\n            sub.unsubscribe();\n        });\n        this.disableDraggable();\n        this.disableResizable();\n    }\n    updateElemenetPosition() {\n        if (this.gridster.options.useCSSTransforms) {\n            utils.setTransform(this.$element, { x: this._positionX, y: this._positionY });\n        }\n        else {\n            utils.setCssElementPosition(this.$element, { x: this._positionX, y: this._positionY });\n        }\n    }\n    setPositionsOnItem() {\n        if (!this.item.hasPositions(this.gridster.options.breakpoint)) {\n            this.setPositionsForGrid(this.gridster.options);\n        }\n        this.gridster.gridsterOptions.responsiveOptions\n            .filter((options) => !this.item.hasPositions(options.breakpoint))\n            .forEach((options) => this.setPositionsForGrid(options));\n    }\n    enableResizable() {\n        if (this.resizeSubscriptions.length) {\n            return;\n        }\n        this.zone.runOutsideAngular(() => {\n            this.getResizeHandlers().forEach((handler) => {\n                const direction = this.getResizeDirection(handler);\n                if (this.hasResizableHandle(direction)) {\n                    handler.style.display = 'block';\n                }\n                const draggable = new Draggable(handler, this.getResizableOptions());\n                let startEvent;\n                let startData;\n                let cursorToElementPosition;\n                const dragStartSub = draggable.dragStart\n                    .subscribe((event) => {\n                    this.zone.run(() => {\n                        this.isResizing = true;\n                        startEvent = event;\n                        startData = this.createResizeStartObject(direction);\n                        cursorToElementPosition = event.getRelativeCoordinates(this.$element);\n                        this.gridster.onResizeStart(this.item);\n                        this.onStart('resize');\n                    });\n                });\n                const dragSub = draggable.dragMove\n                    .subscribe((event) => {\n                    const scrollData = this.gridster.gridsterScrollData;\n                    this.resizeElement({\n                        direction,\n                        startData,\n                        position: {\n                            x: event.clientX - cursorToElementPosition.x - this.gridster.gridsterRect.left,\n                            y: event.clientY - cursorToElementPosition.y - this.gridster.gridsterRect.top\n                        },\n                        startEvent,\n                        moveEvent: event,\n                        scrollDiffX: scrollData.scrollLeft - startData.scrollLeft,\n                        scrollDiffY: scrollData.scrollTop - startData.scrollTop\n                    });\n                    this.gridster.onResizeDrag(this.item);\n                });\n                const dragStopSub = draggable.dragStop\n                    .subscribe(() => {\n                    this.zone.run(() => {\n                        this.isResizing = false;\n                        this.gridster.onResizeStop(this.item);\n                        this.onEnd('resize');\n                    });\n                });\n                this.resizeSubscriptions = this.resizeSubscriptions.concat([dragStartSub, dragSub, dragStopSub]);\n            });\n        });\n    }\n    disableResizable() {\n        this.resizeSubscriptions.forEach((sub) => {\n            sub.unsubscribe();\n        });\n        this.resizeSubscriptions = [];\n        [].forEach.call(this.$element.querySelectorAll('.gridster-item-resizable-handler'), (handler) => {\n            handler.style.display = '';\n        });\n    }\n    enableDragDrop() {\n        if (this.dragSubscriptions.length) {\n            return;\n        }\n        this.zone.runOutsideAngular(() => {\n            let cursorToElementPosition;\n            const draggable = new Draggable(this.$element, this.getDraggableOptions());\n            const dragStartSub = draggable.dragStart\n                .subscribe((event) => {\n                this.zone.run(() => {\n                    this.gridster.onStart(this.item);\n                    this.isDragging = true;\n                    this.onStart('drag');\n                    cursorToElementPosition = event.getRelativeCoordinates(this.$element);\n                });\n            });\n            const dragSub = draggable.dragMove\n                .subscribe((event) => {\n                this.positionY = (event.clientY - cursorToElementPosition.y -\n                    this.gridster.gridsterRect.top);\n                this.positionX = (event.clientX - cursorToElementPosition.x -\n                    this.gridster.gridsterRect.left);\n                this.updateElemenetPosition();\n                this.gridster.onDrag(this.item);\n            });\n            const dragStopSub = draggable.dragStop\n                .subscribe(() => {\n                this.zone.run(() => {\n                    this.gridster.onStop(this.item);\n                    this.gridster.debounceRenderSubject.next();\n                    this.isDragging = false;\n                    this.onEnd('drag');\n                });\n            });\n            this.dragSubscriptions = this.dragSubscriptions.concat([dragStartSub, dragSub, dragStopSub]);\n        });\n    }\n    disableDraggable() {\n        this.dragSubscriptions.forEach((sub) => {\n            sub.unsubscribe();\n        });\n        this.dragSubscriptions = [];\n    }\n    getResizeHandlers() {\n        return [].filter.call(this.$element.children[0].children, (el) => {\n            return el.classList.contains('gridster-item-resizable-handler');\n        });\n    }\n    getDraggableOptions() {\n        return Object.assign({ scrollDirection: this.gridster.options.direction }, this.gridster.draggableOptions);\n    }\n    getResizableOptions() {\n        const resizableOptions = {};\n        if (this.gridster.draggableOptions.scroll || this.gridster.draggableOptions.scroll === false) {\n            resizableOptions.scroll = this.gridster.draggableOptions.scroll;\n        }\n        if (this.gridster.draggableOptions.scrollEdge) {\n            resizableOptions.scrollEdge = this.gridster.draggableOptions.scrollEdge;\n        }\n        resizableOptions.scrollDirection = this.gridster.options.direction;\n        return resizableOptions;\n    }\n    hasResizableHandle(direction) {\n        const isItemResizable = this.gridster.options.resizable && this.item.resizable;\n        const resizeHandles = this.gridster.options.resizeHandles;\n        return isItemResizable && (!resizeHandles || (resizeHandles && !!resizeHandles[direction]));\n    }\n    setPositionsForGrid(options) {\n        let x, y;\n        const position = this.findPosition(options);\n        x = options.direction === 'horizontal' ? position[0] : position[1];\n        y = options.direction === 'horizontal' ? position[1] : position[0];\n        this.item.setValueX(x, options.breakpoint);\n        this.item.setValueY(y, options.breakpoint);\n        setTimeout(() => {\n            this.item.triggerChangeX(options.breakpoint);\n            this.item.triggerChangeY(options.breakpoint);\n        });\n    }\n    findPosition(options) {\n        const gridList = new GridList(this.gridster.items.map(item => item.copyForBreakpoint(options.breakpoint)), options);\n        return gridList.findPositionForItem(this.item, { x: 0, y: 0 });\n    }\n    createResizeStartObject(direction) {\n        const scrollData = this.gridster.gridsterScrollData;\n        return {\n            top: this.positionY,\n            left: this.positionX,\n            height: parseInt(this.$element.style.height, 10),\n            width: parseInt(this.$element.style.width, 10),\n            minX: Math.max(this.item.x + this.item.w - this.options.maxWidth, 0),\n            maxX: this.item.x + this.item.w - this.options.minWidth,\n            minY: Math.max(this.item.y + this.item.h - this.options.maxHeight, 0),\n            maxY: this.item.y + this.item.h - this.options.minHeight,\n            minW: this.options.minWidth,\n            maxW: Math.min(this.options.maxWidth, (this.gridster.options.direction === 'vertical' && direction.indexOf('w') < 0) ?\n                this.gridster.options.lanes - this.item.x : this.options.maxWidth, direction.indexOf('w') >= 0 ?\n                this.item.x + this.item.w : this.options.maxWidth),\n            minH: this.options.minHeight,\n            maxH: Math.min(this.options.maxHeight, (this.gridster.options.direction === 'horizontal' && direction.indexOf('n') < 0) ?\n                this.gridster.options.lanes - this.item.y : this.options.maxHeight, direction.indexOf('n') >= 0 ?\n                this.item.y + this.item.h : this.options.maxHeight),\n            scrollLeft: scrollData.scrollLeft,\n            scrollTop: scrollData.scrollTop\n        };\n    }\n    onEnd(actionType) {\n        this.end.emit({ action: actionType, item: this.item });\n    }\n    onStart(actionType) {\n        this.start.emit({ action: actionType, item: this.item });\n    }\n    /**\n     * Assign class for short while to prevent animation of grid item component\n     */\n    preventAnimation() {\n        this.$element.classList.add('no-transition');\n        setTimeout(() => {\n            this.$element.classList.remove('no-transition');\n        }, 500);\n        return this;\n    }\n    getResizeDirection(handler) {\n        for (let i = handler.classList.length - 1; i >= 0; i--) {\n            if (handler.classList[i].match('handle-')) {\n                return handler.classList[i].split('-')[1];\n            }\n        }\n    }\n    resizeElement(config) {\n        // north\n        if (config.direction.indexOf('n') >= 0) {\n            this.resizeToNorth(config);\n        }\n        // west\n        if (config.direction.indexOf('w') >= 0) {\n            this.resizeToWest(config);\n        }\n        // east\n        if (config.direction.indexOf('e') >= 0) {\n            this.resizeToEast(config);\n        }\n        // south\n        if (config.direction.indexOf('s') >= 0) {\n            this.resizeToSouth(config);\n        }\n    }\n    resizeToNorth(config) {\n        const height = config.startData.height + config.startEvent.clientY -\n            config.moveEvent.clientY - config.scrollDiffY;\n        if (height < (config.startData.minH * this.gridster.cellHeight)) {\n            this.setMinHeight('n', config);\n        }\n        else if (height > (config.startData.maxH * this.gridster.cellHeight)) {\n            this.setMaxHeight('n', config);\n        }\n        else {\n            this.positionY = config.position.y;\n            this.$element.style.height = height + 'px';\n        }\n    }\n    resizeToWest(config) {\n        const width = config.startData.width + config.startEvent.clientX -\n            config.moveEvent.clientX - config.scrollDiffX;\n        if (width < (config.startData.minW * this.gridster.cellWidth)) {\n            this.setMinWidth('w', config);\n        }\n        else if (width > (config.startData.maxW * this.gridster.cellWidth)) {\n            this.setMaxWidth('w', config);\n        }\n        else {\n            this.positionX = config.position.x;\n            this.updateElemenetPosition();\n            this.$element.style.width = width + 'px';\n        }\n    }\n    resizeToEast(config) {\n        const width = config.startData.width + config.moveEvent.clientX -\n            config.startEvent.clientX + config.scrollDiffX;\n        if (width > (config.startData.maxW * this.gridster.cellWidth)) {\n            this.setMaxWidth('e', config);\n        }\n        else if (width < (config.startData.minW * this.gridster.cellWidth)) {\n            this.setMinWidth('e', config);\n        }\n        else {\n            this.$element.style.width = width + 'px';\n        }\n    }\n    resizeToSouth(config) {\n        const height = config.startData.height + config.moveEvent.clientY -\n            config.startEvent.clientY + config.scrollDiffY;\n        if (height > config.startData.maxH * this.gridster.cellHeight) {\n            this.setMaxHeight('s', config);\n        }\n        else if (height < config.startData.minH * this.gridster.cellHeight) {\n            this.setMinHeight('s', config);\n        }\n        else {\n            this.$element.style.height = height + 'px';\n        }\n    }\n    setMinHeight(direction, config) {\n        if (direction === 'n') {\n            this.$element.style.height = (config.startData.minH * this.gridster.cellHeight) + 'px';\n            this.positionY = config.startData.maxY * this.gridster.cellHeight;\n        }\n        else {\n            this.$element.style.height = (config.startData.minH * this.gridster.cellHeight) + 'px';\n        }\n    }\n    setMinWidth(direction, config) {\n        if (direction === 'w') {\n            this.$element.style.width = (config.startData.minW * this.gridster.cellWidth) + 'px';\n            this.positionX = config.startData.maxX * this.gridster.cellWidth;\n            this.updateElemenetPosition();\n        }\n        else {\n            this.$element.style.width = (config.startData.minW * this.gridster.cellWidth) + 'px';\n        }\n    }\n    setMaxHeight(direction, config) {\n        if (direction === 'n') {\n            this.$element.style.height = (config.startData.maxH * this.gridster.cellHeight) + 'px';\n            this.positionY = config.startData.minY * this.gridster.cellHeight;\n        }\n        else {\n            this.$element.style.height = (config.startData.maxH * this.gridster.cellHeight) + 'px';\n        }\n    }\n    setMaxWidth(direction, config) {\n        if (direction === 'w') {\n            this.$element.style.width = (config.startData.maxW * this.gridster.cellWidth) + 'px';\n            this.positionX = config.startData.minX * this.gridster.cellWidth;\n            this.updateElemenetPosition();\n        }\n        else {\n            this.$element.style.width = (config.startData.maxW * this.gridster.cellWidth) + 'px';\n        }\n    }\n};\nGridsterItemComponent.ɵfac = function GridsterItemComponent_Factory(t) { return new (t || GridsterItemComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(GridsterPrototypeService), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(GridsterService)); };\nGridsterItemComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: GridsterItemComponent, selectors: [[\"ngx-gridster-item\"]], hostVars: 4, hostBindings: function GridsterItemComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"is-dragging\", ctx.isDragging)(\"is-resizing\", ctx.isResizing);\n    } }, inputs: { dragAndDrop: \"dragAndDrop\", resizable: \"resizable\", options: \"options\", w: \"w\", h: \"h\", wSm: \"wSm\", hSm: \"hSm\", wMd: \"wMd\", hMd: \"hMd\", wLg: \"wLg\", hLg: \"hLg\", wXl: \"wXl\", hXl: \"hXl\", x: \"x\", y: \"y\", xSm: \"xSm\", ySm: \"ySm\", xMd: \"xMd\", yMd: \"yMd\", xLg: \"xLg\", yLg: \"yLg\", xXl: \"xXl\", yXl: \"yXl\" }, outputs: { xChange: \"xChange\", yChange: \"yChange\", xSmChange: \"xSmChange\", ySmChange: \"ySmChange\", xMdChange: \"xMdChange\", yMdChange: \"yMdChange\", xLgChange: \"xLgChange\", yLgChange: \"yLgChange\", xXlChange: \"xXlChange\", yXlChange: \"yXlChange\", wChange: \"wChange\", hChange: \"hChange\", wSmChange: \"wSmChange\", hSmChange: \"hSmChange\", wMdChange: \"wMdChange\", hMdChange: \"hMdChange\", wLgChange: \"wLgChange\", hLgChange: \"hLgChange\", wXlChange: \"wXlChange\", hXlChange: \"hXlChange\", change: \"change\", start: \"start\", end: \"end\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c1, decls: 10, vars: 0, consts: [[1, \"gridster-item-inner\"], [1, \"gridster-item-resizable-handler\", \"handle-s\"], [1, \"gridster-item-resizable-handler\", \"handle-e\"], [1, \"gridster-item-resizable-handler\", \"handle-n\"], [1, \"gridster-item-resizable-handler\", \"handle-w\"], [1, \"gridster-item-resizable-handler\", \"handle-se\"], [1, \"gridster-item-resizable-handler\", \"handle-ne\"], [1, \"gridster-item-resizable-handler\", \"handle-sw\"], [1, \"gridster-item-resizable-handler\", \"handle-nw\"]], template: function GridsterItemComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelement(2, \"div\", 1);\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n        ɵngcc0.ɵɵelement(4, \"div\", 3);\n        ɵngcc0.ɵɵelement(5, \"div\", 4);\n        ɵngcc0.ɵɵelement(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelement(8, \"div\", 7);\n        ɵngcc0.ɵɵelement(9, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\"\\n    ngx-gridster-item {\\n        display: block;\\n        position: absolute;\\n        top: 0;\\n        left: 0;\\n        z-index: 1;\\n        -webkit-transition: none;\\n        transition: none;\\n    }\\n\\n    .gridster--ready ngx-gridster-item {\\n        transition: all 200ms ease;\\n        transition-property: left, top;\\n    }\\n\\n    .gridster--ready.css-transform ngx-gridster-item  {\\n        transition-property: transform;\\n    }\\n\\n    .gridster--ready ngx-gridster-item.is-dragging,\\n    .gridster--ready ngx-gridster-item.is-resizing {\\n        -webkit-transition: none;\\n        transition: none;\\n        z-index: 9999;\\n    }\\n\\n    ngx-gridster-item.no-transition {\\n        -webkit-transition: none;\\n        transition: none;\\n    }\\n    ngx-gridster-item .gridster-item-resizable-handler {\\n        position: absolute;\\n        z-index: 2;\\n        display: none;\\n    }\\n\\n    ngx-gridster-item .gridster-item-resizable-handler.handle-n {\\n      cursor: n-resize;\\n      height: 10px;\\n      right: 0;\\n      top: 0;\\n      left: 0;\\n    }\\n\\n    ngx-gridster-item .gridster-item-resizable-handler.handle-e {\\n      cursor: e-resize;\\n      width: 10px;\\n      bottom: 0;\\n      right: 0;\\n      top: 0;\\n    }\\n\\n    ngx-gridster-item .gridster-item-resizable-handler.handle-s {\\n      cursor: s-resize;\\n      height: 10px;\\n      right: 0;\\n      bottom: 0;\\n      left: 0;\\n    }\\n\\n    ngx-gridster-item .gridster-item-resizable-handler.handle-w {\\n      cursor: w-resize;\\n      width: 10px;\\n      left: 0;\\n      top: 0;\\n      bottom: 0;\\n    }\\n\\n    ngx-gridster-item .gridster-item-resizable-handler.handle-ne {\\n      cursor: ne-resize;\\n      width: 10px;\\n      height: 10px;\\n      right: 0;\\n      top: 0;\\n    }\\n\\n    ngx-gridster-item .gridster-item-resizable-handler.handle-nw {\\n      cursor: nw-resize;\\n      width: 10px;\\n      height: 10px;\\n      left: 0;\\n      top: 0;\\n    }\\n\\n    ngx-gridster-item .gridster-item-resizable-handler.handle-se {\\n      cursor: se-resize;\\n      width: 0;\\n      height: 0;\\n      right: 0;\\n      bottom: 0;\\n      border-style: solid;\\n      border-width: 0 0 10px 10px;\\n      border-color: transparent;\\n    }\\n\\n    ngx-gridster-item .gridster-item-resizable-handler.handle-sw {\\n      cursor: sw-resize;\\n      width: 10px;\\n      height: 10px;\\n      left: 0;\\n      bottom: 0;\\n    }\\n\\n    ngx-gridster-item:hover .gridster-item-resizable-handler.handle-se {\\n      border-color: transparent transparent #ccc\\n    }\\n    \"], encapsulation: 2, changeDetection: 0 });\nGridsterItemComponent.ctorParameters = () => [\n    { type: NgZone },\n    { type: GridsterPrototypeService },\n    { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },\n    { type: GridsterService, decorators: [{ type: Inject, args: [GridsterService,] }] }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemComponent.prototype, \"x\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"xChange\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemComponent.prototype, \"y\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"yChange\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemComponent.prototype, \"xSm\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"xSmChange\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemComponent.prototype, \"ySm\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"ySmChange\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemComponent.prototype, \"xMd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"xMdChange\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemComponent.prototype, \"yMd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"yMdChange\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemComponent.prototype, \"xLg\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"xLgChange\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemComponent.prototype, \"yLg\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"yLgChange\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemComponent.prototype, \"xXl\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"xXlChange\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemComponent.prototype, \"yXl\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"yXlChange\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemComponent.prototype, \"w\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"wChange\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemComponent.prototype, \"h\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"hChange\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemComponent.prototype, \"wSm\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"wSmChange\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemComponent.prototype, \"hSm\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"hSmChange\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemComponent.prototype, \"wMd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"wMdChange\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemComponent.prototype, \"hMd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"hMdChange\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemComponent.prototype, \"wLg\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"wLgChange\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemComponent.prototype, \"hLg\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"hLgChange\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemComponent.prototype, \"wXl\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"wXlChange\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemComponent.prototype, \"hXl\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"hXlChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"change\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"start\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"end\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"dragAndDrop\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"resizable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"options\", void 0);\n__decorate([\n    HostBinding('class.is-dragging'),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"isDragging\", void 0);\n__decorate([\n    HostBinding('class.is-resizing'),\n    __metadata(\"design:type\", Object)\n], GridsterItemComponent.prototype, \"isResizing\", void 0);\nGridsterItemComponent = __decorate([ __param(2, Inject(ElementRef)),\n    __param(3, Inject(GridsterService)),\n    __metadata(\"design:paramtypes\", [NgZone,\n        GridsterPrototypeService,\n        ElementRef,\n        GridsterService])\n], GridsterItemComponent);\n\nlet GridsterItemPrototypeDirective = class GridsterItemPrototypeDirective {\n    constructor(zone, elementRef, gridsterPrototype) {\n        this.zone = zone;\n        this.elementRef = elementRef;\n        this.gridsterPrototype = gridsterPrototype;\n        this.drop = new EventEmitter();\n        this.start = new EventEmitter();\n        this.cancel = new EventEmitter();\n        this.enter = new EventEmitter();\n        this.out = new EventEmitter();\n        this.config = {};\n        this.x = 0;\n        this.y = 0;\n        this.autoSize = false;\n        this.isDragging = false;\n        this.subscribtions = [];\n        this.item = (new GridListItem()).setFromGridsterItemPrototype(this);\n    }\n    // must be set to true because of item dragAndDrop configuration\n    get dragAndDrop() {\n        return true;\n    }\n    get gridster() {\n        return this.dragContextGridster;\n    }\n    ngOnInit() {\n        this.wSm = this.wSm || this.w;\n        this.hSm = this.hSm || this.h;\n        this.wMd = this.wMd || this.w;\n        this.hMd = this.hMd || this.h;\n        this.wLg = this.wLg || this.w;\n        this.hLg = this.hLg || this.h;\n        this.wXl = this.wXl || this.w;\n        this.hXl = this.hXl || this.h;\n        this.zone.runOutsideAngular(() => {\n            this.enableDragDrop();\n        });\n    }\n    ngOnDestroy() {\n        this.subscribtions.forEach((sub) => {\n            sub.unsubscribe();\n        });\n    }\n    onDrop(gridster) {\n        if (!this.config.helper) {\n            this.$element.parentNode.removeChild(this.$element);\n        }\n        this.drop.emit({\n            item: this.item,\n            gridster: gridster\n        });\n    }\n    onCancel() {\n        this.cancel.emit({ item: this.item });\n    }\n    onEnter(gridster) {\n        this.enter.emit({\n            item: this.item,\n            gridster: gridster\n        });\n    }\n    onOver(gridster) { }\n    onOut(gridster) {\n        this.out.emit({\n            item: this.item,\n            gridster: gridster\n        });\n    }\n    getPositionToGridster(gridster) {\n        const relativeContainerCoords = this.getContainerCoordsToGridster(gridster);\n        return {\n            y: this.positionY - relativeContainerCoords.top,\n            x: this.positionX - relativeContainerCoords.left\n        };\n    }\n    setDragContextGridster(gridster) {\n        this.dragContextGridster = gridster;\n    }\n    getContainerCoordsToGridster(gridster) {\n        return {\n            left: gridster.gridsterRect.left - this.parentRect.left,\n            top: gridster.gridsterRect.top - this.parentRect.top\n        };\n    }\n    enableDragDrop() {\n        let cursorToElementPosition;\n        const draggable = new Draggable(this.elementRef.nativeElement);\n        const dragStartSub = draggable.dragStart\n            .subscribe((event) => {\n            this.zone.run(() => {\n                this.$element = this.provideDragElement();\n                this.containerRectange = this.$element.parentElement.getBoundingClientRect();\n                this.updateParentElementData();\n                this.onStart(event);\n                cursorToElementPosition = event.getRelativeCoordinates(this.$element);\n            });\n        });\n        const dragSub = draggable.dragMove\n            .subscribe((event) => {\n            this.setElementPosition(this.$element, {\n                x: event.clientX - cursorToElementPosition.x - this.parentRect.left,\n                y: event.clientY - cursorToElementPosition.y - this.parentRect.top\n            });\n            this.onDrag(event);\n        });\n        const dragStopSub = draggable.dragStop\n            .subscribe((event) => {\n            this.zone.run(() => {\n                this.onStop(event);\n                this.$element = null;\n            });\n        });\n        const scrollSub = fromEvent(document, 'scroll')\n            .subscribe(() => {\n            if (this.$element) {\n                this.updateParentElementData();\n            }\n        });\n        this.subscribtions = this.subscribtions.concat([dragStartSub, dragSub, dragStopSub, scrollSub]);\n    }\n    setElementPosition(element, position) {\n        this.positionX = position.x;\n        this.positionY = position.y;\n        utils.setCssElementPosition(element, position);\n    }\n    updateParentElementData() {\n        this.parentRect = this.$element.parentElement.getBoundingClientRect();\n        this.parentOffset = {\n            left: this.$element.parentElement.offsetLeft,\n            top: this.$element.parentElement.offsetTop\n        };\n    }\n    onStart(event) {\n        this.isDragging = true;\n        this.$element.style.pointerEvents = 'none';\n        this.$element.style.position = 'absolute';\n        this.gridsterPrototype.dragItemStart(this, event);\n        this.start.emit({ item: this.item });\n    }\n    onDrag(event) {\n        this.gridsterPrototype.updatePrototypePosition(this, event);\n    }\n    onStop(event) {\n        this.gridsterPrototype.dragItemStop(this, event);\n        this.isDragging = false;\n        this.$element.style.pointerEvents = 'auto';\n        this.$element.style.position = '';\n        utils.resetCSSElementPosition(this.$element);\n        if (this.config.helper) {\n            this.$element.parentNode.removeChild(this.$element);\n        }\n    }\n    provideDragElement() {\n        let dragElement = this.elementRef.nativeElement;\n        if (this.config.helper) {\n            dragElement = (dragElement).cloneNode(true);\n            document.body.appendChild(this.fixStylesForBodyHelper(dragElement));\n        }\n        else {\n            this.fixStylesForRelativeElement(dragElement);\n        }\n        return dragElement;\n    }\n    fixStylesForRelativeElement(el) {\n        if (window.getComputedStyle(el).position === 'absolute') {\n            return el;\n        }\n        const rect = this.elementRef.nativeElement.getBoundingClientRect();\n        this.containerRectange = el.parentElement.getBoundingClientRect();\n        el.style.position = 'absolute';\n        this.setElementPosition(el, {\n            x: rect.left - this.containerRectange.left,\n            y: rect.top - this.containerRectange.top\n        });\n        return el;\n    }\n    /**\n     * When element is cloned and append to body it should have position absolute and coords set by original\n     * relative prototype element position.\n     */\n    fixStylesForBodyHelper(el) {\n        const bodyRect = document.body.getBoundingClientRect();\n        const rect = this.elementRef.nativeElement.getBoundingClientRect();\n        el.style.position = 'absolute';\n        this.setElementPosition(el, {\n            x: rect.left - bodyRect.left,\n            y: rect.top - bodyRect.top\n        });\n        return el;\n    }\n};\nGridsterItemPrototypeDirective.ɵfac = function GridsterItemPrototypeDirective_Factory(t) { return new (t || GridsterItemPrototypeDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(GridsterPrototypeService)); };\nGridsterItemPrototypeDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: GridsterItemPrototypeDirective, selectors: [[\"\", \"ngxGridsterItemPrototype\", \"\"]], inputs: { config: \"config\", wSm: \"wSm\", hSm: \"hSm\", wMd: \"wMd\", hMd: \"hMd\", wLg: \"wLg\", hLg: \"hLg\", wXl: \"wXl\", hXl: \"hXl\", data: \"data\", w: \"w\", h: \"h\" }, outputs: { drop: \"drop\", start: \"start\", cancel: \"cancel\", enter: \"enter\", out: \"out\" } });\nGridsterItemPrototypeDirective.ctorParameters = () => [\n    { type: NgZone },\n    { type: ElementRef },\n    { type: GridsterPrototypeService }\n];\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemPrototypeDirective.prototype, \"drop\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemPrototypeDirective.prototype, \"start\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemPrototypeDirective.prototype, \"cancel\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemPrototypeDirective.prototype, \"enter\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], GridsterItemPrototypeDirective.prototype, \"out\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], GridsterItemPrototypeDirective.prototype, \"data\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], GridsterItemPrototypeDirective.prototype, \"config\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemPrototypeDirective.prototype, \"w\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemPrototypeDirective.prototype, \"wSm\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemPrototypeDirective.prototype, \"wMd\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemPrototypeDirective.prototype, \"wLg\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemPrototypeDirective.prototype, \"wXl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemPrototypeDirective.prototype, \"h\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemPrototypeDirective.prototype, \"hSm\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemPrototypeDirective.prototype, \"hMd\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemPrototypeDirective.prototype, \"hLg\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], GridsterItemPrototypeDirective.prototype, \"hXl\", void 0);\nGridsterItemPrototypeDirective = __decorate([ __metadata(\"design:paramtypes\", [NgZone,\n        ElementRef,\n        GridsterPrototypeService])\n], GridsterItemPrototypeDirective);\n\nvar GridsterModule_1;\nlet GridsterModule = GridsterModule_1 = class GridsterModule {\n    static forRoot() {\n        return {\n            ngModule: GridsterModule_1,\n            providers: [GridsterPrototypeService]\n        };\n    }\n};\nGridsterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: GridsterModule });\nGridsterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function GridsterModule_Factory(t) { return new (t || GridsterModule)(); }, imports: [[\n            CommonModule\n        ]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GridsterService, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GridsterPrototypeService, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GridsterComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-gridster',\n                template: `<div class=\"gridster-container\">\n      <ng-content></ng-content>\n      <div class=\"position-highlight\" style=\"display:none;\" #positionHighlight>\n        <div class=\"inner\"></div>\n      </div>\n    </div>`,\n                providers: [GridsterService],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [`\n            ngx-gridster {\n                position: relative;\n                display: block;\n                left: 0;\n                width: 100%;\n            }\n\n            ngx-gridster.gridster--dragging {\n                -moz-user-select: none;\n                -khtml-user-select: none;\n                -webkit-user-select: none;\n                -ms-user-select: none;\n                user-select: none;\n            }\n\n            ngx-gridster .gridster-container {\n                position: relative;\n                width: 100%;\n                list-style: none;\n                -webkit-transition: width 0.2s, height 0.2s;\n                transition: width 0.2s, height 0.2s;\n            }\n\n            ngx-gridster .position-highlight {\n                display: block;\n                position: absolute;\n                z-index: 1;\n            }\n        `]\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: GridsterService }, { type: GridsterPrototypeService }]; }, { optionsChange: [{\n            type: Output\n        }], ready: [{\n            type: Output\n        }], reflow: [{\n            type: Output\n        }], prototypeDrop: [{\n            type: Output\n        }], prototypeEnter: [{\n            type: Output\n        }], prototypeOut: [{\n            type: Output\n        }], draggableOptions: [{\n            type: Input\n        }], isDragging: [{\n            type: HostBinding,\n            args: ['class.gridster--dragging']\n        }], isResizing: [{\n            type: HostBinding,\n            args: ['class.gridster--resizing']\n        }], isReady: [{\n            type: HostBinding,\n            args: ['class.gridster--ready']\n        }], options: [{\n            type: Input\n        }], parent: [{\n            type: Input\n        }], $positionHighlight: [{\n            type: ViewChild,\n            args: ['positionHighlight', { static: true }]\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GridsterItemComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-gridster-item',\n                template: `<div class=\"gridster-item-inner\">\n      <ng-content></ng-content>\n      <div class=\"gridster-item-resizable-handler handle-s\"></div>\n      <div class=\"gridster-item-resizable-handler handle-e\"></div>\n      <div class=\"gridster-item-resizable-handler handle-n\"></div>\n      <div class=\"gridster-item-resizable-handler handle-w\"></div>\n      <div class=\"gridster-item-resizable-handler handle-se\"></div>\n      <div class=\"gridster-item-resizable-handler handle-ne\"></div>\n      <div class=\"gridster-item-resizable-handler handle-sw\"></div>\n      <div class=\"gridster-item-resizable-handler handle-nw\"></div>\n    </div>`,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [`\n    ngx-gridster-item {\n        display: block;\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 1;\n        -webkit-transition: none;\n        transition: none;\n    }\n\n    .gridster--ready ngx-gridster-item {\n        transition: all 200ms ease;\n        transition-property: left, top;\n    }\n\n    .gridster--ready.css-transform ngx-gridster-item  {\n        transition-property: transform;\n    }\n\n    .gridster--ready ngx-gridster-item.is-dragging,\n    .gridster--ready ngx-gridster-item.is-resizing {\n        -webkit-transition: none;\n        transition: none;\n        z-index: 9999;\n    }\n\n    ngx-gridster-item.no-transition {\n        -webkit-transition: none;\n        transition: none;\n    }\n    ngx-gridster-item .gridster-item-resizable-handler {\n        position: absolute;\n        z-index: 2;\n        display: none;\n    }\n\n    ngx-gridster-item .gridster-item-resizable-handler.handle-n {\n      cursor: n-resize;\n      height: 10px;\n      right: 0;\n      top: 0;\n      left: 0;\n    }\n\n    ngx-gridster-item .gridster-item-resizable-handler.handle-e {\n      cursor: e-resize;\n      width: 10px;\n      bottom: 0;\n      right: 0;\n      top: 0;\n    }\n\n    ngx-gridster-item .gridster-item-resizable-handler.handle-s {\n      cursor: s-resize;\n      height: 10px;\n      right: 0;\n      bottom: 0;\n      left: 0;\n    }\n\n    ngx-gridster-item .gridster-item-resizable-handler.handle-w {\n      cursor: w-resize;\n      width: 10px;\n      left: 0;\n      top: 0;\n      bottom: 0;\n    }\n\n    ngx-gridster-item .gridster-item-resizable-handler.handle-ne {\n      cursor: ne-resize;\n      width: 10px;\n      height: 10px;\n      right: 0;\n      top: 0;\n    }\n\n    ngx-gridster-item .gridster-item-resizable-handler.handle-nw {\n      cursor: nw-resize;\n      width: 10px;\n      height: 10px;\n      left: 0;\n      top: 0;\n    }\n\n    ngx-gridster-item .gridster-item-resizable-handler.handle-se {\n      cursor: se-resize;\n      width: 0;\n      height: 0;\n      right: 0;\n      bottom: 0;\n      border-style: solid;\n      border-width: 0 0 10px 10px;\n      border-color: transparent;\n    }\n\n    ngx-gridster-item .gridster-item-resizable-handler.handle-sw {\n      cursor: sw-resize;\n      width: 10px;\n      height: 10px;\n      left: 0;\n      bottom: 0;\n    }\n\n    ngx-gridster-item:hover .gridster-item-resizable-handler.handle-se {\n      border-color: transparent transparent #ccc\n    }\n    `]\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: GridsterPrototypeService }, { type: ɵngcc0.ElementRef, decorators: [{\n                type: Inject,\n                args: [ElementRef]\n            }] }, { type: GridsterService, decorators: [{\n                type: Inject,\n                args: [GridsterService]\n            }] }]; }, { xChange: [{\n            type: Output\n        }], yChange: [{\n            type: Output\n        }], xSmChange: [{\n            type: Output\n        }], ySmChange: [{\n            type: Output\n        }], xMdChange: [{\n            type: Output\n        }], yMdChange: [{\n            type: Output\n        }], xLgChange: [{\n            type: Output\n        }], yLgChange: [{\n            type: Output\n        }], xXlChange: [{\n            type: Output\n        }], yXlChange: [{\n            type: Output\n        }], wChange: [{\n            type: Output\n        }], hChange: [{\n            type: Output\n        }], wSmChange: [{\n            type: Output\n        }], hSmChange: [{\n            type: Output\n        }], wMdChange: [{\n            type: Output\n        }], hMdChange: [{\n            type: Output\n        }], wLgChange: [{\n            type: Output\n        }], hLgChange: [{\n            type: Output\n        }], wXlChange: [{\n            type: Output\n        }], hXlChange: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], start: [{\n            type: Output\n        }], end: [{\n            type: Output\n        }], dragAndDrop: [{\n            type: Input\n        }], resizable: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }], isDragging: [{\n            type: HostBinding,\n            args: ['class.is-dragging']\n        }], isResizing: [{\n            type: HostBinding,\n            args: ['class.is-resizing']\n        }], w: [{\n            type: Input\n        }], h: [{\n            type: Input\n        }], wSm: [{\n            type: Input\n        }], hSm: [{\n            type: Input\n        }], wMd: [{\n            type: Input\n        }], hMd: [{\n            type: Input\n        }], wLg: [{\n            type: Input\n        }], hLg: [{\n            type: Input\n        }], wXl: [{\n            type: Input\n        }], hXl: [{\n            type: Input\n        }], x: [{\n            type: Input\n        }], y: [{\n            type: Input\n        }], xSm: [{\n            type: Input\n        }], ySm: [{\n            type: Input\n        }], xMd: [{\n            type: Input\n        }], yMd: [{\n            type: Input\n        }], xLg: [{\n            type: Input\n        }], yLg: [{\n            type: Input\n        }], xXl: [{\n            type: Input\n        }], yXl: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GridsterItemPrototypeDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ngxGridsterItemPrototype]'\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: GridsterPrototypeService }]; }, { drop: [{\n            type: Output\n        }], start: [{\n            type: Output\n        }], cancel: [{\n            type: Output\n        }], enter: [{\n            type: Output\n        }], out: [{\n            type: Output\n        }], config: [{\n            type: Input\n        }], wSm: [{\n            type: Input\n        }], hSm: [{\n            type: Input\n        }], wMd: [{\n            type: Input\n        }], hMd: [{\n            type: Input\n        }], wLg: [{\n            type: Input\n        }], hLg: [{\n            type: Input\n        }], wXl: [{\n            type: Input\n        }], hXl: [{\n            type: Input\n        }], data: [{\n            type: Input\n        }], w: [{\n            type: Input\n        }], h: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(GridsterModule, { declarations: function () { return [GridsterComponent,\n        GridsterItemComponent,\n        GridsterItemPrototypeDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [GridsterComponent,\n        GridsterItemComponent,\n        GridsterItemPrototypeDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GridsterModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule\n                ],\n                declarations: [\n                    GridsterComponent,\n                    GridsterItemComponent,\n                    GridsterItemPrototypeDirective\n                ],\n                exports: [\n                    GridsterComponent,\n                    GridsterItemComponent,\n                    GridsterItemPrototypeDirective\n                ]\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of gridster\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { GridListItem, GridsterComponent, GridsterItemComponent, GridsterItemPrototypeDirective, GridsterModule, GridsterOptions, GridsterPrototypeService, GridsterService };\n\n//# sourceMappingURL=angular2gridster.js.map","export default \"<div class=\\\"admin-dashboard-wrapper\\\">\\n\\t<div class=\\\"row mt-4\\\">\\n\\t\\t<div class=\\\"col-sm-2 dashboard-col-pad\\\" *ngFor= \\\"let first of firstRowData\\\">\\n\\t\\t\\t<app-admin-dash-first-row [label]=\\\"first\\\"></app-admin-dash-first-row>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\\\"row mt-4\\\">\\n\\t\\t<div class=\\\"col-sm-3 dashboard-col-pad\\\" *ngFor= \\\"let second of secondRowData\\\">\\n\\t\\t\\t<app-admin-dash-second-row [label]=\\\"second\\\"></app-admin-dash-second-row>\\n\\t\\t</div>\\n\\t</div>  \\n\\n\\t<div class=\\\"row mt-5\\\">\\n\\t\\t<div class=\\\"col-sm-6 dashboard-col-pad wid-height\\\">\\n\\t\\t\\t<app-dash-pie-chart></app-dash-pie-chart>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-sm-6 dashboard-col-pad wid-height\\\">\\n\\t\\t\\t<app-dash-income-chart></app-dash-income-chart>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\\\"row mt-5\\\">\\n\\t\\t<div class=\\\"col-sm-3 dashboard-col-pad\\\" *ngFor= \\\"let fourth of fourthRowData\\\">\\n\\t\\t\\t<app-admin-dash-second-row [label]=\\\"fourth\\\"></app-admin-dash-second-row>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\\\"row mt-5\\\">\\n\\t\\t<div class=\\\"col-sm-6 dashboard-col-pad wid-height\\\">\\n\\t\\t\\t<app-dash-meeting></app-dash-meeting>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-sm-6 dashboard-col-pad wid-height\\\">\\n\\t\\t\\t<app-dash-broad-cast></app-dash-broad-cast>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\\\"row mt-5\\\">\\n\\t\\t<div class=\\\"col-sm-3 dashboard-col-pad\\\" *ngFor= \\\"let sixth of sixthRowData\\\">\\n\\t\\t\\t<app-admin-dash-second-row [label]=\\\"sixth\\\"></app-admin-dash-second-row>\\n\\t\\t</div>\\n\\t</div>\\n\\t\\n\\t<div class=\\\"row mt-5\\\">\\n\\t\\t<div class=\\\"col-sm-6 dashboard-col-pad wid-height\\\">\\n\\t\\t\\t<app-dash-com-list [label]=\\\"'Emergency Alerts'\\\"></app-dash-com-list>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-sm-6 dashboard-col-pad wid-height\\\">\\n\\t\\t\\t<app-dash-com-list [label]=\\\"'Recent Violations'\\\"></app-dash-com-list>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\\\"row mt-5\\\">\\n\\t\\t<div class=\\\"col-sm-6 dashboard-col-pad wid-height\\\">\\n\\t\\t\\t<app-dash-com-list [label]=\\\"'Work Permit'\\\"></app-dash-com-list>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-sm-6 dashboard-col-pad wid-height\\\">\\n\\t\\t\\t<app-dash-com-list [label]=\\\"'Facility Bookings'\\\"></app-dash-com-list>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","export default \"<!-- <div class=\\\"custom-dashboard-wrapper\\\">\\n\\t<div cdkDropList cdkDropListOrientation=\\\"horizontal\\\" class=\\\"row drag\\\" (cdkDropListDropped)=\\\"drop($event)\\\">\\n\\t\\t<ng-container *ngFor=\\\"let data of array\\\" cdkDrag>\\n\\t\\t\\t<div *ngIf=\\\"data.row == 1\\\" class=\\\"col-sm-2 widgets dashboard-col-pad mt-5\\\">\\n\\t\\t\\t\\t<div class=\\\"card example-custom-placeholder\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"card-body align-left-right\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"icon-lg fa fa-database dark-blue text-left\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"text-right\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"icon-md fa fa-ellipsis-h dark-blue link mr-3\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t\\t\\t<h6 class=\\\"mt-2\\\">{{data.name}}</h6> \\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"card-footer align-left-right\\\">\\n\\t\\t\\t\\t\\t\\t<p>{{data.name}}</p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div *ngIf=\\\"data.row == 2\\\" class=\\\"col-sm-3 dashboard-col-pad second-row-layout mt-5\\\">\\n\\t\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"card-body align-left-right bg-card-body\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"text-left\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"icon-md fa fa-eye link text-white mb-3\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"icon-lg fa fa-credit-card text-white\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"text-right\\\">\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\\"text-white\\\">Open Community</p> \\n\\t\\t\\t\\t\\t\\t\\t<h6 class=\\\"text-white mt-2\\\">{{communityTickets}}</h6> \\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"card-footer align-left-right bg-card-footer\\\">\\n\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\\"text-white\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-calendar mr-3 text-white\\\" aria-hidden=\\\"true\\\"></i>Last day\\n\\t\\t\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</ng-container>\\n\\t\\t\\n\\t</div>\\n\\n</div> -->\\n\\n<!-- <div class=\\\"grid-container\\\" style=\\\"height: 615px; overflow: hidden;\\\">\\n\\t<mat-grid-list cols=\\\"12\\\" rowHeight=\\\"1:1\\\" gutterSize=\\\"15px\\\">\\n\\t  <mat-grid-tile *ngFor=\\\"let card of cards; let i = index;\\\" \\n\\t\\t\\t\\t\\t [colspan]=\\\"card.cols\\\" [rowspan]=\\\"card.rows\\\">\\n\\t\\t<cdk-drop-list [cdkDropListConnectedTo]=\\\"drops\\\" [cdkDropListData]=\\\"i\\\" >\\n\\t\\t  <mat-card cdkDrag (cdkDragEntered)=\\\"entered($event)\\\" [cdkDragData]=\\\"i\\\"\\n\\t\\t\\t\\t\\tclass=\\\"dashboard-card\\\"  [style.backgroundColor]=\\\"card.color\\\">\\n\\t\\t\\t\\t<mat-icon cdkDragHandle class=\\\"more-button\\\">drag_handle</mat-icon>\\n\\t\\t\\t<mat-card-content class=\\\"dashboard-card-content\\\">\\n\\t\\t\\t  <h1>{{card.title}}</h1>\\n\\t\\t\\t</mat-card-content>\\n\\t\\t  </mat-card>\\n\\t\\t</cdk-drop-list>\\n\\t  </mat-grid-tile>\\n\\t</mat-grid-list>\\n  </div> -->\\n\\n\\n  <div class=\\\"main-content\\\">\\n  \\n\\t<ngx-gridster [options]=\\\"gridsterOptions\\\" [draggableOptions]=\\\"gridsterDraggableOptions\\\" (reflow)=\\\"onReflow($event)\\\"\\n\\t\\t\\t  (optionsChange)=\\\"optionsChange($event)\\\" #gridster1 class=\\\"dashboard\\\">\\n  \\n\\t\\t<ngx-gridster-item *ngFor=\\\"let widget of widgets; let indx = index\\\" #itemComp\\n\\t\\t\\t\\t\\t   [options]=\\\"itemOptions\\\"\\n\\t\\t\\t\\t\\t   [dragAndDrop]=\\\"widget.dragAndDrop\\\" [resizable]=\\\"widget.resizable\\\"\\n\\t\\t\\t\\t\\t   [(x)]=\\\"widget.x\\\" [(y)]=\\\"widget.y\\\"\\n\\t\\t\\t\\t\\t   [(xSm)]=\\\"widget.xSm\\\" [(ySm)]=\\\"widget.ySm\\\"\\n\\t\\t\\t\\t\\t   [(xMd)]=\\\"widget.xMd\\\" [(yMd)]=\\\"widget.yMd\\\"\\n\\t\\t\\t\\t\\t   [(xLg)]=\\\"widget.xLg\\\" [(yLg)]=\\\"widget.yLg\\\"\\n\\t\\t\\t\\t\\t   [(xXl)]=\\\"widget.xXl\\\" [(yXl)]=\\\"widget.yXl\\\"\\n\\t\\t\\t\\t\\t   [(w)]=\\\"widget.w\\\" [(h)]=\\\"widget.h\\\"\\n\\t\\t\\t\\t\\t   [(wSm)]=\\\"widget.wSm\\\" [(hSm)]=\\\"widget.hSm\\\"\\n\\t\\t\\t\\t\\t   [(wMd)]=\\\"widget.wMd\\\" [(hMd)]=\\\"widget.hMd\\\"\\n\\t\\t\\t\\t\\t   [(wLg)]=\\\"widget.wLg\\\" [(hLg)]=\\\"widget.hLg\\\"\\n\\t\\t\\t\\t\\t   [(wXl)]=\\\"widget.wXl\\\" [(hXl)]=\\\"widget.hXl\\\"\\n\\t\\t\\t\\t\\t   (change)=\\\"itemChange($event, gridster1)\\\">\\n<!--   \\n\\t\\t\\t<div class=\\\"panel-heading\\\">\\n\\t\\t\\t\\t<h5 class=\\\"panel-title\\\">{{ widget.title }}</h5>\\n\\t\\t\\t</div>\\n  \\n\\t\\t\\t<div class=\\\"panel-body\\\">\\n\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t  Position: {{itemComp?.item?.x}} x {{itemComp?.item?.y}}<br>\\n\\t\\t\\t\\t  Size: {{itemComp?.item?.w}} x {{itemComp?.item?.h}}<br>\\n\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t<label>\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" [(ngModel)]=\\\"widget.dragAndDrop\\\" value=\\\"true\\\"> Draggable\\n\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t\\t<label>\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" [(ngModel)]=\\\"widget.resizable\\\" value=\\\"true\\\"> Resizable\\n\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t<button (click)=\\\"remove($event, indx,gridster1)\\\">remove</button>\\n\\t\\t\\t\\t</p>\\n  \\n\\t\\t\\t\\t<pre>{{ widget | json }}</pre>\\n  \\n\\t\\t\\t</div> -->\\n\\t\\t\\t<div class=\\\"widgets dashboard-col-pad mt-5\\\">\\n\\t\\t\\t\\t<div class=\\\"card example-custom-placeholder\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"card-body align-left-right\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"icon-lg fa fa-database dark-blue text-left\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"text-right\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"icon-md fa fa-ellipsis-h dark-blue link mr-3\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t\\t\\t<!-- <h6 class=\\\"mt-2\\\">{{data.name}}</h6>  -->\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"card-footer align-left-right\\\">\\n\\t\\t\\t\\t\\t\\t<!-- <p>{{data.name}}</p> -->\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n  \\n\\t\\t</ngx-gridster-item>\\n  \\n\\t</ngx-gridster>\\n  </div>\"","export default \"<p>\\n  security-dashboard works!\\n</p>\\n\"","export default \"<p>\\n  staff-dashboard works!\\n</p>\\n\"","export default \"<div class=\\\"unit-layout flip\\\" #menu *ngIf=\\\"!label.middle\\\">\\n    <div class=\\\"front\\\">\\n        <div class=\\\"card dashboard-card\\\">\\n            <div class=\\\"card-body align-left-right\\\">\\n                    <i class=\\\"icon-lg fa fa-database dark-blue text-left\\\" aria-hidden=\\\"true\\\"></i>\\n                <div class=\\\"text-right\\\">\\n                    <i class=\\\"icon-md fa fa-ellipsis-h dark-blue link mr-3\\\" aria-hidden=\\\"true\\\"></i>\\n                    <i class=\\\"icon-md fa fa-caret-right dark-blue link\\\" (click)=\\\"flip(menu)\\\" aria-hidden=\\\"true\\\"></i>\\n                    <h6 class=\\\"mt-2\\\">{{label.frontValue}}</h6> \\n                </div>\\n            </div>\\n            <div class=\\\"card-footer align-left-right\\\">\\n                <p>{{label.front}}</p>\\n                <i class=\\\"icon-md fa fa-caret-down link\\\" aria-hidden=\\\"true\\\" (click)=\\\"calenderPopUp(label.type,label.front,'front')\\\"></i>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"back\\\">\\n        <div class=\\\"card dashboard-card\\\">\\n            <div class=\\\"card-body align-left-right\\\">\\n                    <i class=\\\"icon-lg fa fa-database dark-blue\\\" aria-hidden=\\\"true\\\"></i>\\n                <div class=\\\"text-right\\\">\\n                    <i class=\\\"icon-md fa fa-ellipsis-h dark-blue link mr-3\\\" aria-hidden=\\\"true\\\"></i>\\n                    <i class=\\\"icon-md fa fa-caret-left dark-blue link\\\" (click)=\\\"flip(menu)\\\" aria-hidden=\\\"true\\\"></i>\\n                    <h6 class=\\\"mt-2\\\">{{label.backValue}}</h6> \\n                </div>\\n            </div>\\n            <div class=\\\"card-footer align-left-right\\\">\\n                <p>{{label.back}}</p>\\n                <i class=\\\"icon-md fa fa-caret-down link\\\" aria-hidden=\\\"true\\\" (click)=\\\"calenderPopUp(label.type,label.back,'back')\\\"></i>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n    \\n<div class= \\\"owner-layout\\\" *ngIf=\\\"label.middle\\\">\\n    <div class=\\\"card dashboard-card\\\" *ngIf= \\\"colType == 'owner'\\\">\\n        <div class=\\\"card-body align-left-right\\\">\\n                <i class=\\\"icon-lg fa fa-database dark-blue\\\" aria-hidden=\\\"true\\\"></i>\\n            <div class=\\\"text-right\\\">\\n                <i class=\\\"icon-md fa fa-ellipsis-h dark-blue link mr-3\\\"  aria-hidden=\\\"true\\\"></i>\\n                <i class=\\\"icon-md fa fa-caret-right dark-blue link\\\" (click)=\\\"colType='tenants'\\\" aria-hidden=\\\"true\\\"></i>\\n                <h6 class=\\\"mt-2\\\">{{label.frontValue}}</h6> \\n            </div>\\n        </div>\\n        <div class=\\\"card-footer align-left-right\\\">\\n            <p>{{label.front}}</p>\\n            <i class=\\\"icon-md fa fa-caret-down link\\\" aria-hidden=\\\"true\\\"></i>\\n        </div>\\n    </div>\\n    <div class=\\\"card dashboard-card\\\" *ngIf= \\\"colType == 'tenants'\\\">\\n        <div class=\\\"card-body align-left-right\\\">\\n                <i class=\\\"icon-lg fa fa-database dark-blue\\\" aria-hidden=\\\"true\\\"></i>\\n            <div class=\\\"text-right\\\">\\n                <i class=\\\"icon-md fa fa-ellipsis-h dark-blue link mr-3\\\" aria-hidden=\\\"true\\\"></i>\\n                <i class=\\\"icon-md fa fa-caret-right dark-blue link\\\" (click)=\\\"colType='admin'\\\" aria-hidden=\\\"true\\\"></i>\\n                <h6 class=\\\"mt-2\\\">{{label.middleValue}}</h6> \\n            </div>\\n        </div>\\n        <div class=\\\"card-footer align-left-right\\\">\\n            <p>{{label.middle}}</p>\\n            <i class=\\\"icon-md fa fa-caret-down link\\\" aria-hidden=\\\"true\\\"></i>\\n        </div>\\n    </div>\\n    <div class=\\\"card dashboard-card\\\" *ngIf= \\\"colType == 'admin'\\\">\\n        <div class=\\\"card-body align-left-right\\\">\\n                <i class=\\\"icon-lg fa fa-database dark-blue\\\" aria-hidden=\\\"true\\\"></i>\\n            <div class=\\\"text-right\\\">\\n                <i class=\\\"icon-md fa fa-ellipsis-h dark-blue link mr-3\\\" aria-hidden=\\\"true\\\"></i>\\n                <i class=\\\"icon-md fa fa-caret-right dark-blue link\\\" (click)=\\\"colType='owner'\\\" aria-hidden=\\\"true\\\"></i>\\n                <h6 class=\\\"mt-2\\\">{{label.backValue}}</h6> \\n            </div>\\n        </div>\\n        <div class=\\\"card-footer align-left-right\\\">\\n            <p>{{label.back}}</p>\\n            <i class=\\\"icon-md fa fa-caret-down link\\\" aria-hidden=\\\"true\\\"></i>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"second-row-layout flip\\\" #menu *ngIf=\\\"!label.side\\\">\\n    <div class=\\\"front\\\">\\n        <div class=\\\"card dashboard-card\\\">\\n            <div class=\\\"card-body align-left-right\\\" [ngClass]=\\\"label.row == 'blue' ? 'bg-card-body' : ''\\\">\\n                <div class=\\\"text-left\\\">\\n                    <i [ngClass]=\\\"label.row == 'blue' ? 'text-white' : 'cyan-color'\\\" class=\\\"icon-md fa fa-eye link mb-3\\\" aria-hidden=\\\"true\\\"></i>\\n                    <br>\\n                    <i [ngClass]=\\\"label.row == 'blue' ? 'text-white' : 'cyan-color'\\\" class=\\\"icon-lg fa fa-credit-card\\\" aria-hidden=\\\"true\\\"></i>\\n                </div>\\n                <div class=\\\"text-right\\\">\\n                    <i [ngClass]=\\\"label.row == 'blue' ? 'text-white' : 'cyan-color'\\\" class=\\\"icon-md fa fa-caret-right link\\\" (click)=\\\"flip(menu)\\\" aria-hidden=\\\"true\\\"></i>\\n                    <p *ngIf=\\\"label.row == 'blue'\\\" [ngClass]=\\\"label.row == 'blue' ? 'text-white' : 'cyan-color'\\\">{{label.front}}</p> \\n                    <h6 [ngClass]=\\\"label.row == 'blue' ? 'text-white mt-2' : 'dark-blue font-weight-bold mt-4'\\\">{{label.frontValue}}</h6> \\n                </div>\\n            </div>\\n            <div class=\\\"card-footer align-left-right\\\" [ngClass]=\\\"label.row == 'blue' ? 'bg-card-footer' : ''\\\">\\n                <div *ngIf=\\\"label.row == 'blue'\\\">\\n                    <p class=\\\"text-white\\\"> \\n                        <i class=\\\"fa fa-calendar mr-3 text-white\\\" aria-hidden=\\\"true\\\"></i>Last day\\n                    </p>\\n                </div>\\n                <div *ngIf=\\\"label.row != 'blue'\\\">\\n                    <p> {{label.front}}</p>\\n                </div>\\n                <i *ngIf=\\\"label.frontFooter\\\" [ngClass]=\\\"label.row == 'blue' ? 'text-white' : 'dark-blue'\\\" class=\\\"icon-md fa fa-caret-down link\\\" aria-hidden=\\\"true\\\" (click)=\\\"calenderPopUp(label.type,label.front,'front')\\\"></i>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"back\\\">\\n        <div class=\\\"card dashboard-card\\\">\\n            <div class=\\\"card-body align-left-right\\\" [ngClass]=\\\"label.row == 'blue' ? 'bg-card-body' : ''\\\">\\n                <div class=\\\"text-left\\\">\\n                    <i [ngClass]=\\\"label.row == 'blue' ? 'text-white' : 'cyan-color'\\\" class=\\\"icon-md fa fa-eye link mb-3\\\" aria-hidden=\\\"true\\\"></i>\\n                    <br>\\n                    <i [ngClass]=\\\"label.row == 'blue' ? 'text-white' : 'cyan-color'\\\" class=\\\"icon-lg fa fa-credit-card\\\" aria-hidden=\\\"true\\\"></i>\\n                </div>\\n                <div class=\\\"text-right\\\">\\n                    <i [ngClass]=\\\"label.row == 'blue' ? 'text-white' : 'cyan-color'\\\" class=\\\"icon-md fa fa-caret-right link\\\" (click)=\\\"flip(menu)\\\" aria-hidden=\\\"true\\\"></i>\\n                    <p *ngIf=\\\"label.row == 'blue'\\\" [ngClass]=\\\"label.row == 'blue' ? 'text-white' : 'cyan-color'\\\">{{label.back}}</p> \\n                    <h6 [ngClass]=\\\"label.row == 'blue' ? 'text-white mt-2' : 'dark-blue font-weight-bold mt-4'\\\">{{label.backValue}}</h6> \\n                </div>\\n            </div>\\n            <div class=\\\"card-footer align-left-right\\\" [ngClass]=\\\"label.row == 'blue' ? 'bg-card-footer' : ''\\\">\\n                <div *ngIf=\\\"label.row == 'blue'\\\">\\n                    <p class=\\\"text-white\\\"> \\n                        <i class=\\\"fa fa-calendar mr-3 text-white\\\" aria-hidden=\\\"true\\\"></i>Last day\\n                    </p>\\n                </div>\\n                <div *ngIf=\\\"label.row != 'blue'\\\">\\n                    <p> {{label.back}}</p>\\n                </div>\\n                <i *ngIf=\\\"label.backFooter\\\" [ngClass]=\\\"label.row == 'blue' ? 'text-white' : 'dark-blue'\\\" class=\\\"icon-md fa fa-caret-down link\\\" aria-hidden=\\\"true\\\" (click)=\\\"calenderPopUp(label.type,label.front,'front')\\\"></i>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n    \\n<div class=\\\"second-single-page\\\" *ngIf=\\\"label.side\\\">\\n    <div class=\\\"card dashboard-card\\\">\\n        <div class=\\\"card-body align-left-right\\\">\\n            <div class=\\\"text-left\\\">\\n                <i class=\\\"icon-md fa fa-eye cyan-color link\\\" aria-hidden=\\\"true\\\"></i>\\n                <br>\\n                <i class=\\\"icon-lg fa fa-credit-card cyan-color mt-2\\\" aria-hidden=\\\"true\\\"></i>\\n            </div>\\n            <div class=\\\"text-right\\\">\\n                <h5 class=\\\"font-weight-bold dark-blue mt-5 pt-2\\\">{{label.frontValue}}</h5> \\n            </div>\\n        </div>\\n        <div class=\\\"card-footer align-left-right\\\">\\n            <p>{{label.front}}</p>\\n            <!-- <i class=\\\"icon-md fa fa-caret-down link dark-blue\\\" aria-hidden=\\\"true\\\"></i> -->\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"bank-comp--wrapper\\\">\\n\\t\\n\\t<div class=\\\"card table-card chart-card\\\">\\n\\t\\t<div class=\\\"card-body chart-body\\\">\\n\\t\\t\\t<h5><img class=\\\"mr-3\\\" src=\\\"assets/images/bank-blue-icon.svg\\\" width=\\\"18\\\" />Bank & Cash</h5>\\n\\t\\t\\t<div class=\\\"filter-menu\\\">\\n\\t\\t\\t\\t<app-dash-filter-menu type=\\\"normal\\\"></app-dash-filter-menu>\\n\\t\\t\\t</div>\\n\\t\\t\\t<p class=\\\"intro\\\">For Accounting period 01/04/2019 - 31/03/2019</p>\\n\\t\\t\\t<table class=\\\"table\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('blockno')\\\">Account <span [ngClass]=\\\"getFieldOrderBy('blockno')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('unitno')\\\">Balance <span [ngClass]=\\\"getFieldOrderBy('unitno')\\\"></span></th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let bank of bankCashData\\\">\\n\\t\\t\\t\\t      <td class=\\\"name\\\"><a href=\\\"javascript:void(0)\\\">{{bank.account}}</a></td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{bank.balance}}</td>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\n\\t\\t</div>\\n\\n</div>\"","export default \"<div class=\\\"card dashboard-card announcement\\\">\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"align-left-right mb-3 mr-3\\\">\\n            <div>\\n                <h6 class=\\\"font-weight-bold d-inline dark-blue\\\">Recent Announcements</h6>\\n            </div>\\n            <div>\\n                <i class=\\\"icon-md fa fa-caret-down link dark-blue\\\" aria-hidden=\\\"true\\\" (click)=\\\"calenderPopUp('broadcast')\\\"></i>\\n            </div>\\n        </div>\\n        <div class=\\\"main-content\\\" [perfectScrollbar]=\\\"config\\\">\\n            <div class=\\\"border-line mt-3\\\" *ngFor=\\\"let data of broadCastList;let i =index\\\">\\n                <div class=\\\"row mb-3\\\">\\n                    <div class=\\\"col-sm-9\\\">\\n                        <div class=\\\"d-flex\\\">\\n                            <div class=\\\"announce-round text-white more font-weight-bold\\\" [ngClass]=\\\"i%2==0 ? 'bg-blue' : 'bg-dark-blue'\\\">{{data.subject | slice:0:1  | uppercase}}</div>\\n                            <div class=\\\"ml-3 sub-width\\\" (mouseover)=\\\"content(dom,'hover')\\\" (mouseout)=\\\"content(dom,'leave')\\\" #dom>\\n                                <p class=\\\"more\\\">{{data.subject | slice:0:39 }} ...</p>\\n                                <p class=\\\"more sub-hide\\\">{{data.subject}}</p>\\n                                <p class=\\\"text-muted\\\">{{data.description}}</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <p class=\\\"text-muted\\\">{{data.insertedOn | date: 'EEE, MMM d, y'}}</p>\\n                        <p class=\\\"text-muted\\\">{{data.insertedOn | date: 'h:mm a'}}</p>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card dashboard-card notification\\\">\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"align-left-right mb-3 mr-3\\\">\\n            <div>\\n                <i class=\\\"icon-md fa fa-bell-o mr-3 dark-blue\\\" aria-hidden=\\\"true\\\"></i>\\n                <h6 class=\\\"font-weight-bold d-inline dark-blue\\\">{{label}} <span *ngIf=\\\"label == 'Work Permit'\\\">(On Going)</span></h6>\\n            </div>\\n            <div>\\n                <i class=\\\"icon-md fa fa-caret-down link dark-blue\\\" aria-hidden=\\\"true\\\"></i>\\n            </div>\\n        </div>\\n        <div class=\\\"main-content\\\" [perfectScrollbar]=\\\"config\\\">\\n            <ng-container *ngIf=\\\"label == 'Emergency Alerts'\\\">\\n                <div class=\\\"border-line mt-3\\\" *ngFor=\\\"let data of emergencyAlert\\\">\\n                    <div class=\\\"row mb-2\\\">\\n                        <div class=\\\"col-sm-9\\\">\\n                            <p class=\\\"more\\\">{{data.notes}}</p> \\n                            <p class=\\\"font-weight-bold dark-blue\\\">{{data.apartmentBlockUnitId}}</p>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <p class=\\\"text-muted\\\">{{data.insertedOn | date: 'EEE, MMM d, y'}}</p>\\n                            <p class=\\\"text-muted\\\">{{data.insertedOn | date: 'h:mm a'}}</p>\\n                        </div>\\n                    </div>\\n                </div>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"label == 'Recent Violations'\\\">\\n                <div class=\\\"border-line mt-3\\\" *ngFor=\\\"let data of violation\\\">\\n                    <div class=\\\"row mb-2\\\">\\n                        <div class=\\\"col-sm-9\\\">\\n                            <p class=\\\"more\\\">{{data.violationCategory}}</p> \\n                            <p class=\\\"font-weight-bold\\\">\\n                                <span class=\\\" dark-blue\\\">{{data.securityPerson}}</span> \\n                                <span class=\\\"text-muted\\\"> {{data.tower_unitname}}</span>\\n                            </p>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <p class=\\\"text-muted\\\">{{data.insertedOn | date: 'EEE, MMM d, y'}}</p>\\n                            <p class=\\\"text-muted\\\">{{data.insertedOn | date: 'h:mm a'}}</p>\\n                        </div>\\n                    </div>\\n                </div>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"label == 'Work Permit'\\\">\\n                <div class=\\\"border-line mt-3\\\" *ngFor=\\\"let data of workPermit;let i=index\\\">\\n                    <div class=\\\"row mb-2\\\">\\n                        <div class=\\\"col-sm-8\\\">\\n                            <div class=\\\"d-flex\\\">\\n                                <div class=\\\"workpermit-round text-white more font-weight-bold mr-2\\\" [ngClass]=\\\"i%2==0 ? 'bg-blue' : 'bg-dark-blue'\\\">{{data.status | slice:0:2  | uppercase}}</div>\\n                                <div class=\\\"wp-width\\\">\\n                                    <p class=\\\"more\\\">{{data.wptitle}}</p> \\n                                    <p class=\\\"font-weight-bold\\\">\\n                                        <span class=\\\" dark-blue\\\">{{data.residentName}}</span>\\n                                        <span class=\\\"text-muted\\\"> {{data.apartmentBlockNumber}}/{{data.apartmentBlockUnitNumber}}</span>\\n                                    </p>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <p class=\\\"text-muted\\\">{{data.startDate | date: 'EEE, MMM d, y'}} {{data.startTime }} </p>\\n                            <p class=\\\"text-muted\\\">{{data.endDate | date: 'EEE, MMM d, y'}} {{data.endTime}}</p>\\n                        </div>\\n                    </div>\\n                </div>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"label == 'Facility Bookings'\\\">\\n                <div class=\\\"border-line mt-3\\\" *ngFor=\\\"let data of facility\\\">\\n                    <div class=\\\"row mb-2\\\">\\n                        <div class=\\\"col-sm-9\\\">\\n                            <p class=\\\"more\\\">{{data.facilityName}}</p> \\n                            <p class=\\\"font-weight-bold\\\">\\n                                <span class=\\\"dark-blue\\\">{{data.residentName}}</span>\\n                                <span class=\\\"text-muted\\\"> {{data.location}} {{data.apartmentBlockUnitId}}</span>\\n                            </p>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <p class=\\\"text-muted\\\">{{data.bookedFromTime }} - {{data.bookedToTime}}</p>\\n                            <p class=\\\"text-muted\\\">{{data.bookedForDate | date: 'EEE, MMM d, y'}}</p>\\n                        </div>\\n                    </div>\\n                </div>\\n            </ng-container>\\n        </div>\\n    </div>\\n</div>\"","export default \"\\n\\n<div class=\\\"card dashboard-card\\\">\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"align-left-right mb-2\\\">\\n            <h6 class=\\\"font-weight-bold\\\">Income vs Expenses</h6>\\n            <i class=\\\"icon-md fa fa-caret-down link dark-blue\\\" aria-hidden=\\\"true\\\"></i>\\n        </div>\\n        <jqxChart #myChart\\n            [width]=\\\"getWidth()\\\" [height]=\\\"265\\\"\\n            [title]=\\\"''\\\" [description]=\\\"''\\\" [showBorderLine]=\\\"false\\\"\\n            [showLegend]=\\\"true\\\" [enableAnimations]=\\\"true\\\" [padding]=\\\"padding\\\"\\n            [titlePadding]=\\\"titlePadding\\\" [source]=\\\"days\\\" [xAxis]=\\\"xAxis\\\"\\n            [valueAxis]=\\\"valueAxis\\\" [seriesGroups]=\\\"seriesGroups\\\" [colorScheme]=\\\"'scheme02'\\\">\\n        </jqxChart>\\n    </div>\\n    <div class=\\\"card-footer\\\">\\n        <p>Data Information Certified</p>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card dashboard-card meeting-schedule\\\">\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"align-left-right mb-3 mr-3\\\">\\n            <div>\\n                <i class=\\\"icon-md fa fa-calendar mr-3 dark-blue\\\" aria-hidden=\\\"true\\\"></i>\\n                <h6 class=\\\"font-weight-bold d-inline dark-blue\\\">Meeting Schedules</h6>\\n            </div>\\n            <div>\\n                <p class=\\\"font-weight-bold d-inline mr-3 more dark-blue\\\">More</p>\\n                <i class=\\\"icon-md fa fa-caret-down link dark-blue\\\" aria-hidden=\\\"true\\\" (click)=\\\"calenderPopUp('meeting')\\\"></i>\\n            </div>\\n        </div>\\n        <div class=\\\"main-content\\\" [perfectScrollbar]=\\\"config\\\">\\n            <div class=\\\"border-line mt-3\\\" *ngFor=\\\"let data of meetingList\\\">\\n                <div class=\\\"row mb-2\\\">\\n                    <div class=\\\"col-sm-8\\\">\\n                        <p class=\\\"more\\\">{{data.subject}}</p>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <p class=\\\"more\\\">{{data.fromTime }} - {{data.toTime}}</p>\\n                        <p class=\\\"text-muted\\\">{{data.meetingDate | date: 'EEE, MMM d, y'}}</p>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"\\n<div class=\\\"card dashboard-card\\\">\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"align-left-right\\\">\\n            <h6 class=\\\"font-weight-bold\\\">Amount Receivable vs Amount Received</h6>\\n            <i class=\\\"icon-md fa fa-caret-down link dark-blue\\\" aria-hidden=\\\"true\\\"></i>\\n        </div>\\n        <p class=\\\"text-mute mt-2\\\">Current Month</p>\\n        <jqxChart\\n            [width]=\\\"getWidth()\\\" [height]=\\\"250\\\"\\n            [title]=\\\"''\\\" [description]=\\\"''\\\"\\n            [showLegend]=\\\"false\\\" [enableAnimations]=\\\"true\\\" [padding]=\\\"padding\\\"\\n            [titlePadding]=\\\"titlePadding\\\" [source]=\\\"dataAdapter\\\"\\n            [showBorderLine]=\\\"false\\\" [seriesGroups]=\\\"seriesGroups\\\" [colorScheme]=\\\"'scheme02'\\\">\\n        </jqxChart>\\n    </div>\\n    <div class=\\\"card-footer\\\">\\n        <p>Campaign sent 2 days ago</p>\\n    </div>\\n</div>\"","export default \"<div class=\\\"date-modal-wrapper\\\">\\n    <form #dashboardFilter=\\\"ngForm\\\" name=\\\"dashboardFilter\\\" *ngIf=\\\"data != 'unapprove' && data != 'unassigned' && data != 'openaged' && data != 'panicAlerts'\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-6\\\">\\n                <div class=\\\"input-box\\\">\\n                    <label>From Date</label>\\n                    <input class=\\\"form-control\\\" name=\\\"Startdate\\\" [owlDateTime]=\\\"Startdate\\\"\\n                    [owlDateTimeTrigger]=\\\"Startdate\\\" [(ngModel)]=\\\"dashboard.fromDate\\\" placeholder=\\\"From Date\\\" autocomplete=\\\"off\\\" required>\\n                    <owl-date-time #Startdate [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n                    <div class=\\\"date-btn\\\">\\n                        <i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-sm-6\\\">\\n                <div class=\\\"input-box\\\">\\n                    <label>To Date</label>\\n                    <input class=\\\"form-control\\\" name=\\\"Enddate\\\" [owlDateTime]=\\\"Enddate\\\"\\n                    [owlDateTimeTrigger]=\\\"Enddate\\\" [(ngModel)]=\\\"dashboard.toDate\\\" placeholder=\\\"To Date\\\" autocomplete=\\\"off\\\" required>\\n                    <owl-date-time #Enddate [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n                    <div class=\\\"date-btn\\\">\\n                        <i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row btn-wrapper\\\">\\n            <div class=\\\"col-sm-12 text-right\\\">\\n                <button  class=\\\"btn blue mr-3\\\"[disabled]=\\\"dashboardFilter.invalid\\\" (click)=\\\"onConfirm()\\\">Filter</button>\\n                <button  class=\\\"btn trans-white\\\" (click)=\\\"onDismiss()\\\">Cancel</button>\\n            </div>\\n        </div>\\n    </form>\\n    <form #dateFilter=\\\"ngForm\\\" name=\\\"dateFilter\\\" *ngIf=\\\"data == 'unapprove' ||  data == 'unassigned' || data == 'openaged' || data == 'panicAlerts'\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-6\\\">\\n                <div class=\\\"input-box\\\">\\n                    <label *ngIf=\\\"data == 'unapprove' || data == 'openaged'\\\">Date</label>\\n                    <label *ngIf=\\\"data == 'unassigned' || data == 'panicAlerts'\\\">From</label>\\n                    <input class=\\\"form-control\\\" name=\\\"Fromdate\\\" [owlDateTime]=\\\"Fromdate\\\"\\n                    [owlDateTimeTrigger]=\\\"Fromdate\\\" [(ngModel)]=\\\"dashboard.date\\\" placeholder=\\\"From Date\\\" autocomplete=\\\"off\\\" required>\\n                    <owl-date-time #Fromdate [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n                    <div class=\\\"date-btn\\\">\\n                        <i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-sm-6\\\" *ngIf=\\\"data == 'openaged'\\\">\\n                <div class=\\\"input-box\\\">\\n                    <label>No of Days</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"No of days\\\" name=\\\"noOfDays\\\" [(ngModel)]=\\\"dashboard.noOfDays\\\">\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row btn-wrapper\\\">\\n            <div class=\\\"col-sm-12 text-right\\\">\\n                <button  class=\\\"btn blue mr-3\\\" [disabled]=\\\"dateFilter.invalid\\\" (click)=\\\"onConfirm()\\\">Filter</button>\\n                <button  class=\\\"btn trans-white\\\" (click)=\\\"onDismiss()\\\">Cancel</button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\"","export default \"<div class=\\\"expense-tracker-wrapper\\\">\\n\\t<div class=\\\"card chart-card\\\">\\n\\t\\t<div class=\\\"card-body chart-body\\\">\\n\\t\\t\\t<h5><img class=\\\"mr-3\\\" src=\\\"assets/images/expense-blue-icon.svg\\\" width=\\\"22\\\" />Expense Tracker</h5>\\n\\t\\t\\t<div class=\\\"filter-menu\\\">\\n\\t\\t\\t\\t<app-dash-filter-menu type=\\\"normal\\\"></app-dash-filter-menu>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"chart-box mb-4\\\">\\n\\t\\t\\t\\t\\t\\t<canvas #expensePieChart></canvas>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<h6 class=\\\"label text-center mb-3\\\">Variance Amount - 2261.1k</h6>\\n\\t\\t\\t\\t\\t<p class=\\\"intro text-center\\\">01-10-2018 to 01-10-2019</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<ul class=\\\"list-group lists\\\">\\n\\t\\t\\t\\t<li class=\\\"list-group-item\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"float-left\\\">Aug</div>\\n\\t\\t\\t\\t\\t<div class=\\\"float-right\\\">0</div>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<li class=\\\"list-group-item\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"float-left\\\">Sep</div>\\n\\t\\t\\t\\t\\t<div class=\\\"float-right\\\">1646.2K</div>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<li class=\\\"list-group-item\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"float-left\\\">Oct</div>\\n\\t\\t\\t\\t\\t<div class=\\\"float-right\\\">0</div>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t</ul>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","export default \"<div class=\\\"helpdesk-doughnut-wrapper\\\">\\n\\t<div class=\\\"card chart-card\\\">\\n\\t\\t\\n\\t\\t<div class=\\\"card-body chart-body simple\\\">\\n\\t\\t\\t<h5><img class=\\\"mr-3\\\" src=\\\"assets/images/support-blue-icon.svg\\\" width=\\\"20\\\" />Helpdesk Tracker</h5>\\n\\t\\t\\t<div class=\\\"filter-menu\\\">\\n\\t\\t\\t\\t<app-dash-filter-menu type=\\\"normal\\\"></app-dash-filter-menu>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"row rel\\\">\\n\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"details-wrapper\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Open Tickets</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"details\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h6>Personal</h6>\\n\\t\\t\\t\\t\\t\\t\\t<h3>{{totalOpenPersonalTickets}}</h3>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"details\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h6>Community</h6>\\n\\t\\t\\t\\t\\t\\t\\t<h3>{{totalOpenCommunityTickets}}</h3>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 col-border\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"details-wrapper col-border-padding\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Urgent Tickets</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"details\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h6>Personal</h6>\\n\\t\\t\\t\\t\\t\\t\\t<h3>{{totalUrgentPersonalTickets}}</h3>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"details\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h6>Community</h6>\\n\\t\\t\\t\\t\\t\\t\\t<h3>{{totalUrgentCommunityTickets}}</h3>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"btn-wrapper text-center\\\">\\n\\t\\t\\t\\t<a class=\\\"btn sf blue\\\"\\n\\t\\t\\t\\thref=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\trouterLink=\\\"/ams/helpdesk/add-ticket\\\" \\n\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">Lodge Tickets</a>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","export default \"<div class=\\\"income-tracker-wrapper\\\">\\n\\t<div class=\\\"card chart-card\\\">\\n\\t\\t<div class=\\\"card-body chart-body\\\">\\n\\t\\t\\t<h5><img class=\\\"mr-3\\\" src=\\\"assets/images/income-blue-icon.svg\\\" width=\\\"22\\\" />Income Tracker</h5>\\n\\t\\t\\t<div class=\\\"filter-menu\\\">\\n\\t\\t\\t\\t<app-dash-filter-menu type=\\\"normal\\\"></app-dash-filter-menu>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"chart-box mb-4\\\">\\n\\t\\t\\t\\t\\t\\t<canvas #incomePieChart></canvas>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<h6 class=\\\"label text-center mb-3\\\">Balance Amount - 2261.1k</h6>\\n\\t\\t\\t\\t\\t<p class=\\\"intro text-center\\\">01-10-2018 to 01-10-2019</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<ul class=\\\"list-group lists\\\">\\n\\t\\t\\t\\t<li class=\\\"list-group-item\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"float-left\\\">Aug</div>\\n\\t\\t\\t\\t\\t<div class=\\\"float-right\\\">0</div>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<li class=\\\"list-group-item\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"float-left\\\">Sep</div>\\n\\t\\t\\t\\t\\t<div class=\\\"float-right\\\">1646.2K</div>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<li class=\\\"list-group-item\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"float-left\\\">Oct</div>\\n\\t\\t\\t\\t\\t<div class=\\\"float-right\\\">0</div>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t</ul>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","export default \"<div class=\\\"ledger-comp--wrapper\\\">\\n\\t\\n\\t<div class=\\\"card table-card chart-card\\\">\\n\\t\\t<div class=\\\"card-body chart-body\\\">\\n\\t\\t\\t<h5><img class=\\\"mr-3\\\" src=\\\"assets/images/book-blue-icon.svg\\\" width=\\\"22\\\" />General Ledger</h5>\\n\\t\\t\\t<div class=\\\"filter-menu\\\">\\n\\t\\t\\t\\t<app-dash-filter-menu type=\\\"normal\\\"></app-dash-filter-menu>\\n\\t\\t\\t</div>\\n\\t\\t\\t<p class=\\\"intro\\\">For Accounting period 01/04/2019 - 31/03/2019</p>\\n\\t\\t\\t<table class=\\\"table\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('blockno')\\\">Class <span [ngClass]=\\\"getFieldOrderBy('blockno')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('unitno')\\\">Credit <span [ngClass]=\\\"getFieldOrderBy('unitno')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('sqrt')\\\">Debit <span [ngClass]=\\\"getFieldOrderBy('sqrt')\\\"></span></th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let ledge of ledgerData\\\">\\n\\t\\t\\t\\t      <td class=\\\"name\\\"><a href=\\\"javascript:void(0)\\\">{{ledge.class}}</a></td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{ledge.credit}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{ledge.debit}}</td>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\n\\t\\t</div>\\n\\n</div>\"","export default \"<div class=\\\"payment-comp-wrapper\\\">\\n\\t<div class=\\\"card chart-card\\\">\\n\\t\\t<div class=\\\"card-body chart-body text-box\\\">\\n\\t\\t\\t<h3 class=\\\"text-center\\\">34</h3>\\n\\t\\t\\t<h5 class=\\\"text-center d-block p-0\\\">Payment Defaulters</h5>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"card chart-card mt-2\\\">\\n\\t\\t<div class=\\\"card-body chart-body text-box\\\">\\n\\t\\t\\t<h3 class=\\\"text-center\\\">1258</h3>\\n\\t\\t\\t<h5 class=\\\"text-center d-block p-0\\\">Pending Vendor Payments</h5>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","export default \"<div class=\\\"unit-doughnut-wrapper\\\">\\n\\t<div class=\\\"card chart-card\\\">\\n\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t<h5>Units</h5>\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col-sm-12 col-md-12 col-lg-4 legends\\\">\\n\\t\\t\\t\\t\\t<li class=\\\"list-group-item\\\">\\n\\t\\t\\t\\t\\t\\t<span class=\\\"dots small low mr-2\\\"></span>\\n\\t\\t\\t\\t\\t\\t<span>Total Units</span>\\n\\t\\t\\t\\t\\t\\t<span class=\\\"ml-3\\\">{{totalUnits}}</span>\\n\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t<li class=\\\"list-group-item\\\">\\n\\t\\t\\t\\t\\t\\t<span class=\\\"dots small medium mr-2\\\"></span>\\n\\t\\t\\t\\t\\t\\t<span>Admins</span>\\n\\t\\t\\t\\t\\t\\t<span class=\\\"ml-3\\\">10</span>\\n\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t<li class=\\\"list-group-item\\\">\\n\\t\\t\\t\\t\\t\\t<span class=\\\"dots small cyan mr-2\\\"></span>\\n\\t\\t\\t\\t\\t\\t<span>Logged-in users</span>\\n\\t\\t\\t\\t\\t\\t<span class=\\\"ml-3\\\">5</span>\\n\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-sm-12 col-md-12 col-lg-8\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"chart-box\\\">\\n\\t\\t\\t\\t\\t\\t<canvas #unitPieChart></canvas>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","export default \"<div class=\\\"user-doughnut-wrapper\\\">\\n\\t<div class=\\\"card chart-card\\\">\\n\\t\\t<div class=\\\"card-body chart-body simple\\\">\\n\\t\\t\\t<h5><img class=\\\"mr-3\\\" src=\\\"assets/images/user-blue-icon.svg\\\" width=\\\"20\\\" />Users & Units</h5>\\n\\t\\t\\t<div class=\\\"filter-menu\\\">\\n\\t\\t\\t\\t<app-dash-filter-menu type=\\\"normal\\\"></app-dash-filter-menu>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"row rel\\\">\\n\\t\\t\\t\\t<div class=\\\"col-sm-5\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"details-wrapper\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"details\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h6>Total Users</h6>\\n\\t\\t\\t\\t\\t\\t\\t<h3>{{totalUsers}}</h3>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"details clear mt-5\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h6>Total Units</h6>\\n\\t\\t\\t\\t\\t\\t\\t<h3>{{totalUnits}}</h3>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-sm-7 col-border\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"details-wrapper col-border-padding\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"legends\\\">\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-group-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\"><span class=\\\"dots small low mr-2\\\"></span><span class=\\\"mr-3\\\">{{totalUnapprovedUsers}}</span>Unapproved users</div>\\n\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-group-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\"><span class=\\\"dots small low mr-2\\\"></span><span class=\\\"mr-3\\\">140</span>Admin</div>\\n\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","export default \"<div class=\\\"visitors-camp-wrapper\\\">\\n\\t\\n\\t<div class=\\\"row\\\">\\n\\t\\t\\n\\t\\t<div class=\\\"col-sm-3\\\">\\n\\t\\t\\t<div class=\\\"card chart-card no-border ov\\\">\\n\\t\\t\\t\\t<div class=\\\"card-body chart-body color-box s-blue ov\\\">\\n\\t\\t\\t\\t\\t<h3>20</h3>\\n\\t\\t\\t\\t\\t<h6>Panic alerts by Users</h6>\\n\\t\\t\\t\\t\\t<div class=\\\"range-box\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"text\\\">\\n\\t\\t\\t\\t\\t\\t\\t<app-dash-filter-menu type=\\\"trans\\\"></app-dash-filter-menu>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"icon\\\">\\n\\t\\t\\t\\t\\t\\t<img src=\\\"assets/images/alarm-icon.svg\\\" width=\\\"22\\\" />\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-sm-3\\\">\\n\\t\\t\\t<div class=\\\"card chart-card no-border ov\\\">\\n\\t\\t\\t\\t<div class=\\\"card-body chart-body color-box l-red ov\\\">\\n\\t\\t\\t\\t\\t<h3>04</h3>\\n\\t\\t\\t\\t\\t<h6>Parking/Rules Violations</h6>\\n\\t\\t\\t\\t\\t<div class=\\\"range-box\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"text\\\">\\n\\t\\t\\t\\t\\t\\t\\t<app-dash-filter-menu type=\\\"trans\\\"></app-dash-filter-menu>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"icon\\\">\\n\\t\\t\\t\\t\\t\\t<img src=\\\"assets/images/wrong-access-icon.svg\\\" width=\\\"20\\\" />\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t<div class=\\\"card chart-card no-border ov\\\">\\n\\t\\t\\t\\t<div class=\\\"card-body chart-body color-box green ov\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"details\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<h3>215</h3>\\n\\t\\t\\t\\t\\t\\t\\t\\t<h6>Visitors Checked-in</h6>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"details pb-0\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<h3>89</h3>\\n\\t\\t\\t\\t\\t\\t\\t\\t<h6>Visitors Checked-out</h6>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"range-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"text\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<app-dash-filter-menu type=\\\"trans\\\"></app-dash-filter-menu>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"icon\\\">\\n\\t\\t\\t\\t\\t\\t<img src=\\\"assets/images/view-icon.svg\\\" width=\\\"22\\\" />\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n</div>\"","export default \"<div class=\\\"dashboard-wrapper\\\">\\n\\t<ng-container *ngIf=\\\"isApartmentSelected\\\">\\n\\t\\t<div class=\\\"text-right\\\">\\n\\t\\t\\t<h6 class=\\\"mr-2 d-inline\\\">{{dashBoardName}}</h6>\\n\\t\\t\\t<mat-slide-toggle [(ngModel)]=\\\"customDashBoard\\\" (change)=\\\"dashboardChange($event)\\\"></mat-slide-toggle>\\n\\t\\t</div>\\n\\t\\t<div *ngIf=\\\"!customDashBoard\\\">\\n\\t\\t\\t<app-admin-dashboard></app-admin-dashboard>\\n\\t\\t</div>\\n\\t\\t<div *ngIf=\\\"customDashBoard\\\">\\n\\t\\t\\t<!-- <app-custom-dashboard></app-custom-dashboard> -->\\n\\t\\t</div>\\n\\t</ng-container>\\n</div>\"","export default \".admin-dashboard-wrapper .wid-height {\\n  height: 343px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9hbXMvZGFzaGJvYXJkL2NvbXBvbmVudHMvZGFzaGJvYXJkL2FkbWluLWRhc2hib2FyZC9hZG1pbi1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Ftcy9kYXNoYm9hcmQvY29tcG9uZW50cy9kYXNoYm9hcmQvYWRtaW4tZGFzaGJvYXJkL2FkbWluLWRhc2hib2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQztFQUNDLGFBQUE7QUNKRiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9kYXNoYm9hcmQvY29tcG9uZW50cy9kYXNoYm9hcmQvYWRtaW4tZGFzaGJvYXJkL2FkbWluLWRhc2hib2FyZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJ+c3JjL3Njc3MvdmFyaWFibGVzXCI7XG5AaW1wb3J0IFwifnNyYy9zY3NzL21peGluc1wiO1xuQGltcG9ydCBcIn5zcmMvc2Nzcy9mb250c1wiO1xuXG4uYWRtaW4tZGFzaGJvYXJkLXdyYXBwZXIge1xuXHQud2lkLWhlaWdodCB7XG5cdFx0aGVpZ2h0OiAzNDNweDtcblx0fVxufSIsIi5hZG1pbi1kYXNoYm9hcmQtd3JhcHBlciAud2lkLWhlaWdodCB7XG4gIGhlaWdodDogMzQzcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/api/controllers/User';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { DashBoardService } from 'src/app/api/controllers/DashBoard';\nimport { DateModelComponent } from '../../shared/date-model/date-model.component';\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.scss']\n})\nexport class AdminDashboardComponent implements OnInit {\n  firstRowData:any = [{\n    front : 'Total Units',\n    back : 'Total Towers',\n    frontValue: '',\n    backValue: '',\n    type: ''\n    },{\n      front : 'Total Owners',\n      frontValue: '',\n      middle : 'Total Tenants',\n      middleValue : '',\n      back :  'Total Admins',\n      backValue: '',\n      type: ''\n    },{\n      front : 'Pending Admins',\n      back : 'Pending Users',\n      frontValue: '',\n      backValue: '',\n      type: 'pending'\n    },{\n      front : 'Total',\n      back : 'Total',\n      frontValue: '',\n      backValue: '',\n      type: ''\n    },{\n      front : 'Un Approve Move In',\n      back : 'Un Approve Move Out',\n      frontValue: '',\n      backValue: '',\n      type: 'unapprove'\n    },{\n      front : 'Up Coming Move In',\n      back : 'Up Coming Move Out',\n      frontValue: '',\n      backValue: '',\n      type: 'upcoming'\n    }\n  ];\n  secondRowData:any = [{\n    front : 'Open Community',\n    back : 'Open Personal',\n    frontFooter: true,\n    backFooter: true,\n    frontValue: '',\n    backValue: '',\n    type: 'ticket',\n    row: 'blue'\n    },{\n      front : 'High Priority Community',\n      back : 'High Priority Personal',\n      frontFooter: true,\n      backFooter: true,\n      frontValue: '',\n      backValue: '',\n      type: 'highPriority',\n      row: 'blue'\n    },{ \n      front : 'Unassigned Community',\n      back : 'Unassigned Personal',\n      frontFooter: true,\n      backFooter: true,\n      frontValue: '',\n      backValue: '',\n      type: 'unassigned',\n      row: 'blue'\n    },\n    {\n      front : 'Open Community Aged',\n      back : 'Open Personal Aged',\n      frontValue: '',\n      backValue: '',\n      type: 'openaged',\n      row: 'blue',\n      frontFooter: true,\n      backFooter: true\n    }\n  ];\n  fourthRowData:any = [{\n    front : 'InProgress Panic Alerts',\n    back : 'Open Panic Alerts',\n    frontValue: '',\n    backValue: '',\n    type: 'panicAlerts',\n    row: 'white',\n    frontFooter: true,\n    backFooter: true\n    },{\n      front : 'Total Customer',\n      frontValue: '',\n      row: 'white',\n      side: 'one'\n    },{ \n      front : 'Total Customer',\n      frontValue: '',\n      row: 'white',\n      side: 'one'\n    },\n    {\n      front : 'Total Credit Note',\n      frontValue: '',\n      row: 'white',\n      side: 'one'\n    }\n  ]\n  sixthRowData:any = [{\n    front : 'Visitors IN',\n    back : 'Visitors Out',\n    frontValue: '',\n    backValue: '',\n    type: 'visitors',\n    row: 'white',\n    frontFooter: true,\n    backFooter: false\n    },{\n      front : 'Visitors Not Checked',\n      frontValue: '',\n      row: 'four',\n      side: 'one'\n    },{ \n      front : 'Total Parking Slots',\n      back : 'Unassigned Parking',\n      frontValue: '',\n      backValue: '',\n      type: '',\n      row: 'white',\n      frontFooter: false,\n      backFooter: false\n    },{\n      front : 'Facility Booking Approved',\n      back : 'Facility Booking UnApproved',\n      frontValue: '',\n      backValue: '',\n      type: '',\n      row: 'white',\n      frontFooter: false,\n      backFooter: false\n    }\n  ]\n  userRole:string = \"\";\n\n  constructor(\n    private userService:UserService,\n  \tprivate sharedService:SharedService,\n    private cookieService:CookieService,\n    private dashboardService:DashBoardService,\n    public dialog: MatDialog\n  ) { }\n\n  isAdmin(){\n    return this.userRole == \"Admin\" ? true : false;\n  }\n  isSecurity(){\n    return this.userRole == \"Security\" ? true : false;\n  }\n  isStaff(){\n    return this.userRole == \"Staff\" ? true : false;\n  }\n\n  firstRow() {\n    let params = {\n      apartmentId :  parseInt(this.cookieService.get('apartmentId'))\n    }\n    let entity = {\n      apartmentId : parseInt(this.cookieService.get('apartmentId')),\n      fromDate : new Date().toISOString(),\n      toDate : new Date().toISOString()\n    }\n    let data = {\n      apartmentId : parseInt(this.cookieService.get('apartmentId')),\n      date : new Date().toISOString(),\n    }\n    //First Row First Col\n    this.dashboardService.getDashTotalunitsbyApartmentId(params).subscribe((res:any)=>{\n      this.firstRowData[0].frontValue = res.totalUnits;\n    });\n    this.dashboardService.getDashTotalTowersbyApartmentId(params).subscribe((res:any)=>{\n      this.firstRowData[0].backValue = res.totalTowers;\n    });\n    //First Row Second Col\n    this.dashboardService.getDashTotalownersbyApartmentId(params).subscribe((res:any)=>{\n      this.firstRowData[1].frontValue = 50;\n    });\n    this.dashboardService.getDashTotalTenantsbyApartmentId(params).subscribe((res:any)=>{\n      this.firstRowData[1].middleValue = res.totalTenants;\n    });\n    this.dashboardService.getDashTotalAdminsbyApartmentId(params).subscribe((res:any)=>{\n      this.firstRowData[1].backValue = res.totalAdmins;\n    });\n    //First Row Third Col\n    this.dashboardService.getDashUnapprovedUsersPendingAdminbyApartmentId(entity).subscribe((res:any)=>{\n      this.firstRowData[2].frontValue = res.unapprovedUsersPendingAdmin;\n    });\n    this.dashboardService.getDashUnapprovedUsersPendingusersbyApartmentId(entity).subscribe((res:any)=>{\n      this.firstRowData[2].backValue = res.unapprovedPendingusers;\n    });\n    //First Row Fifth Col\n    this.dashboardService.getDashunapprovedmoveinbyApartmentId(data).subscribe((res:any)=>{\n      this.firstRowData[4].frontValue = res.unapprovedMoveIn;\n    });\n    this.dashboardService.getDashunapprovedmoveoutbyApartmentId(data).subscribe((res:any)=>{\n      this.firstRowData[4].backValue = res.unapprovedMoveOut;\n    });\n    //First Row sixth Col\n    this.dashboardService.getDashupcomingmoveinApartmentId(entity).subscribe((res:any)=>{\n      this.firstRowData[5].frontValue = res.upcomingWeeklyApprovedMoveInCounts;\n    });\n    this.dashboardService.getDashupcomingmoveoutApprovedbyApartmentId(entity).subscribe((res:any)=>{\n      this.firstRowData[5].backValue = res.upcomingMoveOut;\n    });\n  }\n\n  secondRow() {\n    let entity = {\n      apartmentId : parseInt(this.cookieService.get('apartmentId')),\n      fromDate : new Date().toISOString(),\n      toDate : new Date().toISOString()\n    }\n    let params = {\n      fromDate : new Date().toISOString(),\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n    let data = {\n      date : new Date().toISOString(),\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n    this.dashboardService.getDashOpencommticketsbyApartmentId(entity).subscribe((res:any)=>{\n      this.secondRowData[0].frontValue = res.openCommunitytickets;\n    });\n    this.dashboardService.getDashOpenpersonalticketsbyApartmentId(entity).subscribe((res:any)=>{\n      this.secondRowData[0].backValue = res.openPersonalticket;\n    });\n\n    this.dashboardService.getDashHighpriorityopenCommunityTicketsbyApartmentId(entity).subscribe((res:any)=>{\n      this.secondRowData[1].frontValue = res.highPriorityOpenCommunityTicket;\n    });\n    this.dashboardService.getDashHighpriorityopenpersonalTicketsbyApartmentId(entity).subscribe((res:any)=>{\n      this.secondRowData[1].backValue = res.highPriorityOpenPersonalTicket;\n    });\n    this.dashboardService.getDashUnassignedCommunityTicketsbyApartmentId(params).subscribe((res:any)=>{\n      this.secondRowData[2].frontValue = res.unassignedCommunityTickets;     \n    });\n    this.dashboardService.getDashUnassignedpersonalTicketsbyApartmentId(params).subscribe((res:any)=>{\n      this.secondRowData[2].backValue = res.unassignedPersonalTickets;\n    })\n  \n    this.dashboardService.getDashOpenCommunityAgedTicketsbyApartmentIDbyDays(data).subscribe((res:any)=>{\n      this.secondRowData[3].frontValue = res.openCommunityAgedTickets;     \n    })\n\n    this.dashboardService.getDashOpenPersonalAgedTicketsbyApartmentIDbyDays(data).subscribe((res:any)=>{\n      this.secondRowData[3].backValue = res.openPersonalAgedTickets;\n    })\n  }\n\n  fourthRow() {\n    let params = {\n      fromDate : new Date().toISOString(),\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n    this.dashboardService.getDashinProgressPanicAlertsbyApartmentId(params).subscribe((res:any)=>{\n      this.fourthRowData[0].frontValue =  res.inProgressPanicAlerts;\n    });\n    this.dashboardService.getDashOpenPanicAlertsbyApartmentId(params).subscribe((res:any)=>{\n      this.fourthRowData[0].backValue =  res.openPanicAlerts;\n    });\n    let entity = {\n      apartmentId :  parseInt(this.cookieService.get('apartmentId'))\n    }\n    this.dashboardService.getDashpaymentdefaultersasoftodayybyApartmentId(entity).subscribe((res:any)=>{\n      this.fourthRowData[1].frontValue =  res.returnDefautlers;\n    });\n    this.dashboardService.getDashcreditnoteappliedbyApartmentId(entity).subscribe((res:any)=>{\n      this.fourthRowData[3].frontValue =  res.creditNotesCount;\n    });\n  }\n\n  sixthRow() {\n    let params = {\n      startDate : new Date().toISOString(),\n      EndDate : new Date().toISOString(),\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n    let entity = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n    this.dashboardService. getDashVisitorsCheckedinbyApartmentId(params).subscribe((res:any)=>{\n      this.sixthRowData[0].frontValue  = res.visitorsCheckIn;\n    });\n    this.dashboardService. getDashVisitorsCheckedouttodaybyApartmentId(entity).subscribe((res:any)=>{\n      this.sixthRowData[0].backValue  = res.visitorsCheckedouttoday;\n    });\n    this.dashboardService. getDashVisitorsNotcheckedtodaybyApartmentId(entity).subscribe((res:any)=>{\n      this.sixthRowData[1].frontValue  = res.visitorsNotcheckedtoday;\n    });\n    this.dashboardService. getDashuptotalparkingslotsbyApartmentId(entity).subscribe((res:any)=>{\n      this.sixthRowData[2].frontValue = res.totalParkingSlots;\n    });\n    this.dashboardService. getDashuptotalparkingslotsunassignedbyApartmentId(entity).subscribe((res:any)=>{\n      this.sixthRowData[2].backValue = res.unassignedParkingSlots;\n    });\n    this.dashboardService. getDashufacilitybookingapprovedtodaybyApartmentId(entity).subscribe((res:any)=>{\n      this.sixthRowData[3].frontValue = res.approvedfaclitiesTodayCount;\n    });\n    this.dashboardService. getDashufacilitybookingunapprovedbyApartmentId(entity).subscribe((res:any)=>{\n      this.sixthRowData[3].backValue = res.unapprovedfaclities;\n    });\n  }\n\n  ngOnInit() {\n    this.userRole = this.cookieService.get('userRole');\n    this.firstRow();\n    this.secondRow();\n    this.fourthRow();\n    this.sixthRow();\n  }\n\n}\n","export default \".custom-dashboard-wrapper .cust-pad {\\n  padding-left: 5px !important;\\n  padding-right: 5px !important;\\n}\\n.custom-dashboard-wrapper .card .card-body {\\n  padding: 10px;\\n}\\n.custom-dashboard-wrapper .icon-lg:before {\\n  font-size: 3rem;\\n}\\n.custom-dashboard-wrapper .icon-md::before {\\n  font-size: 1.6rem;\\n}\\n.custom-dashboard-wrapper .icon-sm::before {\\n  font-size: 1.2rem;\\n}\\n.custom-dashboard-wrapper .card-footer p {\\n  font-size: 1.2rem;\\n}\\n.custom-dashboard-wrapper .second-row-layout .bg-card-body {\\n  background-color: #00d1fa;\\n}\\n.custom-dashboard-wrapper .second-row-layout .bg-card-body p {\\n  font-size: 1.4rem;\\n}\\n.custom-dashboard-wrapper .second-row-layout .bg-card-footer {\\n  background-color: #236aaf;\\n}\\n.custom-dashboard-wrapper .cyan-color {\\n  color: #00d1fa;\\n}\\n.custom-dashboard-wrapper .dark-blue {\\n  color: #236aaf;\\n}\\n.custom-dashboard-wrapper .more {\\n  font-size: 1.4rem;\\n}\\n.custom-dashboard-wrapper .border-line {\\n  border-bottom: 2px solid #dedede;\\n}\\n.custom-dashboard-wrapper .dash-height {\\n  height: 309px;\\n  overflow-y: auto;\\n}\\n.custom-dashboard-wrapper .meeting-schedule .border-line:last-child, .custom-dashboard-wrapper .announcement .border-line:last-child {\\n  border-bottom: unset;\\n}\\n.custom-dashboard-wrapper .announce-round {\\n  width: 40px;\\n  height: 35px;\\n  border-radius: 50%;\\n  background-color: #236aaf;\\n}\\n.cdk-drag-placeholder {\\n  opacity: 100;\\n}\\n.cdk-drag-animating {\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n.drag.cdk-drop-list-dragging .cust-pad:not(.cdk-drag-placeholder) {\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n.cdk-drag-preview {\\n  box-sizing: border-box;\\n  border-radius: 4px;\\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);\\n}\\n.grid-container {\\n  margin: 10px;\\n}\\n.dashboard-card {\\n  position: absolute;\\n  top: 0px;\\n  left: 0px;\\n  right: 0px;\\n  bottom: 0px;\\n}\\n.more-button {\\n  float: right;\\n  font-size: 2em;\\n}\\n.dashboard-card-content {\\n  text-align: center;\\n}\\n.cdk-drop-list {\\n  height: 100%;\\n  width: 100%;\\n}\\n.cdk-drag-preview {\\n  box-sizing: border-box;\\n  opacity: 0.5;\\n}\\n.cdk-drag-animating {\\n  transition: unset;\\n}\\n.cdk-drag-placeholder {\\n  display: none;\\n}\\ndemo-root {\\n  position: absolute;\\n  height: 100%;\\n  width: 100%;\\n  overflow: hidden;\\n  display: flex;\\n  flex-direction: column;\\n}\\nh1 {\\n  position: relative;\\n  flex: 0;\\n  font-size: 22px;\\n  padding: 0 20px;\\n  height: 50px;\\n  margin: 0;\\n}\\n.omnibar {\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: space-between;\\n  position: relative;\\n  flex: 0 1 auto;\\n  width: 100%;\\n  /*overflow: hidden;*/\\n}\\n.toolbar {\\n  position: relative;\\n  padding-left: 10px;\\n}\\n.widgetbar {\\n  position: relative;\\n  padding: 10px 0;\\n  width: 275px;\\n}\\n.main-content {\\n  width: 100%;\\n  flex: 1 0px;\\n  display: flex;\\n  flex-direction: column;\\n  overflow: auto;\\n}\\n.dashboard {\\n  flex: 1;\\n}\\n.panel-heading {\\n  border-bottom: 1px solid #F0F0F0;\\n  display: inline-block;\\n  position: relative;\\n  width: 100%;\\n  top: 0;\\n}\\n.panel-heading .panel-title {\\n  padding: 10px;\\n  margin: 0;\\n}\\n.panel-body {\\n  overflow: auto;\\n  padding: 0 10px 10px;\\n  position: absolute;\\n  top: 37px;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n}\\n.gridster-item-prototype {\\n  display: block;\\n  background-color: #afafaf;\\n  position: relative;\\n  float: left;\\n  z-index: 99;\\n  text-align: center;\\n  font-weight: bold;\\n  margin: 5px;\\n  width: 80px;\\n  height: 60px;\\n}\\n.gridster-item-prototype.is-over .gridster-item-inner {\\n  visibility: visible;\\n}\\n.gridster-item-prototype .gridster-item-inner {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  overflow: auto;\\n  width: 80px;\\n  height: 60px;\\n  visibility: hidden;\\n  transition: width 0.2s ease-in-out, height 0.2s ease-in-out;\\n}\\n.position-highlight .inner {\\n  position: absolute;\\n  top: 5px;\\n  bottom: 5px;\\n  left: 5px;\\n  right: 5px;\\n  background-color: #768294;\\n  border: 1px solid transparent;\\n  transition: background 3s;\\n  border-radius: 3px;\\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\\n}\\n.gridster-item-inner {\\n  position: absolute;\\n  background: #fff;\\n  border: 1px solid transparent;\\n  top: 5px;\\n  bottom: 5px;\\n  left: 5px;\\n  right: 5px;\\n  transition: background 3s;\\n  border-radius: 3px;\\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\\n}\\n.is-dragging .gridster-item-inner {\\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.24), 0 2px 4px rgba(0, 0, 0, 0.48);\\n  top: -3px;\\n  bottom: 13px;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, OnInit, ViewChildren, QueryList, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { UserService } from 'src/app/api/controllers/User';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { DashBoardService } from 'src/app/api/controllers/DashBoard';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DateModelComponent } from '../../shared/date-model/date-model.component';\nimport {CdkDragDrop, moveItemInArray, CdkDragEnter, CdkDropList} from '@angular/cdk/drag-drop';\nimport { IGridsterOptions, GridsterComponent, IGridsterDraggableOptions } from 'angular2gridster';\nimport { AppComponent } from 'src/app/app.component';\n\n// const COLORS = [\n//   '#ea4335',\n//   '#4285f4',\n//   '#fbbc04',\n//   '#34a853',\n//   '#fa7b17',\n//   '#f538a0',\n//   '#a142f4',\n//   '#24c1e0',\n//   '#9aa0a6',\n//   '#5195ea',\n//   '#e25142',\n//   '#f5c518',\n//   '#41af6a',\n//   '#f6aea9',\n//   '#a50e0e',\n//   '#aecbfa',\n//   '#174ea6',\n//   '#fde293',\n//   '#a8dab5',\n//   '#0d652d',\n//   '#fdc69c',\n//   '#fba9d6',\n//   '#c92786',\n//   '#d7aefb',\n//   '#8430ce',\n//   '#a1e4f2',\n//   '#007b83',\n//   '#e8eaed',\n//   '#b9d4f6',\n//   '#f3b9b3',\n//   '#fbe7a2',\n//   '#b3dfc3',\n// ]\n\n// function getColor() {\n//   return COLORS[Math.floor(Math.random() * 32)];\n// }\n\n@Component({\n  selector: 'app-custom-dashboard',\n  templateUrl: './custom-dashboard.component.html',\n  styleUrls: ['./custom-dashboard.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CustomDashboardComponent implements OnInit {\n  // array = [{name:'test1',row:1},{name:'test2',row:1},{name:'test3',row:1},{name:'test4',row:1},{name:'test5',row:1},\n  // {name:'test6',row:1}, {name:'test7',row:2},{name:'test8',row:2},{name:'test9',row:2},{name:'test10',row:2}]\n  // array1 = [1,2,3,4]\n\n  // constructor(\n  //   private userService:UserService,\n  // \tprivate sharedService:SharedService,\n  //   private cookieService:CookieService,\n  //   private dashboardService:DashBoardService,\n  //   public dialog: MatDialog\n  // ) { }\n\n\n  // drop(event: CdkDragDrop<string[]>) {\n  //   moveItemInArray(this.array, event.previousIndex, event.currentIndex);\n  // }\n  \n  // entered($event: CdkDragEnter) {\n  //   moveItemInArray(this.cards, $event.item.data, $event.container.data);\n  // }\n  // entered2($event: CdkDragEnter) {\n  //   moveItemInArray(this.cards, $event.item.data, $event.container.data);\n  // }\n\n  // @ViewChildren(CdkDropList) dropsQuery: QueryList<CdkDropList>;\n\n  // drops: CdkDropList[];\n\n  // ngAfterViewInit() {\n  //   this.dropsQuery.changes.subscribe(() => {\n  //     this.drops = this.dropsQuery.toArray()\n  //   })\n  //   Promise.resolve().then(() => {\n  //     this.drops = this.dropsQuery.toArray();\n  //     console.log(this.drops);\n  //   })\n  // }\n\n  // /** Based on the screen size, switch from standard to one column per row */\n  // cards = [\n  //   { title: 'Card 1', cols: 2, rows: 1, color: getColor()},\n  //   { title: 'Card 2', cols: 2, rows: 1, color: getColor() },\n  //   { title: 'Card 3', cols: 2, rows: 1, color: getColor() },\n  //   { title: 'Card 4', cols: 2, rows: 1, color: getColor() },\n  //   { title: 'Card 5', cols: 2, rows: 1, color: getColor() },\n  //   { title: 'Card 6', cols: 2, rows: 1, color: getColor() },\n  //   { title: 'Card 7', cols: 3, rows: 2, color: getColor() },\n  //   { title: 'Card 8', cols: 3, rows: 2, color: getColor() },\n  //   { title: 'Card 9', cols: 3, rows: 2, color: getColor() },\n  //   { title: 'Card 10', cols: 3, rows: 2, color: getColor() }\n  //  ];\n\n\n@ViewChild(GridsterComponent, { static: true }) gridster: GridsterComponent;\nitemOptions = {\n    maxWidth: 3,\n    maxHeight: 4\n};\ngridsterOptions: IGridsterOptions = {\n    // core configuration is default one - for smallest view. It has hidden minWidth: 0.\n    lanes: 2, // amount of lanes (cells) in the grid\n    direction: 'vertical', // floating top - vertical, left - horizontal\n    floating: true,\n    dragAndDrop: true, // enable/disable drag and drop for all items in grid\n    resizable: true, // enable/disable resizing by drag and drop for all items in grid\n    resizeHandles: {\n        s: true,\n        e: true,\n        se: true\n    },\n    widthHeightRatio: 1, // proportion between item width and height\n    lines: {\n        visible: true,\n        color: '#afafaf',\n        width: 2\n    },\n    shrink: true,\n    useCSSTransforms: true,\n    responsiveView: true, // turn on adopting items sizes on window resize and enable responsiveOptions\n    responsiveDebounce: 500, // window resize debounce time\n    responsiveSizes: true,\n    responsiveToParent: true,\n    // List of different gridster configurations for different breakpoints.\n    // Each breakpoint is defined by name stored in \"breakpoint\" property. There is fixed set of breakpoints\n    // available to use with default minWidth assign to each.\n    // - sm: 576 - Small devices\n    // - md: 768 - Medium devices\n    // - lg: 992 - Large devices\n    // - xl: 1200 - Extra large\n    // MinWidth for each breakpoint can be overwritten like it's visible below.\n    // ResponsiveOptions can overwrite default configuration with any option available.\n    responsiveOptions: [\n        {\n            breakpoint: 'sm',\n            // minWidth: 480,\n            lanes: 3\n        },\n        {\n            breakpoint: 'md',\n            minWidth: 768,\n            lanes: 4\n        },\n        {\n            breakpoint: 'lg',\n            minWidth: 1250,\n            lanes: 6\n        },\n        {\n            breakpoint: 'xl',\n            minWidth: 1800,\n            lanes: 8\n        }\n    ]\n};\ngridsterDraggableOptions: IGridsterDraggableOptions = {\n    handlerClass: 'panel-heading'\n};\nwidgetsCopy = [];\nwidgets: Array<any> = [\n    {\n        x: 0, y: 0,\n        w: 1, h: 2,\n        wSm: 1, hSm: 1,\n        wMd: 1, hMd: 2,\n        wLg: 1, hLg: 1,\n        wXl: 2, hXl: 2,\n        dragAndDrop: true,\n        resizable: true,\n        title: 'Basic form inputs 1'\n    },\n    {\n        x: 1, y: 0,\n        w: 1, h: 2,\n        wSm: 2, hSm: 1,\n        wMd: 2, hMd: 1,\n        wLg: 3, hLg: 1,\n        wXl: 3, hXl: 1,\n        dragAndDrop: true,\n        resizable: true,\n        title: 'Basic form inputs 2'\n    },\n    {\n        x: 1, y: 1,\n        w: 2, h: 1,\n        wSm: 1, hSm: 2,\n        wMd: 1, hMd: 2,\n        wLg: 2, hLg: 1,\n        wXl: 3, hXl: 1,\n        dragAndDrop: true,\n        resizable: true,\n        title: 'Basic form inputs 3'\n    },\n    {\n        x: 3, y: 1,\n        w: 1, h: 2,\n        wSm: 1, hSm: 2,\n        wMd: 1, hMd: 2,\n        wLg: 3, hLg: 1,\n        wXl: 3, hXl: 1,\n        dragAndDrop: true,\n        resizable: true,\n        title: 'Basic form inputs 4'\n    },\n    {\n        w: 1, h: 2,\n        wSm: 1, hSm: 2,\n        wMd: 1, hMd: 2,\n        wLg: 3, hLg: 1,\n        wXl: 3, hXl: 1,\n        dragAndDrop: true,\n        resizable: true,\n        title: 'Basic form inputs x'\n    }\n];\n\nngOnInit() {\n    this.widgetsCopy = this.widgets.map(widget => ({...widget}));\n}\n\nonReflow(event) {\n    console.log('onReflow', event);\n}\n\noptionsChange(options: IGridsterOptions) {\n    this.gridsterOptions = options;\n    console.log('options change:', options);\n}\n\n// swap() {\n//     this.widgets[0].x = 3;\n//     this.widgets[3].x = 0;\n// }\n\n\n// over(event) {\n//     const size = event.item.calculateSize(event.gridster);\n\n//     event.item.itemPrototype.$element.querySelector('.gridster-item-inner').style.width = size.width + 'px';\n//     event.item.itemPrototype.$element.querySelector('.gridster-item-inner').style.height = size.height + 'px';\n//     event.item.itemPrototype.$element.classList.add('is-over');\n// }\n\n// out(event) {\n//     event.item.itemPrototype.$element.querySelector('.gridster-item-inner').style.width = '';\n//     event.item.itemPrototype.$element.querySelector('.gridster-item-inner').style.height = '';\n//     event.item.itemPrototype.$element.classList.remove('is-over');\n// }\n\n// addWidgetWithoutData() {\n//     this.widgets.push({\n//         title: 'Basic form inputs X',\n//         dragAndDrop: true,\n//         resizable: true,\n//         content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et ' +\n//         'dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea ' +\n//         'commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla ' +\n//         'pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est ' +\n//         'laborum.'\n//     });\n// }\n\n// addWidget(gridster: GridsterComponent) {\n//     this.widgets.push({\n//         x: 4, y: 0, w: 1, h: 1,\n//         dragAndDrop: true,\n//         resizable: true,\n//         title: 'Basic form inputs 5',\n//         content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et ' +\n//         'dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea ' +\n//         'commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla ' +\n//         'pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est ' +\n//         'laborum.'\n//     });\n//     console.log('widget push', this.widgets[this.widgets.length - 1]);\n// }\n\nremove($event, index: number, gridster: GridsterComponent) {\n    $event.preventDefault();\n    this.widgets.splice(index, 1);\n    console.log('widget remove', index);\n}\n\n// removeAllWidgets() {\n//     this.widgets = [];\n// }\n\nitemChange($event: any, gridster) {\n    console.log('item change', $event);\n}\n\n// resetWidgets() {\n//     this.widgets = this.widgetsCopy.map(widget => ({...widget}));\n// }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9kYXNoYm9hcmQvY29tcG9uZW50cy9kYXNoYm9hcmQvc2VjdXJpdHktZGFzaGJvYXJkL3NlY3VyaXR5LWRhc2hib2FyZC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-security-dashboard',\n  templateUrl: './security-dashboard.component.html',\n  styleUrls: ['./security-dashboard.component.scss']\n})\nexport class SecurityDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9kYXNoYm9hcmQvY29tcG9uZW50cy9kYXNoYm9hcmQvc3RhZmYtZGFzaGJvYXJkL3N0YWZmLWRhc2hib2FyZC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-staff-dashboard',\n  templateUrl: './staff-dashboard.component.html',\n  styleUrls: ['./staff-dashboard.component.scss']\n})\nexport class StaffDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".dark-blue {\\n  color: #236aaf;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9hbXMvZGFzaGJvYXJkL2NvbXBvbmVudHMvc2hhcmVkL2FkbWluLWRhc2gtZmlyc3Qtcm93L2FkbWluLWRhc2gtZmlyc3Qtcm93LmNvbXBvbmVudC5zY3NzIiwiL1VzZXJzL3NlbnRoaWxrdW1hcnNlZXRoYXJhbWFuL0RvY3VtZW50cy93b3Jrcy9jbGlja215Y29uZG8vYXBwLW5nOS9zcmMvc2Nzcy92YXJpYWJsZXMuc2NzcyIsInNyYy9hcHAvYW1zL2Rhc2hib2FyZC9jb21wb25lbnRzL3NoYXJlZC9hZG1pbi1kYXNoLWZpcnN0LXJvdy9hZG1pbi1kYXNoLWZpcnN0LXJvdy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQTtFQUNDLGNDR2M7QUNQZiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9kYXNoYm9hcmQvY29tcG9uZW50cy9zaGFyZWQvYWRtaW4tZGFzaC1maXJzdC1yb3cvYWRtaW4tZGFzaC1maXJzdC1yb3cuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwifnNyYy9zY3NzL3ZhcmlhYmxlc1wiO1xuQGltcG9ydCBcIn5zcmMvc2Nzcy9taXhpbnNcIjtcbkBpbXBvcnQgXCJ+c3JjL3Njc3MvZm9udHNcIjtcblxuXHRcbi5kYXJrLWJsdWUge1xuXHRjb2xvciA6ICRkYXJrLWJsdWUtMDI7XG59IiwiXG4kZnRhOiBGb250QXdlc29tZTtcblxuJGZkOmZpeGVkO1xuJGFiczphYnNvbHV0ZTtcbiRyZWw6cmVsYXRpdmU7XG4kc3Q6c3RhdGljO1xuXG4kZGFyay1ibHVlOiAjMDgzZDcxO1xuJGRhcmstYmx1ZS0wMjogIzIzNmFhZjtcbiRkYXJrLWJsdWUtMDM6ICMxMzRiODI7XG4kbGlnaHQtYmx1ZTogIzgzOTFhMTtcbiRsaWdodC1ibHVlLTAyOiAjZWVmMGYzO1xuJGdyZXktYmx1ZTogI2YzZjhmZjtcbiRzLWJsdWU6ICMwM2E5ZjQ7XG4kbGlnaHQtcmVkOiAjZmY1NDdiO1xuJG0tbGlnaHQtcmVkOiAjZmY3Njg4O1xuJGJyaWdodC1yZWQ6ICNlMjM4NWU7XG4kcy1yZWQ6ICNlYTc5NjI7XG4kcy1yZWQtMDI6ICNmZjM2Mzg7XG4kcy1yZWQtMDM6ICNmNDQzMzY7XG4kbS1yZWQ6ICNkNzU3M2Q7XG4kZG0tcmVkOiAjOGU0ZDQwO1xuJGwtcGFsZS1yZWQ6ICNmZmYzZjU7XG4kaC1wYWxlLXJlZDogI2ZmZmJmYjtcbiRncmV5LXJlZCA6ICNmMWRkZGQ7XG4kcy1jeWFuOiAjMDBiY2Q0O1xuJGQtY3lhbjogIzAyMjkyNTtcbiRkLWN5YW4tMDI6ICMwOWE1OTY7XG4kZC1jeWFuLTAzOiMwMGQxZmE7XG4kdmQtY3lhbjogIzAwNmQ2ZDtcbiRwYWxlLWN5YW46ICNkOGZmZmI7XG4kcy1ncmV5OiAjY2NjY2NjO1xuJGwtZ3JleTogI2Q4ZTBlNjtcblxuJGxoLXJlZDojZTIzZjA2YzQ7XG4kbGgteWVsbG93OiNkY2JlMDg7XG4kcy1vcmFuZ2U6ICNmZjk4MDA7XG4kZC1vcmFuZ2U6ICM3ZDY1MjA7XG4kZC1vcmFuZ2UtMDI6ICM1MjQ3Mjg7XG4kcy15ZWxsb3c6ICNmZmViM2I7XG4kbS15ZWxsb3c6ICNmZmMxMDc7XG4kcy12aW9sZXQ6ICM2NzNhYjc7XG5cbiRncmV5LTMwMDogI2YwZjNmMztcbiRncmV5LTIwMDogI2Y2ZjhmODtcbiRncmV5LTUwMDogI2U2ZTZlNjtcbiRoLWN5YW46ICMwM2NjYTY7XG4kZHMtY3lhbjogIzgxYjI5YTtcbiRoZC1ibHVlOiAjMDQyODU0O1xuXG4kbGltZS1ncmVlbjogIzVjZDY5NDsgLy8jNWJjYzczXG4kbGltZS1ncmVlbi0wMjogIzVjZDY3YztcbiRsaW1lLWdyZWVuLTAzOiAjNTJjNTcwO1xuJGxpZ2h0LWdyZWVuOiAjZWRmNWUwO1xuJG0tZ3JlZW46ICM1NGI5NDE7XG4kZC1ncmVlbjogIzM4OTU4MztcbiRkLWdyZWVuLTAyOiAjZGFlMGNkO1xuJGRzLWdyZWVuOiAjZTRlN2RmO1xuJGRzLWdyZWVuLTAyOiAjZjRmN2VmO1xuXG4kbS1ibHVlOiAjM2Y1MWI1O1xuJHMtYmx1ZTogIzUyOWVmZjtcbiRkcy1ibHVlOiAjNjA3ZDhiO1xuJG1kcy1ibHVlOiAjNjA3ZDhiO1xuJGwtYmx1ZTogI2VhZWZmZDtcbiRsZy1ibHVlOiAjZTBlM2VjO1xuJGxnLWJsdWUtMDI6ICNmNGY0Zjc7XG4kbGctYmx1ZS0wMzojZGFlMmU2O1xuJGxnLWJsdWUtMDQ6ICM3MjdmOGU7XG4kbGctYmx1ZS0wNTogI2U3ZWNlYztcbiRsZy1ibHVlLTA2OiAjZTllY2VmO1xuJGxnLWJsdWUtMDc6ICNlMWY1ZmU7XG5cbi8vZW1lZ2VuY3kgY29sb3JzOlxuJGUtbWVkLTAxOiAjMDBiY2Q0O1xuJGUtbWVkLTAyOiAjMjE5NmYzO1xuXG4kZS10aC0wMTogI2Y3ZDA2MTtcbiRlLXRoLTAyOiAjZWY2MGE1O1xuXG4kZS1mZS0wMTogI0ZGOTgwMDtcbiRlLWZlLTAyOiAjRTkxRTYzO1xuXG4kZS1zaHItMDE6ICM2NGExZmQ7XG4kZS1zaHItMDI6ICM5MTAwZmY7XG5cbiRlLXBjLTAxOiAjNjFhMWUxO1xuJGUtcGMtMDI6ICMwNmJmNTg7XG5cbiRlLW90LTAxOiAjNjFhMWUxO1xuJGUtb3QtMDI6ICMzN2U3ODU7XG5cbiRncmV5LTkwMDogIzE5MWMxZTtcbiRncmV5LTg1MDogIzY4Njk2YjtcbiRncmV5LTgwMDogIzM3Mzk0NjsgLy8jNDI0ODU2O1xuJGdyZXktNzUwOiAjNzk3OTc5O1xuJGdyZXktNzAwOiAjNTg1ODU4O1xuJGdyZXktNjAwOiAjZGVkZWRlO1xuJGdyZXktNjUwOiAjNWY1ZjVmO1xuJGdyZXktNTUwOiAjYjFiMWIxO1xuJGdyZXktNDgwOiAjYzVjNmM3O1xuJGdyZXktNDYwOiAjZGVlMmU2O1xuJGdyZXktNDcwOiAjZTVlNWU1O1xuJGdyZXktNDUwOiAjZWFlYWVhOyAvLyNkZWUwZTQ7XG4kZ3JleS00NDA6ICNDOUQwREY7XG4kZ3JleS00MzA6ICNlNGU0ZTQ7XG4kZ3JleS00MTA6ICNlY2YwZjU7XG4kZ3JleS00MDA6ICNlYWVhZWE7XG4kZ3JleS0zNTA6ICM4ZThlOGU7XG4kZ3JleS0yNTA6ICNmNWY1ZjU7XG4kZ3JleS0yMjA6ICNmYWZhZmE7XG4kZ3JleS0yMTA6ICNmM2Y1Zjc7XG4kZ3JleS0xNTA6ICNmOWY5Zjk7XG4kZ3JleS0xMjA6ICNmN2Y3Zjc7XG4kZ3JleS0xMzA6ICNmNmY2Zjc7XG4kZ3JleS0xMDA6ICNmZGZkZmQ7XG5cbiR3aGl0ZTogI2ZmZmZmZjtcbiRibGFjazogIzAwMDAwMDtcbiR0cmFuczogdHJhbnNwYXJlbnQ7XG5cblxuLy9wdWJsaWMgcGFnZXMgY29sb3JzXG4kZHMtdjojMzQyNjNjO1xuJGwtZ3JleS0wMTojZjJmMmYyO1xuJGwtZ3JleS0wMjojZGRkZGRkO1xuJGdyZXktdjogIzZlNjc3MztcbiRkLWdyZXktMDE6IzhhOGE4YTtcbiRzdC1ibHVlOiMwNTgyYzg7XG4kc3QtYmx1ZS0wMTogIzFjYTBkNTtcbiRzdC1ibHVlLTAyOiAjMDE5N2Q0O1xuJHBtLWJsdWU6IzIyOTZlZjtcbiRncmV5LXA6I2Y2ZWVmMztcbiRwLXJlZDogI2ZmNGY1YTtcbiRwLWdyZXktMDE6ICMyZjJmMmY7XG4kcC1ncmV5LTAyOiAjNGQ0YTRhO1xuJHAtZ3JleS0wMzogIzYzNjE2MTtcblxuXG4vL2ZvbnQtc2l6ZXNcbiRmdC1iYXNlOjEwO1xuJGZvbnQtYmlnLTAzOjUwO1xuJGZvbnQtYmlnOjM4O1xuJGZvbnQtYmlnLTAyOjM2O1xuJGZvbnQtaDI6MzQ7XG4kZm9udC1tZWRpdW0tMDI6MjQ7XG4kZm9udC1tZWRpdW0tMDM6MjY7XG4kZm9udC1tZWRpdW0tMDQ6MzA7XG4kZm9udC1oMzoyODtcbiRmb250LWgzLTAyOjMyO1xuJGZvbnQtaDQ6IDIyO1xuJGZvbnQtbWVkaXVtOjIwO1xuJGZvbnQtYmFzZToxODtcbiRmb250LW5vcm1hbC0wMjoxNTtcbiRmb250LW5vcm1hbDoxNjtcbiRmb250LXNtYWxsOjE0O1xuJGZvbnQtc21hbGxlcjoxMztcbiRmb250LXRpbnk6MTI7XG4kZm9udC10aW5pZXI6MTA7XG4kZm9udC1taWNybzo5O1xuXG4vLyBvdGhlcnNcbiRmdWxsOjEwMCUgIWltcG9ydGFudDtcblxuXG4vLyBpbWFnZXNcbiRpbWFnZXM6IFwiL2Fzc2V0cy9pbWFnZXNcIjtcblxuJGhlYWRlci1oZWlnaHQ6IDcwcHg7XG5cbiIsIi5kYXJrLWJsdWUge1xuICBjb2xvcjogIzIzNmFhZjtcbn0iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { DateModelComponent } from '../date-model/date-model.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DashBoardService } from 'src/app/api/controllers/DashBoard';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-admin-dash-first-row',\n  templateUrl: './admin-dash-first-row.component.html',\n  styleUrls: ['./admin-dash-first-row.component.scss']\n})\nexport class AdminDashFirstRowComponent implements OnInit {\n  @Input() label:any; \n  colType:string = 'owner';\n\n  constructor(\n    public dialog: MatDialog,\n    private dashboardService:DashBoardService,\n    private cookieService:CookieService) { }\n\n  flip(data) {\n    let front = data.firstElementChild;\n    let back = data.lastElementChild;\n    if(front.classList.contains('flip-bk') && back.classList.contains('flip-ft')) {\n      front.classList.remove('flip-bk');\n      back.classList.remove('flip-ft');\n    } else {\n      front.classList.add('flip-bk');\n      back.classList.add('flip-ft');\n    }\n  }\n\n  calenderPopUp(dateType,type,mode) {\n    const dialogRef = this.dialog.open(DateModelComponent, {\n      width: '400px',\n      height:'175px',\n      data: dateType\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if(result) {\n        if(type == 'Pending Admins' && mode == 'front') {\n          this.dashboardService.getDashUnapprovedUsersPendingAdminbyApartmentId(result).subscribe((res:any)=>{\n            this.label.frontValue = res.unapprovedUsersPendingAdmin;\n          })\n        } else if(type == 'Pending Users' && mode == 'back') {\n          this.dashboardService.getDashUnapprovedUsersPendingusersbyApartmentId(result).subscribe((res:any)=>{\n            this.label.backValue = res.unapprovedPendingusers;\n          })\n        } else if(type == 'Un Approve Move In' && mode == 'front') {\n          this.dashboardService.getDashunapprovedmoveinbyApartmentId(result).subscribe((res:any)=>{\n            this.label.frontValue = res.unapprovedMoveIn;\n          })\n        } else if (type == 'Un Approve Move Out' && mode == 'back') {\n          this.dashboardService.getDashunapprovedmoveoutbyApartmentId(result).subscribe((res:any)=>{\n            this.label.backValue = res.unapprovedMoveOut;\n          })\n        } else if (type == 'Up Coming Move In' && mode == 'front') {\n          this.dashboardService.getDashupcomingmoveinApartmentId(result).subscribe((res:any)=>{\n            this.label.frontValue = res.upcomingWeeklyApprovedMoveInCounts;     \n          })\n        }  else if (type == 'Up Coming Move Out' && mode == 'back') {\n          this.dashboardService.getDashupcomingmoveoutApprovedbyApartmentId(result).subscribe((res:any)=>{\n            this.label.backValue = res.upcomingMoveOut;\n          })\n        }\n      }\n    });\n  }\n\n  ngOnInit(): void {\n  }\n}\n","export default \".second-row-layout .bg-card-body {\\n  background-color: #00d1fa;\\n}\\n.second-row-layout .bg-card-body p {\\n  font-size: 1.4rem;\\n}\\n.second-row-layout .bg-card-footer {\\n  background-color: #236aaf;\\n}\\n.cyan-color {\\n  color: #00d1fa;\\n}\\n.dark-blue {\\n  color: #236aaf;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { DateModelComponent } from '../date-model/date-model.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DashBoardService } from 'src/app/api/controllers/DashBoard';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-admin-dash-second-row',\n  templateUrl: './admin-dash-second-row.component.html',\n  styleUrls: ['./admin-dash-second-row.component.scss']\n})\nexport class AdminDashSecondRowComponent implements OnInit {\n  @Input() label:any; \n  constructor( public dialog: MatDialog,\n    private dashboardService:DashBoardService,\n    private cookieService:CookieService) { }\n\n  flip(data) {\n    let front = data.firstElementChild;\n    let back = data.lastElementChild;\n    if(front.classList.contains('flip-bk') && back.classList.contains('flip-ft')) {\n      front.classList.remove('flip-bk');\n      back.classList.remove('flip-ft');\n    } else {\n      front.classList.add('flip-bk');\n      back.classList.add('flip-ft');\n    }\n  }\n\n  calenderPopUp(dateType,type,mode) {\n    const dialogRef = this.dialog.open(DateModelComponent, {\n      width: '400px',\n      height:'175px',\n      data: dateType\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if(result) {\n        if(type == 'Open Community' && mode == 'front') {\n          this.dashboardService.getDashOpencommticketsbyApartmentId(result).subscribe((res:any)=>{\n            this.label.frontValue = res.openCommunitytickets;\n          })\n        } else if(type == 'Open Personal' && mode == 'back') {\n          this.dashboardService.getDashOpenpersonalticketsbyApartmentId(result).subscribe((res:any)=>{\n            this.label.backValue = res.openPersonalticket;\n          })\n        } else if(type == 'High Priority Community' && mode == 'front') {\n          this.dashboardService.getDashHighpriorityopenCommunityTicketsbyApartmentId(result).subscribe((res:any)=>{\n            this.label.frontValue = res.highPriorityOpenCommunityTicket;\n          })\n        } else if (type == 'High Priority Personal' && mode == 'back') {\n          this.dashboardService.getDashHighpriorityopenpersonalTicketsbyApartmentId(result).subscribe((res:any)=>{\n            this.label.backValue = res.highPriorityOpenPersonalTicket;\n          })\n        } else if (type == 'Unassigned Community' && mode == 'front') {\n          let params = {\n            fromDate : result.date,\n            apartmentId:result.apartmentId\n          }\n          this.dashboardService.getDashUnassignedCommunityTicketsbyApartmentId(params).subscribe((res:any)=>{\n            this.label.frontValue = res.unassignedCommunityTickets;     \n          })\n        } else if (type == 'Unassigned Personal' && mode == 'back') {\n          let params = {\n            fromDate : result.date,\n            apartmentId:result.apartmentId\n          }\n          this.dashboardService.getDashUnassignedpersonalTicketsbyApartmentId(params).subscribe((res:any)=>{\n            this.label.backValue = res.unassignedPersonalTickets;\n          })\n        } else if (type == 'Open Community Aged' && mode == 'front') {\n          this.dashboardService.getDashOpenCommunityAgedTicketsbyApartmentIDbyDays(result).subscribe((res:any)=>{\n            this.label.frontValue = res.openCommunityAgedTickets;     \n          })\n        } else if (type == 'Open Personal Aged' && mode == 'back') {\n          this.dashboardService.getDashOpenPersonalAgedTicketsbyApartmentIDbyDays(result).subscribe((res:any)=>{\n            this.label.backValue = res.openPersonalAgedTickets;\n          })\n        } else if (type == 'InProgress Panic Alerts' && mode == 'front') {\n          let params = {\n            fromDate : result.date,\n            apartmentId:result.apartmentId\n          }\n          this.dashboardService.getDashinProgressPanicAlertsbyApartmentId(params).subscribe((res:any)=>{\n            this.label.frontValue = res.inProgressPanicAlerts;\n          });\n        } else if (type == 'Open Panic Alerts' && mode == 'back') {\n          let params = {\n            fromDate : result.date,\n            apartmentId:result.apartmentId\n          }\n          this.dashboardService.getDashOpenPanicAlertsbyApartmentId(params).subscribe((res:any)=>{\n            this.label.backValue = res.openPanicAlerts;\n          });\n        } else if (type == 'Visitors IN' && mode == 'front') {\n          let params = {\n            startDate : result.fromDate,\n            EndDate : result.toDate,\n            apartmentId : result.apartmentId\n          }\n          this.dashboardService. getDashVisitorsCheckedinbyApartmentId(params).subscribe((res:any)=>{\n            this.label.frontValue = res.visitorsCheckIn;\n          });\n        }\n      }\n    });\n  }\n\n  ngOnInit(): void {\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9kYXNoYm9hcmQvY29tcG9uZW50cy9zaGFyZWQvYmFuay1jb21wL2JhbmstY29tcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bank-comp',\n  templateUrl: './bank-comp.component.html',\n  styleUrls: ['./bank-comp.component.scss']\n})\nexport class BankCompComponent implements OnInit {\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  bankCashData:any;\n\n  constructor() { }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  ngOnInit() {\n\n  \tthis.bankCashData = [\n\t  \t{\n\t  \t\t'account':'Petty Cash',\n\t  \t\t'balance': '15,114,575.72'\n\t  \t},\n\t  \t{\n\t  \t\t'account':'Vijaya Bank',\n\t  \t\t'balance': '15,114,575.72'\n\t  \t},\n\t  \t{\n\t  \t\t'account':'Petty Cash',\n\t  \t\t'balance': '15,114,575.72'\n\t  \t},\n\t  \t{\n\t  \t\t'account':'Canara Bank',\n\t  \t\t'balance': '15,114,575.72'\n\t  \t}\n  \t]\n\n  }\n\n}\n","export default \".sub-width {\\n  width: 88%;\\n}\\n\\n.sub-hide {\\n  display: none;\\n}\\n\\n.announce-round {\\n  width: 35px;\\n  height: 32px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  border-radius: 50%;\\n}\\n\\n.bg-blue {\\n  background-color: #529eff;\\n}\\n\\n.bg-dark-blue {\\n  background-color: #236aaf;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9hbXMvZGFzaGJvYXJkL2NvbXBvbmVudHMvc2hhcmVkL2Rhc2gtYnJvYWQtY2FzdC9kYXNoLWJyb2FkLWNhc3QuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Ftcy9kYXNoYm9hcmQvY29tcG9uZW50cy9zaGFyZWQvZGFzaC1icm9hZC1jYXN0L2Rhc2gtYnJvYWQtY2FzdC5jb21wb25lbnQuc2NzcyIsIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL3Njc3MvdmFyaWFibGVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS0E7RUFDSSxVQUFBO0FDSko7O0FET0E7RUFDSSxhQUFBO0FDSko7O0FET0E7RUFDSSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0Esa0JBQUE7QUNKSjs7QURPQTtFQUNJLHlCRXVDSztBRDNDVDs7QURPQTtFQUNJLHlCRWxCVztBRGNmIiwiZmlsZSI6InNyYy9hcHAvYW1zL2Rhc2hib2FyZC9jb21wb25lbnRzL3NoYXJlZC9kYXNoLWJyb2FkLWNhc3QvZGFzaC1icm9hZC1jYXN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcIn5zcmMvc2Nzcy92YXJpYWJsZXNcIjtcbkBpbXBvcnQgXCJ+c3JjL3Njc3MvbWl4aW5zXCI7XG5AaW1wb3J0IFwifnNyYy9zY3NzL2ZvbnRzXCI7XG5cblxuLnN1Yi13aWR0aCB7XG4gICAgd2lkdGg6IDg4JTtcbn1cblxuLnN1Yi1oaWRlIHtcbiAgICBkaXNwbGF5OiBub25lO1xufVxuXG4uYW5ub3VuY2Utcm91bmQge1xuICAgIHdpZHRoOiAzNXB4O1xuICAgIGhlaWdodDogMzJweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xufVxuXG4uYmctYmx1ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHMtYmx1ZTtcbn1cblxuLmJnLWRhcmstYmx1ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGRhcmstYmx1ZS0wMjtcbn0iLCIuc3ViLXdpZHRoIHtcbiAgd2lkdGg6IDg4JTtcbn1cblxuLnN1Yi1oaWRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmFubm91bmNlLXJvdW5kIHtcbiAgd2lkdGg6IDM1cHg7XG4gIGhlaWdodDogMzJweDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbn1cblxuLmJnLWJsdWUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTI5ZWZmO1xufVxuXG4uYmctZGFyay1ibHVlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIzNmFhZjtcbn0iLCJcbiRmdGE6IEZvbnRBd2Vzb21lO1xuXG4kZmQ6Zml4ZWQ7XG4kYWJzOmFic29sdXRlO1xuJHJlbDpyZWxhdGl2ZTtcbiRzdDpzdGF0aWM7XG5cbiRkYXJrLWJsdWU6ICMwODNkNzE7XG4kZGFyay1ibHVlLTAyOiAjMjM2YWFmO1xuJGRhcmstYmx1ZS0wMzogIzEzNGI4MjtcbiRsaWdodC1ibHVlOiAjODM5MWExO1xuJGxpZ2h0LWJsdWUtMDI6ICNlZWYwZjM7XG4kZ3JleS1ibHVlOiAjZjNmOGZmO1xuJHMtYmx1ZTogIzAzYTlmNDtcbiRsaWdodC1yZWQ6ICNmZjU0N2I7XG4kbS1saWdodC1yZWQ6ICNmZjc2ODg7XG4kYnJpZ2h0LXJlZDogI2UyMzg1ZTtcbiRzLXJlZDogI2VhNzk2MjtcbiRzLXJlZC0wMjogI2ZmMzYzODtcbiRzLXJlZC0wMzogI2Y0NDMzNjtcbiRtLXJlZDogI2Q3NTczZDtcbiRkbS1yZWQ6ICM4ZTRkNDA7XG4kbC1wYWxlLXJlZDogI2ZmZjNmNTtcbiRoLXBhbGUtcmVkOiAjZmZmYmZiO1xuJGdyZXktcmVkIDogI2YxZGRkZDtcbiRzLWN5YW46ICMwMGJjZDQ7XG4kZC1jeWFuOiAjMDIyOTI1O1xuJGQtY3lhbi0wMjogIzA5YTU5NjtcbiRkLWN5YW4tMDM6IzAwZDFmYTtcbiR2ZC1jeWFuOiAjMDA2ZDZkO1xuJHBhbGUtY3lhbjogI2Q4ZmZmYjtcbiRzLWdyZXk6ICNjY2NjY2M7XG4kbC1ncmV5OiAjZDhlMGU2O1xuXG4kbGgtcmVkOiNlMjNmMDZjNDtcbiRsaC15ZWxsb3c6I2RjYmUwODtcbiRzLW9yYW5nZTogI2ZmOTgwMDtcbiRkLW9yYW5nZTogIzdkNjUyMDtcbiRkLW9yYW5nZS0wMjogIzUyNDcyODtcbiRzLXllbGxvdzogI2ZmZWIzYjtcbiRtLXllbGxvdzogI2ZmYzEwNztcbiRzLXZpb2xldDogIzY3M2FiNztcblxuJGdyZXktMzAwOiAjZjBmM2YzO1xuJGdyZXktMjAwOiAjZjZmOGY4O1xuJGdyZXktNTAwOiAjZTZlNmU2O1xuJGgtY3lhbjogIzAzY2NhNjtcbiRkcy1jeWFuOiAjODFiMjlhO1xuJGhkLWJsdWU6ICMwNDI4NTQ7XG5cbiRsaW1lLWdyZWVuOiAjNWNkNjk0OyAvLyM1YmNjNzNcbiRsaW1lLWdyZWVuLTAyOiAjNWNkNjdjO1xuJGxpbWUtZ3JlZW4tMDM6ICM1MmM1NzA7XG4kbGlnaHQtZ3JlZW46ICNlZGY1ZTA7XG4kbS1ncmVlbjogIzU0Yjk0MTtcbiRkLWdyZWVuOiAjMzg5NTgzO1xuJGQtZ3JlZW4tMDI6ICNkYWUwY2Q7XG4kZHMtZ3JlZW46ICNlNGU3ZGY7XG4kZHMtZ3JlZW4tMDI6ICNmNGY3ZWY7XG5cbiRtLWJsdWU6ICMzZjUxYjU7XG4kcy1ibHVlOiAjNTI5ZWZmO1xuJGRzLWJsdWU6ICM2MDdkOGI7XG4kbWRzLWJsdWU6ICM2MDdkOGI7XG4kbC1ibHVlOiAjZWFlZmZkO1xuJGxnLWJsdWU6ICNlMGUzZWM7XG4kbGctYmx1ZS0wMjogI2Y0ZjRmNztcbiRsZy1ibHVlLTAzOiNkYWUyZTY7XG4kbGctYmx1ZS0wNDogIzcyN2Y4ZTtcbiRsZy1ibHVlLTA1OiAjZTdlY2VjO1xuJGxnLWJsdWUtMDY6ICNlOWVjZWY7XG4kbGctYmx1ZS0wNzogI2UxZjVmZTtcblxuLy9lbWVnZW5jeSBjb2xvcnM6XG4kZS1tZWQtMDE6ICMwMGJjZDQ7XG4kZS1tZWQtMDI6ICMyMTk2ZjM7XG5cbiRlLXRoLTAxOiAjZjdkMDYxO1xuJGUtdGgtMDI6ICNlZjYwYTU7XG5cbiRlLWZlLTAxOiAjRkY5ODAwO1xuJGUtZmUtMDI6ICNFOTFFNjM7XG5cbiRlLXNoci0wMTogIzY0YTFmZDtcbiRlLXNoci0wMjogIzkxMDBmZjtcblxuJGUtcGMtMDE6ICM2MWExZTE7XG4kZS1wYy0wMjogIzA2YmY1ODtcblxuJGUtb3QtMDE6ICM2MWExZTE7XG4kZS1vdC0wMjogIzM3ZTc4NTtcblxuJGdyZXktOTAwOiAjMTkxYzFlO1xuJGdyZXktODUwOiAjNjg2OTZiO1xuJGdyZXktODAwOiAjMzczOTQ2OyAvLyM0MjQ4NTY7XG4kZ3JleS03NTA6ICM3OTc5Nzk7XG4kZ3JleS03MDA6ICM1ODU4NTg7XG4kZ3JleS02MDA6ICNkZWRlZGU7XG4kZ3JleS02NTA6ICM1ZjVmNWY7XG4kZ3JleS01NTA6ICNiMWIxYjE7XG4kZ3JleS00ODA6ICNjNWM2Yzc7XG4kZ3JleS00NjA6ICNkZWUyZTY7XG4kZ3JleS00NzA6ICNlNWU1ZTU7XG4kZ3JleS00NTA6ICNlYWVhZWE7IC8vI2RlZTBlNDtcbiRncmV5LTQ0MDogI0M5RDBERjtcbiRncmV5LTQzMDogI2U0ZTRlNDtcbiRncmV5LTQxMDogI2VjZjBmNTtcbiRncmV5LTQwMDogI2VhZWFlYTtcbiRncmV5LTM1MDogIzhlOGU4ZTtcbiRncmV5LTI1MDogI2Y1ZjVmNTtcbiRncmV5LTIyMDogI2ZhZmFmYTtcbiRncmV5LTIxMDogI2YzZjVmNztcbiRncmV5LTE1MDogI2Y5ZjlmOTtcbiRncmV5LTEyMDogI2Y3ZjdmNztcbiRncmV5LTEzMDogI2Y2ZjZmNztcbiRncmV5LTEwMDogI2ZkZmRmZDtcblxuJHdoaXRlOiAjZmZmZmZmO1xuJGJsYWNrOiAjMDAwMDAwO1xuJHRyYW5zOiB0cmFuc3BhcmVudDtcblxuXG4vL3B1YmxpYyBwYWdlcyBjb2xvcnNcbiRkcy12OiMzNDI2M2M7XG4kbC1ncmV5LTAxOiNmMmYyZjI7XG4kbC1ncmV5LTAyOiNkZGRkZGQ7XG4kZ3JleS12OiAjNmU2NzczO1xuJGQtZ3JleS0wMTojOGE4YThhO1xuJHN0LWJsdWU6IzA1ODJjODtcbiRzdC1ibHVlLTAxOiAjMWNhMGQ1O1xuJHN0LWJsdWUtMDI6ICMwMTk3ZDQ7XG4kcG0tYmx1ZTojMjI5NmVmO1xuJGdyZXktcDojZjZlZWYzO1xuJHAtcmVkOiAjZmY0ZjVhO1xuJHAtZ3JleS0wMTogIzJmMmYyZjtcbiRwLWdyZXktMDI6ICM0ZDRhNGE7XG4kcC1ncmV5LTAzOiAjNjM2MTYxO1xuXG5cbi8vZm9udC1zaXplc1xuJGZ0LWJhc2U6MTA7XG4kZm9udC1iaWctMDM6NTA7XG4kZm9udC1iaWc6Mzg7XG4kZm9udC1iaWctMDI6MzY7XG4kZm9udC1oMjozNDtcbiRmb250LW1lZGl1bS0wMjoyNDtcbiRmb250LW1lZGl1bS0wMzoyNjtcbiRmb250LW1lZGl1bS0wNDozMDtcbiRmb250LWgzOjI4O1xuJGZvbnQtaDMtMDI6MzI7XG4kZm9udC1oNDogMjI7XG4kZm9udC1tZWRpdW06MjA7XG4kZm9udC1iYXNlOjE4O1xuJGZvbnQtbm9ybWFsLTAyOjE1O1xuJGZvbnQtbm9ybWFsOjE2O1xuJGZvbnQtc21hbGw6MTQ7XG4kZm9udC1zbWFsbGVyOjEzO1xuJGZvbnQtdGlueToxMjtcbiRmb250LXRpbmllcjoxMDtcbiRmb250LW1pY3JvOjk7XG5cbi8vIG90aGVyc1xuJGZ1bGw6MTAwJSAhaW1wb3J0YW50O1xuXG5cbi8vIGltYWdlc1xuJGltYWdlczogXCIvYXNzZXRzL2ltYWdlc1wiO1xuXG4kaGVhZGVyLWhlaWdodDogNzBweDtcblxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DashBoardService } from 'src/app/api/controllers/DashBoard';\nimport { CookieService } from 'ngx-cookie-service';\nimport { DateModelComponent } from '../date-model/date-model.component';\nimport moment from 'moment';\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\n\n\n@Component({\n  selector: 'app-dash-broad-cast',\n  templateUrl: './dash-broad-cast.component.html',\n  styleUrls: ['./dash-broad-cast.component.scss']\n})\nexport class DashBroadCastComponent implements OnInit {\n  public config: PerfectScrollbarConfigInterface = {};\n  broadCastList = [];\n\n  constructor(public dialog: MatDialog,\n    private dashboardService:DashBoardService,\n    private cookieService:CookieService\n  ) { }\n\n\n  calenderPopUp(dateType) {\n    const dialogRef = this.dialog.open(DateModelComponent, {\n      width: '400px',\n      height:'175px',\n      data: dateType\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if(result) {\n        this.announcementList(result,'filter');\n      }\n    });\n  }\n\n  announcementList(entity,type) {\n    this.dashboardService.getDashlistBroadcastsentbyApartmentId(entity).subscribe((res:any)=>{\n      if(type == 'filter' && res.length > 0) {\n        this.broadCastList = res.reverse();\n      } else {\n        this.broadCastList = res.reverse();\n        this.broadCastList = this.broadCastList.slice(0,10)\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    let entity = {\n      apartmentId : parseInt(this.cookieService.get('apartmentId')),\n      fromDate : moment(new Date()).subtract(1, 'month').utc().format(),\n      toDate : new Date().toISOString()\n    }\n    this.announcementList(entity,'initial');\n  }\n\n  content(dom,type) {\n    if(type == 'hover') {\n      dom.querySelectorAll('p')[0].style.display = 'none';\n      dom.querySelectorAll('p')[1].style.display = 'block';\n    } else {\n      dom.querySelectorAll('p')[0].style.display = 'block';\n      dom.querySelectorAll('p')[1].style.display = 'none';\n    }\n  }\n\n}\n","export default \".workpermit-round {\\n  width: 35px;\\n  height: 32px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  border-radius: 50%;\\n}\\n\\n.wp-width {\\n  width: 88%;\\n}\\n\\n.bg-blue {\\n  background-color: #529eff;\\n}\\n\\n.bg-dark-blue {\\n  background-color: #236aaf;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9hbXMvZGFzaGJvYXJkL2NvbXBvbmVudHMvc2hhcmVkL2Rhc2gtY29tLWxpc3QvZGFzaC1jb20tbGlzdC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYW1zL2Rhc2hib2FyZC9jb21wb25lbnRzL3NoYXJlZC9kYXNoLWNvbS1saXN0L2Rhc2gtY29tLWxpc3QuY29tcG9uZW50LnNjc3MiLCIvVXNlcnMvc2VudGhpbGt1bWFyc2VldGhhcmFtYW4vRG9jdW1lbnRzL3dvcmtzL2NsaWNrbXljb25kby9hcHAtbmc5L3NyYy9zY3NzL3ZhcmlhYmxlcy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBO0VBQ0ksV0FBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLGtCQUFBO0FDSEo7O0FETUE7RUFDSSxVQUFBO0FDSEo7O0FETUE7RUFDSSx5QkU0Q0s7QUQvQ1Q7O0FETUE7RUFDSSx5QkViVztBRFVmIiwiZmlsZSI6InNyYy9hcHAvYW1zL2Rhc2hib2FyZC9jb21wb25lbnRzL3NoYXJlZC9kYXNoLWNvbS1saXN0L2Rhc2gtY29tLWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwifnNyYy9zY3NzL3ZhcmlhYmxlc1wiO1xuQGltcG9ydCBcIn5zcmMvc2Nzcy9taXhpbnNcIjtcbkBpbXBvcnQgXCJ+c3JjL3Njc3MvZm9udHNcIjtcblxuLndvcmtwZXJtaXQtcm91bmQge1xuICAgIHdpZHRoOiAzNXB4O1xuICAgIGhlaWdodDogMzJweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xufVxuXG4ud3Atd2lkdGgge1xuICAgIHdpZHRoOjg4JVxufVxuXG4uYmctYmx1ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHMtYmx1ZTtcbn1cblxuLmJnLWRhcmstYmx1ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGRhcmstYmx1ZS0wMjtcbn1cbiIsIi53b3JrcGVybWl0LXJvdW5kIHtcbiAgd2lkdGg6IDM1cHg7XG4gIGhlaWdodDogMzJweDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbn1cblxuLndwLXdpZHRoIHtcbiAgd2lkdGg6IDg4JTtcbn1cblxuLmJnLWJsdWUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTI5ZWZmO1xufVxuXG4uYmctZGFyay1ibHVlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIzNmFhZjtcbn0iLCJcbiRmdGE6IEZvbnRBd2Vzb21lO1xuXG4kZmQ6Zml4ZWQ7XG4kYWJzOmFic29sdXRlO1xuJHJlbDpyZWxhdGl2ZTtcbiRzdDpzdGF0aWM7XG5cbiRkYXJrLWJsdWU6ICMwODNkNzE7XG4kZGFyay1ibHVlLTAyOiAjMjM2YWFmO1xuJGRhcmstYmx1ZS0wMzogIzEzNGI4MjtcbiRsaWdodC1ibHVlOiAjODM5MWExO1xuJGxpZ2h0LWJsdWUtMDI6ICNlZWYwZjM7XG4kZ3JleS1ibHVlOiAjZjNmOGZmO1xuJHMtYmx1ZTogIzAzYTlmNDtcbiRsaWdodC1yZWQ6ICNmZjU0N2I7XG4kbS1saWdodC1yZWQ6ICNmZjc2ODg7XG4kYnJpZ2h0LXJlZDogI2UyMzg1ZTtcbiRzLXJlZDogI2VhNzk2MjtcbiRzLXJlZC0wMjogI2ZmMzYzODtcbiRzLXJlZC0wMzogI2Y0NDMzNjtcbiRtLXJlZDogI2Q3NTczZDtcbiRkbS1yZWQ6ICM4ZTRkNDA7XG4kbC1wYWxlLXJlZDogI2ZmZjNmNTtcbiRoLXBhbGUtcmVkOiAjZmZmYmZiO1xuJGdyZXktcmVkIDogI2YxZGRkZDtcbiRzLWN5YW46ICMwMGJjZDQ7XG4kZC1jeWFuOiAjMDIyOTI1O1xuJGQtY3lhbi0wMjogIzA5YTU5NjtcbiRkLWN5YW4tMDM6IzAwZDFmYTtcbiR2ZC1jeWFuOiAjMDA2ZDZkO1xuJHBhbGUtY3lhbjogI2Q4ZmZmYjtcbiRzLWdyZXk6ICNjY2NjY2M7XG4kbC1ncmV5OiAjZDhlMGU2O1xuXG4kbGgtcmVkOiNlMjNmMDZjNDtcbiRsaC15ZWxsb3c6I2RjYmUwODtcbiRzLW9yYW5nZTogI2ZmOTgwMDtcbiRkLW9yYW5nZTogIzdkNjUyMDtcbiRkLW9yYW5nZS0wMjogIzUyNDcyODtcbiRzLXllbGxvdzogI2ZmZWIzYjtcbiRtLXllbGxvdzogI2ZmYzEwNztcbiRzLXZpb2xldDogIzY3M2FiNztcblxuJGdyZXktMzAwOiAjZjBmM2YzO1xuJGdyZXktMjAwOiAjZjZmOGY4O1xuJGdyZXktNTAwOiAjZTZlNmU2O1xuJGgtY3lhbjogIzAzY2NhNjtcbiRkcy1jeWFuOiAjODFiMjlhO1xuJGhkLWJsdWU6ICMwNDI4NTQ7XG5cbiRsaW1lLWdyZWVuOiAjNWNkNjk0OyAvLyM1YmNjNzNcbiRsaW1lLWdyZWVuLTAyOiAjNWNkNjdjO1xuJGxpbWUtZ3JlZW4tMDM6ICM1MmM1NzA7XG4kbGlnaHQtZ3JlZW46ICNlZGY1ZTA7XG4kbS1ncmVlbjogIzU0Yjk0MTtcbiRkLWdyZWVuOiAjMzg5NTgzO1xuJGQtZ3JlZW4tMDI6ICNkYWUwY2Q7XG4kZHMtZ3JlZW46ICNlNGU3ZGY7XG4kZHMtZ3JlZW4tMDI6ICNmNGY3ZWY7XG5cbiRtLWJsdWU6ICMzZjUxYjU7XG4kcy1ibHVlOiAjNTI5ZWZmO1xuJGRzLWJsdWU6ICM2MDdkOGI7XG4kbWRzLWJsdWU6ICM2MDdkOGI7XG4kbC1ibHVlOiAjZWFlZmZkO1xuJGxnLWJsdWU6ICNlMGUzZWM7XG4kbGctYmx1ZS0wMjogI2Y0ZjRmNztcbiRsZy1ibHVlLTAzOiNkYWUyZTY7XG4kbGctYmx1ZS0wNDogIzcyN2Y4ZTtcbiRsZy1ibHVlLTA1OiAjZTdlY2VjO1xuJGxnLWJsdWUtMDY6ICNlOWVjZWY7XG4kbGctYmx1ZS0wNzogI2UxZjVmZTtcblxuLy9lbWVnZW5jeSBjb2xvcnM6XG4kZS1tZWQtMDE6ICMwMGJjZDQ7XG4kZS1tZWQtMDI6ICMyMTk2ZjM7XG5cbiRlLXRoLTAxOiAjZjdkMDYxO1xuJGUtdGgtMDI6ICNlZjYwYTU7XG5cbiRlLWZlLTAxOiAjRkY5ODAwO1xuJGUtZmUtMDI6ICNFOTFFNjM7XG5cbiRlLXNoci0wMTogIzY0YTFmZDtcbiRlLXNoci0wMjogIzkxMDBmZjtcblxuJGUtcGMtMDE6ICM2MWExZTE7XG4kZS1wYy0wMjogIzA2YmY1ODtcblxuJGUtb3QtMDE6ICM2MWExZTE7XG4kZS1vdC0wMjogIzM3ZTc4NTtcblxuJGdyZXktOTAwOiAjMTkxYzFlO1xuJGdyZXktODUwOiAjNjg2OTZiO1xuJGdyZXktODAwOiAjMzczOTQ2OyAvLyM0MjQ4NTY7XG4kZ3JleS03NTA6ICM3OTc5Nzk7XG4kZ3JleS03MDA6ICM1ODU4NTg7XG4kZ3JleS02MDA6ICNkZWRlZGU7XG4kZ3JleS02NTA6ICM1ZjVmNWY7XG4kZ3JleS01NTA6ICNiMWIxYjE7XG4kZ3JleS00ODA6ICNjNWM2Yzc7XG4kZ3JleS00NjA6ICNkZWUyZTY7XG4kZ3JleS00NzA6ICNlNWU1ZTU7XG4kZ3JleS00NTA6ICNlYWVhZWE7IC8vI2RlZTBlNDtcbiRncmV5LTQ0MDogI0M5RDBERjtcbiRncmV5LTQzMDogI2U0ZTRlNDtcbiRncmV5LTQxMDogI2VjZjBmNTtcbiRncmV5LTQwMDogI2VhZWFlYTtcbiRncmV5LTM1MDogIzhlOGU4ZTtcbiRncmV5LTI1MDogI2Y1ZjVmNTtcbiRncmV5LTIyMDogI2ZhZmFmYTtcbiRncmV5LTIxMDogI2YzZjVmNztcbiRncmV5LTE1MDogI2Y5ZjlmOTtcbiRncmV5LTEyMDogI2Y3ZjdmNztcbiRncmV5LTEzMDogI2Y2ZjZmNztcbiRncmV5LTEwMDogI2ZkZmRmZDtcblxuJHdoaXRlOiAjZmZmZmZmO1xuJGJsYWNrOiAjMDAwMDAwO1xuJHRyYW5zOiB0cmFuc3BhcmVudDtcblxuXG4vL3B1YmxpYyBwYWdlcyBjb2xvcnNcbiRkcy12OiMzNDI2M2M7XG4kbC1ncmV5LTAxOiNmMmYyZjI7XG4kbC1ncmV5LTAyOiNkZGRkZGQ7XG4kZ3JleS12OiAjNmU2NzczO1xuJGQtZ3JleS0wMTojOGE4YThhO1xuJHN0LWJsdWU6IzA1ODJjODtcbiRzdC1ibHVlLTAxOiAjMWNhMGQ1O1xuJHN0LWJsdWUtMDI6ICMwMTk3ZDQ7XG4kcG0tYmx1ZTojMjI5NmVmO1xuJGdyZXktcDojZjZlZWYzO1xuJHAtcmVkOiAjZmY0ZjVhO1xuJHAtZ3JleS0wMTogIzJmMmYyZjtcbiRwLWdyZXktMDI6ICM0ZDRhNGE7XG4kcC1ncmV5LTAzOiAjNjM2MTYxO1xuXG5cbi8vZm9udC1zaXplc1xuJGZ0LWJhc2U6MTA7XG4kZm9udC1iaWctMDM6NTA7XG4kZm9udC1iaWc6Mzg7XG4kZm9udC1iaWctMDI6MzY7XG4kZm9udC1oMjozNDtcbiRmb250LW1lZGl1bS0wMjoyNDtcbiRmb250LW1lZGl1bS0wMzoyNjtcbiRmb250LW1lZGl1bS0wNDozMDtcbiRmb250LWgzOjI4O1xuJGZvbnQtaDMtMDI6MzI7XG4kZm9udC1oNDogMjI7XG4kZm9udC1tZWRpdW06MjA7XG4kZm9udC1iYXNlOjE4O1xuJGZvbnQtbm9ybWFsLTAyOjE1O1xuJGZvbnQtbm9ybWFsOjE2O1xuJGZvbnQtc21hbGw6MTQ7XG4kZm9udC1zbWFsbGVyOjEzO1xuJGZvbnQtdGlueToxMjtcbiRmb250LXRpbmllcjoxMDtcbiRmb250LW1pY3JvOjk7XG5cbi8vIG90aGVyc1xuJGZ1bGw6MTAwJSAhaW1wb3J0YW50O1xuXG5cbi8vIGltYWdlc1xuJGltYWdlczogXCIvYXNzZXRzL2ltYWdlc1wiO1xuXG4kaGVhZGVyLWhlaWdodDogNzBweDtcblxuIl19 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { AlertService } from 'src/app/api/controllers/Alert';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ViolationService } from 'src/app/api/controllers/Violation';\nimport { FacilityService } from 'src/app/api/controllers/Facility';\nimport { WorkPermitService } from 'src/app/api/controllers/WorkPermit';\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\n\n@Component({\n  selector: 'app-dash-com-list',\n  templateUrl: './dash-com-list.component.html',\n  styleUrls: ['./dash-com-list.component.scss']\n})\nexport class DashComListComponent implements OnInit {\n  public config: PerfectScrollbarConfigInterface = {};\n  @Input() label:string;\n  emergencyAlert = [];\n  violation = [];\n  workPermit = [];\n  facility = [];\n\n  constructor( private alertService: AlertService,\n    private violationService: ViolationService,\n    private cookieService:CookieService,\n    private workpermitService: WorkPermitService,\n    private facilityService: FacilityService,) { }\n\n  ngOnInit(): void {\n    let entity = {\n      apartmentId:  parseInt(this.cookieService.get('apartmentId')),\n      active: 1,\n    }\n    if(this.label == 'Emergency Alerts') {\n      this.alertService.getAllApartmentBlockUnitAlertByApartmentIdStatus(entity).subscribe((res:any)=>{\n        this.emergencyAlert = res\n      })\n    } else if(this.label == 'Recent Violations') {\n      this.violationService.getAllViolationsByStatus(entity).subscribe((res:any)=>{\n        this.violation = res\n      })\n    } else if(this.label == 'Work Permit') {\n      this.workpermitService.getWorkPermitsByApartmentIdStatus(entity).subscribe((res:any) => {\n        this.workPermit = res\n      })\n    } else if(this.label == 'Facility Bookings') {\n      this.facilityService.getApartmentFacilityBookingsByApartmentIdStatus(entity).subscribe((res:any) => {\n        this.facility = res\n      })\n    }\n  }\n\n}\n","export default \".dark-blue {\\n  color: #236aaf;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9hbXMvZGFzaGJvYXJkL2NvbXBvbmVudHMvc2hhcmVkL2Rhc2gtaW5jb21lLWNoYXJ0L2Rhc2gtaW5jb21lLWNoYXJ0LmNvbXBvbmVudC5zY3NzIiwiL1VzZXJzL3NlbnRoaWxrdW1hcnNlZXRoYXJhbWFuL0RvY3VtZW50cy93b3Jrcy9jbGlja215Y29uZG8vYXBwLW5nOS9zcmMvc2Nzcy92YXJpYWJsZXMuc2NzcyIsInNyYy9hcHAvYW1zL2Rhc2hib2FyZC9jb21wb25lbnRzL3NoYXJlZC9kYXNoLWluY29tZS1jaGFydC9kYXNoLWluY29tZS1jaGFydC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQTtFQUNJLGNDR1c7QUNQZiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9kYXNoYm9hcmQvY29tcG9uZW50cy9zaGFyZWQvZGFzaC1pbmNvbWUtY2hhcnQvZGFzaC1pbmNvbWUtY2hhcnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwifnNyYy9zY3NzL3ZhcmlhYmxlc1wiO1xuQGltcG9ydCBcIn5zcmMvc2Nzcy9taXhpbnNcIjtcbkBpbXBvcnQgXCJ+c3JjL3Njc3MvZm9udHNcIjtcblxuXG4uZGFyay1ibHVlIHtcbiAgICBjb2xvciA6ICRkYXJrLWJsdWUtMDI7XG59IiwiXG4kZnRhOiBGb250QXdlc29tZTtcblxuJGZkOmZpeGVkO1xuJGFiczphYnNvbHV0ZTtcbiRyZWw6cmVsYXRpdmU7XG4kc3Q6c3RhdGljO1xuXG4kZGFyay1ibHVlOiAjMDgzZDcxO1xuJGRhcmstYmx1ZS0wMjogIzIzNmFhZjtcbiRkYXJrLWJsdWUtMDM6ICMxMzRiODI7XG4kbGlnaHQtYmx1ZTogIzgzOTFhMTtcbiRsaWdodC1ibHVlLTAyOiAjZWVmMGYzO1xuJGdyZXktYmx1ZTogI2YzZjhmZjtcbiRzLWJsdWU6ICMwM2E5ZjQ7XG4kbGlnaHQtcmVkOiAjZmY1NDdiO1xuJG0tbGlnaHQtcmVkOiAjZmY3Njg4O1xuJGJyaWdodC1yZWQ6ICNlMjM4NWU7XG4kcy1yZWQ6ICNlYTc5NjI7XG4kcy1yZWQtMDI6ICNmZjM2Mzg7XG4kcy1yZWQtMDM6ICNmNDQzMzY7XG4kbS1yZWQ6ICNkNzU3M2Q7XG4kZG0tcmVkOiAjOGU0ZDQwO1xuJGwtcGFsZS1yZWQ6ICNmZmYzZjU7XG4kaC1wYWxlLXJlZDogI2ZmZmJmYjtcbiRncmV5LXJlZCA6ICNmMWRkZGQ7XG4kcy1jeWFuOiAjMDBiY2Q0O1xuJGQtY3lhbjogIzAyMjkyNTtcbiRkLWN5YW4tMDI6ICMwOWE1OTY7XG4kZC1jeWFuLTAzOiMwMGQxZmE7XG4kdmQtY3lhbjogIzAwNmQ2ZDtcbiRwYWxlLWN5YW46ICNkOGZmZmI7XG4kcy1ncmV5OiAjY2NjY2NjO1xuJGwtZ3JleTogI2Q4ZTBlNjtcblxuJGxoLXJlZDojZTIzZjA2YzQ7XG4kbGgteWVsbG93OiNkY2JlMDg7XG4kcy1vcmFuZ2U6ICNmZjk4MDA7XG4kZC1vcmFuZ2U6ICM3ZDY1MjA7XG4kZC1vcmFuZ2UtMDI6ICM1MjQ3Mjg7XG4kcy15ZWxsb3c6ICNmZmViM2I7XG4kbS15ZWxsb3c6ICNmZmMxMDc7XG4kcy12aW9sZXQ6ICM2NzNhYjc7XG5cbiRncmV5LTMwMDogI2YwZjNmMztcbiRncmV5LTIwMDogI2Y2ZjhmODtcbiRncmV5LTUwMDogI2U2ZTZlNjtcbiRoLWN5YW46ICMwM2NjYTY7XG4kZHMtY3lhbjogIzgxYjI5YTtcbiRoZC1ibHVlOiAjMDQyODU0O1xuXG4kbGltZS1ncmVlbjogIzVjZDY5NDsgLy8jNWJjYzczXG4kbGltZS1ncmVlbi0wMjogIzVjZDY3YztcbiRsaW1lLWdyZWVuLTAzOiAjNTJjNTcwO1xuJGxpZ2h0LWdyZWVuOiAjZWRmNWUwO1xuJG0tZ3JlZW46ICM1NGI5NDE7XG4kZC1ncmVlbjogIzM4OTU4MztcbiRkLWdyZWVuLTAyOiAjZGFlMGNkO1xuJGRzLWdyZWVuOiAjZTRlN2RmO1xuJGRzLWdyZWVuLTAyOiAjZjRmN2VmO1xuXG4kbS1ibHVlOiAjM2Y1MWI1O1xuJHMtYmx1ZTogIzUyOWVmZjtcbiRkcy1ibHVlOiAjNjA3ZDhiO1xuJG1kcy1ibHVlOiAjNjA3ZDhiO1xuJGwtYmx1ZTogI2VhZWZmZDtcbiRsZy1ibHVlOiAjZTBlM2VjO1xuJGxnLWJsdWUtMDI6ICNmNGY0Zjc7XG4kbGctYmx1ZS0wMzojZGFlMmU2O1xuJGxnLWJsdWUtMDQ6ICM3MjdmOGU7XG4kbGctYmx1ZS0wNTogI2U3ZWNlYztcbiRsZy1ibHVlLTA2OiAjZTllY2VmO1xuJGxnLWJsdWUtMDc6ICNlMWY1ZmU7XG5cbi8vZW1lZ2VuY3kgY29sb3JzOlxuJGUtbWVkLTAxOiAjMDBiY2Q0O1xuJGUtbWVkLTAyOiAjMjE5NmYzO1xuXG4kZS10aC0wMTogI2Y3ZDA2MTtcbiRlLXRoLTAyOiAjZWY2MGE1O1xuXG4kZS1mZS0wMTogI0ZGOTgwMDtcbiRlLWZlLTAyOiAjRTkxRTYzO1xuXG4kZS1zaHItMDE6ICM2NGExZmQ7XG4kZS1zaHItMDI6ICM5MTAwZmY7XG5cbiRlLXBjLTAxOiAjNjFhMWUxO1xuJGUtcGMtMDI6ICMwNmJmNTg7XG5cbiRlLW90LTAxOiAjNjFhMWUxO1xuJGUtb3QtMDI6ICMzN2U3ODU7XG5cbiRncmV5LTkwMDogIzE5MWMxZTtcbiRncmV5LTg1MDogIzY4Njk2YjtcbiRncmV5LTgwMDogIzM3Mzk0NjsgLy8jNDI0ODU2O1xuJGdyZXktNzUwOiAjNzk3OTc5O1xuJGdyZXktNzAwOiAjNTg1ODU4O1xuJGdyZXktNjAwOiAjZGVkZWRlO1xuJGdyZXktNjUwOiAjNWY1ZjVmO1xuJGdyZXktNTUwOiAjYjFiMWIxO1xuJGdyZXktNDgwOiAjYzVjNmM3O1xuJGdyZXktNDYwOiAjZGVlMmU2O1xuJGdyZXktNDcwOiAjZTVlNWU1O1xuJGdyZXktNDUwOiAjZWFlYWVhOyAvLyNkZWUwZTQ7XG4kZ3JleS00NDA6ICNDOUQwREY7XG4kZ3JleS00MzA6ICNlNGU0ZTQ7XG4kZ3JleS00MTA6ICNlY2YwZjU7XG4kZ3JleS00MDA6ICNlYWVhZWE7XG4kZ3JleS0zNTA6ICM4ZThlOGU7XG4kZ3JleS0yNTA6ICNmNWY1ZjU7XG4kZ3JleS0yMjA6ICNmYWZhZmE7XG4kZ3JleS0yMTA6ICNmM2Y1Zjc7XG4kZ3JleS0xNTA6ICNmOWY5Zjk7XG4kZ3JleS0xMjA6ICNmN2Y3Zjc7XG4kZ3JleS0xMzA6ICNmNmY2Zjc7XG4kZ3JleS0xMDA6ICNmZGZkZmQ7XG5cbiR3aGl0ZTogI2ZmZmZmZjtcbiRibGFjazogIzAwMDAwMDtcbiR0cmFuczogdHJhbnNwYXJlbnQ7XG5cblxuLy9wdWJsaWMgcGFnZXMgY29sb3JzXG4kZHMtdjojMzQyNjNjO1xuJGwtZ3JleS0wMTojZjJmMmYyO1xuJGwtZ3JleS0wMjojZGRkZGRkO1xuJGdyZXktdjogIzZlNjc3MztcbiRkLWdyZXktMDE6IzhhOGE4YTtcbiRzdC1ibHVlOiMwNTgyYzg7XG4kc3QtYmx1ZS0wMTogIzFjYTBkNTtcbiRzdC1ibHVlLTAyOiAjMDE5N2Q0O1xuJHBtLWJsdWU6IzIyOTZlZjtcbiRncmV5LXA6I2Y2ZWVmMztcbiRwLXJlZDogI2ZmNGY1YTtcbiRwLWdyZXktMDE6ICMyZjJmMmY7XG4kcC1ncmV5LTAyOiAjNGQ0YTRhO1xuJHAtZ3JleS0wMzogIzYzNjE2MTtcblxuXG4vL2ZvbnQtc2l6ZXNcbiRmdC1iYXNlOjEwO1xuJGZvbnQtYmlnLTAzOjUwO1xuJGZvbnQtYmlnOjM4O1xuJGZvbnQtYmlnLTAyOjM2O1xuJGZvbnQtaDI6MzQ7XG4kZm9udC1tZWRpdW0tMDI6MjQ7XG4kZm9udC1tZWRpdW0tMDM6MjY7XG4kZm9udC1tZWRpdW0tMDQ6MzA7XG4kZm9udC1oMzoyODtcbiRmb250LWgzLTAyOjMyO1xuJGZvbnQtaDQ6IDIyO1xuJGZvbnQtbWVkaXVtOjIwO1xuJGZvbnQtYmFzZToxODtcbiRmb250LW5vcm1hbC0wMjoxNTtcbiRmb250LW5vcm1hbDoxNjtcbiRmb250LXNtYWxsOjE0O1xuJGZvbnQtc21hbGxlcjoxMztcbiRmb250LXRpbnk6MTI7XG4kZm9udC10aW5pZXI6MTA7XG4kZm9udC1taWNybzo5O1xuXG4vLyBvdGhlcnNcbiRmdWxsOjEwMCUgIWltcG9ydGFudDtcblxuXG4vLyBpbWFnZXNcbiRpbWFnZXM6IFwiL2Fzc2V0cy9pbWFnZXNcIjtcblxuJGhlYWRlci1oZWlnaHQ6IDcwcHg7XG5cbiIsIi5kYXJrLWJsdWUge1xuICBjb2xvcjogIzIzNmFhZjtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dash-income-chart',\n  templateUrl: './dash-income-chart.component.html',\n  styleUrls: ['./dash-income-chart.component.scss']\n})\nexport class DashIncomeChartComponent implements OnInit {\n  days: any[] = [\n    { Day: 'Monday' },\n    { Day: 'Tuesday' },\n    { Day: 'Wednesday' },\n    { Day: 'Thursday' },\n    { Day: 'Friday' },\n    { Day: 'Saturday' },\n    { Day: 'Sunday' }\n  ];\nKeith: any[] = [\n  { Minutes: 30 },\n  { Minutes: 25 },\n  { Minutes: 30 },\n  { Minutes: 35 },\n  { Minutes: 20 },\n  { Minutes: 30 },\n  { Minutes: 60 }\n];\nErica: any[] = [\n  { Minutes: 15 },\n  { Minutes: 25 },\n  { Minutes: 20 },\n  { Minutes: 25 },\n  { Minutes: 20 },\n  { Minutes: 20 },\n  { Minutes: 45 }\n];\nGeorge: any[] = [\n  { Minutes: 25 },\n  { Minutes: 30 },\n  { Minutes: 25 },\n  { Minutes: 45 },\n  { Minutes: 25 },\n  { Minutes: 30 },\n  { Minutes: 90 }\n];\npadding: any = { left: 5, top: 5, right: 40, bottom: 5 };\ntitlePadding: any = { left: 90, top: 0, right: 0, bottom: 10 };\n\nxAxis: any =\n{\n  dataField: 'Day',\n  gridLines: { visible: true }\n};\nvalueAxis: any =\n{\n  visible: true,\n  title: { text: 'Time in minutes' }\n};\nseriesGroups: any[] = [{\n  type: 'stackedline',\n  source: this.Keith,\n  series: [\n      { dataField: 'Minutes', displayText: 'Keith' }\n    ]},\n  {\n    type: 'stackedline',\n    source: this.Erica,\n    series: [\n        { dataField: 'Minutes', displayText: 'Erica' }\n    ]},\n  {\n    type: 'stackedline',\n    source: this.George,\n    series: [\n    { dataField: 'Minutes', displayText: 'George' }\n  ]}\n];\n\n  constructor() { }\n\n  getWidth() : any {\n    if (document.body.offsetWidth < 850) {\n\t\t\treturn '100%';\n\t\t}\n\t\treturn 480;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9kYXNoYm9hcmQvY29tcG9uZW50cy9zaGFyZWQvZGFzaC1tZWV0aW5nL2Rhc2gtbWVldGluZy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { DashBoardService } from 'src/app/api/controllers/DashBoard';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DateModelComponent } from '../date-model/date-model.component';\nimport { CookieService } from 'ngx-cookie-service';\nimport moment from 'moment';\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\n\n@Component({\n  selector: 'app-dash-meeting',\n  templateUrl: './dash-meeting.component.html',\n  styleUrls: ['./dash-meeting.component.scss']\n})\nexport class DashMeetingComponent implements OnInit {\n  public config: PerfectScrollbarConfigInterface = {};\n  meetingList = [];\n\n  constructor( public dialog: MatDialog,\n    private dashboardService:DashBoardService,\n    private cookieService:CookieService) { }\n\n  calenderPopUp(dateType) {\n    const dialogRef = this.dialog.open(DateModelComponent, {\n      width: '400px',\n      height:'175px',\n      data: dateType\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if(result) {\n        this.scheduledMeeting(result);\n      }\n    });\n  }\n\n  scheduledMeeting(entity) {\n    this.dashboardService.getDashlistupcomingmeetingbyApartmentId(entity).subscribe((res:any)=>{\n      this.meetingList = res;\n    });\n  }\n\n  ngOnInit(): void {\n    let entity = {\n      apartmentId : parseInt(this.cookieService.get('apartmentId')),\n      fromDate : new Date().toISOString(),\n      toDate : moment(new Date()).add(1, 'month').utc().format(),\n    }\n    this.scheduledMeeting(entity);\n  }\n\n}\n","export default \".dark-blue {\\n  color: #236aaf;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9hbXMvZGFzaGJvYXJkL2NvbXBvbmVudHMvc2hhcmVkL2Rhc2gtcGllLWNoYXJ0L2Rhc2gtcGllLWNoYXJ0LmNvbXBvbmVudC5zY3NzIiwiL1VzZXJzL3NlbnRoaWxrdW1hcnNlZXRoYXJhbWFuL0RvY3VtZW50cy93b3Jrcy9jbGlja215Y29uZG8vYXBwLW5nOS9zcmMvc2Nzcy92YXJpYWJsZXMuc2NzcyIsInNyYy9hcHAvYW1zL2Rhc2hib2FyZC9jb21wb25lbnRzL3NoYXJlZC9kYXNoLXBpZS1jaGFydC9kYXNoLXBpZS1jaGFydC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQTtFQUNJLGNDR1c7QUNQZiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9kYXNoYm9hcmQvY29tcG9uZW50cy9zaGFyZWQvZGFzaC1waWUtY2hhcnQvZGFzaC1waWUtY2hhcnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwifnNyYy9zY3NzL3ZhcmlhYmxlc1wiO1xuQGltcG9ydCBcIn5zcmMvc2Nzcy9taXhpbnNcIjtcbkBpbXBvcnQgXCJ+c3JjL3Njc3MvZm9udHNcIjtcblxuXG4uZGFyay1ibHVlIHtcbiAgICBjb2xvciA6ICRkYXJrLWJsdWUtMDI7XG59IiwiXG4kZnRhOiBGb250QXdlc29tZTtcblxuJGZkOmZpeGVkO1xuJGFiczphYnNvbHV0ZTtcbiRyZWw6cmVsYXRpdmU7XG4kc3Q6c3RhdGljO1xuXG4kZGFyay1ibHVlOiAjMDgzZDcxO1xuJGRhcmstYmx1ZS0wMjogIzIzNmFhZjtcbiRkYXJrLWJsdWUtMDM6ICMxMzRiODI7XG4kbGlnaHQtYmx1ZTogIzgzOTFhMTtcbiRsaWdodC1ibHVlLTAyOiAjZWVmMGYzO1xuJGdyZXktYmx1ZTogI2YzZjhmZjtcbiRzLWJsdWU6ICMwM2E5ZjQ7XG4kbGlnaHQtcmVkOiAjZmY1NDdiO1xuJG0tbGlnaHQtcmVkOiAjZmY3Njg4O1xuJGJyaWdodC1yZWQ6ICNlMjM4NWU7XG4kcy1yZWQ6ICNlYTc5NjI7XG4kcy1yZWQtMDI6ICNmZjM2Mzg7XG4kcy1yZWQtMDM6ICNmNDQzMzY7XG4kbS1yZWQ6ICNkNzU3M2Q7XG4kZG0tcmVkOiAjOGU0ZDQwO1xuJGwtcGFsZS1yZWQ6ICNmZmYzZjU7XG4kaC1wYWxlLXJlZDogI2ZmZmJmYjtcbiRncmV5LXJlZCA6ICNmMWRkZGQ7XG4kcy1jeWFuOiAjMDBiY2Q0O1xuJGQtY3lhbjogIzAyMjkyNTtcbiRkLWN5YW4tMDI6ICMwOWE1OTY7XG4kZC1jeWFuLTAzOiMwMGQxZmE7XG4kdmQtY3lhbjogIzAwNmQ2ZDtcbiRwYWxlLWN5YW46ICNkOGZmZmI7XG4kcy1ncmV5OiAjY2NjY2NjO1xuJGwtZ3JleTogI2Q4ZTBlNjtcblxuJGxoLXJlZDojZTIzZjA2YzQ7XG4kbGgteWVsbG93OiNkY2JlMDg7XG4kcy1vcmFuZ2U6ICNmZjk4MDA7XG4kZC1vcmFuZ2U6ICM3ZDY1MjA7XG4kZC1vcmFuZ2UtMDI6ICM1MjQ3Mjg7XG4kcy15ZWxsb3c6ICNmZmViM2I7XG4kbS15ZWxsb3c6ICNmZmMxMDc7XG4kcy12aW9sZXQ6ICM2NzNhYjc7XG5cbiRncmV5LTMwMDogI2YwZjNmMztcbiRncmV5LTIwMDogI2Y2ZjhmODtcbiRncmV5LTUwMDogI2U2ZTZlNjtcbiRoLWN5YW46ICMwM2NjYTY7XG4kZHMtY3lhbjogIzgxYjI5YTtcbiRoZC1ibHVlOiAjMDQyODU0O1xuXG4kbGltZS1ncmVlbjogIzVjZDY5NDsgLy8jNWJjYzczXG4kbGltZS1ncmVlbi0wMjogIzVjZDY3YztcbiRsaW1lLWdyZWVuLTAzOiAjNTJjNTcwO1xuJGxpZ2h0LWdyZWVuOiAjZWRmNWUwO1xuJG0tZ3JlZW46ICM1NGI5NDE7XG4kZC1ncmVlbjogIzM4OTU4MztcbiRkLWdyZWVuLTAyOiAjZGFlMGNkO1xuJGRzLWdyZWVuOiAjZTRlN2RmO1xuJGRzLWdyZWVuLTAyOiAjZjRmN2VmO1xuXG4kbS1ibHVlOiAjM2Y1MWI1O1xuJHMtYmx1ZTogIzUyOWVmZjtcbiRkcy1ibHVlOiAjNjA3ZDhiO1xuJG1kcy1ibHVlOiAjNjA3ZDhiO1xuJGwtYmx1ZTogI2VhZWZmZDtcbiRsZy1ibHVlOiAjZTBlM2VjO1xuJGxnLWJsdWUtMDI6ICNmNGY0Zjc7XG4kbGctYmx1ZS0wMzojZGFlMmU2O1xuJGxnLWJsdWUtMDQ6ICM3MjdmOGU7XG4kbGctYmx1ZS0wNTogI2U3ZWNlYztcbiRsZy1ibHVlLTA2OiAjZTllY2VmO1xuJGxnLWJsdWUtMDc6ICNlMWY1ZmU7XG5cbi8vZW1lZ2VuY3kgY29sb3JzOlxuJGUtbWVkLTAxOiAjMDBiY2Q0O1xuJGUtbWVkLTAyOiAjMjE5NmYzO1xuXG4kZS10aC0wMTogI2Y3ZDA2MTtcbiRlLXRoLTAyOiAjZWY2MGE1O1xuXG4kZS1mZS0wMTogI0ZGOTgwMDtcbiRlLWZlLTAyOiAjRTkxRTYzO1xuXG4kZS1zaHItMDE6ICM2NGExZmQ7XG4kZS1zaHItMDI6ICM5MTAwZmY7XG5cbiRlLXBjLTAxOiAjNjFhMWUxO1xuJGUtcGMtMDI6ICMwNmJmNTg7XG5cbiRlLW90LTAxOiAjNjFhMWUxO1xuJGUtb3QtMDI6ICMzN2U3ODU7XG5cbiRncmV5LTkwMDogIzE5MWMxZTtcbiRncmV5LTg1MDogIzY4Njk2YjtcbiRncmV5LTgwMDogIzM3Mzk0NjsgLy8jNDI0ODU2O1xuJGdyZXktNzUwOiAjNzk3OTc5O1xuJGdyZXktNzAwOiAjNTg1ODU4O1xuJGdyZXktNjAwOiAjZGVkZWRlO1xuJGdyZXktNjUwOiAjNWY1ZjVmO1xuJGdyZXktNTUwOiAjYjFiMWIxO1xuJGdyZXktNDgwOiAjYzVjNmM3O1xuJGdyZXktNDYwOiAjZGVlMmU2O1xuJGdyZXktNDcwOiAjZTVlNWU1O1xuJGdyZXktNDUwOiAjZWFlYWVhOyAvLyNkZWUwZTQ7XG4kZ3JleS00NDA6ICNDOUQwREY7XG4kZ3JleS00MzA6ICNlNGU0ZTQ7XG4kZ3JleS00MTA6ICNlY2YwZjU7XG4kZ3JleS00MDA6ICNlYWVhZWE7XG4kZ3JleS0zNTA6ICM4ZThlOGU7XG4kZ3JleS0yNTA6ICNmNWY1ZjU7XG4kZ3JleS0yMjA6ICNmYWZhZmE7XG4kZ3JleS0yMTA6ICNmM2Y1Zjc7XG4kZ3JleS0xNTA6ICNmOWY5Zjk7XG4kZ3JleS0xMjA6ICNmN2Y3Zjc7XG4kZ3JleS0xMzA6ICNmNmY2Zjc7XG4kZ3JleS0xMDA6ICNmZGZkZmQ7XG5cbiR3aGl0ZTogI2ZmZmZmZjtcbiRibGFjazogIzAwMDAwMDtcbiR0cmFuczogdHJhbnNwYXJlbnQ7XG5cblxuLy9wdWJsaWMgcGFnZXMgY29sb3JzXG4kZHMtdjojMzQyNjNjO1xuJGwtZ3JleS0wMTojZjJmMmYyO1xuJGwtZ3JleS0wMjojZGRkZGRkO1xuJGdyZXktdjogIzZlNjc3MztcbiRkLWdyZXktMDE6IzhhOGE4YTtcbiRzdC1ibHVlOiMwNTgyYzg7XG4kc3QtYmx1ZS0wMTogIzFjYTBkNTtcbiRzdC1ibHVlLTAyOiAjMDE5N2Q0O1xuJHBtLWJsdWU6IzIyOTZlZjtcbiRncmV5LXA6I2Y2ZWVmMztcbiRwLXJlZDogI2ZmNGY1YTtcbiRwLWdyZXktMDE6ICMyZjJmMmY7XG4kcC1ncmV5LTAyOiAjNGQ0YTRhO1xuJHAtZ3JleS0wMzogIzYzNjE2MTtcblxuXG4vL2ZvbnQtc2l6ZXNcbiRmdC1iYXNlOjEwO1xuJGZvbnQtYmlnLTAzOjUwO1xuJGZvbnQtYmlnOjM4O1xuJGZvbnQtYmlnLTAyOjM2O1xuJGZvbnQtaDI6MzQ7XG4kZm9udC1tZWRpdW0tMDI6MjQ7XG4kZm9udC1tZWRpdW0tMDM6MjY7XG4kZm9udC1tZWRpdW0tMDQ6MzA7XG4kZm9udC1oMzoyODtcbiRmb250LWgzLTAyOjMyO1xuJGZvbnQtaDQ6IDIyO1xuJGZvbnQtbWVkaXVtOjIwO1xuJGZvbnQtYmFzZToxODtcbiRmb250LW5vcm1hbC0wMjoxNTtcbiRmb250LW5vcm1hbDoxNjtcbiRmb250LXNtYWxsOjE0O1xuJGZvbnQtc21hbGxlcjoxMztcbiRmb250LXRpbnk6MTI7XG4kZm9udC10aW5pZXI6MTA7XG4kZm9udC1taWNybzo5O1xuXG4vLyBvdGhlcnNcbiRmdWxsOjEwMCUgIWltcG9ydGFudDtcblxuXG4vLyBpbWFnZXNcbiRpbWFnZXM6IFwiL2Fzc2V0cy9pbWFnZXNcIjtcblxuJGhlYWRlci1oZWlnaHQ6IDcwcHg7XG5cbiIsIi5kYXJrLWJsdWUge1xuICBjb2xvcjogIzIzNmFhZjtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dash-pie-chart',\n  templateUrl: './dash-pie-chart.component.html',\n  styleUrls: ['./dash-pie-chart.component.scss']\n})\nexport class DashPieChartComponent implements OnInit {\n  data = [{ \"cliente\": \"Kowshick\", \"total\": \"10\" }, { \"cliente\": \"Murugan\", \"total\": \"20\" }, { \"cliente\": \"Raavan\", \"total\": \"30\" }, { \"cliente\": \"Recris\", \"total\": \"5\" }];\n  source: any = {\n    datatype: 'json',\n    datafields: [\n      { name: 'cliente', type: 'string' },\n      { name: 'total', type: 'number' }],\n    localdata: this.data,\n    async: false\n  };\n  dataAdapter: any = new jqx.dataAdapter(this.source, {\n    async: false, \n    autoBind: true, \n    loadError: (xhr: any, status: any, error: any) => {\n               alert('Error loading \"' + this.source.url + '\" : ' + error); \n    } \n  });\n  legendPosition: any = { left: 520, top: 140, width: 100, height: 100 };\n  padding: any = { left: 5, top: 5, right: 5, bottom: 5 };\n  titlePadding: any = { left: 0, top: 0, right: 0, bottom: 10 };\n  seriesGroups: any[] = [{\n    type: 'donut',\n    showLabels: true,\n    series:[{\n    dataField: 'total',\n    displayText: 'cliente',\n    labelRadius: 120,\n    initialAngle: 15,\n    radius: 90,\n    innerRadius: 40,\n    centerOffset: 0,\n    formatSettings: { sufix: '%', decimalPlaces: 1 }}]\n  }];\n\n  constructor() { }\n\n  getWidth() : any {\n\t\tif (document.body.offsetWidth < 850) {\n\t\t\treturn '100%';\n\t\t}\n\t\treturn 400;\n  }\n  \n  ngOnInit(): void {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9kYXNoYm9hcmQvY29tcG9uZW50cy9zaGFyZWQvZGF0ZS1tb2RlbC9kYXRlLW1vZGVsLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-date-model',\n  templateUrl: './date-model.component.html',\n  styleUrls: ['./date-model.component.scss']\n})\nexport class DateModelComponent implements OnInit {\n  dashboard:any = {\n    apartmentId : parseInt(this.cookieService.get('apartmentId')),\n  }\n  constructor(\n    private cookieService:CookieService,\n    public dialogRef: MatDialogRef<DateModelComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n  ) { }\n  \n\n  onConfirm(): void {\n    if(this.data == 'unapprove' || this.data == 'openaged' || this.data == 'panicAlerts' || this.data == 'unassigned') {\n      this.dashboard.date = this.dashboard.date.toISOString()\n    } else {\n      this.dashboard.fromDate = this.dashboard.fromDate.toISOString()\n      this.dashboard.toDate = this.dashboard.toDate.toISOString()\n    }\n    this.dialogRef.close(this.dashboard);\n  }\n\n  onDismiss(): void {\n    this.dialogRef.close(false);\n  }\n\n\n  ngOnInit(): void {\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9kYXNoYm9hcmQvY29tcG9uZW50cy9zaGFyZWQvZXhwZW5zZS10cmFja2VyLWNvbXAvZXhwZW5zZS10cmFja2VyLWNvbXAuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\n\nimport { Chart } from 'chart.js';\n\n@Component({\n  selector: 'app-expense-tracker-comp',\n  templateUrl: './expense-tracker-comp.component.html',\n  styleUrls: ['./expense-tracker-comp.component.scss']\n})\nexport class ExpenseTrackerCompComponent implements OnInit {\n\n  chart: any;\n  @ViewChild('expensePieChart', {static: false}) private chartRef;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit(){\n\n  \t\n  \tsetTimeout(()=> {\n\n  \t\tvar data = {\n\t\t  labels: [\n\t\t    \"Expenses\",\n\t\t    \"Budget\"\n\t\t  ],\n\t\t  datasets: [\n\t\t    { \n\t\t\t  barThickness: 15,\n\t\t      data: [90, 80],\n\t\t      backgroundColor: [\n\t\t        \"#52cc8e\",\n\t\t        \"#ffeb3b\"\n\t\t      ],\n\t\t      hoverBackgroundColor: [\n\t\t        \"#52cc8e\",\n\t\t        \"#ffeb3b\"\n\t\t      ]\n\t\t }]\n\t};\n\n\n\n  \tthis.chart = new Chart(this.chartRef.nativeElement, {\n  \t \t  type: 'bar',\n\t\t  data: data,\n\t\t  options: {\n\t\t  \tresponsive: true,\n\t\t    legend: {\n\t\t      display: false\n\t\t    },\n\t\t\ttooltips: {\n        \t\tenabled: true\n      \t\t},\n      \t\tscales: {\n\t\t        xAxes: [{\n\t\t        gridLines: {\n\t\t          display: false\n\t\t        },\n\t\t          ticks : {\n\t\t            fontColor: \"#8391a1\",\n\t\t            fontStyle: \"normal\",\n\t\t            fontSize: 12,\n\t\t            maxRotation: 0,\n\t\t            autoSkip: false\n\t\t          }\n\t\t        }],\n\t\t        yAxes: [{\n\t\t          gridLines: {\n\t\t            color: \"rgba(200, 200, 200, 0.4)\",\n\t\t            borderDash: [2, 2]\n\t\t          },\n\t\t          ticks: {\n\t\t            beginAtZero: true,\n\t\t            fontColor: \"#8391a1\",\n\t\t            fontStyle: \"normal\",\n\t\t            fontSize: 12,\n\t\t            callback: function(label, index, labels) {\n\t\t                return label;\n\t\t              }\n\t\t            },\n\t\t            scaleLabel: {\n\t\t              display: false\n\t\t            }\n\t\t        }]\n\t\t      },\n\t\t    animation: {\n                onComplete: (e) => {\n                \n                /* var width = this.chart.width,\n\t\t        height = this.chart.height,\n\t\t        ctx = this.chart.ctx;\n\n\t\t\t    ctx.restore();\n\n\t\t\t    ctx.font = \"2em Maven Pro\";\n\t\t\t    ctx.textBaseline = \"middle\";\n\t\t\t    ctx.fillStyle = \"#4c4c4c\";\n\n\t\t\t    var numText = \"-1052.5K\",\n\t\t\t    textX = Math.round((width - ctx.measureText(numText).width) / 2),\n\t\t\t    textY = (height / 2) - 10;\n\n\t\t\t    ctx.fillText(numText, textX, textY);\n\t\t\t    ctx.save();\n\n\t\t\t    ctx.font = \"1.6em Maven Pro\";\n\t\t\t    ctx.textBaseline = \"middle\";\n\t\t\t    ctx.fillStyle = \"#4c4c4c\";\n\n\t\t\t    var fText = \"Variance Amount\";\n\t\t\t    textX = Math.round((width - ctx.measureText(fText).width) / 2),\n\t\t\t    textY = (height / 2) + 15;\n\n\t\t\t    ctx.fillText(fText, textX, textY);\n\t\t\t    ctx.save(); */\n\n                }\n            }\n\t\t}\n  \t});\n\n  \t}, 500);\n  \t\n\n  }\n\n}\n","export default \"@media (max-width: 576px) {\\n  .helpdesk-doughnut-wrapper .details-wrapper .title {\\n    padding: 10px 0 0 0;\\n  }\\n}\\n.helpdesk-doughnut-wrapper .details-wrapper .details:not(:last-child) {\\n  padding: 0 20px 0 0;\\n}\\n@media (max-width: 576px) {\\n  .helpdesk-doughnut-wrapper .details-wrapper .details:not(:last-child) {\\n    padding: 0 35px 5px 0;\\n  }\\n}\\n.helpdesk-doughnut-wrapper .btn-wrapper {\\n  margin: 21px 0 0 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9hbXMvZGFzaGJvYXJkL2NvbXBvbmVudHMvc2hhcmVkL2hlbHBkZXNrLWNoYXJ0L2hlbHBkZXNrLWNoYXJ0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hbXMvZGFzaGJvYXJkL2NvbXBvbmVudHMvc2hhcmVkL2hlbHBkZXNrLWNoYXJ0L2hlbHBkZXNrLWNoYXJ0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVFHO0VBREQ7SUFFVSxtQkFBQTtFQ05WO0FBQ0Y7QURTRztFQUNDLG1CQUFBO0FDUEo7QURRSTtFQUZEO0lBR1UscUJBQUE7RUNMWDtBQUNGO0FEU0M7RUFDQyxrQkFBQTtBQ1BGIiwiZmlsZSI6InNyYy9hcHAvYW1zL2Rhc2hib2FyZC9jb21wb25lbnRzL3NoYXJlZC9oZWxwZGVzay1jaGFydC9oZWxwZGVzay1jaGFydC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJ+c3JjL3Njc3MvdmFyaWFibGVzXCI7XG5AaW1wb3J0IFwifnNyYy9zY3NzL21peGluc1wiO1xuQGltcG9ydCBcIn5zcmMvc2Nzcy9mb250c1wiO1xuXG5cbi5oZWxwZGVzay1kb3VnaG51dC13cmFwcGVyIHtcblx0LmRldGFpbHMtd3JhcHBlciB7XG5cdFx0LnRpdGxlIHtcblx0XHRcdEBtZWRpYSAobWF4LXdpZHRoOiA1NzZweCkge1xuICAgICAgICAgIFx0XHRwYWRkaW5nOiAxMHB4IDAgMCAwO1xuICAgICAgICBcdH1cblx0XHR9XG5cdFx0LmRldGFpbHMge1xuXHRcdFx0Jjpub3QoOmxhc3QtY2hpbGQpe1xuXHRcdFx0XHRwYWRkaW5nOiAwIDIwcHggMCAwO1xuXHRcdFx0XHRAbWVkaWEgKG1heC13aWR0aDogNTc2cHgpIHtcbiAgICAgICAgICBcdFx0XHRwYWRkaW5nOiAwIDM1cHggNXB4IDA7XG4gICAgICAgIFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cdC5idG4td3JhcHBlciB7XG5cdFx0bWFyZ2luOiAyMXB4IDAgMCAwO1xuXHR9XG59IiwiQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gIC5oZWxwZGVzay1kb3VnaG51dC13cmFwcGVyIC5kZXRhaWxzLXdyYXBwZXIgLnRpdGxlIHtcbiAgICBwYWRkaW5nOiAxMHB4IDAgMCAwO1xuICB9XG59XG4uaGVscGRlc2stZG91Z2hudXQtd3JhcHBlciAuZGV0YWlscy13cmFwcGVyIC5kZXRhaWxzOm5vdCg6bGFzdC1jaGlsZCkge1xuICBwYWRkaW5nOiAwIDIwcHggMCAwO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gIC5oZWxwZGVzay1kb3VnaG51dC13cmFwcGVyIC5kZXRhaWxzLXdyYXBwZXIgLmRldGFpbHM6bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgcGFkZGluZzogMCAzNXB4IDVweCAwO1xuICB9XG59XG4uaGVscGRlc2stZG91Z2hudXQtd3JhcHBlciAuYnRuLXdyYXBwZXIge1xuICBtYXJnaW46IDIxcHggMCAwIDA7XG59Il19 */\"","import { Component, OnInit, Injector, HostListener } from '@angular/core';\n\nimport { UserService } from 'src/app/api/controllers/User';\nimport { TicketService } from 'src/app/api/controllers/Ticket';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from '../../../../../shared/services/shared.service';\nimport { ModalService } from '../../../../../shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-helpdesk-chart',\n  templateUrl: './helpdesk-chart.component.html',\n  styleUrls: ['./helpdesk-chart.component.scss']\n})\nexport class HelpdeskChartComponent implements OnInit {\n  \n  totalOpenPersonalTickets:any;\n  totalOpenCommunityTickets:any;\n\n  totalUrgentPersonalTickets:any;\n  totalUrgentCommunityTickets:any;\n\n  modalService:any;\n\n  constructor(\n  \tprivate injector: Injector,\n    private userService:UserService,\n    private ticketService: TicketService,\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) { \n  \t this.modalService = this.injector.get(ModalService);\n  }\n\n  ngOnInit() {\n\n    var params = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n\n  \tthis.ticketService.getAllTicketsByApartmentId(params).subscribe((res:any) => {\n\n\n      if(res.length == undefined ||res.length == 0){\n  \t\t  this.totalOpenPersonalTickets = 0;\n        this.totalUrgentPersonalTickets = 0;\n        this.totalUrgentPersonalTickets = 0;\n        this.totalUrgentCommunityTickets = 0;\n      }\n      else{\n        \n        var openPersonalTickets = res.filter(item => {\n          return item.ticketStatusId == 32 && item.ticketTypeId == 27 // new and personal tickets\n        });\n\n        this.totalOpenPersonalTickets = openPersonalTickets.length;\n\n        var openCommunityTickets = res.filter(item => {\n          return item.ticketStatusId == 32 && item.ticketTypeId == 26 // new and common tickets\n        });\n\n        this.totalOpenCommunityTickets = openCommunityTickets.length;\n\n        var urgentPersonalTickets = res.filter(item => {\n          return item.ticketPriorityId == 47 && item.ticketTypeId == 27 // priorty high and personal tickets\n        });\n\n        this.totalUrgentPersonalTickets = urgentPersonalTickets.length;\n\n        var urgentCommunityTickets = res.filter(item => {\n          return item.ticketPriorityId == 47 && item.ticketTypeId == 26 // priorty high and common tickets\n        });\n\n        this.totalUrgentCommunityTickets = urgentCommunityTickets.length;\n\n      }\n\n  \t})\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9kYXNoYm9hcmQvY29tcG9uZW50cy9zaGFyZWQvaW5jb21lLXRyYWNrZXItY29tcC9pbmNvbWUtdHJhY2tlci1jb21wLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\n\nimport { Chart } from 'chart.js';\n\n@Component({\n  selector: 'app-income-tracker-comp',\n  templateUrl: './income-tracker-comp.component.html',\n  styleUrls: ['./income-tracker-comp.component.scss']\n})\nexport class IncomeTrackerCompComponent implements OnInit {\n  \n  chart: any;\n  @ViewChild('incomePieChart', {static: false}) private chartRef;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n\n  ngAfterViewInit(){\n\n  \t\n  \tsetTimeout(()=> {\n\n  \t\tvar data = {\n\t\t  labels: [\n\t\t    \"Colleced\",\n\t\t    \"Balance\"\n\t\t  ],\n\t\t  datasets: [\n\t\t    {\n\t\t      data: [70, 30],\n\t\t      backgroundColor: [\n\t\t        \"#ff3638\",\n\t\t        \"#3f51b5\"\n\t\t      ],\n\t\t      hoverBackgroundColor: [\n\t\t        \"#ff3638\",\n\t\t        \"#3f51b5\"\n\t\t      ]\n\t\t }]\n\t};\n\n\n\n  \tthis.chart = new Chart(this.chartRef.nativeElement, {\n  \t \t  type: 'doughnut',\n\t\t  data: data,\n\t\t  options: {\n\t\t  \tresponsive: true,\n\t\t    legend: {\n\t\t      display: false\n\t\t    },\n\t\t    cutoutPercentage: 30,\n            rotation: 120,\n\t\t    animation: {\n                onComplete: (e) => {\n                \n                /* var width = this.chart.width,\n\t\t        height = this.chart.height,\n\t\t        ctx = this.chart.ctx;\n\n\t\t\t    ctx.restore();\n\n\t\t\t    ctx.font = \"2em Maven Pro\";\n\t\t\t    ctx.textBaseline = \"middle\";\n\t\t\t    ctx.fillStyle = \"#4c4c4c\";\n\n\t\t\t    var numText = \"2261.1K\",\n\t\t\t    textX = Math.round((width - ctx.measureText(numText).width) / 2),\n\t\t\t    textY = (height / 2) - 10;\n\n\t\t\t    ctx.fillText(numText, textX, textY);\n\t\t\t    ctx.save();\n\n\t\t\t    ctx.font = \"1.6em Maven Pro\";\n\t\t\t    ctx.textBaseline = \"middle\";\n\t\t\t    ctx.fillStyle = \"#4c4c4c\";\n\n\t\t\t    var fText = \"Balance\";\n\t\t\t    textX = Math.round((width - ctx.measureText(fText).width) / 2),\n\t\t\t    textY = (height / 2) + 15;\n\n\t\t\t    ctx.fillText(fText, textX, textY);\n\t\t\t    ctx.save(); */\n\n                }\n            }\n\t\t}\n  \t});\n\n  \t}, 500);\n  \t\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9kYXNoYm9hcmQvY29tcG9uZW50cy9zaGFyZWQvbGVkZ2VyLWNvbXAvbGVkZ2VyLWNvbXAuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ledger-comp',\n  templateUrl: './ledger-comp.component.html',\n  styleUrls: ['./ledger-comp.component.scss']\n})\nexport class LedgerCompComponent implements OnInit {\n  \n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  ledgerData:any;\n\n  constructor() { }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  ngOnInit() {\n\n  \tthis.ledgerData = [\n\t  \t{\n\t  \t\t'class': 'Assets',\n\t  \t\t'credit':'22,546,459.74',\n\t  \t\t'debit': '15,114,575.72'\n\t  \t},\n\t  \t{\n\t  \t\t'class': 'Liablities',\n\t  \t\t'credit':'22,546,459.74',\n\t  \t\t'debit': '15,114,575.72'\n\t  \t},\n\t  \t{\n\t  \t\t'class': 'Revenues',\n\t  \t\t'credit':'22,546,459.74',\n\t  \t\t'debit': '15,114,575.72'\n\t  \t},\n\t  \t{\n\t  \t\t'class': 'Expenses',\n\t  \t\t'credit':'22,546,459.74',\n\t  \t\t'debit': '15,114,575.72'\n\t  \t}\n  \t]\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9kYXNoYm9hcmQvY29tcG9uZW50cy9zaGFyZWQvcGF5bWVudC1jb21wL3BheW1lbnQtY29tcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-payment-comp',\n  templateUrl: './payment-comp.component.html',\n  styleUrls: ['./payment-comp.component.scss']\n})\nexport class PaymentCompComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9kYXNoYm9hcmQvY29tcG9uZW50cy9zaGFyZWQvdW5pdC1jaGFydC91bml0LWNoYXJ0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\n\nimport { Chart } from 'chart.js';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n@Component({\n  selector: 'app-unit-chart',\n  templateUrl: './unit-chart.component.html',\n  styleUrls: ['./unit-chart.component.scss']\n})\nexport class UnitChartComponent implements OnInit {\n   \n  totalUnits:any;\n\n  chart: any;\n  @ViewChild('unitPieChart', {static: false}) private chartRef;\n\n  constructor(\n  \tprivate apartmentService:ApartmentService,\n  \tprivate cookieService:CookieService\n  ) { }\n\n  ngOnInit() {\n\n\tlet params = {\n\t\tapartmentId: parseInt(this.cookieService.get('apartmentId'))\n\t}\n\n  \tthis.apartmentService.getApartmentBlockUnitByApartmentId(params).subscribe((res : any) => {\n  \t\tthis.totalUnits = res.length;\n  \t},\n    error => {\n      console.log(error);\n    }\n    );\n\n  }\n\n  ngAfterViewInit(){\n\n  \t\n  \tsetTimeout(()=> {\n\n  \t\tvar data = {\n\t\t  labels: [\n\t\t    \"Total Units\"\n\t\t  ],\n\t\t  datasets: [\n\t\t    {\n\t\t      data: [5],\n\t\t      backgroundColor: [\n\t\t        \"#52cc8e\",\n\t\t        \"#3f51b5\"\n\t\t      ],\n\t\t      hoverBackgroundColor: [\n\t\t        \"#FF6384\",\n\t\t        \"#36A2EB\",\n\t\t        \"#FFCE56\"\n\t\t      ]\n\t\t }]\n\t};\n\n\n\n  \tthis.chart = new Chart(this.chartRef.nativeElement, {\n  \t \t  type: 'doughnut',\n\t\t  data: data,\n\t\t  options: {\n\t\t  \tresponsive: true,\n\t\t    legend: {\n\t\t      display: false\n\t\t    },\n\t\t    cutoutPercentage: 80,\n            rotation: 120,\n\t\t    animation: {\n                onComplete: (e) => {\n                \n                var width = this.chart.width,\n\t\t        height = this.chart.height,\n\t\t        ctx = this.chart.ctx;\n\n\t\t\t    ctx.restore();\n\n\t\t\t    ctx.font = \"2em Maven Pro\";\n\t\t\t    ctx.textBaseline = \"middle\";\n\t\t\t    ctx.fillStyle = \"#4c4c4c\";\n\n\t\t\t    var numText = this.totalUnits,\n\t\t\t    textX = Math.round((width - ctx.measureText(numText).width) / 2),\n\t\t\t    textY = (height / 2) - 10;\n\n\t\t\t    ctx.fillText(numText, textX, textY);\n\t\t\t    ctx.save();\n\n\t\t\t    ctx.font = \"1.6em Maven Pro\";\n\t\t\t    ctx.textBaseline = \"middle\";\n\t\t\t    ctx.fillStyle = \"#4c4c4c\";\n\n\t\t\t    var fText = \"Total Units\";\n\t\t\t    textX = Math.round((width - ctx.measureText(fText).width) / 2),\n\t\t\t    textY = (height / 2) + 15;\n\n\t\t\t    ctx.fillText(fText, textX, textY);\n\t\t\t    ctx.save();\n\n                }\n            }\n\t\t}\n  \t});\n\n  \t}, 500);\n  \t\n\n  }\n\n}\n","export default \".user-doughnut-wrapper .chart-box {\\n  padding: inherit;\\n  margin: -30px 0 0 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9hbXMvZGFzaGJvYXJkL2NvbXBvbmVudHMvc2hhcmVkL3VzZXJzLWNoYXJ0L3VzZXJzLWNoYXJ0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hbXMvZGFzaGJvYXJkL2NvbXBvbmVudHMvc2hhcmVkL3VzZXJzLWNoYXJ0L3VzZXJzLWNoYXJ0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU1DO0VBQ0MsZ0JBQUE7RUFDQSxzQkFBQTtBQ0xGIiwiZmlsZSI6InNyYy9hcHAvYW1zL2Rhc2hib2FyZC9jb21wb25lbnRzL3NoYXJlZC91c2Vycy1jaGFydC91c2Vycy1jaGFydC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJ+c3JjL3Njc3MvdmFyaWFibGVzXCI7XG5AaW1wb3J0IFwifnNyYy9zY3NzL21peGluc1wiO1xuQGltcG9ydCBcIn5zcmMvc2Nzcy9mb250c1wiO1xuXG4udXNlci1kb3VnaG51dC13cmFwcGVyIHtcblx0XG5cdC5jaGFydC1ib3gge1xuXHRcdHBhZGRpbmc6IGluaGVyaXQ7XG5cdFx0bWFyZ2luOiAtMzBweCAwIDAgMzBweDtcblx0fVxufSIsIi51c2VyLWRvdWdobnV0LXdyYXBwZXIgLmNoYXJ0LWJveCB7XG4gIHBhZGRpbmc6IGluaGVyaXQ7XG4gIG1hcmdpbjogLTMwcHggMCAwIDMwcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\n\nimport { UserService } from 'src/app/api/controllers/User';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-users-chart',\n  templateUrl: './users-chart.component.html',\n  styleUrls: ['./users-chart.component.scss']\n})\nexport class UsersChartComponent implements OnInit {\n\n  \t\n  totalUsers:any;\n  totalUnapprovedUsers:any;\n  totalApprovedUsers:any;\n\n  totalUnits:any;\n\n  constructor(\n  \tprivate userService:UserService, \n  \tprivate apartmentService:ApartmentService,\n  \tprivate cookieService:CookieService\n  ) { }\n  \n\n  ngOnInit() {\n\n  \tthis.userService.getAllUsers().subscribe((res : any) => {\n\n  \t\tthis.totalUsers = res.length;\n\n  \t\tthis.userService.getAllUnApprovedUsers().subscribe((res : any) => {\n\n  \t\t\tthis.totalUnapprovedUsers = res.length;\n\n\t  \t},\n\t    error => {\n\t      console.log(error);\n\t    });\n\n  \t},\n    error => {\n      console.log(error);\n    }\n    );\n\n    this.totalApprovedUsers = this.totalUsers - this.totalUnapprovedUsers;\n    \n    let params = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n\n  \tthis.apartmentService.getApartmentBlockUnitByApartmentId(params).subscribe((res : any) => {\n\n  \t\tthis.totalUnits = res.length;\n\n  \t},\n    error => {\n      console.log(error);\n    }\n    );\n\n  }\n\n}\n","export default \".visitors-camp-wrapper .card {\\n  margin: 0 0 15px 0;\\n}\\n.visitors-camp-wrapper .card .card-body {\\n  padding: 12px 19px 0 19px;\\n}\\n.visitors-camp-wrapper .card .range-box {\\n  position: relative;\\n  padding: 10px 0;\\n}\\n.visitors-camp-wrapper .card .range-box:before {\\n  content: \\\"\\\";\\n  position: absolute;\\n  width: calc(100% + 45px);\\n  left: -25px;\\n  height: 1px;\\n  background-color: rgba(255, 255, 255, 0.3);\\n}\\n.visitors-camp-wrapper .card .range-box .text {\\n  position: relative;\\n  float: right;\\n}\\n@media (max-width: 576px) {\\n  .visitors-camp-wrapper .details {\\n    padding: 0 0 15px 0;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9hbXMvZGFzaGJvYXJkL2NvbXBvbmVudHMvc2hhcmVkL3Zpc2l0b3JzLWNvbXAvdmlzaXRvcnMtY29tcC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYW1zL2Rhc2hib2FyZC9jb21wb25lbnRzL3NoYXJlZC92aXNpdG9ycy1jb21wL3Zpc2l0b3JzLWNvbXAuY29tcG9uZW50LnNjc3MiLCIvVXNlcnMvc2VudGhpbGt1bWFyc2VldGhhcmFtYW4vRG9jdW1lbnRzL3dvcmtzL2NsaWNrbXljb25kby9hcHAtbmc5L3NyYy9zY3NzL3ZhcmlhYmxlcy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU1DO0VBQ0Msa0JBQUE7QUNMRjtBRE1FO0VBQ0MseUJBQUE7QUNKSDtBRE1FO0VBQ0Msa0JFUEU7RUZRRixlQUFBO0FDSkg7QURLRztFQUNDLFdBQUE7RUFDQSxrQkVaQztFRmFELHdCQUFBO0VBQ0EsV0FBQTtFQUNBLFdBQUE7RUFDQSwwQ0FBQTtBQ0hKO0FES0c7RUFDQyxrQkVsQkM7RUZtQkQsWUFBQTtBQ0hKO0FEU0U7RUFERDtJQUVPLG1CQUFBO0VDTk47QUFDRiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9kYXNoYm9hcmQvY29tcG9uZW50cy9zaGFyZWQvdmlzaXRvcnMtY29tcC92aXNpdG9ycy1jb21wLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcIn5zcmMvc2Nzcy92YXJpYWJsZXNcIjtcbkBpbXBvcnQgXCJ+c3JjL3Njc3MvbWl4aW5zXCI7XG5AaW1wb3J0IFwifnNyYy9zY3NzL2ZvbnRzXCI7XG5cblxuLnZpc2l0b3JzLWNhbXAtd3JhcHBlciB7XG5cdC5jYXJkIHtcblx0XHRtYXJnaW46IDAgMCAxNXB4IDA7XG5cdFx0LmNhcmQtYm9keSB7XG5cdFx0XHRwYWRkaW5nOiAxMnB4IDE5cHggMCAxOXB4O1xuXHRcdH1cblx0XHQucmFuZ2UtYm94IHtcblx0XHRcdHBvc2l0aW9uOiAkcmVsO1xuXHRcdFx0cGFkZGluZzogMTBweCAwO1xuXHRcdFx0JjpiZWZvcmUge1xuXHRcdFx0XHRjb250ZW50OiBcIlwiO1xuXHRcdFx0XHRwb3NpdGlvbjogJGFicztcblx0XHRcdFx0d2lkdGg6IGNhbGMoMTAwJSArIDQ1cHgpO1xuXHRcdFx0XHRsZWZ0OiAtMjVweDtcblx0XHRcdFx0aGVpZ2h0OiAxcHg7XG5cdFx0XHRcdGJhY2tncm91bmQtY29sb3I6IHJnYmEoJHdoaXRlLCAwLjMpO1xuXHRcdFx0fVxuXHRcdFx0LnRleHQge1xuXHRcdFx0XHRwb3NpdGlvbjogJHJlbDtcblx0XHRcdFx0ZmxvYXQ6IHJpZ2h0O1xuXHRcdFx0fVxuXHRcdFx0XG5cdFx0fVxuXHR9XG5cdC5kZXRhaWxzIHtcblx0XHRAbWVkaWEgKG1heC13aWR0aDogNTc2cHgpIHtcbiAgICAgIFx0XHRwYWRkaW5nOiAwIDAgMTVweCAwO1xuICAgIFx0fVxuXHR9XG59IiwiLnZpc2l0b3JzLWNhbXAtd3JhcHBlciAuY2FyZCB7XG4gIG1hcmdpbjogMCAwIDE1cHggMDtcbn1cbi52aXNpdG9ycy1jYW1wLXdyYXBwZXIgLmNhcmQgLmNhcmQtYm9keSB7XG4gIHBhZGRpbmc6IDEycHggMTlweCAwIDE5cHg7XG59XG4udmlzaXRvcnMtY2FtcC13cmFwcGVyIC5jYXJkIC5yYW5nZS1ib3gge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmc6IDEwcHggMDtcbn1cbi52aXNpdG9ycy1jYW1wLXdyYXBwZXIgLmNhcmQgLnJhbmdlLWJveDpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiBjYWxjKDEwMCUgKyA0NXB4KTtcbiAgbGVmdDogLTI1cHg7XG4gIGhlaWdodDogMXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMyk7XG59XG4udmlzaXRvcnMtY2FtcC13cmFwcGVyIC5jYXJkIC5yYW5nZS1ib3ggLnRleHQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGZsb2F0OiByaWdodDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA1NzZweCkge1xuICAudmlzaXRvcnMtY2FtcC13cmFwcGVyIC5kZXRhaWxzIHtcbiAgICBwYWRkaW5nOiAwIDAgMTVweCAwO1xuICB9XG59IiwiXG4kZnRhOiBGb250QXdlc29tZTtcblxuJGZkOmZpeGVkO1xuJGFiczphYnNvbHV0ZTtcbiRyZWw6cmVsYXRpdmU7XG4kc3Q6c3RhdGljO1xuXG4kZGFyay1ibHVlOiAjMDgzZDcxO1xuJGRhcmstYmx1ZS0wMjogIzIzNmFhZjtcbiRkYXJrLWJsdWUtMDM6ICMxMzRiODI7XG4kbGlnaHQtYmx1ZTogIzgzOTFhMTtcbiRsaWdodC1ibHVlLTAyOiAjZWVmMGYzO1xuJGdyZXktYmx1ZTogI2YzZjhmZjtcbiRzLWJsdWU6ICMwM2E5ZjQ7XG4kbGlnaHQtcmVkOiAjZmY1NDdiO1xuJG0tbGlnaHQtcmVkOiAjZmY3Njg4O1xuJGJyaWdodC1yZWQ6ICNlMjM4NWU7XG4kcy1yZWQ6ICNlYTc5NjI7XG4kcy1yZWQtMDI6ICNmZjM2Mzg7XG4kcy1yZWQtMDM6ICNmNDQzMzY7XG4kbS1yZWQ6ICNkNzU3M2Q7XG4kZG0tcmVkOiAjOGU0ZDQwO1xuJGwtcGFsZS1yZWQ6ICNmZmYzZjU7XG4kaC1wYWxlLXJlZDogI2ZmZmJmYjtcbiRncmV5LXJlZCA6ICNmMWRkZGQ7XG4kcy1jeWFuOiAjMDBiY2Q0O1xuJGQtY3lhbjogIzAyMjkyNTtcbiRkLWN5YW4tMDI6ICMwOWE1OTY7XG4kZC1jeWFuLTAzOiMwMGQxZmE7XG4kdmQtY3lhbjogIzAwNmQ2ZDtcbiRwYWxlLWN5YW46ICNkOGZmZmI7XG4kcy1ncmV5OiAjY2NjY2NjO1xuJGwtZ3JleTogI2Q4ZTBlNjtcblxuJGxoLXJlZDojZTIzZjA2YzQ7XG4kbGgteWVsbG93OiNkY2JlMDg7XG4kcy1vcmFuZ2U6ICNmZjk4MDA7XG4kZC1vcmFuZ2U6ICM3ZDY1MjA7XG4kZC1vcmFuZ2UtMDI6ICM1MjQ3Mjg7XG4kcy15ZWxsb3c6ICNmZmViM2I7XG4kbS15ZWxsb3c6ICNmZmMxMDc7XG4kcy12aW9sZXQ6ICM2NzNhYjc7XG5cbiRncmV5LTMwMDogI2YwZjNmMztcbiRncmV5LTIwMDogI2Y2ZjhmODtcbiRncmV5LTUwMDogI2U2ZTZlNjtcbiRoLWN5YW46ICMwM2NjYTY7XG4kZHMtY3lhbjogIzgxYjI5YTtcbiRoZC1ibHVlOiAjMDQyODU0O1xuXG4kbGltZS1ncmVlbjogIzVjZDY5NDsgLy8jNWJjYzczXG4kbGltZS1ncmVlbi0wMjogIzVjZDY3YztcbiRsaW1lLWdyZWVuLTAzOiAjNTJjNTcwO1xuJGxpZ2h0LWdyZWVuOiAjZWRmNWUwO1xuJG0tZ3JlZW46ICM1NGI5NDE7XG4kZC1ncmVlbjogIzM4OTU4MztcbiRkLWdyZWVuLTAyOiAjZGFlMGNkO1xuJGRzLWdyZWVuOiAjZTRlN2RmO1xuJGRzLWdyZWVuLTAyOiAjZjRmN2VmO1xuXG4kbS1ibHVlOiAjM2Y1MWI1O1xuJHMtYmx1ZTogIzUyOWVmZjtcbiRkcy1ibHVlOiAjNjA3ZDhiO1xuJG1kcy1ibHVlOiAjNjA3ZDhiO1xuJGwtYmx1ZTogI2VhZWZmZDtcbiRsZy1ibHVlOiAjZTBlM2VjO1xuJGxnLWJsdWUtMDI6ICNmNGY0Zjc7XG4kbGctYmx1ZS0wMzojZGFlMmU2O1xuJGxnLWJsdWUtMDQ6ICM3MjdmOGU7XG4kbGctYmx1ZS0wNTogI2U3ZWNlYztcbiRsZy1ibHVlLTA2OiAjZTllY2VmO1xuJGxnLWJsdWUtMDc6ICNlMWY1ZmU7XG5cbi8vZW1lZ2VuY3kgY29sb3JzOlxuJGUtbWVkLTAxOiAjMDBiY2Q0O1xuJGUtbWVkLTAyOiAjMjE5NmYzO1xuXG4kZS10aC0wMTogI2Y3ZDA2MTtcbiRlLXRoLTAyOiAjZWY2MGE1O1xuXG4kZS1mZS0wMTogI0ZGOTgwMDtcbiRlLWZlLTAyOiAjRTkxRTYzO1xuXG4kZS1zaHItMDE6ICM2NGExZmQ7XG4kZS1zaHItMDI6ICM5MTAwZmY7XG5cbiRlLXBjLTAxOiAjNjFhMWUxO1xuJGUtcGMtMDI6ICMwNmJmNTg7XG5cbiRlLW90LTAxOiAjNjFhMWUxO1xuJGUtb3QtMDI6ICMzN2U3ODU7XG5cbiRncmV5LTkwMDogIzE5MWMxZTtcbiRncmV5LTg1MDogIzY4Njk2YjtcbiRncmV5LTgwMDogIzM3Mzk0NjsgLy8jNDI0ODU2O1xuJGdyZXktNzUwOiAjNzk3OTc5O1xuJGdyZXktNzAwOiAjNTg1ODU4O1xuJGdyZXktNjAwOiAjZGVkZWRlO1xuJGdyZXktNjUwOiAjNWY1ZjVmO1xuJGdyZXktNTUwOiAjYjFiMWIxO1xuJGdyZXktNDgwOiAjYzVjNmM3O1xuJGdyZXktNDYwOiAjZGVlMmU2O1xuJGdyZXktNDcwOiAjZTVlNWU1O1xuJGdyZXktNDUwOiAjZWFlYWVhOyAvLyNkZWUwZTQ7XG4kZ3JleS00NDA6ICNDOUQwREY7XG4kZ3JleS00MzA6ICNlNGU0ZTQ7XG4kZ3JleS00MTA6ICNlY2YwZjU7XG4kZ3JleS00MDA6ICNlYWVhZWE7XG4kZ3JleS0zNTA6ICM4ZThlOGU7XG4kZ3JleS0yNTA6ICNmNWY1ZjU7XG4kZ3JleS0yMjA6ICNmYWZhZmE7XG4kZ3JleS0yMTA6ICNmM2Y1Zjc7XG4kZ3JleS0xNTA6ICNmOWY5Zjk7XG4kZ3JleS0xMjA6ICNmN2Y3Zjc7XG4kZ3JleS0xMzA6ICNmNmY2Zjc7XG4kZ3JleS0xMDA6ICNmZGZkZmQ7XG5cbiR3aGl0ZTogI2ZmZmZmZjtcbiRibGFjazogIzAwMDAwMDtcbiR0cmFuczogdHJhbnNwYXJlbnQ7XG5cblxuLy9wdWJsaWMgcGFnZXMgY29sb3JzXG4kZHMtdjojMzQyNjNjO1xuJGwtZ3JleS0wMTojZjJmMmYyO1xuJGwtZ3JleS0wMjojZGRkZGRkO1xuJGdyZXktdjogIzZlNjc3MztcbiRkLWdyZXktMDE6IzhhOGE4YTtcbiRzdC1ibHVlOiMwNTgyYzg7XG4kc3QtYmx1ZS0wMTogIzFjYTBkNTtcbiRzdC1ibHVlLTAyOiAjMDE5N2Q0O1xuJHBtLWJsdWU6IzIyOTZlZjtcbiRncmV5LXA6I2Y2ZWVmMztcbiRwLXJlZDogI2ZmNGY1YTtcbiRwLWdyZXktMDE6ICMyZjJmMmY7XG4kcC1ncmV5LTAyOiAjNGQ0YTRhO1xuJHAtZ3JleS0wMzogIzYzNjE2MTtcblxuXG4vL2ZvbnQtc2l6ZXNcbiRmdC1iYXNlOjEwO1xuJGZvbnQtYmlnLTAzOjUwO1xuJGZvbnQtYmlnOjM4O1xuJGZvbnQtYmlnLTAyOjM2O1xuJGZvbnQtaDI6MzQ7XG4kZm9udC1tZWRpdW0tMDI6MjQ7XG4kZm9udC1tZWRpdW0tMDM6MjY7XG4kZm9udC1tZWRpdW0tMDQ6MzA7XG4kZm9udC1oMzoyODtcbiRmb250LWgzLTAyOjMyO1xuJGZvbnQtaDQ6IDIyO1xuJGZvbnQtbWVkaXVtOjIwO1xuJGZvbnQtYmFzZToxODtcbiRmb250LW5vcm1hbC0wMjoxNTtcbiRmb250LW5vcm1hbDoxNjtcbiRmb250LXNtYWxsOjE0O1xuJGZvbnQtc21hbGxlcjoxMztcbiRmb250LXRpbnk6MTI7XG4kZm9udC10aW5pZXI6MTA7XG4kZm9udC1taWNybzo5O1xuXG4vLyBvdGhlcnNcbiRmdWxsOjEwMCUgIWltcG9ydGFudDtcblxuXG4vLyBpbWFnZXNcbiRpbWFnZXM6IFwiL2Fzc2V0cy9pbWFnZXNcIjtcblxuJGhlYWRlci1oZWlnaHQ6IDcwcHg7XG5cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-visitors-comp',\n  templateUrl: './visitors-comp.component.html',\n  styleUrls: ['./visitors-comp.component.scss']\n})\nexport class VisitorsCompComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardComponent } from './dashboard.component';\nimport { AdminDashboardComponent } from './components/dashboard/admin-dashboard/admin-dashboard.component';\nimport { SecurityDashboardComponent } from './components/dashboard/security-dashboard/security-dashboard.component';\nimport { StaffDashboardComponent } from './components/dashboard/staff-dashboard/staff-dashboard.component';\n\nexport const routes: Routes = [\n\t\n\t{ path: '', component: DashboardComponent},\n\t{ path: 'dashboard', component: DashboardComponent},\n\t\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule { }\n","export default \"::ng-deep .mat-slide-toggle.mat-checked:not(.mat-disabled) .mat-slide-toggle-bar {\\n  background-color: #5cd67c;\\n}\\n\\n::ng-deep .mat-slide-toggle.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb {\\n  background-color: #5cd67c;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9hbXMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuc2NzcyIsIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL3Njc3MvdmFyaWFibGVzLnNjc3MiLCJzcmMvYXBwL2Ftcy9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBO0VBQ0kseUJDK0NZO0FDbERoQjs7QUZLQTtFQUNJLHlCQzRDWTtBQzlDaEIiLCJmaWxlIjoic3JjL2FwcC9hbXMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJ+c3JjL3Njc3MvdmFyaWFibGVzXCI7XG5AaW1wb3J0IFwifnNyYy9zY3NzL21peGluc1wiO1xuQGltcG9ydCBcIn5zcmMvc2Nzcy9mb250c1wiO1xuXG46Om5nLWRlZXAgLm1hdC1zbGlkZS10b2dnbGUubWF0LWNoZWNrZWQ6bm90KC5tYXQtZGlzYWJsZWQpIC5tYXQtc2xpZGUtdG9nZ2xlLWJhciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGxpbWUtZ3JlZW4tMDI7XG59XG46Om5nLWRlZXAgLm1hdC1zbGlkZS10b2dnbGUubWF0LWNoZWNrZWQ6bm90KC5tYXQtZGlzYWJsZWQpIC5tYXQtc2xpZGUtdG9nZ2xlLXRodW1iIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbGltZS1ncmVlbi0wMjtcbn0iLCJcbiRmdGE6IEZvbnRBd2Vzb21lO1xuXG4kZmQ6Zml4ZWQ7XG4kYWJzOmFic29sdXRlO1xuJHJlbDpyZWxhdGl2ZTtcbiRzdDpzdGF0aWM7XG5cbiRkYXJrLWJsdWU6ICMwODNkNzE7XG4kZGFyay1ibHVlLTAyOiAjMjM2YWFmO1xuJGRhcmstYmx1ZS0wMzogIzEzNGI4MjtcbiRsaWdodC1ibHVlOiAjODM5MWExO1xuJGxpZ2h0LWJsdWUtMDI6ICNlZWYwZjM7XG4kZ3JleS1ibHVlOiAjZjNmOGZmO1xuJHMtYmx1ZTogIzAzYTlmNDtcbiRsaWdodC1yZWQ6ICNmZjU0N2I7XG4kbS1saWdodC1yZWQ6ICNmZjc2ODg7XG4kYnJpZ2h0LXJlZDogI2UyMzg1ZTtcbiRzLXJlZDogI2VhNzk2MjtcbiRzLXJlZC0wMjogI2ZmMzYzODtcbiRzLXJlZC0wMzogI2Y0NDMzNjtcbiRtLXJlZDogI2Q3NTczZDtcbiRkbS1yZWQ6ICM4ZTRkNDA7XG4kbC1wYWxlLXJlZDogI2ZmZjNmNTtcbiRoLXBhbGUtcmVkOiAjZmZmYmZiO1xuJGdyZXktcmVkIDogI2YxZGRkZDtcbiRzLWN5YW46ICMwMGJjZDQ7XG4kZC1jeWFuOiAjMDIyOTI1O1xuJGQtY3lhbi0wMjogIzA5YTU5NjtcbiRkLWN5YW4tMDM6IzAwZDFmYTtcbiR2ZC1jeWFuOiAjMDA2ZDZkO1xuJHBhbGUtY3lhbjogI2Q4ZmZmYjtcbiRzLWdyZXk6ICNjY2NjY2M7XG4kbC1ncmV5OiAjZDhlMGU2O1xuXG4kbGgtcmVkOiNlMjNmMDZjNDtcbiRsaC15ZWxsb3c6I2RjYmUwODtcbiRzLW9yYW5nZTogI2ZmOTgwMDtcbiRkLW9yYW5nZTogIzdkNjUyMDtcbiRkLW9yYW5nZS0wMjogIzUyNDcyODtcbiRzLXllbGxvdzogI2ZmZWIzYjtcbiRtLXllbGxvdzogI2ZmYzEwNztcbiRzLXZpb2xldDogIzY3M2FiNztcblxuJGdyZXktMzAwOiAjZjBmM2YzO1xuJGdyZXktMjAwOiAjZjZmOGY4O1xuJGdyZXktNTAwOiAjZTZlNmU2O1xuJGgtY3lhbjogIzAzY2NhNjtcbiRkcy1jeWFuOiAjODFiMjlhO1xuJGhkLWJsdWU6ICMwNDI4NTQ7XG5cbiRsaW1lLWdyZWVuOiAjNWNkNjk0OyAvLyM1YmNjNzNcbiRsaW1lLWdyZWVuLTAyOiAjNWNkNjdjO1xuJGxpbWUtZ3JlZW4tMDM6ICM1MmM1NzA7XG4kbGlnaHQtZ3JlZW46ICNlZGY1ZTA7XG4kbS1ncmVlbjogIzU0Yjk0MTtcbiRkLWdyZWVuOiAjMzg5NTgzO1xuJGQtZ3JlZW4tMDI6ICNkYWUwY2Q7XG4kZHMtZ3JlZW46ICNlNGU3ZGY7XG4kZHMtZ3JlZW4tMDI6ICNmNGY3ZWY7XG5cbiRtLWJsdWU6ICMzZjUxYjU7XG4kcy1ibHVlOiAjNTI5ZWZmO1xuJGRzLWJsdWU6ICM2MDdkOGI7XG4kbWRzLWJsdWU6ICM2MDdkOGI7XG4kbC1ibHVlOiAjZWFlZmZkO1xuJGxnLWJsdWU6ICNlMGUzZWM7XG4kbGctYmx1ZS0wMjogI2Y0ZjRmNztcbiRsZy1ibHVlLTAzOiNkYWUyZTY7XG4kbGctYmx1ZS0wNDogIzcyN2Y4ZTtcbiRsZy1ibHVlLTA1OiAjZTdlY2VjO1xuJGxnLWJsdWUtMDY6ICNlOWVjZWY7XG4kbGctYmx1ZS0wNzogI2UxZjVmZTtcblxuLy9lbWVnZW5jeSBjb2xvcnM6XG4kZS1tZWQtMDE6ICMwMGJjZDQ7XG4kZS1tZWQtMDI6ICMyMTk2ZjM7XG5cbiRlLXRoLTAxOiAjZjdkMDYxO1xuJGUtdGgtMDI6ICNlZjYwYTU7XG5cbiRlLWZlLTAxOiAjRkY5ODAwO1xuJGUtZmUtMDI6ICNFOTFFNjM7XG5cbiRlLXNoci0wMTogIzY0YTFmZDtcbiRlLXNoci0wMjogIzkxMDBmZjtcblxuJGUtcGMtMDE6ICM2MWExZTE7XG4kZS1wYy0wMjogIzA2YmY1ODtcblxuJGUtb3QtMDE6ICM2MWExZTE7XG4kZS1vdC0wMjogIzM3ZTc4NTtcblxuJGdyZXktOTAwOiAjMTkxYzFlO1xuJGdyZXktODUwOiAjNjg2OTZiO1xuJGdyZXktODAwOiAjMzczOTQ2OyAvLyM0MjQ4NTY7XG4kZ3JleS03NTA6ICM3OTc5Nzk7XG4kZ3JleS03MDA6ICM1ODU4NTg7XG4kZ3JleS02MDA6ICNkZWRlZGU7XG4kZ3JleS02NTA6ICM1ZjVmNWY7XG4kZ3JleS01NTA6ICNiMWIxYjE7XG4kZ3JleS00ODA6ICNjNWM2Yzc7XG4kZ3JleS00NjA6ICNkZWUyZTY7XG4kZ3JleS00NzA6ICNlNWU1ZTU7XG4kZ3JleS00NTA6ICNlYWVhZWE7IC8vI2RlZTBlNDtcbiRncmV5LTQ0MDogI0M5RDBERjtcbiRncmV5LTQzMDogI2U0ZTRlNDtcbiRncmV5LTQxMDogI2VjZjBmNTtcbiRncmV5LTQwMDogI2VhZWFlYTtcbiRncmV5LTM1MDogIzhlOGU4ZTtcbiRncmV5LTI1MDogI2Y1ZjVmNTtcbiRncmV5LTIyMDogI2ZhZmFmYTtcbiRncmV5LTIxMDogI2YzZjVmNztcbiRncmV5LTE1MDogI2Y5ZjlmOTtcbiRncmV5LTEyMDogI2Y3ZjdmNztcbiRncmV5LTEzMDogI2Y2ZjZmNztcbiRncmV5LTEwMDogI2ZkZmRmZDtcblxuJHdoaXRlOiAjZmZmZmZmO1xuJGJsYWNrOiAjMDAwMDAwO1xuJHRyYW5zOiB0cmFuc3BhcmVudDtcblxuXG4vL3B1YmxpYyBwYWdlcyBjb2xvcnNcbiRkcy12OiMzNDI2M2M7XG4kbC1ncmV5LTAxOiNmMmYyZjI7XG4kbC1ncmV5LTAyOiNkZGRkZGQ7XG4kZ3JleS12OiAjNmU2NzczO1xuJGQtZ3JleS0wMTojOGE4YThhO1xuJHN0LWJsdWU6IzA1ODJjODtcbiRzdC1ibHVlLTAxOiAjMWNhMGQ1O1xuJHN0LWJsdWUtMDI6ICMwMTk3ZDQ7XG4kcG0tYmx1ZTojMjI5NmVmO1xuJGdyZXktcDojZjZlZWYzO1xuJHAtcmVkOiAjZmY0ZjVhO1xuJHAtZ3JleS0wMTogIzJmMmYyZjtcbiRwLWdyZXktMDI6ICM0ZDRhNGE7XG4kcC1ncmV5LTAzOiAjNjM2MTYxO1xuXG5cbi8vZm9udC1zaXplc1xuJGZ0LWJhc2U6MTA7XG4kZm9udC1iaWctMDM6NTA7XG4kZm9udC1iaWc6Mzg7XG4kZm9udC1iaWctMDI6MzY7XG4kZm9udC1oMjozNDtcbiRmb250LW1lZGl1bS0wMjoyNDtcbiRmb250LW1lZGl1bS0wMzoyNjtcbiRmb250LW1lZGl1bS0wNDozMDtcbiRmb250LWgzOjI4O1xuJGZvbnQtaDMtMDI6MzI7XG4kZm9udC1oNDogMjI7XG4kZm9udC1tZWRpdW06MjA7XG4kZm9udC1iYXNlOjE4O1xuJGZvbnQtbm9ybWFsLTAyOjE1O1xuJGZvbnQtbm9ybWFsOjE2O1xuJGZvbnQtc21hbGw6MTQ7XG4kZm9udC1zbWFsbGVyOjEzO1xuJGZvbnQtdGlueToxMjtcbiRmb250LXRpbmllcjoxMDtcbiRmb250LW1pY3JvOjk7XG5cbi8vIG90aGVyc1xuJGZ1bGw6MTAwJSAhaW1wb3J0YW50O1xuXG5cbi8vIGltYWdlc1xuJGltYWdlczogXCIvYXNzZXRzL2ltYWdlc1wiO1xuXG4kaGVhZGVyLWhlaWdodDogNzBweDtcblxuIiwiOjpuZy1kZWVwIC5tYXQtc2xpZGUtdG9nZ2xlLm1hdC1jaGVja2VkOm5vdCgubWF0LWRpc2FibGVkKSAubWF0LXNsaWRlLXRvZ2dsZS1iYXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNWNkNjdjO1xufVxuXG46Om5nLWRlZXAgLm1hdC1zbGlkZS10b2dnbGUubWF0LWNoZWNrZWQ6bm90KC5tYXQtZGlzYWJsZWQpIC5tYXQtc2xpZGUtdG9nZ2xlLXRodW1iIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzVjZDY3Yztcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport * as moment from 'moment';\nimport { UserService } from 'src/app/api/controllers/User';\nimport { CookieService } from 'ngx-cookie-service';\nimport { DashBoardService } from 'src/app/api/controllers/DashBoard';\nimport { SharedService } from 'src/app/shared/services/shared.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  isApartmentSelected:boolean = false;\n  userRole:string = \"\";\n  userName:any;\n  customDashBoard:boolean = false;\n  dashBoardName:string ='General';\n  constructor(private userService:UserService,\n    private cookieService:CookieService,\n  \tprivate sharedService:SharedService,\n  ) { }\n  \n  isAdmin(){\n    return this.userRole == \"Admin\" ? true : false;\n  }\n  isSecurity(){\n    return this.userRole == \"Security\" ? true : false;\n  }\n  isStaff(){\n    return this.userRole == \"Staff\" ? true : false;\n  }\n\n  dashboardChange(event) {\n    if(event.checked) {\n      this.customDashBoard = true;\n      this.dashBoardName = 'Custom';\n    } else {\n      this.customDashBoard = false;\n      this.dashBoardName = 'General';\n    }\n  }\n\n  ngOnInit() { \n    let params = {\n      userid: parseInt(this.cookieService.get('userId'))\n    }\n    this.userService.getUserById(params).subscribe((res:any) => {\n      this.userName = res[0].firstName;\n    },\n    error => {\n      console.log(error);\n    });\n  \tthis.sharedService.apartmentselectedcast.subscribe( isSelected => {\n  \t\tthis.isApartmentSelected = isSelected;\n  \t});\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\n\nimport { routes } from './dashboard-routing.module';\nimport { RouterModule } from '@angular/router';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatGridListModule} from '@angular/material/grid-list';\n\nimport { AuthGuard } from '../.././auth.guard';\n\nimport { DashboardComponent } from './dashboard.component';\nimport { AdminDashboardComponent } from './components/dashboard/admin-dashboard/admin-dashboard.component';\nimport { SecurityDashboardComponent } from './components/dashboard/security-dashboard/security-dashboard.component';\nimport { StaffDashboardComponent } from './components/dashboard/staff-dashboard/staff-dashboard.component';\n\nimport { UsersChartComponent } from './components/shared/users-chart/users-chart.component';\nimport { UnitChartComponent } from './components/shared/unit-chart/unit-chart.component';\nimport { HelpdeskChartComponent } from './components/shared/helpdesk-chart/helpdesk-chart.component';\nimport { VisitorsCompComponent } from './components/shared/visitors-comp/visitors-comp.component';\nimport { LedgerCompComponent } from './components/shared/ledger-comp/ledger-comp.component';\nimport { BankCompComponent } from './components/shared/bank-comp/bank-comp.component';\nimport { IncomeTrackerCompComponent } from './components/shared/income-tracker-comp/income-tracker-comp.component';\nimport { ExpenseTrackerCompComponent } from './components/shared/expense-tracker-comp/expense-tracker-comp.component';\nimport { PaymentCompComponent } from './components/shared/payment-comp/payment-comp.component';\nimport { DashBoardService } from 'src/app/api/controllers/DashBoard';\nimport { DateModelComponent } from './components/shared/date-model/date-model.component';\nimport { DashPieChartComponent } from './components/shared/dash-pie-chart/dash-pie-chart.component';\nimport { DashIncomeChartComponent } from './components/shared/dash-income-chart/dash-income-chart.component';\nimport { CustomDashboardComponent } from './components/dashboard/custom-dashboard/custom-dashboard.component';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { AdminDashFirstRowComponent } from './components/shared/admin-dash-first-row/admin-dash-first-row.component';\nimport { AdminDashSecondRowComponent } from './components/shared/admin-dash-second-row/admin-dash-second-row.component';\nimport { DashMeetingComponent } from './components/shared/dash-meeting/dash-meeting.component';\nimport { DashBroadCastComponent } from './components/shared/dash-broad-cast/dash-broad-cast.component';\nimport { GridsterModule } from 'angular2gridster';\n\nimport { DashComListComponent } from './components/shared/dash-com-list/dash-com-list.component';\n\n@NgModule({\n  declarations: [\n\tDashboardComponent,\n\tAdminDashboardComponent,\n\tSecurityDashboardComponent,\n\tStaffDashboardComponent,\n\tUsersChartComponent,\n\tUnitChartComponent,\n\tHelpdeskChartComponent,\n\tVisitorsCompComponent,\n\tLedgerCompComponent,\n\tBankCompComponent,\n\tIncomeTrackerCompComponent,\n\tExpenseTrackerCompComponent,\n\tPaymentCompComponent,\n\tDateModelComponent,\n\tDashPieChartComponent,\n\tDashIncomeChartComponent,\n\tCustomDashboardComponent,\n\tAdminDashFirstRowComponent,\n\tAdminDashSecondRowComponent,\n\tDashMeetingComponent,\n\tDashBroadCastComponent,\n\tDashComListComponent,\n  ],\n  imports: [\n    CommonModule,\n\tRouterModule.forChild(routes),\n\tGridsterModule.forRoot(),\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n\tDashboardRoutingModule,\n\tMatGridListModule,\n    DragDropModule\n  ],\n  providers: [ \n  AuthGuard,\n  DashBoardService ],\n  bootstrap: [ DashboardComponent ]\n})\nexport class DashboardModule { }\n","/* tslint:disable:max-line-length */\n/**\n * v1\n * AMS API\n * undefined\n */\n\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nexport interface GetDashTotalunitsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashTotalTowersbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashTotalownersbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashTotalTenantsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashTotalAdminsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashTotalStaffbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashUnapprovedUsersPendingAdminbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashUnapprovedUsersPendingusersbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashOpencommticketsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashOpenpersonalticketsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashHighpriorityopenpersonalTicketsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashHighpriorityopenCommunityTicketsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashOpenPersonalAgedTicketsbyApartmentIDbyDaysParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  date?: string;\n  /** format: int32 */\n  noOfDays?: number;\n}\n\nexport interface GetDashOpenCommunityAgedTicketsbyApartmentIDbyDaysParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  date?: string;\n  /** format: int32 */\n  noOfDays?: number;\n}\n\nexport interface GetDashUnassignedpersonalTicketsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n}\n\nexport interface GetDashUnassignedCommunityTicketsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n}\n\nexport interface GetDashinProgressPanicAlertsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n}\n\nexport interface GetDashOpenPanicAlertsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n}\n\nexport interface GetDashVisitorsCheckedinbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  startDate?: string;\n  /** format: date-time */\n  EndDate?: string;\n}\n\nexport interface GetDashVisitorsCheckedouttodaybyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashVisitorsNotcheckedtodaybyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashunapprovedmoveinbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  date?: string;\n}\n\nexport interface GetDashunapprovedmoveoutbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  date?: string;\n}\n\nexport interface GetDashupcomingmoveinApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashupcomingmoveoutApprovedbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashuptotalparkingslotsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashuptotalparkingslotsunassignedbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashufacilitybookingunapprovedbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashufacilitybookingapprovedtodaybyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashlistupcomingmeetingbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashlistBroadcastsentbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashTotalamtbilledcustomersthismonthbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashTotalamtreceivedcustomersthismonthbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashpaymentdefaultersasoftodayybyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashcreditnoteappliedbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashWPapprovalpendingbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashWPupcomingbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetUDashVehiclecountbyblockunituserParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockunituserId?: number;\n}\n\nexport interface GetUDashTotalpetstbyblockunituserParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockunituserId?: number;\n}\n\nexport interface GetUDashPrivateStaffbyblockunituserParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockunituserId?: number;\n}\n\nexport interface GetUDashOpenticektsbyblockunituserParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockunituserId?: number;\n}\n\nexport interface GetUDashOpenticektsbyblockunituserTicketpriorityParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockunituserId?: number;\n  /** format: int32 */\n  priority?: number;\n}\n\nexport interface GetUDashVisitorcheckedinbyblockunituserParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockUnitId?: number;\n  /** format: date-time */\n  startDate?: string;\n  /** format: date-time */\n  EndDate?: string;\n  /** format: int32 */\n  blockUnitUserId?: number;\n}\n\nexport interface GetUDashVisitorNoTcheckeddoubyblockunitIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockUnitId?: number;\n  /** format: int32 */\n  blockUnitUserId?: number;\n}\n\nexport interface GetUDashTotalparkingbyblockunitIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockUnitId?: number;\n  /** format: int32 */\n  blockUnitUserId?: number;\n}\n\nexport interface GetUDapprovedfacilittbookingbyblockunitIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockUnitUserID?: number;\n}\n\nexport interface GetUDashWaterunitsbyblockunitIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockUnitUserID?: number;\n  /** format: int32 */\n  BlockUnitId?: number;\n}\n\nexport interface GetUDashCurrentViolationsbyblockunituserIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockUnitUserID?: number;\n  /** format: int32 */\n  BlockUnitId?: number;\n}\n\nexport interface GetUDashActiveWorkpermitbyblockunituserIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockUnitUserID?: number;\n  /** format: int32 */\n  BlockUnitId?: number;\n}\n\nexport interface GetVehicleNumberbyStaffIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  staffId?: number;\n}\n\nexport interface GetTicketsassignedtouserbyUserIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  UserID?: number;\n  /** format: int32 */\n  TicketType?: number;\n  /** format: int32 */\n  Priority?: number;\n}\n\nexport interface GetassetsownedParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  staffId?: number;\n}\n\nexport interface GetAssetsassignedformaintenanceParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetLowinventorystockParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  staffId?: number;\n}\n\nexport interface GetfacilityeventstodayParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetStaffSalaryParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  staffId?: number;\n}\n\n@Injectable()\nexport class DashBoardService {\n  constructor(private http: HttpClient) {}\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashTotalunitsbyApartmentID */\n  getDashTotalunitsbyApartmentId(params: GetDashTotalunitsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashTotalunitsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashTotalTowersbyApartmentID */\n  getDashTotalTowersbyApartmentId(params: GetDashTotalTowersbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashTotalTowersbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashTotalownersbyApartmentID */\n  getDashTotalownersbyApartmentId(params: GetDashTotalownersbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashTotalownersbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashTotalTenantsbyApartmentID */\n  getDashTotalTenantsbyApartmentId(params: GetDashTotalTenantsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashTotalTenantsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashTotalAdminsbyApartmentID */\n  getDashTotalAdminsbyApartmentId(params: GetDashTotalAdminsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashTotalAdminsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashTotalStaffbyApartmentID */\n  getDashTotalStaffbyApartmentId(params: GetDashTotalStaffbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashTotalStaffbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashUnapprovedUsersPendingAdminbyApartmentID */\n  getDashUnapprovedUsersPendingAdminbyApartmentId(params: GetDashUnapprovedUsersPendingAdminbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashUnapprovedUsersPendingAdminbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashUnapprovedUsersPendingusersbyApartmentID */\n  getDashUnapprovedUsersPendingusersbyApartmentId(params: GetDashUnapprovedUsersPendingusersbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashUnapprovedUsersPendingusersbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashOpencommticketsbyApartmentID */\n  getDashOpencommticketsbyApartmentId(params: GetDashOpencommticketsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashOpencommticketsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashOpenpersonalticketsbyApartmentID */\n  getDashOpenpersonalticketsbyApartmentId(params: GetDashOpenpersonalticketsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashOpenpersonalticketsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashHighpriorityopenpersonalTicketsbyApartmentID */\n  getDashHighpriorityopenpersonalTicketsbyApartmentId(params: GetDashHighpriorityopenpersonalTicketsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashHighpriorityopenpersonalTicketsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashHighpriorityopenCommunityTicketsbyApartmentID */\n  getDashHighpriorityopenCommunityTicketsbyApartmentId(params: GetDashHighpriorityopenCommunityTicketsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashHighpriorityopenCommunityTicketsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashOpenPersonalAgedTicketsbyApartmentIDbyDays */\n  getDashOpenPersonalAgedTicketsbyApartmentIDbyDays(params: GetDashOpenPersonalAgedTicketsbyApartmentIDbyDaysParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      date: params.date,\n      noOfDays: params.noOfDays,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashOpenPersonalAgedTicketsbyApartmentIDbyDays`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashOpenCommunityAgedTicketsbyApartmentIDbyDays */\n  getDashOpenCommunityAgedTicketsbyApartmentIDbyDays(params: GetDashOpenCommunityAgedTicketsbyApartmentIDbyDaysParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      date: params.date,\n      noOfDays: params.noOfDays,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashOpenCommunityAgedTicketsbyApartmentIDbyDays`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashUnassignedpersonalTicketsbyApartmentID */\n  getDashUnassignedpersonalTicketsbyApartmentId(params: GetDashUnassignedpersonalTicketsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashUnassignedpersonalTicketsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashUnassignedCommunityTicketsbyApartmentID */\n  getDashUnassignedCommunityTicketsbyApartmentId(params: GetDashUnassignedCommunityTicketsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashUnassignedCommunityTicketsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashinProgressPanicAlertsbyApartmentID */\n  getDashinProgressPanicAlertsbyApartmentId(params: GetDashinProgressPanicAlertsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashinProgressPanicAlertsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashOpenPanicAlertsbyApartmentID */\n  getDashOpenPanicAlertsbyApartmentId(params: GetDashOpenPanicAlertsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashOpenPanicAlertsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashVisitorsCheckedinbyApartmentID */\n  getDashVisitorsCheckedinbyApartmentId(params: GetDashVisitorsCheckedinbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      startDate: params.startDate,\n      EndDate: params.EndDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashVisitorsCheckedinbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashVisitorsCheckedouttodaybyApartmentID */\n  getDashVisitorsCheckedouttodaybyApartmentId(params: GetDashVisitorsCheckedouttodaybyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashVisitorsCheckedouttodaybyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashVisitorsNotcheckedtodaybyApartmentID */\n  getDashVisitorsNotcheckedtodaybyApartmentId(params: GetDashVisitorsNotcheckedtodaybyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashVisitorsNotcheckedtodaybyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashunapprovedmoveinbyApartmentID */\n  getDashunapprovedmoveinbyApartmentId(params: GetDashunapprovedmoveinbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      date: params.date,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashunapprovedmoveinbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashunapprovedmoveoutbyApartmentID */\n  getDashunapprovedmoveoutbyApartmentId(params: GetDashunapprovedmoveoutbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      date: params.date,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashunapprovedmoveoutbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashupcomingmoveinApartmentID */\n  getDashupcomingmoveinApartmentId(params: GetDashupcomingmoveinApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashupcomingmoveinApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashupcomingmoveoutApprovedbyApartmentID */\n  getDashupcomingmoveoutApprovedbyApartmentId(params: GetDashupcomingmoveoutApprovedbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashupcomingmoveoutApprovedbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashuptotalparkingslotsbyApartmentID */\n  getDashuptotalparkingslotsbyApartmentId(params: GetDashuptotalparkingslotsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashuptotalparkingslotsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashuptotalparkingslotsunassignedbyApartmentID */\n  getDashuptotalparkingslotsunassignedbyApartmentId(params: GetDashuptotalparkingslotsunassignedbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashuptotalparkingslotsunassignedbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashufacilitybookingunapprovedbyApartmentID */\n  getDashufacilitybookingunapprovedbyApartmentId(params: GetDashufacilitybookingunapprovedbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashufacilitybookingunapprovedbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashufacilitybookingapprovedtodaybyApartmentID */\n  getDashufacilitybookingapprovedtodaybyApartmentId(params: GetDashufacilitybookingapprovedtodaybyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashufacilitybookingapprovedtodaybyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashlistupcomingmeetingbyApartmentID */\n  getDashlistupcomingmeetingbyApartmentId(params: GetDashlistupcomingmeetingbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashlistupcomingmeetingbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashlistBroadcastsentbyApartmentID */\n  getDashlistBroadcastsentbyApartmentId(params: GetDashlistBroadcastsentbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashlistBroadcastsentbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashTotalamtbilledcustomersthismonthbyApartmentID */\n  getDashTotalamtbilledcustomersthismonthbyApartmentId(params: GetDashTotalamtbilledcustomersthismonthbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashTotalamtbilledcustomersthismonthbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashTotalamtreceivedcustomersthismonthbyApartmentID */\n  getDashTotalamtreceivedcustomersthismonthbyApartmentId(params: GetDashTotalamtreceivedcustomersthismonthbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashTotalamtreceivedcustomersthismonthbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashpaymentdefaultersasoftodayybyApartmentID */\n  getDashpaymentdefaultersasoftodayybyApartmentId(params: GetDashpaymentdefaultersasoftodayybyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashpaymentdefaultersasoftodayybyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashcreditnoteappliedbyApartmentID */\n  getDashcreditnoteappliedbyApartmentId(params: GetDashcreditnoteappliedbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashcreditnoteappliedbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashWPapprovalpendingbyApartmentID */\n  getDashWPapprovalpendingbyApartmentId(params: GetDashWPapprovalpendingbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashWPapprovalpendingbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashWPupcomingbyApartmentID */\n  getDashWPupcomingbyApartmentId(params: GetDashWPupcomingbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashWPupcomingbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/getUDashVehiclecountbyblockunituser */\n  getUDashVehiclecountbyblockunituser(params: GetUDashVehiclecountbyblockunituserParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockunituserId: params.blockunituserId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/getUDashVehiclecountbyblockunituser`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashTotalpetstbyblockunituser */\n  getUDashTotalpetstbyblockunituser(params: GetUDashTotalpetstbyblockunituserParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockunituserId: params.blockunituserId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashTotalpetstbyblockunituser`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashPrivateStaffbyblockunituser */\n  getUDashPrivateStaffbyblockunituser(params: GetUDashPrivateStaffbyblockunituserParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockunituserId: params.blockunituserId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashPrivateStaffbyblockunituser`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashOpenticektsbyblockunituser */\n  getUDashOpenticektsbyblockunituser(params: GetUDashOpenticektsbyblockunituserParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockunituserId: params.blockunituserId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashOpenticektsbyblockunituser`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashOpenticektsbyblockunituserTicketpriority */\n  getUDashOpenticektsbyblockunituserTicketpriority(params: GetUDashOpenticektsbyblockunituserTicketpriorityParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockunituserId: params.blockunituserId,\n      priority: params.priority,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashOpenticektsbyblockunituserTicketpriority`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashVisitorcheckedinbyblockunituser */\n  getUDashVisitorcheckedinbyblockunituser(params: GetUDashVisitorcheckedinbyblockunituserParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockUnitId: params.blockUnitId,\n      startDate: params.startDate,\n      EndDate: params.EndDate,\n      blockUnitUserId: params.blockUnitUserId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashVisitorcheckedinbyblockunituser`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashVisitorNOTcheckeddoubyblockunitID */\n  getUDashVisitorNoTcheckeddoubyblockunitId(params: GetUDashVisitorNoTcheckeddoubyblockunitIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockUnitId: params.blockUnitId,\n      blockUnitUserId: params.blockUnitUserId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashVisitorNOTcheckeddoubyblockunitID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashTotalparkingbyblockunitID */\n  getUDashTotalparkingbyblockunitId(params: GetUDashTotalparkingbyblockunitIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockUnitId: params.blockUnitId,\n      blockUnitUserId: params.blockUnitUserId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashTotalparkingbyblockunitID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDapprovedfacilittbookingbyblockunitID */\n  getUDapprovedfacilittbookingbyblockunitId(params: GetUDapprovedfacilittbookingbyblockunitIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockUnitUserID: params.blockUnitUserID,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDapprovedfacilittbookingbyblockunitID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashWaterunitsbyblockunitID */\n  getUDashWaterunitsbyblockunitId(params: GetUDashWaterunitsbyblockunitIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockUnitUserID: params.blockUnitUserID,\n      BlockUnitId: params.BlockUnitId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashWaterunitsbyblockunitID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashCurrentViolationsbyblockunituserID */\n  getUDashCurrentViolationsbyblockunituserId(params: GetUDashCurrentViolationsbyblockunituserIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockUnitUserID: params.blockUnitUserID,\n      BlockUnitId: params.BlockUnitId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashCurrentViolationsbyblockunituserID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashActiveWorkpermitbyblockunituserID */\n  getUDashActiveWorkpermitbyblockunituserId(params: GetUDashActiveWorkpermitbyblockunituserIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockUnitUserID: params.blockUnitUserID,\n      BlockUnitId: params.BlockUnitId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashActiveWorkpermitbyblockunituserID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetVehicleNumberbyStaffID */\n  getVehicleNumberbyStaffId(params: GetVehicleNumberbyStaffIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      staffId: params.staffId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetVehicleNumberbyStaffID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetTicketsassignedtouserbyUserID */\n  getTicketsassignedtouserbyUserId(params: GetTicketsassignedtouserbyUserIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      UserID: params.UserID,\n      TicketType: params.TicketType,\n      Priority: params.Priority,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetTicketsassignedtouserbyUserID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/Getassetsowned */\n  getassetsowned(params: GetassetsownedParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      staffId: params.staffId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/Getassetsowned`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetAssetsassignedformaintenance */\n  getAssetsassignedformaintenance(params: GetAssetsassignedformaintenanceParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetAssetsassignedformaintenance`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetLowinventorystock */\n  getLowinventorystock(params: GetLowinventorystockParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      staffId: params.staffId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetLowinventorystock`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/Getfacilityeventstoday */\n  getfacilityeventstoday(params: GetfacilityeventstodayParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/Getfacilityeventstoday`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetStaffSalary */\n  getStaffSalary(params: GetStaffSalaryParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      staffId: params.staffId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetStaffSalary`, {params: queryParams});\n  }\n}\n"],"sourceRoot":"webpack:///"}