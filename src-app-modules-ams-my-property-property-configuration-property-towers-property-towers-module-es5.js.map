{"version":3,"sources":["webpack:///src/app/modules/ams/my-property/property-configuration/property-towers/property-tower-info/property-tower-info.component.html","webpack:///src/app/modules/ams/my-property/property-configuration/property-towers/property-tower-unit-info/property-tower-unit-info.component.html","webpack:///src/app/modules/ams/my-property/property-configuration/property-towers/property-towers.component.html","webpack:///src/app/modules/ams/my-property/property-configuration/property-towers/property-tower-info/property-tower-info.component.scss","webpack:///src/app/modules/ams/my-property/property-configuration/property-towers/property-tower-info/property-tower-info.component.ts","webpack:///src/app/modules/ams/my-property/property-configuration/property-towers/property-tower-unit-info/property-tower-unit-info.component.scss","webpack:///src/app/modules/ams/my-property/property-configuration/property-towers/property-tower-unit-info/property-tower-unit-info.component.ts","webpack:///src/app/modules/ams/my-property/property-configuration/property-towers/property-towers-routing.module.ts","webpack:///src/app/modules/ams/my-property/property-configuration/property-towers/property-towers.component.scss","webpack:///src/app/modules/ams/my-property/property-configuration/property-towers/property-towers.component.ts","webpack:///src/app/modules/ams/my-property/property-configuration/property-towers/property-towers.module.ts"],"names":["PropertyTowerInfoComponent","apartmentService","sharedService","sessionService","isEdit","isTowersLoaded","form","details","parseInt","tower","apartmentBlockId","apartmentBlockNumber","description","apartmentId","isActive","insertedBy","insertedOn","userId","Date","toISOString","totalItems","blockConstructedArea","unitsUnderConstruction","blockCommonArea","params","apartmentBlock","updateApartmentBlock","subscribe","res","message","setAlertMessage","console","log","getApartmentBlockUnitByBlockId","length","selector","template","PropertyTowerUnitInfoComponent","lookupService","status","name","data","unitTypeData","item","lookupValueName","undefined","unitTypeId","lookupValueId","unit","apartmentBlockUnitId","apartmentBlockUnitNumber","builtupArea","carpetArea","intercom","cars","isAvailableForRent","rentAmount","advanceAmount","isPetsAllowed","isFurnished","isVacant","isSold","constructionInProgress","unitConstructionArea","apartmentBlockUnit","updateApartmentBlockUnit","unitParams","LookupTypeId","getLookupValueByLookupTypeId","setTimeout","getUnitType","unitType","error","routes","path","component","PropertyTowersRoutingModule","imports","forChild","exports","PropertyTowersComponent","router","dialog","isDataLoaded","isBlockAvailable","filterSelected","singleBlock","towerData","filtergroup","jqx","filter","filter_or_operator","filtervalue","filtercondition","filterData","createfilter","operator","addfilter","datagrid","showfiltercolumnbackground","columnData","forEach","datafield","applyfilters","clearfilters","cellsrenderer","row","column","value","columnrenderer","getApartmentBlockByApartmentId","blockListData","PropertyTowersModule","declarations","bootstrap"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCWFA,0BAA0B;AAQrC,4CACSC,gBADT,EAEUC,aAFV,EAGUC,cAHV,EAGuC;AAAA;;AAF9B,eAAAF,gBAAA,GAAAA,gBAAA;AACC,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AAPV,eAAAC,MAAA,GAAiB,KAAjB;AACA,eAAAC,cAAA,GAAyB,KAAzB;AAOK;;AAZgC;AAAA;AAAA,yCAezB;AACX,iBAAKD,MAAL,GAAc,CAAC,KAAKA,MAApB;AACA;AAjBoC;AAAA;AAAA,oDAmBXE,IAnBW,EAmBP;AAAA;;AAG5B,gBAAIC,OAAO,GAAG;AAEZ,kCAAoBC,QAAQ,CAAC,KAAKC,KAAL,CAAWC,gBAAZ,CAFhB;AAGZ,sCAAwB,KAAKD,KAAL,CAAWE,oBAHvB;AAIZ,6BAAe,KAAKF,KAAL,CAAWG,WAJd;AAKZ,6BAAe,KAAKT,cAAL,CAAoBU,WALvB;AAMZ,0BAAY,KAAKJ,KAAL,CAAWK,QANX;AAOZ,4BAAcN,QAAQ,CAAC,KAAKC,KAAL,CAAWM,UAAZ,CAPV;AAQZ,4BAAc,KAAKN,KAAL,CAAWO,UARb;AASZ,2BAAa,KAAKb,cAAL,CAAoBc,MATrB;AAUZ,2BAAa,IAAIC,IAAJ,GAAWC,WAAX,EAVD;AAWZ,8BAAgBX,QAAQ,CAAC,KAAKY,UAAN,CAXZ;AAYZ,sCAAwBZ,QAAQ,CAAC,KAAKC,KAAL,CAAWY,oBAAZ,CAZpB;AAaZ,wCAA0Bb,QAAQ,CAAC,KAAKC,KAAL,CAAWa,sBAAZ,CAbtB;AAcZ,iCAAmBd,QAAQ,CAAC,KAAKC,KAAL,CAAWc,eAAZ;AAdf,aAAd;AAkBA,gBAAIC,MAAM,GAAG;AACXC,4BAAc,EAAElB;AADL,aAAb;AAIA,iBAAKN,gBAAL,CAAsByB,oBAAtB,CAA2CF,MAA3C,EAAmDG,SAAnD,CAA6D,UAACC,GAAD,EAAa;AAExE,kBAAGA,GAAG,CAACC,OAAP,EAAgB;AACd,qBAAI,CAACzB,MAAL,GAAc,KAAd;;AACA,qBAAI,CAACF,aAAL,CAAmB4B,eAAnB,CAAmC,KAAI,CAACrB,KAAL,CAAWE,oBAAX,GAAkC,uBAArE;AACD,eAHD,MAIK;AACH,qBAAI,CAACP,MAAL,GAAc,KAAd;AACD;AAEF,aAVD;AAaD;AAzDoC;AAAA;AAAA,qCA2D1B;AAAA;;AAET2B,mBAAO,CAACC,GAAR,CAAY,KAAKvB,KAAjB;AAEA,gBAAIe,MAAM,GAAG;AACXd,8BAAgB,EAAEF,QAAQ,CAAC,KAAKC,KAAL,CAAWC,gBAAZ;AADf,aAAb;AAID,iBAAKT,gBAAL,CAAsBgC,8BAAtB,CAAqDT,MAArD,EAA6DG,SAA7D,CAAuE,UAACC,GAAD,EAAa;AAEjF,oBAAI,CAACR,UAAL,GAAkBQ,GAAG,CAACM,MAAtB;AACA,oBAAI,CAAC7B,cAAL,GAAsB,IAAtB;AAEF,aALD;AAOA;AA1EoC;;AAAA;AAAA,S;;;;gBAT9B;;gBACA;;gBACA;;;;;;gBASN;;;AAFUL,gCAA0B,6DALtC,gEAAU;AACTmC,gBAAQ,EAAE,yBADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,4LAFS;;;;AAAA,OAAV,CAKsC,E,+EASX,kF,EACF,oF,EACC,mF,EAXY,GAA1BpC,0BAA0B,CAA1B;;;;;;;;;;;;;;;;ACXb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCcFqC,8BAA8B;AAUzC,gDACSpC,gBADT,EAEUqC,aAFV,EAGUpC,aAHV,EAIUC,cAJV,EAIuC;AAAA;;AAH9B,eAAAF,gBAAA,GAAAA,gBAAA;AACC,eAAAqC,aAAA,GAAAA,aAAA;AACA,eAAApC,aAAA,GAAAA,aAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AANV,eAAAC,MAAA,GAAiB,KAAjB;AAOK;;AAfoC;AAAA;AAAA,yCAiB7B;AACX,iBAAKA,MAAL,GAAc,CAAC,KAAKA,MAApB;AACA;AAnBwC;AAAA;AAAA,2CAqBxBmC,MArBwB,EAqBlB;AACrB,mBAAOA,MAAM,GAAG,KAAH,GAAW,IAAxB;AACD;AAvBwC;AAAA;AAAA,sCAyB7BC,IAzB6B,EAyBzB;AAEd,gBAAIC,IAAI,GAAG,kDAAU,KAAKC,YAAf,EAA6B,UAAUC,IAAV,EAAc;AACpD,kBAAGA,IAAI,CAACC,eAAL,KAAyBJ,IAA5B,EACE,OAAOG,IAAP;AACH,aAHU,CAAX;;AAKA,gBAAGF,IAAI,KAAKI,SAAT,IAAsBJ,IAAI,CAACP,MAAL,IAAe,CAAxC,EAA0C;AACxC,mBAAKY,UAAL,GAAkB,EAAlB;AACD,aAFD,MAGK;AACH,mBAAKA,UAAL,GAAkBL,IAAI,CAAC,CAAD,CAAJ,CAAQM,aAA1B;AACD;AAEF;AAvCwC;AAAA;AAAA,wDA0CXzC,IA1CW,EA0CP;AAAA;;AAEjC,gBAAIC,OAAO,GAAG;AAEd,sCAAwBC,QAAQ,CAAC,KAAKwC,IAAL,CAAUC,oBAAX,CAFlB;AAGd,0CAA4B,KAAKD,IAAL,CAAUE,wBAHxB;AAId,kCAAoB1C,QAAQ,CAAC,KAAKC,KAAL,CAAWC,gBAAZ,CAJd;AAKd,4BAAcF,QAAQ,CAAC,KAAKsC,UAAN,CALR;AAMd,6BAAetC,QAAQ,CAAC,KAAKwC,IAAL,CAAUG,WAAX,CANT;AAOd,4BAAc3C,QAAQ,CAAC,KAAKwC,IAAL,CAAUI,UAAX,CAPR;AAQd,0BAAY,KAAKJ,IAAL,CAAUK,QARR;AASd,sBAAQ7C,QAAQ,CAAC,KAAKwC,IAAL,CAAUM,IAAX,CATF;AAUd,oCAAsB,KAAKN,IAAL,CAAUO,kBAVlB;AAWd,+BAAiB,0BAXH;AAYd,4BAAc/C,QAAQ,CAAC,KAAKwC,IAAL,CAAUQ,UAAX,CAZR;AAad,+BAAiBhD,QAAQ,CAAC,KAAKwC,IAAL,CAAUS,aAAX,CAbX;AAcd,+BAAiB,KAAKT,IAAL,CAAUU,aAdb;AAed,6BAAe,KAAKV,IAAL,CAAUW,WAfX;AAgBd,0BAAY,KAAKX,IAAL,CAAUY,QAhBR;AAiBd,wBAAW,KAAKZ,IAAL,CAAUa,MAjBP;AAkBd,wCAA0B,KAAKb,IAAL,CAAUc,sBAAV,IAAoC,KAlBhD;AAmBd,sCAAwB,KAAKd,IAAL,CAAUe,oBAnBpB;AAoBd,mCAAqB,CApBP;AAqBd,0BAAY,KAAKf,IAAL,CAAUlC,QArBR;AAsBX,4BAAcN,QAAQ,CAAC,KAAKwC,IAAL,CAAUjC,UAAX,CAtBX;AAuBX,4BAAc,KAAKiC,IAAL,CAAUhC,UAvBb;AAwBX,2BAAaR,QAAQ,CAAC,KAAKL,cAAL,CAAoBc,MAArB,CAxBV;AAyBX,2BAAa,IAAIC,IAAJ,GAAWC,WAAX;AAzBF,aAAd;AA4BD,gBAAIK,MAAM,GAAG;AACXwC,gCAAkB,EAAEzD;AADT,aAAb;AAID,iBAAKN,gBAAL,CAAsBgE,wBAAtB,CAA+CzC,MAA/C,EAAuDG,SAAvD,CAAiE,UAACC,GAAD,EAAa;AAEzE,kBAAGA,GAAG,CAACC,OAAP,EAAgB;AACd,sBAAI,CAACzB,MAAL,GAAc,KAAd;;AACA,sBAAI,CAACF,aAAL,CAAmB4B,eAAnB,CAAmC,MAAI,CAACrB,KAAL,CAAWE,oBAAX,GAAgC,GAAhC,GAAoC,MAAI,CAACqC,IAAL,CAAUE,wBAA9C,GAAyE,uBAA5G;AACD,eAHD,MAIK;AACH,sBAAI,CAAC9C,MAAL,GAAc,KAAd;AACD;AAEF,aAVJ;AAYE;AAxFwC;AAAA;AAAA,qCA0F9B;AAAA;;AAET,iBAAK0C,UAAL,GAAkB,EAAlB;AAEA,gBAAIoB,UAAU,GAAG;AACfC,0BAAY,EAAE;AADC,aAAjB,CAJS,CAQV;;AACC,iBAAK7B,aAAL,CAAmB8B,4BAAnB,CAAgDF,UAAhD,EAA4DvC,SAA5D,CAAsE,UAACC,GAAD,EAAa;AACjF,oBAAI,CAACc,YAAL,GAAoBd,GAApB;AAEAyC,wBAAU,CAAC,YAAM;AAChB,sBAAI,CAACC,WAAL,CAAiB,MAAI,CAACtB,IAAL,CAAUuB,QAA3B;AACA,eAFS,EAEP,IAFO,CAAV;AAID,aAPD,EAQA,UAAAC,KAAK,EAAI,CAER,CAVD;AAYD;AA/GwC;;AAAA;AAAA,S;;;;gBAZlC;;gBAEA;;gBADA;;gBAEA;;;;;;gBAWN;;;gBACA;;;AAHUnC,oCAA8B,6DAL1C,gEAAU;AACTF,gBAAQ,EAAE,8BADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,sMAFS;;;;AAAA,OAAV,CAK0C,E,+EAWf,kF,EACD,4E,EACD,oF,EACC,mF,EAdgB,GAA9BC,8BAA8B,CAA9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTN,UAAMoC,MAAM,GAAW,CAC5B;AAAEC,YAAI,EAAE,EAAR;AAAYC,iBAAS,EAAE;AAAvB,OAD4B,CAAvB;;UAQMC,2BAA2B;AAAA;AAAA,O;;AAA3BA,iCAA2B,6DAJvC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIuC,GAA3BH,2BAA2B,CAA3B;;;;;;;;;;;;;;;;ACbb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCeFI,uBAAuB;AAqBlC,yCACUC,MADV,EAESC,MAFT,EAGSjF,gBAHT,EAIUE,cAJV,EAIuC;AAAA;;AAH7B,eAAA8E,MAAA,GAAAA,MAAA;AACD,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAjF,gBAAA,GAAAA,gBAAA;AACC,eAAAE,cAAA,GAAAA,cAAA;AAvBV,eAAAgF,YAAA,GAAuB,KAAvB;AAEA,eAAAC,gBAAA,GAA2B,KAA3B;AAEA,eAAAC,cAAA,GAAwB,KAAxB;AACA,eAAAC,WAAA,GAAqB,cAArB;AAmBK;;AA1B6B;AAAA;AAAA,6CA6Bf;AAAA;;AAEjB,gBAAG,KAAKC,SAAL,IAAkB,EAArB,EAAwB;AAEtB,kBAAIC,WAAW,GAAG,IAAIC,GAAG,CAACC,MAAR,EAAlB;AACA,kBAAIC,kBAAkB,GAAG,CAAzB;AACA,kBAAIC,WAAW,GAAG,KAAKL,SAAvB;AACA,kBAAIM,eAAe,GAAG,UAAtB;AACA,kBAAIC,UAAU,GAAGN,WAAW,CAACO,YAAZ,CAAyB,cAAzB,EAAyCH,WAAzC,EAAsDC,eAAtD,CAAjB;AACAL,yBAAW,CAACQ,QAAZ,GAAuB,IAAvB;AACAR,yBAAW,CAACS,SAAZ,CAAsBN,kBAAtB,EAA0CG,UAA1C;AAEA,mBAAKI,QAAL,CAAcC,0BAAd,CAAyC,KAAzC;AAEA,mBAAKC,UAAL,CAAgBC,OAAhB,CAAwB,UAAA1D,IAAI,EAAI;AAC9B,oBAAGA,IAAI,CAAC2D,SAAL,IAAkB,SAArB,EAAgC;AAC9B,wBAAI,CAACJ,QAAL,CAAcD,SAAd,CAAwBtD,IAAI,CAAC2D,SAA7B,EAAwCd,WAAxC,EAAqD,IAArD;AACD;AACF,eAJD;AAMA,mBAAKU,QAAL,CAAcK,YAAd;AAED,aApBD,MAqBK;AACH,mBAAKL,QAAL,CAAcM,YAAd;AACD;AAEF;AAxDiC;AAAA;AAAA,0CA0DlB;AAEd,gBAAIC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAMC,MAAN,EAAcC,KAAd,EAAwB;AAC1C,qBAAO,wCAAwCA,KAAxC,GAAgD,QAAvD;AACD,aAFD;;AAIA,gBAAIC,cAAc,GAAG,SAAjBA,cAAiB,CAACD,KAAD,EAAW;AAC9B,qBAAO,gCAAgCA,KAAhC,GAAwC,QAA/C;AACD,aAFD;AAKD;AArEiC;AAAA;AAAA,qCAuEvB;AAAA;;AAIT,gBAAIpF,MAAM,GAAG;AACXX,yBAAW,EAAE,KAAKV,cAAL,CAAoBU;AADtB,aAAb;AAIA,iBAAKZ,gBAAL,CAAsB6G,8BAAtB,CAAqDtF,MAArD,EAA6DG,SAA7D,CAAuE,UAACC,GAAD,EAAa;AAElF,oBAAI,CAACmF,aAAL,GAAqBnF,GAArB;AACA,oBAAI,CAACuD,YAAL,GAAoB,IAApB;AAEApD,qBAAO,CAACC,GAAR,CAAY,MAAI,CAAC+E,aAAjB;;AAEA,kBAAG,MAAI,CAACA,aAAL,CAAmB7E,MAAnB,GAA4B,CAA/B,EAAiC;AAC/B,sBAAI,CAACkD,gBAAL,GAAwB,IAAxB;AACD,eAFD,MAGK;AACH,sBAAI,CAACA,gBAAL,GAAwB,KAAxB;AACD;AAGF,aAfD;AAmBD;AAlGiC;;AAAA;AAAA,S;;;;gBAd3B;;gBAEA;;gBAIA;;gBACA;;;;;;gBA0BN,uD;AAAS,iBAAC,UAAD,EAAa;AAAE,sBAAQ;AAAV,WAAb;;;AAnBCJ,6BAAuB,6DALnC,gEAAU;AACT7C,gBAAQ,EAAE,qBADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,oKAFS;;;;AAAA,OAAV,CAKmC,E,+EAsBhB,sD,EACD,kE,EACS,kF,EACD,mF,EAzBS,GAAvB4C,uBAAuB,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCcAgC,oBAAoB;AAAA;AAAA,O;;AAApBA,0BAAoB,6DAdhC,+DAAS;AACRC,oBAAY,EAAE,CAAE,kFAAF,EAA2B,6GAA3B,EAAuD,4HAAvD,CADN;AAERpC,eAAO,EAAE,CACP,4DADO,EAEP,yEAFO,EAGP,mFAHO,EAIP,oFAJO,EAKP,6DAAaC,QAAb,CAAsB,sEAAtB,CALO,EAMP,2FANO,CAFD;AAURoC,iBAAS,EAAE,CACT,kFADS;AAVH,OAAT,CAcgC,GAApBF,oBAAoB,CAApB","file":"src-app-modules-ams-my-property-property-configuration-property-towers-property-towers-module-es5.js","sourcesContent":["export default \"<div class=\\\"property-tower-wrapper\\\">\\n\\n\\t<app-loader *ngIf=\\\"!isTowersLoaded\\\"></app-loader>\\n\\n\\t<ng-container *ngIf=\\\"isTowersLoaded\\\">\\n\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t<div class=\\\"d-flex justify-content-end mb-3\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"link\\\" (click)=\\\"showEditForm()\\\">\\n\\t\\t\\t\\t\\t\\t<mat-icon class=\\\"icon-md\\\" [color]=\\\"'primary'\\\" *ngIf=\\\"isEdit\\\" svgIcon=\\\"mat_outline:arrow_back_ios\\\"></mat-icon>\\n\\t\\t\\t\\t\\t\\t<mat-icon class=\\\"icon-md\\\" [color]=\\\"'primary'\\\" *ngIf=\\\"!isEdit\\\" svgIcon=\\\"feather:edit\\\"></mat-icon>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<ng-container *ngIf=\\\"!isEdit\\\">\\n\\n\\t\\t\\t<form #propertyDetailsForm = \\\"ngForm\\\" name=\\\"propertyDetailsForm\\\" novalidate>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"data-wrapper\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Construction Area SQ.M</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>{{tower.blockConstructedArea | notAvail}}</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Common Area SQ.M</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>{{tower.blockCommonArea | notAvail}}</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Units under construction</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>{{tower.unitsUnderConstruction | notAvail}}</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Total Units</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>{{totalItems}}</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\n\\t\\t\\t\\t</div>\\n\\t\\n\\t\\t\\t</form>\\n\\t\\n\\t\\t</ng-container>\\n\\t\\n\\t\\t<ng-container *ngIf=\\\"isEdit\\\">\\n\\t\\t\\t\\n\\t\\t\\t<form #propertyDetailsForm = \\\"ngForm\\\" name=\\\"propertyDetailsForm\\\" novalidate (ngSubmit)=\\\"submitPropertyDetailsForm(propertyDetailsForm)\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Construction Area SQ.M</label>\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"blockConstructedArea\\\" [(ngModel)]=\\\"tower.blockConstructedArea\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Common Area SQ.M</label>\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"blockCommonArea\\\" [(ngModel)]=\\\"tower.blockCommonArea\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Units under construction SQ.M</label>\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"constructionInProgress\\\" [(ngModel)]=\\\"tower.unitsUnderConstruction\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\n\\t\\t\\t</form>\\n\\t\\n\\t\\t</ng-container>\\n\\n\\t</ng-container>\\n\\n</div>\";","export default \"<div class=\\\"property-tower-unit-wrapper\\\">\\n\\t\\n\\t<div class=\\\"icon-wrapper float-right mb-2\\\" *ngIf=\\\"!isEdit\\\">\\n\\t\\t<i-feather class=\\\"icon edit\\\" name=\\\"edit\\\" (click)=\\\"showEditForm()\\\"></i-feather>\\n\\t</div>\\n\\n\\t<div class=\\\"icon-wrapper float-right mb-2\\\" *ngIf=\\\"isEdit\\\">\\n\\t\\t<i-feather class=\\\"icon back\\\" name=\\\"chevron-left\\\" (click)=\\\"showEditForm()\\\"></i-feather>\\n\\t</div>\\n\\n\\t<ng-container *ngIf=\\\"!isEdit\\\">\\n\\n\\t\\t<form #propertyUnitDetailsForm = \\\"ngForm\\\" name=\\\"propertyUnitDetailsForm\\\" novalidate>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"data-wrapper\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t                    <label>Bulit Area SQ.M</label>\\n\\t\\t                    <p>{{unit.builtupArea | notAvail}}</p>\\n\\t\\t        \\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t                    <label>Unit Construction Area SQ.M</label>\\n\\t\\t                    <p>{{unit.unitConstructionArea | notAvail}}</p>\\n\\t\\t        \\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t                    <label>Unit Type</label>\\n\\t\\t                    <p>{{unit.unitType | notAvail}}</p>\\n\\t\\t        \\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                <label>Units Sold</label>\\n\\t\\t\\t                <p>{{getBooleanStatus(unit.isSold)}}</p>\\n\\t\\t\\t    \\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                <label>Units Vacant</label>\\n\\t\\t\\t                <p>{{getBooleanStatus(unit.isVacant)}}</p>\\n\\t\\t\\t    \\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                <label>Pets Allowed</label>\\n\\t\\t\\t                <p>{{getBooleanStatus(unit.isPetsAllowed)}}</p>\\n\\t\\t\\t    \\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                <label>Furnished</label>\\n\\t\\t\\t                <p>{{getBooleanStatus(unit.isFurnished)}}</p>\\n\\t\\t\\t    \\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t</div>\\n\\n\\t\\t</form>\\n\\n\\t</ng-container>\\n\\n\\t<ng-container *ngIf=\\\"isEdit\\\">\\n\\t\\t\\n\\t\\t<form #propertyUnitDetailsForm = \\\"ngForm\\\" name=\\\"propertyUnitDetailsForm\\\" novalidate (ngSubmit)=\\\"submitPropertyUnitDetailsForm(propertyDetailsForm)\\\">\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t                    <label>Bulit Area SQ.M</label>\\n\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"builtupArea\\\" [(ngModel)]=\\\"unit.builtupArea\\\">\\n\\t        \\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t                    <label>Unit Construction Area SQ.M</label>\\n\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"unitConstructionArea\\\" [(ngModel)]=\\\"unit.unitConstructionArea\\\">\\n\\t        \\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t                    <label>Unit Type*</label>\\n\\t                    <select \\n\\t\\t\\t\\t\\t        name=\\\"unitType\\\" \\n\\t\\t\\t\\t\\t        id=\\\"unitType\\\" \\n\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t        [(ngModel)]=\\\"unitTypeId\\\" required>\\n\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of unitTypeData\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t    </select>\\n\\t        \\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-sm-3\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"input-box d-inline-block oh\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-check recur-check float-left\\\">\\n\\t\\t\\t\\t\\t\\t\\t    <input type=\\\"checkbox\\\" #unitSold class=\\\"form-check-input\\\" id=\\\"unitSlod\\\" name=\\\"unitSold\\\" [(ngModel)]=\\\"unit.isSold\\\">\\n\\t\\t\\t\\t\\t\\t\\t    <label class=\\\"form-check-label tiny\\\" for=\\\"unitSlod\\\">Is Sold</label>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-sm-3\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"input-box d-inline-block oh\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-check recur-check float-left\\\">\\n\\t\\t\\t\\t\\t\\t\\t    <input type=\\\"checkbox\\\" #unitVacant class=\\\"form-check-input\\\" id=\\\"unitVacant\\\" name=\\\"unitVacant\\\" [(ngModel)]=\\\"unit.isVacant\\\">\\n\\t\\t\\t\\t\\t\\t\\t    <label class=\\\"form-check-label tiny\\\" for=\\\"unitVacant\\\">Is Vacant</label>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-sm-3\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"input-box d-inline-block oh\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-check recur-check float-left\\\">\\n\\t\\t\\t\\t\\t\\t\\t    <input type=\\\"checkbox\\\" #petsAllowed class=\\\"form-check-input\\\" id=\\\"petsAllowed\\\" name=\\\"petsAllowed\\\" [(ngModel)]=\\\"unit.isPetsAllowed\\\">\\n\\t\\t\\t\\t\\t\\t\\t    <label class=\\\"form-check-label tiny\\\" for=\\\"petsAllowed\\\">Is Pets Allowed</label>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-sm-3\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"input-box d-inline-block oh\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-check recur-check float-left\\\">\\n\\t\\t\\t\\t\\t\\t\\t    <input type=\\\"checkbox\\\" #furnished class=\\\"form-check-input\\\" id=\\\"petsAllowed\\\" name=\\\"furnished\\\" [(ngModel)]=\\\"unit.isFurnished\\\">\\n\\t\\t\\t\\t\\t\\t\\t    <label class=\\\"form-check-label tiny\\\" for=\\\"furnished\\\">Is Furnished</label>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue\\\" [disabled]=\\\"propertyUnitDetailsForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t</form>\\n\\n\\t</ng-container>\\n\\n</div>\";","export default \"<div class=\\\"property-details-wrapper mt-5\\\">\\n\\n\\t<app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n\\n\\t<ng-container *ngIf=\\\"isDataLoaded\\\">\\n\\n\\t\\t<div class=\\\"d-flex flex-column mb-4\\\">\\n\\t\\t\\t<h6 class=\\\"text-secondary\\\" *ngIf=\\\"isBlockAvailable\\\">{{blockListData.length}} Records found</h6>\\n\\t\\t</div>\\n\\n\\t</ng-container>\\n\\n\\t<div class=\\\"bg-card shadow warn\\\" *ngIf=\\\"isDataLoaded && !isBlockAvailable\\\">\\n\\t\\t<h6>No Blocks Available</h6>\\n\\t</div>\\n\\n\\t<ng-container *ngIf=\\\"isDataLoaded && isBlockAvailable\\\">\\n\\n\\t\\t<mat-accordion>\\n\\n\\t\\t\\t<mat-expansion-panel [expanded]=\\\"i == 0\\\" *ngFor=\\\"let tower of blockListData; let i = index\\\">\\n\\n\\t\\t\\t\\t<mat-expansion-panel-header>\\n\\t\\t\\t\\t\\t<mat-panel-title>\\n\\t\\t\\t\\t\\t\\t<h6 class=\\\"mb-2\\\">{{tower.apartmentBlockNumber}}</h6>\\n\\t\\t\\t\\t\\t</mat-panel-title>\\n\\t\\t\\t\\t</mat-expansion-panel-header>\\n\\n\\t\\t\\t\\t<mat-panel-description>\\n\\t\\t\\t\\t\\t<app-property-tower-info [tower]=\\\"tower\\\"></app-property-tower-info>\\n\\t\\t\\t\\t</mat-panel-description>\\n\\n\\t\\t\\t</mat-expansion-panel>\\n\\n\\t\\t</mat-accordion>\\n\\n\\t</ng-container>\\n\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL215LXByb3BlcnR5L3Byb3BlcnR5LWNvbmZpZ3VyYXRpb24vcHJvcGVydHktdG93ZXJzL3Byb3BlcnR5LXRvd2VyLWluZm8vcHJvcGVydHktdG93ZXItaW5mby5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, Input } from '@angular/core';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\n\n@Component({\n  selector: 'app-property-tower-info',\n  templateUrl: './property-tower-info.component.html',\n  styleUrls: ['./property-tower-info.component.scss']\n})\nexport class PropertyTowerInfoComponent implements OnInit {\n  \n  @Input() tower:any;\n\n  isEdit:boolean = false;\n  isTowersLoaded:boolean = false;\n  totalItems:any;\n\n  constructor(\n  \tprivate apartmentService:ApartmentService,\n    private sharedService:SharedService,\n    private sessionService:SessionService\n  ) { }\n\n\n  showEditForm(){\n  \tthis.isEdit = !this.isEdit;\n  }\n\n  submitPropertyDetailsForm(form){\n\n\n    let details = {\n\n      \"apartmentBlockId\": parseInt(this.tower.apartmentBlockId),\n      \"apartmentBlockNumber\": this.tower.apartmentBlockNumber,\n      \"description\": this.tower.description,\n      \"apartmentId\": this.sessionService.apartmentId,\n      \"isActive\": this.tower.isActive,\n      \"insertedBy\": parseInt(this.tower.insertedBy),\n      \"insertedOn\": this.tower.insertedOn,\n      \"updatedBy\": this.sessionService.userId,\n      \"updatedOn\": new Date().toISOString(),\n      \"totalNounits\": parseInt(this.totalItems),\n      \"blockConstructedArea\": parseInt(this.tower.blockConstructedArea),\n      \"unitsUnderConstruction\": parseInt(this.tower.unitsUnderConstruction),\n      \"blockCommonArea\": parseInt(this.tower.blockCommonArea)\n\n    }\n\n    let params = {\n      apartmentBlock: details\n    }\n\n    this.apartmentService.updateApartmentBlock(params).subscribe((res:any) => {\n\n      if(res.message) {\n        this.isEdit = false;\n        this.sharedService.setAlertMessage(this.tower.apartmentBlockNumber + \" updated successfully\");\n      }\n      else {\n        this.isEdit = false;\n      }\n\n    });\n\n\n  }\n\n  ngOnInit() {\n\n    console.log(this.tower);\n\n    let params = {\n      apartmentBlockId: parseInt(this.tower.apartmentBlockId)\n    }\n\n  \tthis.apartmentService.getApartmentBlockUnitByBlockId(params).subscribe((res:any) => {\n  \t\t\n      this.totalItems = res.length;\n      this.isTowersLoaded = true;\n\n  \t});\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL215LXByb3BlcnR5L3Byb3BlcnR5LWNvbmZpZ3VyYXRpb24vcHJvcGVydHktdG93ZXJzL3Byb3BlcnR5LXRvd2VyLXVuaXQtaW5mby9wcm9wZXJ0eS10b3dlci11bml0LWluZm8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, Input } from '@angular/core';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SessionService } from 'src/app/core/session/session.service';\n\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-property-tower-unit-info',\n  templateUrl: './property-tower-unit-info.component.html',\n  styleUrls: ['./property-tower-unit-info.component.scss']\n})\nexport class PropertyTowerUnitInfoComponent implements OnInit {\n  \n  @Input() tower:any;\n  @Input() unit:any;\n\n  unitTypeData:any;\n  unitTypeId:any;\n\n  isEdit:boolean = false;\n\n  constructor(\n  \tprivate apartmentService:ApartmentService,\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private sessionService:SessionService\n  ) { }\n\n  showEditForm(){\n  \tthis.isEdit = !this.isEdit;\n  }\n\n  getBooleanStatus(status){\n    return status ? 'Yes' : 'No'\n  }\n\n  getUnitType(name){\n\n    var data = _.filter( this.unitTypeData, function( item ) {\n      if(item.lookupValueName === name)\n        return item;\n    } );\n\n    if(data === undefined || data.length == 0){\n      this.unitTypeId = \"\";\n    }\n    else {\n      this.unitTypeId = data[0].lookupValueId;\n    }\n\n  }\n\n\n  submitPropertyUnitDetailsForm(form){\n\n  \tlet details = {\n\n\t  \"apartmentBlockUnitId\": parseInt(this.unit.apartmentBlockUnitId),\n\t  \"apartmentBlockUnitNumber\": this.unit.apartmentBlockUnitNumber,\n\t  \"apartmentBlockId\": parseInt(this.tower.apartmentBlockId),\n\t  \"unitTypeId\": parseInt(this.unitTypeId),\n\t  \"builtupArea\": parseInt(this.unit.builtupArea),\n\t  \"carpetArea\": parseInt(this.unit.carpetArea),\n\t  \"intercom\": this.unit.intercom,\n\t  \"cars\": parseInt(this.unit.cars),\n\t  \"isAvailableForRent\": this.unit.isAvailableForRent,\n\t  \"availableDate\": \"2020-02-08T06:52:31.682Z\",\n\t  \"rentAmount\": parseInt(this.unit.rentAmount),\n\t  \"advanceAmount\": parseInt(this.unit.advanceAmount),\n\t  \"isPetsAllowed\": this.unit.isPetsAllowed,\n\t  \"isFurnished\": this.unit.isFurnished,\n\t  \"isVacant\": this.unit.isVacant,\n\t  \"isSold\":  this.unit.isSold,\n\t  \"constructionInProgress\": this.unit.constructionInProgress || false,\n\t  \"unitConstructionArea\": this.unit.unitConstructionArea,\n\t  \"propertyManagerId\": 1,\n\t  \"isActive\": this.unit.isActive,\n      \"insertedBy\": parseInt(this.unit.insertedBy),\n      \"insertedOn\": this.unit.insertedOn,\n      \"updatedBy\": parseInt(this.sessionService.userId),\n      \"updatedOn\": new Date().toISOString(),\n  }\n  \n  let params = {\n    apartmentBlockUnit: details\n  }\n\n\tthis.apartmentService.updateApartmentBlockUnit(params).subscribe((res:any) => {\n\n      if(res.message) {\n        this.isEdit = false;\n        this.sharedService.setAlertMessage(this.tower.apartmentBlockNumber+\" \"+this.unit.apartmentBlockUnitNumber + \" updated successfully\");\n      }\n      else {\n        this.isEdit = false;\n      }\n\n    });\n\n  }\n\n  ngOnInit() {\n\n    this.unitTypeId = \"\";\n    \n    let unitParams = {\n      LookupTypeId: 1\n    }\n\n  \t//get unit type\n    this.lookupService.getLookupValueByLookupTypeId(unitParams).subscribe((res:any) => {\n      this.unitTypeData = res;\n\n      setTimeout(() => {\n      \tthis.getUnitType(this.unit.unitType);\n      }, 1000);\n\n    },\n    error => {\n      \n    });\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PropertyTowersComponent } from './property-towers.component';\n\nexport const routes: Routes = [\n  { path: '', component: PropertyTowersComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PropertyTowersRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL215LXByb3BlcnR5L3Byb3BlcnR5LWNvbmZpZ3VyYXRpb24vcHJvcGVydHktdG93ZXJzL3Byb3BlcnR5LXRvd2Vycy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild, TemplateRef, HostListener, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { SessionService } from 'src/app/core/session/session.service';\n\n@Component({\n  selector: 'app-property-towers',\n  templateUrl: './property-towers.component.html',\n  styleUrls: ['./property-towers.component.scss']\n})\nexport class PropertyTowersComponent implements OnInit {\n  \n  isDataLoaded:boolean = false;\n  blockListData:any;\n  isBlockAvailable:boolean = false;\n\n  filterSelected:string = \"all\";\n  singleBlock:string = \"Select Tower\";\n  selectedBlockId:number;\n\n  apartmentBlockId:any;\n  apartmentBlockUnitId:any;\n\n  towerDataList:any;\n  columnData:any;\n  gridSourceData:any;\n  totalItems:any;\n  towerData:any;  \n\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n\n  constructor(\n    private router: Router,\n    public dialog: MatDialog,\n  \tprivate apartmentService:ApartmentService,\n    private sessionService:SessionService\n  ) { }\n\n\n  onGlSearchFilter() {\n\n    if(this.towerData != \"\"){\n\n      let filtergroup = new jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = this.towerData;\n      let filtercondition = 'contains';\n      let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n      filtergroup.operator = 'or';\n      filtergroup.addfilter(filter_or_operator, filterData);\n\n      this.datagrid.showfiltercolumnbackground(false);\n\n      this.columnData.forEach(item => {\n        if(item.datafield != 'Actions') {\n          this.datagrid.addfilter(item.datafield, filtergroup, true);\n        }\n      })\n\n      this.datagrid.applyfilters();\n      \n    }\n    else {\n      this.datagrid.clearfilters();\n    }\n\n  }\n\n  renderColumns() {\n\n    var cellsrenderer = (row, column, value) => {\n      return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n    }\n\n    var columnrenderer = (value) => {\n      return '<div style=\"padding: 14px\">' + value + '</div>';\n    }\n\n\n  }\n\n  ngOnInit() {\n\n    \n\n    let params = {\n      apartmentId: this.sessionService.apartmentId\n    }\n    \n    this.apartmentService.getApartmentBlockByApartmentId(params).subscribe((res:any) => {\n      \n      this.blockListData = res;\n      this.isDataLoaded = true;\n\n      console.log(this.blockListData);\n\n      if(this.blockListData.length > 0){\n        this.isBlockAvailable = true\n      }\n      else {\n        this.isBlockAvailable = false\n      }\n\n\n    });\n\n  \t\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RouterModule } from '@angular/router';\nimport { routes } from './property-towers-routing.module';\nimport { PropertyTowersRoutingModule } from './property-towers-routing.module';\n\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CondoCardModule } from 'src/app/modules/ui/card/card.module';\nimport { SelectModule } from 'src/app/modules/ui/select/select.module';\n\nimport { PropertyTowersComponent } from './property-towers.component';\nimport { PropertyTowerInfoComponent } from './property-tower-info/property-tower-info.component';\nimport { PropertyTowerUnitInfoComponent } from './property-tower-unit-info/property-tower-unit-info.component';\n\n@NgModule({\n  declarations: [ PropertyTowersComponent, PropertyTowerInfoComponent, PropertyTowerUnitInfoComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    CondoCardModule,\n    SelectModule,\n    RouterModule.forChild(routes),\n    PropertyTowersRoutingModule\n  ],\n  bootstrap: [\n    PropertyTowersComponent\n  ]\n})\nexport class PropertyTowersModule { }\n"]}