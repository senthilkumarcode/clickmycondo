{"version":3,"sources":["webpack:///src/app/api/controllers/DashBoard.ts"],"names":["DashBoardService","http","params","queryParamBase","apartmentId","queryParams","Object","entries","forEach","key","value","undefined","set","Array","isArray","v","append","JSON","stringify","get","fromDate","toDate","date","noOfDays","startDate","EndDate","blockunituserId","priority","blockUnitId","blockUnitUserId","blockUnitUserID","BlockUnitId","staffId","UserID","TicketType","Priority"],"mappings":"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","file":"default~modules-ams-dashboard-dashboard-module~modules-ams-my-property-all-property-all-property-mod~9ae89c6d-es5.js","sourcesContent":["/* tslint:disable:max-line-length */\n/**\n * v1\n * AMS API\n * undefined\n */\n\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nexport interface GetDashTotalunitsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashTotalTowersbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashTotalownersbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashTotalTenantsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashTotalAdminsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashTotalStaffbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashUnapprovedUsersPendingAdminbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashUnapprovedUsersPendingusersbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashOpencommticketsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashOpenpersonalticketsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashHighpriorityopenpersonalTicketsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashHighpriorityopenCommunityTicketsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashOpenPersonalAgedTicketsbyApartmentIDbyDaysParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  date?: string;\n  /** format: int32 */\n  noOfDays?: number;\n}\n\nexport interface GetDashOpenCommunityAgedTicketsbyApartmentIDbyDaysParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  date?: string;\n  /** format: int32 */\n  noOfDays?: number;\n}\n\nexport interface GetDashUnassignedpersonalTicketsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n}\n\nexport interface GetDashUnassignedCommunityTicketsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n}\n\nexport interface GetDashinProgressPanicAlertsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n}\n\nexport interface GetDashOpenPanicAlertsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n}\n\nexport interface GetDashVisitorsCheckedinbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  startDate?: string;\n  /** format: date-time */\n  EndDate?: string;\n}\n\nexport interface GetDashVisitorsCheckedouttodaybyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashVisitorsNotcheckedtodaybyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashunapprovedmoveinbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  date?: string;\n}\n\nexport interface GetDashunapprovedmoveoutbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  date?: string;\n}\n\nexport interface GetDashupcomingmoveinApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashupcomingmoveoutApprovedbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashuptotalparkingslotsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashuptotalparkingslotsunassignedbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashufacilitybookingunapprovedbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashufacilitybookingapprovedtodaybyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashlistupcomingmeetingbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashlistBroadcastsentbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashTotalamtbilledcustomersthismonthbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashTotalamtreceivedcustomersthismonthbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashpaymentdefaultersasoftodayybyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashcreditnoteappliedbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashWPapprovalpendingbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashWPupcomingbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetUDashVehiclecountbyblockunituserParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockunituserId?: number;\n}\n\nexport interface GetUDashTotalpetstbyblockunituserParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockunituserId?: number;\n}\n\nexport interface GetUDashPrivateStaffbyblockunituserParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockunituserId?: number;\n}\n\nexport interface GetUDashOpenticektsbyblockunituserParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockunituserId?: number;\n}\n\nexport interface GetUDashOpenticektsbyblockunituserTicketpriorityParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockunituserId?: number;\n  /** format: int32 */\n  priority?: number;\n}\n\nexport interface GetUDashVisitorcheckedinbyblockunituserParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockUnitId?: number;\n  /** format: date-time */\n  startDate?: string;\n  /** format: date-time */\n  EndDate?: string;\n  /** format: int32 */\n  blockUnitUserId?: number;\n}\n\nexport interface GetUDashVisitorNoTcheckeddoubyblockunitIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockUnitId?: number;\n  /** format: int32 */\n  blockUnitUserId?: number;\n}\n\nexport interface GetUDashTotalparkingbyblockunitIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockUnitId?: number;\n  /** format: int32 */\n  blockUnitUserId?: number;\n}\n\nexport interface GetUDapprovedfacilittbookingbyblockunitIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockUnitUserID?: number;\n}\n\nexport interface GetUDashWaterunitsbyblockunitIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockUnitUserID?: number;\n  /** format: int32 */\n  BlockUnitId?: number;\n}\n\nexport interface GetUDashCurrentViolationsbyblockunituserIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockUnitUserID?: number;\n  /** format: int32 */\n  BlockUnitId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetUDashActiveWorkpermitbyblockunituserIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockUnitUserID?: number;\n  /** format: int32 */\n  BlockUnitId?: number;\n}\n\nexport interface GetVehicleNumberbyStaffIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  staffId?: number;\n}\n\nexport interface GetTicketsassignedtouserbyUserIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  UserID?: number;\n  /** format: int32 */\n  TicketType?: number;\n  /** format: int32 */\n  Priority?: number;\n}\n\nexport interface GetassetsownedParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  staffId?: number;\n}\n\nexport interface GetAssetsassignedformaintenanceParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetLowinventorystockParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  staffId?: number;\n}\n\nexport interface GetfacilityeventstodayParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetStaffSalaryParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  staffId?: number;\n}\n\n@Injectable()\nexport class DashBoardService {\n  constructor(private http: HttpClient) {}\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashTotalunitsbyApartmentID */\n  getDashTotalunitsbyApartmentId(params: GetDashTotalunitsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashTotalunitsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashTotalTowersbyApartmentID */\n  getDashTotalTowersbyApartmentId(params: GetDashTotalTowersbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashTotalTowersbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashTotalownersbyApartmentID */\n  getDashTotalownersbyApartmentId(params: GetDashTotalownersbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashTotalownersbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashTotalTenantsbyApartmentID */\n  getDashTotalTenantsbyApartmentId(params: GetDashTotalTenantsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashTotalTenantsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashTotalAdminsbyApartmentID */\n  getDashTotalAdminsbyApartmentId(params: GetDashTotalAdminsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashTotalAdminsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashTotalStaffbyApartmentID */\n  getDashTotalStaffbyApartmentId(params: GetDashTotalStaffbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashTotalStaffbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashUnapprovedUsersPendingAdminbyApartmentID */\n  getDashUnapprovedUsersPendingAdminbyApartmentId(params: GetDashUnapprovedUsersPendingAdminbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashUnapprovedUsersPendingAdminbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashUnapprovedUsersPendingusersbyApartmentID */\n  getDashUnapprovedUsersPendingusersbyApartmentId(params: GetDashUnapprovedUsersPendingusersbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashUnapprovedUsersPendingusersbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashOpencommticketsbyApartmentID */\n  getDashOpencommticketsbyApartmentId(params: GetDashOpencommticketsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashOpencommticketsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashOpenpersonalticketsbyApartmentID */\n  getDashOpenpersonalticketsbyApartmentId(params: GetDashOpenpersonalticketsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashOpenpersonalticketsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashHighpriorityopenpersonalTicketsbyApartmentID */\n  getDashHighpriorityopenpersonalTicketsbyApartmentId(params: GetDashHighpriorityopenpersonalTicketsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashHighpriorityopenpersonalTicketsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashHighpriorityopenCommunityTicketsbyApartmentID */\n  getDashHighpriorityopenCommunityTicketsbyApartmentId(params: GetDashHighpriorityopenCommunityTicketsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashHighpriorityopenCommunityTicketsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashOpenPersonalAgedTicketsbyApartmentIDbyDays */\n  getDashOpenPersonalAgedTicketsbyApartmentIDbyDays(params: GetDashOpenPersonalAgedTicketsbyApartmentIDbyDaysParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      date: params.date,\n      noOfDays: params.noOfDays,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashOpenPersonalAgedTicketsbyApartmentIDbyDays`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashOpenCommunityAgedTicketsbyApartmentIDbyDays */\n  getDashOpenCommunityAgedTicketsbyApartmentIDbyDays(params: GetDashOpenCommunityAgedTicketsbyApartmentIDbyDaysParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      date: params.date,\n      noOfDays: params.noOfDays,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashOpenCommunityAgedTicketsbyApartmentIDbyDays`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashUnassignedpersonalTicketsbyApartmentID */\n  getDashUnassignedpersonalTicketsbyApartmentId(params: GetDashUnassignedpersonalTicketsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashUnassignedpersonalTicketsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashUnassignedCommunityTicketsbyApartmentID */\n  getDashUnassignedCommunityTicketsbyApartmentId(params: GetDashUnassignedCommunityTicketsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashUnassignedCommunityTicketsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashinProgressPanicAlertsbyApartmentID */\n  getDashinProgressPanicAlertsbyApartmentId(params: GetDashinProgressPanicAlertsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashinProgressPanicAlertsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashOpenPanicAlertsbyApartmentID */\n  getDashOpenPanicAlertsbyApartmentId(params: GetDashOpenPanicAlertsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashOpenPanicAlertsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashVisitorsCheckedinbyApartmentID */\n  getDashVisitorsCheckedinbyApartmentId(params: GetDashVisitorsCheckedinbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      startDate: params.startDate,\n      EndDate: params.EndDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashVisitorsCheckedinbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashVisitorsCheckedouttodaybyApartmentID */\n  getDashVisitorsCheckedouttodaybyApartmentId(params: GetDashVisitorsCheckedouttodaybyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashVisitorsCheckedouttodaybyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashVisitorsNotcheckedtodaybyApartmentID */\n  getDashVisitorsNotcheckedtodaybyApartmentId(params: GetDashVisitorsNotcheckedtodaybyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashVisitorsNotcheckedtodaybyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashunapprovedmoveinbyApartmentID */\n  getDashunapprovedmoveinbyApartmentId(params: GetDashunapprovedmoveinbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      date: params.date,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashunapprovedmoveinbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashunapprovedmoveoutbyApartmentID */\n  getDashunapprovedmoveoutbyApartmentId(params: GetDashunapprovedmoveoutbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      date: params.date,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashunapprovedmoveoutbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashupcomingmoveinApartmentID */\n  getDashupcomingmoveinApartmentId(params: GetDashupcomingmoveinApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashupcomingmoveinApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashupcomingmoveoutApprovedbyApartmentID */\n  getDashupcomingmoveoutApprovedbyApartmentId(params: GetDashupcomingmoveoutApprovedbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashupcomingmoveoutApprovedbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashuptotalparkingslotsbyApartmentID */\n  getDashuptotalparkingslotsbyApartmentId(params: GetDashuptotalparkingslotsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashuptotalparkingslotsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashuptotalparkingslotsunassignedbyApartmentID */\n  getDashuptotalparkingslotsunassignedbyApartmentId(params: GetDashuptotalparkingslotsunassignedbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashuptotalparkingslotsunassignedbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashufacilitybookingunapprovedbyApartmentID */\n  getDashufacilitybookingunapprovedbyApartmentId(params: GetDashufacilitybookingunapprovedbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashufacilitybookingunapprovedbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashufacilitybookingapprovedtodaybyApartmentID */\n  getDashufacilitybookingapprovedtodaybyApartmentId(params: GetDashufacilitybookingapprovedtodaybyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashufacilitybookingapprovedtodaybyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashlistupcomingmeetingbyApartmentID */\n  getDashlistupcomingmeetingbyApartmentId(params: GetDashlistupcomingmeetingbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashlistupcomingmeetingbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashlistBroadcastsentbyApartmentID */\n  getDashlistBroadcastsentbyApartmentId(params: GetDashlistBroadcastsentbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashlistBroadcastsentbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashTotalamtbilledcustomersthismonthbyApartmentID */\n  getDashTotalamtbilledcustomersthismonthbyApartmentId(params: GetDashTotalamtbilledcustomersthismonthbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashTotalamtbilledcustomersthismonthbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashTotalamtreceivedcustomersthismonthbyApartmentID */\n  getDashTotalamtreceivedcustomersthismonthbyApartmentId(params: GetDashTotalamtreceivedcustomersthismonthbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashTotalamtreceivedcustomersthismonthbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashpaymentdefaultersasoftodayybyApartmentID */\n  getDashpaymentdefaultersasoftodayybyApartmentId(params: GetDashpaymentdefaultersasoftodayybyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashpaymentdefaultersasoftodayybyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashcreditnoteappliedbyApartmentID */\n  getDashcreditnoteappliedbyApartmentId(params: GetDashcreditnoteappliedbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashcreditnoteappliedbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashWPapprovalpendingbyApartmentID */\n  getDashWPapprovalpendingbyApartmentId(params: GetDashWPapprovalpendingbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashWPapprovalpendingbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashWPupcomingbyApartmentID */\n  getDashWPupcomingbyApartmentId(params: GetDashWPupcomingbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashWPupcomingbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/getUDashVehiclecountbyblockunituser */\n  getUDashVehiclecountbyblockunituser(params: GetUDashVehiclecountbyblockunituserParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockunituserId: params.blockunituserId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/getUDashVehiclecountbyblockunituser`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashTotalpetstbyblockunituser */\n  getUDashTotalpetstbyblockunituser(params: GetUDashTotalpetstbyblockunituserParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockunituserId: params.blockunituserId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashTotalpetstbyblockunituser`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashPrivateStaffbyblockunituser */\n  getUDashPrivateStaffbyblockunituser(params: GetUDashPrivateStaffbyblockunituserParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockunituserId: params.blockunituserId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashPrivateStaffbyblockunituser`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashOpenticektsbyblockunituser */\n  getUDashOpenticektsbyblockunituser(params: GetUDashOpenticektsbyblockunituserParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockunituserId: params.blockunituserId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashOpenticektsbyblockunituser`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashOpenticektsbyblockunituserTicketpriority */\n  getUDashOpenticektsbyblockunituserTicketpriority(params: GetUDashOpenticektsbyblockunituserTicketpriorityParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockunituserId: params.blockunituserId,\n      priority: params.priority,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashOpenticektsbyblockunituserTicketpriority`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashVisitorcheckedinbyblockunituser */\n  getUDashVisitorcheckedinbyblockunituser(params: GetUDashVisitorcheckedinbyblockunituserParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockUnitId: params.blockUnitId,\n      startDate: params.startDate,\n      EndDate: params.EndDate,\n      blockUnitUserId: params.blockUnitUserId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashVisitorcheckedinbyblockunituser`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashVisitorNOTcheckeddoubyblockunitID */\n  getUDashVisitorNoTcheckeddoubyblockunitId(params: GetUDashVisitorNoTcheckeddoubyblockunitIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockUnitId: params.blockUnitId,\n      blockUnitUserId: params.blockUnitUserId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashVisitorNOTcheckeddoubyblockunitID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashTotalparkingbyblockunitID */\n  getUDashTotalparkingbyblockunitId(params: GetUDashTotalparkingbyblockunitIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockUnitId: params.blockUnitId,\n      blockUnitUserId: params.blockUnitUserId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashTotalparkingbyblockunitID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDapprovedfacilittbookingbyblockunitID */\n  getUDapprovedfacilittbookingbyblockunitId(params: GetUDapprovedfacilittbookingbyblockunitIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockUnitUserID: params.blockUnitUserID,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDapprovedfacilittbookingbyblockunitID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashWaterunitsbyblockunitID */\n  getUDashWaterunitsbyblockunitId(params: GetUDashWaterunitsbyblockunitIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockUnitUserID: params.blockUnitUserID,\n      BlockUnitId: params.BlockUnitId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashWaterunitsbyblockunitID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashCurrentViolationsbyblockunituserID */\n  getUDashCurrentViolationsbyblockunituserId(params: GetUDashCurrentViolationsbyblockunituserIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockUnitUserID: params.blockUnitUserID,\n      BlockUnitId: params.BlockUnitId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashCurrentViolationsbyblockunituserID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashActiveWorkpermitbyblockunituserID */\n  getUDashActiveWorkpermitbyblockunituserId(params: GetUDashActiveWorkpermitbyblockunituserIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockUnitUserID: params.blockUnitUserID,\n      BlockUnitId: params.BlockUnitId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashActiveWorkpermitbyblockunituserID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetVehicleNumberbyStaffID */\n  getVehicleNumberbyStaffId(params: GetVehicleNumberbyStaffIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      staffId: params.staffId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetVehicleNumberbyStaffID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetTicketsassignedtouserbyUserID */\n  getTicketsassignedtouserbyUserId(params: GetTicketsassignedtouserbyUserIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      UserID: params.UserID,\n      TicketType: params.TicketType,\n      Priority: params.Priority,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetTicketsassignedtouserbyUserID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/Getassetsowned */\n  getassetsowned(params: GetassetsownedParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      staffId: params.staffId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/Getassetsowned`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetAssetsassignedformaintenance */\n  getAssetsassignedformaintenance(params: GetAssetsassignedformaintenanceParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetAssetsassignedformaintenance`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetLowinventorystock */\n  getLowinventorystock(params: GetLowinventorystockParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      staffId: params.staffId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetLowinventorystock`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/Getfacilityeventstoday */\n  getfacilityeventstoday(params: GetfacilityeventstodayParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/Getfacilityeventstoday`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetStaffSalary */\n  getStaffSalary(params: GetStaffSalaryParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      staffId: params.staffId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetStaffSalary`, {params: queryParams});\n  }\n}\n"]}