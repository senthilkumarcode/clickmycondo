{"version":3,"sources":["./src/app/auth.guard.ts","./src/app/redirect.guard.ts","./src/app/shared/services/shared-toaster.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAA2C;AACU;AAKF;AACM;AAKzD,IAAa,SAAS,GAAtB,MAAa,SAAS;IAGpB,YACU,aAA2B,EAC3B,MAAc,EACd,KAAoB,EACrB,MAAiB;QAHhB,kBAAa,GAAb,aAAa,CAAc;QAC3B,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAe;QACrB,WAAM,GAAN,MAAM,CAAW;IAE1B,CAAC;IAED,WAAW,CACT,IAA4B,EAC5B,KAA0B;QAG1B,IAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAC;YAEvC,IAAI,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAEpC,sBAAsB;YACtB,IAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,EAAC;gBACrC,IAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,KAAK,EAAC;oBAC5C,OAAO,IAAI;iBACZ;qBACI;oBACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;iBAChC;aACF;YACD,OAAO,IAAI,CAAC;SAEb;aAAI;YAEH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YAEtC,OAAO,KAAK,CAAC;SACd;IACH,CAAC;CACF;;YAlCyB,gEAAa;YACnB,sDAAM;YACR,8DAAc;YACb,kEAAS;;AAPf,SAAS;IAFrB,gEAAU,EAAE;mFAMa,gEAAa;QACnB,sDAAM;QACR,8DAAc;QACb,kEAAS;GAPf,SAAS,CAsCrB;AAtCqB;;;;;;;;;;;;;;;;;;;ACZmB;AACwD;AAGjG,IAAa,aAAa,GAA1B,MAAa,aAAa;IAExB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEtC,WAAW,CAAC,KAA6B,EAAE,KAA0B;QAEjE,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACjD,OAAO,IAAI,CAAC;IAEhB,CAAC;CACF;;YAR6B,sDAAM;;AAFvB,aAAa;IADzB,gEAAU,EAAE;mFAGiB,sDAAM;GAFvB,aAAa,CAUzB;AAVyB;;;;;;;;;;;;;;;;;;;ACJiB;AACa;AAKxD,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAE/B,YAAmB,QAAqB;QAArB,aAAQ,GAAR,QAAQ,CAAa;IAAI,CAAC;IAE7C,YAAY,CAAC,OAAe,EAAE,MAAc;QAC1C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE;YAClC,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;IACL,CAAC;CACF;;YAP8B,uEAAW;;AAF7B,oBAAoB;IAHhC,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;mFAG6B,uEAAW;GAF7B,oBAAoB,CAShC;AATgC","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatDialogRef } from \"@angular/material/dialog\";\n\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n\n@Injectable()\n\nexport class AuthGuard implements CanActivate {\n  \n\n  constructor(\n    private cookieService:CookieService,\n    private router: Router,\n    private route:ActivatedRoute,\n    public dialog: MatDialog){\n\n  }\n  \n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n\n\n    if(this.cookieService.get('token') != \"\"){\n\n      var path = window.location.pathname;\n      \n      // reset password page\n      if(path.indexOf(\"resetpassword\") != -1){\n        if(this.cookieService.get('isReset') == \"yes\"){\n          return true\n        }\n        else {\n          this.router.navigate(['/ams']);\n        }\n      }\n      return true;\n      \n    }else{\n\n      this.router.navigate(['/home/login']);\n\n      return false;\n    }\n  }\n}","import {Injectable} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, Router, RouterStateSnapshot} from '@angular/router';\n\n@Injectable()\nexport class RedirectGuard implements CanActivate {\n\n  constructor(private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n\n      window.location.href = route.data['externalUrl'];\n      return true;\n\n  }\n}","import { Injectable } from '@angular/core';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedToasterService {\n\n  constructor(public snackBar: MatSnackBar) { }\n\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n}\n"],"sourceRoot":"webpack:///"}