{"version":3,"sources":["./src/app/auth.guard.ts","./src/app/redirect.guard.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAA2C;AACG;AAKK;AACM;AAKzD,IAAa,SAAS,GAAtB,MAAa,SAAS;IAGpB,YACU,aAA2B,EAC3B,MAAc,EACd,KAAoB,EACrB,MAAiB;QAHhB,kBAAa,GAAb,aAAa,CAAc;QAC3B,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAe;QACrB,WAAM,GAAN,MAAM,CAAW;IAE1B,CAAC;IAED,WAAW,CACT,IAA4B,EAC5B,KAA0B;QAG1B,IAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAC;YAEtC,OAAO,IAAI,CAAC;SAEd;aAAI;YAEH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YAEjC,OAAO,KAAK,CAAC;SACd;IACH,CAAC;CACF;;YAvByB,gEAAa;YACnB,sDAAM;YACR,8DAAc;YACb,2DAAS;;AAPf,SAAS;IAFrB,gEAAU,EAAE;2EAMa,gEAAa;QACnB,sDAAM;QACR,8DAAc;QACb,2DAAS;GAPf,SAAS,CA2BrB;AA3BqB;;;;;;;;;;;;;;;;;;;ACZmB;AACwD;AAGjG,IAAa,aAAa,GAA1B,MAAa,aAAa;IAExB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEtC,WAAW,CAAC,KAA6B,EAAE,KAA0B;QAEjE,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACjD,OAAO,IAAI,CAAC;IAEhB,CAAC;CACF;;YAR6B,sDAAM;;AAFvB,aAAa;IADzB,gEAAU,EAAE;2EAGiB,sDAAM;GAFvB,aAAa,CAUzB;AAVyB","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { MatDialogRef } from \"@angular/material\";\n\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n\n@Injectable()\n\nexport class AuthGuard implements CanActivate {\n  \n\n  constructor(\n    private cookieService:CookieService,\n    private router: Router,\n    private route:ActivatedRoute,\n    public dialog: MatDialog){\n\n  }\n  \n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n\n\n    if(this.cookieService.get('token') != \"\"){\n\n       return true;\n      \n    }else{\n\n      this.router.navigate(['/login']);\n\n      return false;\n    }\n  }\n}","import {Injectable} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, Router, RouterStateSnapshot} from '@angular/router';\n\n@Injectable()\nexport class RedirectGuard implements CanActivate {\n\n  constructor(private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n\n      window.location.href = route.data['externalUrl'];\n      return true;\n\n  }\n}"],"sourceRoot":"webpack:///"}