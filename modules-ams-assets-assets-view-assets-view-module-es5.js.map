{"version":3,"sources":["webpack:///src/app/modules/ams/assets/assets-view/assets-view.component.html","webpack:///src/app/modules/ams/assets/assets-view/assets-view-routing.module.ts","webpack:///src/app/modules/ams/assets/assets-view/assets-view.component.scss","webpack:///src/app/modules/ams/assets/assets-view/assets-view.component.ts","webpack:///src/app/modules/ams/assets/assets-view/assets-view.module.ts"],"names":["routes","path","component","canActivate","AssetsViewRoutingModule","imports","forChild","exports","AssetsViewComponent","_overlay","_viewContainerRef","assetService","sessionService","router","sharedService","injector","histroySearch","isDataLoaded","totalItems","modalService","get","getAllAssets","cellsrenderer","row","column","value","columnrenderer","header","text","datafield","width","renderer","minwidth","cellsalign","align","cellclassname","elemId","apiSubscription","unitlistdeleteindexcast","subscribe","id","params","assetId","deleteBy","parseInt","userId","deleteAsset","res","setUnitListDeleteIndex","message","openSnackBar","errorMessage","error","apartmentId","getAllAssetByApartmentId","length","gridSourceData","localdata","datatype","assetData","jqx","dataAdapter","event","datagrid","exportdata","navigateByUrl","filtergroup","filter","filter_or_operator","filtervalue","filtercondition","filterData","createfilter","operator","addfilter","showfiltercolumnbackground","forEach","item","applyfilters","clearfilters","_selectPanelOverlayRef","detach","showConfirmModal","navigate","queryParams","type","detail","dataRecord","getrowdata","rowId","assetAction","create","backdropClass","hasBackdrop","scrollStrategy","scrollStrategies","block","positionStrategy","position","flexibleConnectedTo","document","getElementById","withFlexibleDimensions","withViewportMargin","withLockedPosition","withPositions","originX","originY","overlayX","overlayY","templatePortal","_actionPanel","attach","backdropClick","hasAttached","isAttached","selector","template","getClassName","window","viewMaintanenceHistory","CustomEvent","dispatchEvent","assetActionEvent","AssetsViewModule","declarations","bootstrap"],"mappings":"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","file":"modules-ams-assets-assets-view-assets-view-module-es5.js","sourcesContent":["export default \"<div class=\\\"manage-asset-wrapper\\\">\\n\\t<div class=\\\"main\\\">\\n\\t\\t<!-- Loader -->\\n\\t\\t<app-loader *ngIf=\\\"isDataLoaded\\\"></app-loader>\\n\\t\\t<!-- Table -->\\n\\t\\t<condo-card *ngIf=\\\"!isDataLoaded\\\">\\n\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<h4>All Assets</h4>\\n\\t\\t\\t\\t\\t\\t<p>{{totalItems}} results</p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"ml-auto mr-3\\\">\\n\\t\\t\\t\\t\\t\\t<app-table-search [input]=\\\"histroySearch\\\" (outputParams)=\\\"onGlSearchFilter($event)\\\"></app-table-search>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"mr-3\\\">\\n\\t\\t\\t\\t\\t\\t<app-print-dropdown (outputParams) =\\\"getPrintParams($event)\\\"></app-print-dropdown>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" (click)=\\\"addAsset()\\\" class=\\\"d-none d-md-block\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon class=\\\"mr-2\\\" [svgIcon]=\\\"'add'\\\"></mat-icon>\\n\\t\\t\\t\\t\\t\\t\\tAdd Asset\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t<button class=\\\"d-block d-md-none table-add-btn\\\" mat-button (click)=\\\"addAsset()\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon [svgIcon]=\\\"'add_circle'\\\"></mat-icon>\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div CondoCardBody>\\n\\t\\t\\t\\t<jqxGrid [theme]=\\\"'material'\\\" [width]=\\\"'100%'\\\" [rowsheight]=\\\"48\\\" [autoheight]=\\\"true\\\" [pageable]=\\\"true\\\"\\n\\t\\t\\t\\t\\t[filterable]=\\\"true\\\" [sortable]=\\\"true\\\" [source]=\\\"assetData\\\" [columns]=\\\"header\\\"\\n\\t\\t\\t\\t\\t[columnsresize]=\\\"true\\\" [enablehover]=\\\"false\\\" #datagrid>\\n\\t\\t\\t\\t</jqxGrid>\\n\\t\\t\\t</div>\\n\\t\\t</condo-card>\\n\\t</div>\\n</div>\\n\\n<ng-template #actionPanel>\\n\\t<div class=\\\"bg-card popover-card p-0 table-action-menu\\\">\\n\\t\\t<a href=\\\"javascript:void(0)\\\" (click)=\\\"editAsset(assetId)\\\">Edit Asset</a>\\n\\t\\t<a href=\\\"javascript:void(0)\\\" (click)=\\\"deleteAsset(assetId)\\\">De-Activate Asset</a>\\n\\t\\t<a href=\\\"javascript:void(0)\\\" (click)=\\\"addMaintanence(assetId)\\\">Add Maintenance</a>\\n\\t\\t<a href=\\\"javascript:void(0)\\\" (click)=\\\"manageMaintanence(assetId)\\\">Manage Maintenance</a>\\n\\t\\t<a href=\\\"javascript:void(0)\\\" (click)=\\\"viewMaintanenceHistory(assetId)\\\">View Maintenance History</a>\\n\\t</div>\\n</ng-template>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from 'src/app/core/auth/guards/auth.guard';\n\nimport { AssetsViewComponent } from './assets-view.component';\n\n\nconst routes: Routes = [\n  { path: '', component: AssetsViewComponent, canActivate: [AuthGuard]},\n  { path: ':id', component: AssetsViewComponent, canActivate: [AuthGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AssetsViewRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL2Fzc2V0cy9hc3NldHMtdmlldy9hc3NldHMtdmlldy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, Injector, ViewChild, ViewContainerRef, TemplateRef, HostListener } from '@angular/core';\n\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\n\nimport {Router} from '@angular/router';\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { AssetService } from 'src/app/api/controllers/Asset';\nimport { ModalService } from 'src/app/shared/services/modal.service';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-assets-view',\n  templateUrl: './assets-view.component.html',\n  styleUrls: ['./assets-view.component.scss']\n})\nexport class AssetsViewComponent implements OnInit {\n  header: any\n  assetData: any;\n  gridSourceData: any;\n  maintainHistoryData:any;\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n  histroySearch: string = \"\";\n  modalService:any;\n  isDataLoaded:boolean = true;\n  totalItems:number = 0;\n\n  assetId:any;\n\n  apiSubscription:Subscription;\n\n  // Private\n  public _selectPanelOverlayRef: OverlayRef;\n\n  @ViewChild('actionPanel')\n  private _actionPanel: TemplateRef<any>;\n\n  @ViewChild(\"viewAssetsActionRef\", { static: false }) viewAssetsActionRef: TemplateRef<any>;\n\n  constructor(\n    private _overlay: Overlay,\n    private _viewContainerRef: ViewContainerRef,\n    private assetService:AssetService,\n    private sessionService:SessionService,\n    private router: Router,\n    private sharedService:SharedService,\n    private injector: Injector\n  ) { \n    this.modalService = this.injector.get(ModalService);\n  }\n\n  ngOnInit() {\n    this.getAllAssets();\n    var cellsrenderer = (row, column, value) => {\n      return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n    }\n\n    var columnrenderer = (value) => {\n      return '<div style=\"padding: 14px\">' + value + '</div>';\n    }\n\n    this.header = [\n      {\n      text: 'Asset Tag No',\n      datafield: 'assetTagNo',\n      width: 200,\n      cellsrenderer: cellsrenderer,\n      renderer: columnrenderer\n    },\n    {\n      text: 'Asset Name',\n      datafield: 'assetName',\n      minwidth:200,\n      cellsrenderer: cellsrenderer,\n      renderer: columnrenderer\n    },\n    {\n      text: 'Category',\n      datafield: 'assetCategoryName',\n      minwidth:200,\n      cellsrenderer: cellsrenderer,\n      renderer: columnrenderer\n    },\n    {\n      text: 'Vendor Name ',\n      datafield: 'vendorName',\n      minwidth: 200,\n      cellsrenderer: cellsrenderer,\n      renderer: columnrenderer\n    },\n     {\n      text: 'Condition',\n      datafield: 'assetConditionName',\n      cellsrenderer: cellsrenderer,\n      minwidth: 200,\n      renderer: columnrenderer\n    }, {\n      text: 'Purchase Cost',\n      datafield: 'purchaseCost',\n      cellsrenderer: cellsrenderer,\n      width: 150,\n      renderer: columnrenderer\n    },{\n      text: 'Actions',      \n      cellsalign: 'center', \n      align: 'center',\n      minwidth: 120,\n      cellclassname: 'action-cell',\n      cellsrenderer: (row: number): string => {\n\n        let elemId = 'assetAction'+ row;\n\n        return '<div class=\"simple-actions\">'\n               + '<a href=\"javascript:void(0)\" id=\"'+ elemId +'\" onClick=\"assetActionEvent('+ row +')\">'\n                 + '<span class=\"action-dot\"></span>'\n                 + '<span class=\"action-dot\"></span>'\n                 + '<span class=\"action-dot\"></span>'\n               + '</a>'\n             + '</div>'\n      },\n      renderer: columnrenderer\n    }];\n    // delete item\n    this.apiSubscription = this.sharedService.unitlistdeleteindexcast.subscribe( id => {\n      if(id != null){\n        var params = {\n          assetId: id,\n          deleteBy: parseInt(this.sessionService.userId)\n        }\n        this.assetService.deleteAsset(params).subscribe((res:any) => {\n          this.sharedService.setUnitListDeleteIndex(null);\n\t\t\t\t\tif(res.message) {\n\t\t\t\t\t\tthis.getAllAssets();\n\t\t\t\t\t\tthis.sharedService.openSnackBar(\"Asset deleted successfully\",'success');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.sharedService.openSnackBar(res.errorMessage,'error');\n\t\t\t\t\t}\n\t\t\t\t}, error => {\n\t\t\t\t\tthis.sharedService.setUnitListDeleteIndex(null);\n\t\t\t\t\tthis.sharedService.openSnackBar('Server Error','error');\t\n        });\n      }\n    });\n  }\n\n  getAllAssets(){\n    let params:any = {};\n    params.apartmentId = this.sessionService.apartmentId;\n    this.assetService.getAllAssetByApartmentId(params).subscribe((res:any) => {\n      if(res) {\n        this.totalItems = res.length;\n        this.gridSourceData = {\n          localdata:  res.length > 0 ? res:[],\n          datatype: \"array\"\n        }  \n        this.assetData = new jqx.dataAdapter(this.gridSourceData);\n      }\n      this.isDataLoaded = false;\n    })\n  \n  }\n \n  getPrintParams(event){\n    this.datagrid.exportdata(event, 'Asset Info', true, null, true, 'https://www.jqwidgets.com/export_server/dataexport.php');\n  }\n\n  addAsset() {\n    this.router.navigateByUrl('/ams/assets/create');\n  }\n\n  onGlSearchFilter(event){\n    if(event != \"\"){\n      let filtergroup = new jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = event;\n      let filtercondition = 'contains';\n      let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n      filtergroup.operator = 'or';\n      filtergroup.addfilter(filter_or_operator, filterData);\n      this.datagrid.showfiltercolumnbackground(false);\n      this.header.forEach(item => {\n        if(item.datafield != 'Actions') {\n          this.datagrid.addfilter(item.datafield, filtergroup, true);\n        }\n      })\n      this.datagrid.applyfilters();\n    }\n    else {\n      this.datagrid.clearfilters();\n    }\n  }\n\n  editAsset(id) {\n    this.router.navigateByUrl('/ams/assets/edit-asset/' + id);\n    this._selectPanelOverlayRef.detach();\n  }\n\n  deleteAsset(id) {\n    this.showConfirmModal(id);\n    this._selectPanelOverlayRef.detach();\n  }\n  \n  addMaintanence(id) {\n    this.router.navigate( ['/ams/assets/create-maintenance'], { queryParams: { assetId: id,type:'ADD'}});\n    this._selectPanelOverlayRef.detach();\n  }\n\n  manageMaintanence(id) {\n    this.router.navigateByUrl('/ams/assets/manage-maintenance/' + id);\n    this._selectPanelOverlayRef.detach();\n  }\n\n  viewMaintanenceHistory(id) {\n    this.router.navigateByUrl('/ams/assets/maintenance-history');\n  }\n\n  showConfirmModal(id) {\n    this.modalService.showConfirmModal(id);\n  }\n\n  @HostListener('window:onAssetAction', ['$event.detail'])\n  onAssetAction(detail) {\n\n      let dataRecord = this.datagrid.getrowdata(detail.rowId)\n      this.assetId = dataRecord.assetId;\n\n      var id = 'assetAction'+detail.rowId;\n      this.assetAction(id);\n    \n  }\n\n  assetAction(id) {\n\n    // Create the overlay\n    this._selectPanelOverlayRef = this._overlay.create({\n      backdropClass   : '',\n      hasBackdrop     : true,\n      scrollStrategy  : this._overlay.scrollStrategies.block(),\n      positionStrategy: this._overlay.position()\n                            .flexibleConnectedTo(document.getElementById(id))\n                            .withFlexibleDimensions()\n                            .withViewportMargin(56)\n                            .withLockedPosition(false)\n                            .withPositions([\n                                {\n                                    originX : 'start',\n                                    originY : 'bottom',\n                                    overlayX: 'start',\n                                    overlayY: 'top'\n                                }\n                            ])\n    });\n\n    // Create a portal from the template\n    const templatePortal = new TemplatePortal(this._actionPanel, this._viewContainerRef);\n\n    // Attach the portal to the overlay\n    this._selectPanelOverlayRef.attach(templatePortal);\n\n    // Subscribe to the backdrop click\n    this._selectPanelOverlayRef.backdropClick().subscribe(() => {\n\n        // If overlay exists and attached...\n        if ( this._selectPanelOverlayRef && this._selectPanelOverlayRef.hasAttached() )\n        {\n            // Detach it\n            this._selectPanelOverlayRef.detach();\n\n        }\n\n        // If template portal exists and attached...\n        if ( templatePortal && templatePortal.isAttached )\n        {\n            // Detach it\n            templatePortal.detach();\n        }\n    });\n\n  }\n\n\n}\n\n\n\nlet getClassName = value => {\n  return value==\"Delayed\" ? 'normal-status' : value==\"Ontime\"? 'low':'';\n}\n(window as any).getClassName = getClassName;\n\nlet viewMaintanenceHistory = row => {\n  var event = new CustomEvent('viewMaintanenceHistory', {\n    detail: {\n        rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).viewMaintanenceHistory = viewMaintanenceHistory;\n\nlet assetActionEvent = row => {\n  var event = new CustomEvent('onAssetAction', {\n    detail: {\n        rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).assetActionEvent = assetActionEvent;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import { Component, OnInit, Injector, ViewChild, TemplateRef } from '@angular/core';\n// import { Router, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\n\n// import { MatDialog } from '@angular/material/dialog';\n// import { MatDialogRef } from \"@angular/material/dialog\";\n\n// import { AssetsMaintenanceHistoryComponent } from './../assets-maintenance-history/assets-maintenance-history.component';\n\n// import { AssetService } from 'src/app/api/controllers/Asset';\n// import { VendorService } from 'src/app/api/controllers/Vendor';\n// import { LookupService } from 'src/app/api/controllers/Lookup';\n// import { SharedService } from 'src/app/shared/services/shared.service';\n// import { ModalService } from 'src/app/shared/services/modal.service';\n// import { SessionService } from 'src/app/core/session/session.service';\n\n// import * as _ from 'underscore';\n\n// @Component({\n//   selector: 'app-assets-view',\n//   templateUrl: './assets-view.component.html',\n//   styleUrls: ['./assets-view.component.scss']\n// })\n// export class AssetsViewComponent implements OnInit {\n  \n//   assetCategoryData:any;\n//   assetCategoryId:string = \"\";\n\n//   vendorDataList:any;\n\n//   assetConditionData:any;\n\n//   isAssetCategorySelected:boolean = false;\n//   isAssetLoaded:boolean = false;\n\n//   assetData:string = \"\";\n//   unitFieldType:string = \"assetTagNo\";\n//   unitOrder:boolean = true;\n\n//   ItemStartIndex:any = 0;\n//   ItemEndIndex:any;\n//   totalItems:any;\n//   itemLimit:any = 10;\n//   totalFilterItems:any;\n\n//   modalService:any;\n\n//   asset:any;\n//   assetListData:any;\n//   assetCategoryName:string = \"\";\n\n//   assetMaintenaceDataList:any;\n\n//   maintenanceData:any;\n//   statusTypeData:any;\n\n//   selectedInput:string = \"\";\n//   columnField: any = {}\n\n//   constructor(\n//     private injector: Injector,\n//     public dialog: MatDialog,\n//     private router: Router,\n//     private route: ActivatedRoute,\n//     private assetService: AssetService,\n//     private vendorService:VendorService,\n//   \tprivate lookupService: LookupService,\n//     private sharedService:SharedService,\n//     private sessionService:SessionService\n//   ) { \n\n//     this.modalService = this.injector.get(ModalService);\n\n//      router.events.forEach((event) => {\n//       if(event instanceof NavigationEnd) {\n\n//         let params = {\n//           LookupTypeId: 19\n//         }\n\n//         this.lookupService.getLookupValueByLookupTypeId(params).subscribe((res:any) => {\n\n//           this.assetCategoryData = res.filter(item => {\n//             return item.isActive;\n//           });\n\n//           this.getAssetCategoryData(this.assetCategoryId);\n\n//         });\n\n        \n//       }\n\n//     });\n\n\n//   }\n\n//   getIndexParams(event){\n//     this.ItemStartIndex = event.ItemStartIndex;\n//     this.ItemEndIndex = event.ItemEndIndex;\n//     this.itemLimit = event.itemLimit;\n//   }\n\n//   sortUnitData(type){\n//     this.unitFieldType = type;\n//     this.unitOrder = !this.unitOrder;\n//   }\n\n//   getFieldOrderBy(type) {\n//     if(this.unitFieldType == type){\n//       return this.unitOrder ? 'asc' : 'desc';\n//     }\n//     else return '';\n//   }\n\n//   showConfirmModal(id) {\n//     this.modalService.showConfirmModal(id);\n//   }\n\n//   selectColInput(value){\n//     this.selectedInput = value;\n//   }\n\n//   onSelectChange(event, type, name){\n\n//     if(!_.isEmpty(event)){\n//       this.selectedInput = type;\n//       this.columnField[type] = event[name];\n//     }\n//     else {\n//        this.columnField = {};\n//     }\n    \n//   }\n\n//   isMobileView() {\n//     return window.innerWidth <= 767 ? 'table-responsive' : '';\n//   }\n\n//   isItemsAvailable(){\n//     return this.totalItems > 0 ? true : false;\n//   }\n\n//   isNoItemsAvailable(){\n//     return this.totalItems == 0 ? true : false;\n//   }\n\n//   getAssetCondition(asset, id){\n\n//     var data = _.filter( this.assetConditionData, function( item ) {\n//       if(item.lookupValueId === id)\n//         return item;\n//     });\n\n//     if(data === undefined || data.length == 0){\n//       return '';\n//     }\n//     else {\n\n//       this.assetListData.map(obj=> {\n//         if(obj.assetId == asset.assetId){\n//           obj.assetCondition = data[0].lookupValueName.toLowerCase();\n//         }\n//       });\n\n//       return data[0].lookupValueName.toLowerCase();\n//     }\n\n//   }\n\n//   getAssetCategoryName(asset, id){\n    \n//     var data = _.filter( this.assetCategoryData, function( item ) {\n//       if(item.lookupValueId === id)\n//         return item;\n//     });\n\n//     if(data === undefined || data.length == 0){\n//       return '';\n//     }\n//     else {\n\n//       this.assetListData.map(obj=> {\n//         if(obj.assetId == asset.assetId){\n//           obj.assetCategory = data[0].lookupValueName.toLowerCase();\n//         }\n//       });\n\n//       return data[0].lookupValueName.toLowerCase();\n//     }\n//   }\n\n//   getvendorName(asset, id){\n    \n//     var data = _.filter( this.vendorDataList, function( item ) {\n//       if(item.vendorId === id)\n//         return item;\n//     });\n\n//     if(data === undefined || data.length == 0){\n//       return '';\n//     }\n//     else {\n\n//       this.assetListData.map(obj=> {\n//         if(obj.assetId == asset.assetId){\n//           obj.vendorTypeName = data[0].vendorName;\n//         }\n//       });\n\n//       return data[0].vendorName;\n//     }\n//   }\n\n//   getAssetCategory(){\n//     if(this.assetCategoryId != \"All\"){\n//       this.router.navigateByUrl('/ams/assets/view/'+parseInt(this.assetCategoryId));\n//     }\n//     else {\n//       this.router.navigate(['/ams/assets/view/']);\n//     }\n//   }\n\n//   getAssetCategoryData(id){\n\n//     this.isAssetLoaded = false;\n\n//     _.each(this.assetCategoryData, (item, index) => {\n//       if(id != \"All\"){\n//         if(item.lookupValueId == parseInt(id)){\n//           this.assetCategoryName = item.lookupValueName;\n//         }\n//       }\n//       else {\n//         this.assetCategoryName = \"\";\n//       }\n//     });\n\n//     let params = {\n//       apartmentId: this.sessionService.apartmentId\n//     }\n\n//     this.assetService.getAllAssetByApartmentId(params).subscribe((res:any) => {\n\n//       if(id != \"All\"){\n//         this.assetListData = res.filter(item => {\n//           return (item.assetCategoryId == parseInt(id)) && item.isActive\n//         });\n//       }\n//       else {\n//         this.assetListData = res.filter(item => {\n//           return item.isActive\n//         })\n//       }\n\n//       this.totalItems = this.assetListData.length;\n\n//       if(this.totalItems>this.itemLimit){\n//         this.ItemEndIndex = this.itemLimit;\n//       }\n//       else {\n//         this.ItemEndIndex = this.totalItems;\n//       }\n\n//       this.isAssetLoaded = true;\n\n//     });\n\n//   }\n\n//   showMaintenanceHistory(id){\n\n//     this.dialog.open(AssetsMaintenanceHistoryComponent, {\n//       panelClass: [ 'material', 'medium-02' ],\n//       disableClose: true,\n//       data: id\n//     });\n\n//   }\n\n//   isMaintenanceAvailable(id){\n    \n//     var data = _.filter( this.assetMaintenaceDataList, function( item ) {\n//       if(item.assetId === id)\n//         return item;\n//     });\n\n//     if(data === undefined || data.length == 0){\n//       return false;\n//     }\n//     else {\n//       return true;\n//     }\n\n//   }\n\n//   isMaintenanceDue(id){\n    \n//     var data = _.filter( this.assetMaintenaceDataList, function( item ) {\n//       if(item.assetId === id)\n//         return item;\n//     });\n\n//     if(data === undefined || data.length == 0){\n//       return false;\n//     }\n//     else {\n//      var check = _.some(data, item => {\n//         return item.maintenanceStatusId == 273\n//       });\n//       return check ? true : false;\n//     }\n\n//   }\n\n\n//   ngOnInit() {\n\n//   \tthis.asset = {};\n\n//     if(this.route.params['value'].id == undefined) {\n      \n//       this.assetCategoryId = \"All\"; \n\n//       let params = {\n//         apartmentId: this.sessionService.apartmentId\n//       }\n    \n//       this.assetService.getAllAssetByApartmentId(params).subscribe((res:any) => {\n\n//         this.isAssetLoaded = false;\n\n//         this.assetListData = res.filter(item => {\n//           return item.isActive\n//         })\n\n//         this.totalItems = this.assetListData.length;\n\n//         if(this.totalItems>this.itemLimit){\n//           this.ItemEndIndex = this.itemLimit;\n//         }\n//         else {\n//           this.ItemEndIndex = this.totalItems;\n//         }\n\n//         this.isAssetLoaded = true;\n\n//       });\n\n\n//     }\n//     else {\n//       this.assetCategoryId = \"\"+this.route.params['value'].id; \n//     }\n\n//     let assetContparams = {\n//       LookupTypeId: 23\n//     }\n\n//     //asset condition\n//     this.lookupService.getLookupValueByLookupTypeId(assetContparams).subscribe((res:any) => {\n\n//       this.assetConditionData = res.filter(item => {\n//           return item.isActive;\n//       });\n\n//     });\n\n//     let vendorParams = {\n//       apartmentId: this.sessionService.apartmentId\n//     }\n\n//     this.vendorService.getVendorByApartmentId(vendorParams).subscribe((res:any) => {\n\n//       this.vendorDataList = res.filter(item => {\n//         return item.isActive;\n//       });\n\n//     });\n\n//     let assetParams = {\n//       apartmentId: this.sessionService.apartmentId\n//     }\n\n//     this.assetService.getAllAssetMaintenancePlanByApartmentId(assetParams).subscribe((res:any) => {\n\n//       this.assetMaintenaceDataList = res.filter(item => {\n//         return item.isActive;\n//       })\n\n//     })\n\n//     let statusparams = {\n//       LookupTypeId: 64\n//     }\n\n//     this.lookupService.getLookupValueByLookupTypeId(statusparams).subscribe((res:any) => {\n//       this.statusTypeData = res;\n//     },\n//     error => {\n\n//     });\n\n\n//     // delete item\n//     this.sharedService.unitlistdeleteindexcast.subscribe( id => {\n\n//       if(id != null){\n\n//         var params = {\n//           assetId: id,\n//           deleteBy: parseInt(this.sessionService.userId)\n//         }\n\n//         this.assetService.deleteAsset(params).subscribe((res:any) => {\n\n//           _.each(this.assetListData, (type)=>{\n//             if(type.assetId == id){\n//               type.isActive = false;\n//             }\n//           })\n\n//           setTimeout(() => {\n\n//             this.assetListData = this.assetListData.filter((type) => type.assetId !== id);\n//             this.totalItems = this.assetListData.length;\n//             this.sharedService.setAlertMessage(\"Asset deleted\");\n//             this.sharedService.setUnitListDeleteIndex(null);\n\n//           }, 500)\n\n\n//         }, error => {\n//         });\n\n        \n//       }\n\n//     });\n\n\n//   }\n\n\n//   navigateToAddMaintenance(row) {\n//     this.router.navigate( ['/ams/assets/create-maintenance'], { queryParams: { assetId: row.assetId,type:'ADD'}});\n//   }\n\n// }\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nimport { CondoCardModule } from 'src/app/modules/ui/card/card.module';\n\nimport { AssetsViewRoutingModule } from './assets-view-routing.module';\n\nimport { AssetsViewComponent } from './assets-view.component';\n\n\n@NgModule({\n  declarations: [AssetsViewComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    CondoCardModule,\n    AssetsViewRoutingModule\n  ],\n  bootstrap: [\n    AssetsViewComponent\n  ]\n})\nexport class AssetsViewModule { }\n"]}