{"version":3,"sources":["webpack:///src/app/modules/ams/parcel-delivery/components/create-package/create-package.component.html","webpack:///src/app/modules/ams/parcel-delivery/components/delivery-history/delivery-history.component.html","webpack:///src/app/modules/ams/parcel-delivery/components/delivery-setup/delivery-setup.component.html","webpack:///src/app/modules/ams/parcel-delivery/components/pending-delivery/pending-delivery.component.html","webpack:///src/app/modules/ams/parcel-delivery/components/create-package/create-package.component.scss","webpack:///src/app/modules/ams/parcel-delivery/components/create-package/create-package.component.ts","webpack:///src/app/modules/ams/parcel-delivery/components/delivery-history/delivery-history.component.scss","webpack:///src/app/modules/ams/parcel-delivery/components/delivery-history/delivery-history.component.ts","webpack:///src/app/modules/ams/parcel-delivery/components/delivery-setup/delivery-setup.component.scss","webpack:///src/app/modules/ams/parcel-delivery/components/delivery-setup/delivery-setup.component.ts","webpack:///src/app/modules/ams/parcel-delivery/components/pending-delivery/pending-delivery.component.scss","webpack:///src/app/modules/ams/parcel-delivery/components/pending-delivery/pending-delivery.component.ts","webpack:///src/app/modules/ams/parcel-delivery/parcel-delivery.module.ts","webpack:///src/app/modules/ams/parcel-delivery/parcel-routing.module.ts"],"names":["CreatePackageComponent","router","route","staffService","packageService","lookupService","apartmentService","sessionService","isEdit","isError","isPackageCreated","params","apartmentId","form","package_data","packageData","BlockUnitId","Type","Slot","Deliverytype","Date","toISOString","Staff","Comments","parseInt","userId","utilityTrackerElectricityPeriod","addPackage","subscribe","package_res","getAllStaffsByApartmentId","res","staffListData","filter","data","isActive","packgeTypeParams","LookupTypeId","getLookupValueByLookupTypeId","packageTypes","item","error","deliveryTypeParams","deliveryTypes","deliveryStatusParams","deliveryStatus","deliverySlotParams","deliverySlots","receiverTypeParams","receiverType","selector","template","DeliveryHistoryComponent","sharedService","utilityTrackerService","isDeliveryHistoryLoaded","unitFieldType","unitOrder","ItemStartIndex","itemLimit","selectedInput","columnField","event","ItemEndIndex","type","value","window","innerWidth","totalItems","DeliverySetupComponent","isDeliveryCategoryLoaded","isDeliveryCategoryNew","isDeliveryCategoryUpdate","isDeliveryCategorySubmitted","PendingDeliveryComponent","isPendingDeliveryLoaded","ParcelDeliveryModule","declarations","imports","routes","path","component","ParcelRoutingModule","forChild","exports"],"mappings":"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","file":"modules-ams-parcel-delivery-parcel-delivery-module-es5.js","sourcesContent":["export default \"<div class=\\\"vendor-create-wrapper\\\">\\n\\n  <app-alert-message [message]=\\\"errorMessage\\\" [isAlert]=\\\"isError\\\"></app-alert-message>\\n  <form #createPackageForm=\\\"ngForm\\\" name=\\\"createPackageForm\\\" (ngSubmit)=\\\"submitPackageForm(createPackageForm)\\\" novalidate>\\n    <h4 class=\\\"main-title-mini float-left mt-3\\\">\\n      <span>Create Delivery</span>\\n    </h4>\\n\\n    <div class=\\\"card ov clear\\\">\\n\\n      <div class=\\\"card-body ov\\\">\\n\\n        <app-loader *ngIf=\\\"!isPackageCreated\\\"></app-loader>\\n\\n        <app-alert-message [message]=\\\"alertMessage\\\" [isError]=\\\"isError\\\"></app-alert-message>\\n\\n        <ng-container *ngIf=\\\"isPackageCreated\\\">\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box radio-box\\\">\\n                <label>Receiver Type<span class=\\\"mandatory\\\">*</span></label>\\n                <div  *ngFor=\\\"let item of receiverType; let i = index;\\\" class=\\\"form-group\\\">\\n                  <input name=\\\"receiverType{{i}}\\\" id=\\\"receiverType{{i}}\\\" [(ngModel)]=\\\"packageData.ReceiverType\\\" [value]=\\\"item.lookupValueId\\\" type=\\\"radio\\\" required>\\n                  <label class=\\\"radio-inline\\\" for=\\\"receiverType{{i}}\\\">{{item.lookupValueName}}</label>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                <label>Block unit user id<span class=\\\"mandatory\\\">*</span></label>\\n                <input type=\\\"text\\\" [disabled]=false class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"BlockUnitId\\\" [(ngModel)]=\\\"packageData.BlockUnitId\\\" required>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                <label>Type<span class=\\\"mandatory\\\">*</span></label>\\n                <select name=\\\"packageType\\\" id=\\\"packageType\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"packageData.Type\\\" required>\\n                  <option value=\\\"\\\" disabled selected >Select</option>\\n                  <option *ngFor=\\\"let item of packageTypes\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n                </select>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                <label>Delivery Type<span class=\\\"mandatory\\\">*</span></label>\\n                <select name=\\\"packageDType\\\" id=\\\"packageDType\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"packageData.Deliverytype\\\" required>\\n                  <option value=\\\"\\\" disabled selected >Select</option>\\n                  <option *ngFor=\\\"let item of deliveryTypes\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n                </select>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                <label>Assign to staff<span class=\\\"mandatory\\\">*</span></label>\\n                <select name=\\\"packageAssignStaff\\\" id=\\\"packageAssignStaff\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"packageData.Staff\\\" required>\\n                  <option value=\\\"\\\" disabled selected>Select</option>\\n                  <option *ngFor=\\\"let staff of staffListData\\\" [value]=\\\"staff.staffId\\\">{{ staff.firstName }}</option>\\n                </select>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                <label>Slot<span class=\\\"mandatory\\\">*</span></label>\\n                <select name=\\\"packageSlot\\\" id=\\\"packageSlot\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"packageData.Slot\\\" required>\\n                  <option value=\\\"\\\" disabled selected >Select</option>\\n                  <option *ngFor=\\\"let item of deliverySlots\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n                </select>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                <label>Scan image<span class=\\\"mandatory\\\">*</span></label><br>\\n                <a class=\\\"link\\\">upload package image</a>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                <label>Comments /Package count</label>\\n                <textarea placeholder=\\\"some text here\\\" name=\\\"packageComments\\\" [(ngModel)]=\\\"packageData.Comments\\\"></textarea>\\n              </div>\\n            </div>\\n          </div>\\n        </ng-container>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n        <div class=\\\"list-inline float-right mt-4\\\">\\n          <button class=\\\"btn blue mr-2\\\" [disabled]=\\\"createPackageForm.invalid\\\" *ngIf=\\\"!isEdit\\\">Submit</button>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n\\n</div>\\n\";","export default \"<div class=\\\"inventory-view-wrapper\\\">\\n\\n\\n\\t<div class=\\\"card table-card\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All Delivery <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"utilitySearch\\\" >\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n    \\t\\t\\t\\t<a class=\\\"btn trans-white mt_5\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Print</span>\\n    \\t\\t\\t\\t</a>\\n    \\t\\t\\t</li>\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n\\n  \\t\\t<app-loader *ngIf=\\\"!isDeliveryHistoryLoaded\\\"></app-loader>\\n\\n  \\t\\t<div class=\\\"card-body p-0\\\">\\n\\n  \\t\\t\\t<ng-container *ngIf=\\\"isDeliveryHistoryLoaded\\\">\\n\\n  \\t\\t\\t\\t<table class=\\\"table table-checker table-resizable\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">PackageNo\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('fromDate')\\\" [ngClass]=\\\"getFieldOrderBy('fromDate')\\\"></span>\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">SlotNo\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('toDate')\\\" [ngClass]=\\\"getFieldOrderBy('toDate')\\\"></span>\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">BlockunitUser\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('preReading')\\\" [ngClass]=\\\"getFieldOrderBy('preReading')\\\"></span>\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">Status\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('currReading')\\\" [ngClass]=\\\"getFieldOrderBy('currReading')\\\"></span>\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">Last updated\\n                  <span (click)=\\\"sortUnitData('aptUnit')\\\" [ngClass]=\\\"getFieldOrderBy('aptUnit')\\\"></span>\\n\\t\\t\\t\\t\\t\\t  </th>\\n\\t\\t\\t\\t\\t    </tr>\\n\\t\\t\\t\\t    </thead>\\n\\t\\t\\t\\t    <!-- <tbody>\\n\\t\\t\\t\\t\\t    <tr *ngFor=\\\"let utility of utilityElecteicalListData | simpleSearch: utilitySearch | columnSearch: columnField:selectedInput | sort : unitFieldType: unitOrder | slice:ItemStartIndex:ItemEndIndex ; let i = index\\\" [ngClass]=\\\"utility.isActive ? '' : 'notactive'\\\">\\n\\t\\t\\t\\t\\t      <td class=\\\"name\\\">{{getUtilityFromPeriod(utility.utilityTrackerElectricityChargeId)}}</td>\\n\\t\\t\\t\\t\\t      <td class=\\\"grey\\\">{{getUtilityToPeriod(utility.utilityTrackerElectricityChargeId)}}</td>\\n\\t\\t\\t\\t\\t      <td class=\\\"grey\\\">{{utility.prevReading}}</td>\\n                <td class=\\\"grey\\\">{{utility.currReading}}</td>\\n                <td class=\\\"grey\\\">{{utility.electricalUnitPerAptUnit}}</td>\\n                <td class=\\\"grey\\\">{{utility.costPerAptUnit}}</td>\\n                <td class=\\\"grey\\\">{{utility.insertedByUser}}</td>\\n\\t\\t\\t\\t\\t      <td>\\n\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t    </tr>\\n\\t\\t\\t\\t    </tbody> -->\\n\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t<div class=\\\"button-wrapper border-top\\\" *ngIf=\\\"isNoItemsAvailable()\\\">\\n\\t    \\t\\t\\t<p class=\\\"snippet\\\">No Records Found</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<app-pagination\\n\\t\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"\\n\\t\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\n\\t\\t\\t\\t</app-pagination>\\n\\n  \\t\\t\\t</ng-container>\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n\\n</div>\\n\";","export default \"<div class=\\\"vendors-setup-wrapper\\\">\\n\\n\\t<app-loader *ngIf=\\\"!isDeliveryCategoryLoaded\\\"></app-loader>\\n\\n\\t<div class=\\\"category-list list-boxes\\\" *ngIf=\\\"isDeliveryCategoryLoaded\\\">\\n\\t\\t<h4 class=\\\"main-title-mini\\\">Delivery Categories</h4>\\n\\t\\t<!-- <ng-container *ngFor=\\\"let item of utilityCategoryData; let i = index\\\">\\n\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"card-body nohover\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"icons\\\">\\n\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\"><i-feather class=\\\"icon edit\\\" name=\\\"edit\\\" (click)=\\\"updateDeliveryCategory(item, i)\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\"><i-feather class=\\\"icon del\\\" name=\\\"x\\\" (click)=\\\"showRemoveCategoryConfirmModal(item)\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<h6>{{item.category}}</h6>\\n\\t\\t\\t\\t\\t\\t<p class=\\\"float-left\\\">{{item.ratePerUnit}} per unit</p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</li>\\n\\t\\t</ng-container> -->\\n\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t<div class=\\\"card-body new text-center\\\">\\n\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" class=\\\"rounded-btn green\\\" (click)=\\\"addNewDeliveryCategory()\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"icon\\\">+</div>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t<h6 class=\\\"tc-green\\\">Add New Category</h6>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</li>\\n\\t</div>\\n\\n\\t<div class=\\\"card mt-30\\\" *ngIf=\\\"isDeliveryCategoryNew || isDeliveryCategoryUpdate\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h6 *ngIf=\\\"isDeliveryCategoryNew\\\">Add Delivery Category</h6>\\n    \\t\\t\\t<h6 *ngIf=\\\"!isDeliveryCategoryNew\\\">Update Delivery Category</h6>\\n    \\t\\t</div>\\n    \\t\\t<div class=\\\"float-right\\\" (click)=\\\"removeCategoryBox()\\\">\\n    \\t\\t\\t<i-feather class=\\\"icon del\\\" name=\\\"x\\\"></i-feather>\\n    \\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card-body\\\">\\n\\n\\t\\t\\t<app-alert-message [message]=\\\"alertMessage\\\" [isError]=\\\"isError\\\"></app-alert-message>\\n\\n\\t\\t\\t<app-loader *ngIf=\\\"!isDeliveryCategorySubmitted\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"isDeliveryCategorySubmitted\\\">\\n\\n\\t\\t\\t\\t<form #addDeliveryCategoryForm = \\\"ngForm\\\" name=\\\"addDeliveryCategoryForm\\\" (ngSubmit)=\\\"showConfirmModal(addDeliveryCategoryForm)\\\"  novalidate>\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Delivery Type<span class=\\\"mandatory\\\">*</span></label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"DeliveryCategory\\\" [(ngModel)]=\\\"DeliveryCategory\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n            <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                          <label>Description<span class=\\\"mandatory\\\">*</span></label>\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"DeliveryCategory\\\" [(ngModel)]=\\\"DeliveryDescription\\\" required>\\n                      </div>\\n            </div>\\n\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline float-right\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addDeliveryCategoryForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t</div>\\n\\t</div>\\n\\n</div>\\n\";","export default \"<div class=\\\"inventory-view-wrapper\\\">\\n\\n\\n\\t<div class=\\\"card table-card\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>Pending Delivery <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"utilitySearch\\\" >\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n    \\t\\t\\t\\t<a class=\\\"btn trans-white mt_5\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Print</span>\\n    \\t\\t\\t\\t</a>\\n    \\t\\t\\t</li>\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n\\n  \\t\\t<app-loader *ngIf=\\\"!isPendingDeliveryLoaded\\\"></app-loader>\\n\\n  \\t\\t<div class=\\\"card-body p-0\\\">\\n\\n  \\t\\t\\t<ng-container *ngIf=\\\"isPendingDeliveryLoaded\\\">\\n\\n  \\t\\t\\t\\t<table class=\\\"table table-checker table-resizable\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">PackageNo\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('fromDate')\\\" [ngClass]=\\\"getFieldOrderBy('fromDate')\\\"></span>\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">SlotNo\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('toDate')\\\" [ngClass]=\\\"getFieldOrderBy('toDate')\\\"></span>\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">BlockunitUser\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('preReading')\\\" [ngClass]=\\\"getFieldOrderBy('preReading')\\\"></span>\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">Ageing\\n                  <span (click)=\\\"sortUnitData('aptUnit')\\\" [ngClass]=\\\"getFieldOrderBy('aptUnit')\\\"></span>\\n\\t\\t\\t\\t\\t\\t  </th>\\n\\t\\t\\t\\t\\t    </tr>\\n\\t\\t\\t\\t    </thead>\\n\\t\\t\\t\\t    <!-- <tbody>\\n\\t\\t\\t\\t\\t    <tr *ngFor=\\\"let utility of utilityElecteicalListData | simpleSearch: utilitySearch | columnSearch: columnField:selectedInput | sort : unitFieldType: unitOrder | slice:ItemStartIndex:ItemEndIndex ; let i = index\\\" [ngClass]=\\\"utility.isActive ? '' : 'notactive'\\\">\\n\\t\\t\\t\\t\\t      <td class=\\\"name\\\">{{getUtilityFromPeriod(utility.utilityTrackerElectricityChargeId)}}</td>\\n\\t\\t\\t\\t\\t      <td class=\\\"grey\\\">{{getUtilityToPeriod(utility.utilityTrackerElectricityChargeId)}}</td>\\n\\t\\t\\t\\t\\t      <td class=\\\"grey\\\">{{utility.prevReading}}</td>\\n                <td class=\\\"grey\\\">{{utility.currReading}}</td>\\n                <td class=\\\"grey\\\">{{utility.electricalUnitPerAptUnit}}</td>\\n                <td class=\\\"grey\\\">{{utility.costPerAptUnit}}</td>\\n                <td class=\\\"grey\\\">{{utility.insertedByUser}}</td>\\n\\t\\t\\t\\t\\t      <td>\\n\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t    </tr>\\n\\t\\t\\t\\t    </tbody> -->\\n\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t<div class=\\\"button-wrapper border-top\\\" *ngIf=\\\"isNoItemsAvailable()\\\">\\n\\t    \\t\\t\\t<p class=\\\"snippet\\\">No Records Found</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<app-pagination\\n\\t\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"\\n\\t\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\n\\t\\t\\t\\t</app-pagination>\\n\\n  \\t\\t\\t</ng-container>\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n\\n</div>\\n\";","export default \".mandatory {\\n  color: red;\\n  font-size: 16px;\\n}\\n\\n.link {\\n  color: skyblue;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9hbXMvcGFyY2VsLWRlbGl2ZXJ5L2NvbXBvbmVudHMvY3JlYXRlLXBhY2thZ2UvY3JlYXRlLXBhY2thZ2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFBO0VBQ0EsZUFBQTtBQUNGOztBQUVBO0VBQ0UsY0FBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9hbXMvcGFyY2VsLWRlbGl2ZXJ5L2NvbXBvbmVudHMvY3JlYXRlLXBhY2thZ2UvY3JlYXRlLXBhY2thZ2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFuZGF0b3J5e1xuICBjb2xvcjogcmVkO1xuICBmb250LXNpemU6IDE2cHg7XG59XG5cbi5saW5re1xuICBjb2xvcjogc2t5Ymx1ZTtcbn1cbiJdfQ== */\";","import { Component, OnInit,Output, EventEmitter } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { StaffService } from 'src/app/api/controllers/Staff';\nimport { PackageService } from 'src/app/api/controllers/Package';\n\nimport { LookupService } from 'src/app/api/controllers/Lookup';\n//import { SharedService } from 'src/app/api/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\n\n@Component({\n  selector: 'app-create-package',\n  templateUrl: './create-package.component.html',\n  styleUrls: ['./create-package.component.scss']\n})\nexport class CreatePackageComponent implements OnInit {\n\n  isEdit: boolean = false;\n  isError: boolean = false;\n  isPackageCreated:  boolean = true;\n  packageData: any;\n  staffListData: any;\n  packageTypes: any;\n  deliveryTypes: any;\n  deliveryStatus: any;\n  deliverySlots: any;\n  receiverType: any;\n\n  public params = {\n\t\tapartmentId: this.sessionService.apartmentId\n\t  }\n\n  constructor(  private router: Router,\n    private route: ActivatedRoute,\n    private staffService:StaffService,\n    private packageService:PackageService,\n    private lookupService: LookupService,\n    private apartmentService: ApartmentService,\n    //private sharedService:SharedService,\n    private sessionService:SessionService) { }\n\n\n    submitPackageForm(form){\n\n        let package_data = {\n\n          \"apartmentId\": this.sessionService.apartmentId,\n          \"apartmentBlockUnitId\":this.packageData.BlockUnitId,\n          \"packageTypeId\": this.packageData.Type,\n          \"slot\": this.packageData.Slot,\n          \"deliveryTypeId\": this.packageData.Deliverytype,\n          \"deliveryDate\": new Date().toISOString(),\n          \"assignedTo\": this.packageData.Staff,\n          \"description\": this.packageData.Comments,\n          \"receivedBy\": parseInt(this.sessionService.userId),\n          \"deliveryStatusId\": 986,\n          \"isActive\": true,\n          \"insertedBy\": parseInt(this.sessionService.userId),\n          \"insertedOn\": new Date().toISOString(),\n          \"updatedBy\": 0,\n          \"updatedOn\": null\n        }\n        let params:any = {\n          utilityTrackerElectricityPeriod: package_data\n        }\n\n        this.packageService.addPackage(params ).subscribe((package_res:any) =>{\n\n        })\n    }\n\n  ngOnInit(): void {\n    this.packageData = {};\n    this.packageData.Deliverytype = \"\";\n    this.packageData.Staff = \"\";\n    this.packageData.Slot = \"\"\n    this.packageData.Slot = \"\";\n\n    //staff type\n    this.staffService.getAllStaffsByApartmentId(this.params).subscribe((res:any) => {\n    this.staffListData = res.filter(data => {\n      return data.isActive\n    });\n    });\n\n\n    let packgeTypeParams = {\n      LookupTypeId: 169\n    }\n    this.lookupService.getLookupValueByLookupTypeId(packgeTypeParams).subscribe((res:any) => {\n\n       this.packageTypes = res.filter( item => {\n          return item.isActive;\n       });\n    },\n    error => {\n    });\n\n\n    let deliveryTypeParams = {\n      LookupTypeId: 170\n    }\n    this.lookupService.getLookupValueByLookupTypeId(packgeTypeParams).subscribe((res:any) => {\n\n       this.deliveryTypes = res.filter( item => {\n          return item.isActive;\n       });\n    },\n    error => {\n    });\n\n\n    let deliveryStatusParams = {\n      LookupTypeId: 171\n    }\n    this.lookupService.getLookupValueByLookupTypeId(packgeTypeParams).subscribe((res:any) => {\n\n       this.deliveryStatus = res.filter( item => {\n          return item.isActive;\n       });\n    },\n    error => {\n    });\n\n\n    let deliverySlotParams = {\n      LookupTypeId: 171\n    }\n    this.lookupService.getLookupValueByLookupTypeId(packgeTypeParams).subscribe((res:any) => {\n\n       this.deliverySlots = res.filter( item => {\n          return item.isActive;\n       });\n    },\n    error => {\n    });\n\n    let receiverTypeParams = {\n      LookupTypeId: 182\n    }\n    this.lookupService.getLookupValueByLookupTypeId(receiverTypeParams).subscribe((res:any) => {\n\n       this.receiverType = res.filter( item => {\n          return item.isActive;\n       });\n    },\n    error => {\n    });\n\n  }\n\n}\n","export default \".mandatory {\\n  color: red;\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9hbXMvcGFyY2VsLWRlbGl2ZXJ5L2NvbXBvbmVudHMvZGVsaXZlcnktaGlzdG9yeS9kZWxpdmVyeS1oaXN0b3J5LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBQTtFQUNBLGVBQUE7QUFDRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3BhcmNlbC1kZWxpdmVyeS9jb21wb25lbnRzL2RlbGl2ZXJ5LWhpc3RvcnkvZGVsaXZlcnktaGlzdG9yeS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYW5kYXRvcnl7XG4gIGNvbG9yOiByZWQ7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cbiJdfQ== */\";","import { Component, OnInit, Injector } from '@angular/core';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { ModalService } from 'src/app/shared/services/modal.service';\n\nimport * as _ from 'underscore';\n@Component({\n  selector: 'app-delivery-history',\n  templateUrl: './delivery-history.component.html',\n  styleUrls: ['./delivery-history.component.scss']\n})\nexport class DeliveryHistoryComponent implements OnInit {\n\n  isDeliveryHistoryLoaded:boolean = true;\n  allParcelDelivey: any\n\n  unitFieldType:string = \"deliveryName\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n  totalFilterItems:any;\n\n  selectedInput:string = \"\";\n  columnField: any = {}\n\n  modalService:any;\n\n  constructor(\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private utilityTrackerService:UtilityTrackerService,\n    private sessionService:SessionService\n  ) {\n\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  selectColInput(value){\n    this.selectedInput = value;\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  isNoItemsAvailable(){\n    return this.totalItems == 0 ? true : false;\n  }\n\n  ngOnInit(): void {\n      this.ItemEndIndex = 0;\n  }\n\n\n}\n","export default \".mandatory {\\n  color: red;\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9hbXMvcGFyY2VsLWRlbGl2ZXJ5L2NvbXBvbmVudHMvZGVsaXZlcnktc2V0dXAvZGVsaXZlcnktc2V0dXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFBO0VBQ0EsZUFBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9hbXMvcGFyY2VsLWRlbGl2ZXJ5L2NvbXBvbmVudHMvZGVsaXZlcnktc2V0dXAvZGVsaXZlcnktc2V0dXAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFuZGF0b3J5e1xuICBjb2xvcjogcmVkO1xuICBmb250LXNpemU6IDE2cHg7XG59XG4iXX0= */\";","import { Component, OnInit,Output, EventEmitter } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\n\nimport { LookupService } from 'src/app/api/controllers/Lookup';\n//import { SharedService } from 'src/app/api/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\n\n@Component({\n  selector: 'app-delivery-setup',\n  templateUrl: './delivery-setup.component.html',\n  styleUrls: ['./delivery-setup.component.scss']\n})\nexport class DeliverySetupComponent implements OnInit {\n\n  isEdit: boolean = false;\n  isError: boolean = false;\n  isDeliveryCategoryLoaded:  boolean = true;\n  isDeliveryCategoryNew:  boolean = false;\n  isDeliveryCategoryUpdate: boolean = false;\n  isDeliveryCategorySubmitted: boolean = true;\n  packageData: any;\n\n  DeliveryCategory: any;\n  DeliveryDescription: any;\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  addNewDeliveryCategory(){\n    this.isDeliveryCategoryNew = true;\n    this.isDeliveryCategoryUpdate = true;\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3BhcmNlbC1kZWxpdmVyeS9jb21wb25lbnRzL3BlbmRpbmctZGVsaXZlcnkvcGVuZGluZy1kZWxpdmVyeS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, Injector } from '@angular/core';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { ModalService } from 'src/app/shared/services/modal.service';\nimport { PackageService } from 'src/app/api/controllers/Package';\n\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-pending-delivery',\n  templateUrl: './pending-delivery.component.html',\n  styleUrls: ['./pending-delivery.component.scss']\n})\nexport class PendingDeliveryComponent implements OnInit {\n\n  isPendingDeliveryLoaded:boolean = true;\n  allParcelDelivey: any\n\n  unitFieldType:string = \"deliveryName\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n  totalFilterItems:any;\n\n  selectedInput:string = \"\";\n  columnField: any = {}\n  public params = {\n    apartmentId: this.sessionService.apartmentId\n    }\n\n  modalService:any;\n\n  constructor(\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private packageService:PackageService,\n    private utilityTrackerService:UtilityTrackerService,\n    private sessionService:SessionService\n  ) {\n\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  selectColInput(value){\n    this.selectedInput = value;\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  isNoItemsAvailable(){\n    return this.totalItems == 0 ? true : false;\n  }\n\n  ngOnInit(): void {\n      this.ItemEndIndex = 0;\n      // this.packageService.getAllPendingDeliveries()subscribe((package_res:any) =>{\n      //\n      // })\n  }\n\n\n  }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ParcelRoutingModule } from './parcel-routing.module';\n\nimport { CreatePackageComponent } from './components/create-package/create-package.component';\nimport { DeliveryHistoryComponent } from './components/delivery-history/delivery-history.component';\nimport { DeliverySetupComponent } from './components/delivery-setup/delivery-setup.component';\nimport { PendingDeliveryComponent } from './components/pending-delivery/pending-delivery.component';\n\n\n@NgModule({\n  declarations: [\n    CreatePackageComponent,\n    DeliveryHistoryComponent,\n    DeliverySetupComponent,\n    PendingDeliveryComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    ParcelRoutingModule\n  ]\n})\nexport class ParcelDeliveryModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nimport { CreatePackageComponent } from './components/create-package/create-package.component';\nimport { DeliveryHistoryComponent } from './components/delivery-history/delivery-history.component';\nimport { DeliverySetupComponent } from './components/delivery-setup/delivery-setup.component';\nimport { PendingDeliveryComponent } from './components/pending-delivery/pending-delivery.component';\n\nconst routes: Routes = [\n\t{ path: 'create-package', component: CreatePackageComponent},\n\t{ path: 'delivery-history', component: DeliveryHistoryComponent},\n  { path: 'delivery-manage', component: DeliveryHistoryComponent},\n  { path: 'delivery-pending', component: PendingDeliveryComponent},\n\t{ path: 'delivery-setup', component: DeliverySetupComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\n\nexport class ParcelRoutingModule { }\n"]}