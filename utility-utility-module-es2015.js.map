{"version":3,"sources":["./src/app/ams/utility/components/utility-add-reading/add-insurance/add-insurance.component.html","./src/app/ams/utility/components/utility-add-reading/electricity-reading/electricity-reading.component.html","./src/app/ams/utility/components/utility-add-reading/utility-add-reading.component.html","./src/app/ams/utility/components/utility-add-reading/water-reading/tower-reading-info/tower-reading-info.component.html","./src/app/ams/utility/components/utility-add-reading/water-reading/tower-reading-info/unit-reading-info/unit-reading-info.component.html","./src/app/ams/utility/components/utility-add-reading/water-reading/water-reading.component.html","./src/app/ams/utility/components/utility-history/utility-history.component.html","./src/app/ams/utility/components/utility-reports/electricity-report/electricity-report.component.html","./src/app/ams/utility/components/utility-reports/insurance-report/insurance-report.component.html","./src/app/ams/utility/components/utility-reports/utility-reports.component.html","./src/app/ams/utility/components/utility-reports/water-report/water-report.component.html","./src/app/ams/utility/components/utility-setup/utility-setup.component.html","./src/app/ams/utility/utility.component.html","./src/app/ams/utility/components/utility-add-reading/add-insurance/add-insurance.component.scss","./src/app/ams/utility/components/utility-add-reading/add-insurance/add-insurance.component.ts","./src/app/ams/utility/components/utility-add-reading/electricity-reading/electricity-reading.component.scss","./src/app/ams/utility/components/utility-add-reading/electricity-reading/electricity-reading.component.ts","./src/app/ams/utility/components/utility-add-reading/utility-add-reading.component.scss","./src/app/ams/utility/components/utility-add-reading/utility-add-reading.component.ts","./src/app/ams/utility/components/utility-add-reading/water-reading/tower-reading-info/tower-reading-info.component.scss","./src/app/ams/utility/components/utility-add-reading/water-reading/tower-reading-info/tower-reading-info.component.ts","./src/app/ams/utility/components/utility-add-reading/water-reading/tower-reading-info/unit-reading-info/unit-reading-info.component.scss","./src/app/ams/utility/components/utility-add-reading/water-reading/tower-reading-info/unit-reading-info/unit-reading-info.component.ts","./src/app/ams/utility/components/utility-add-reading/water-reading/water-reading.component.scss","./src/app/ams/utility/components/utility-add-reading/water-reading/water-reading.component.ts","./src/app/ams/utility/components/utility-history/utility-history.component.scss","./src/app/ams/utility/components/utility-history/utility-history.component.ts","./src/app/ams/utility/components/utility-reports/electricity-report/electricity-report.component.scss","./src/app/ams/utility/components/utility-reports/electricity-report/electricity-report.component.ts","./src/app/ams/utility/components/utility-reports/insurance-report/insurance-report.component.scss","./src/app/ams/utility/components/utility-reports/insurance-report/insurance-report.component.ts","./src/app/ams/utility/components/utility-reports/utility-reports.component.scss","./src/app/ams/utility/components/utility-reports/utility-reports.component.ts","./src/app/ams/utility/components/utility-reports/water-report/water-report.component.scss","./src/app/ams/utility/components/utility-reports/water-report/water-report.component.ts","./src/app/ams/utility/components/utility-setup/utility-setup.component.scss","./src/app/ams/utility/components/utility-setup/utility-setup.component.ts","./src/app/ams/utility/utility-routing.module.ts","./src/app/ams/utility/utility.component.scss","./src/app/ams/utility/utility.component.ts","./src/app/ams/utility/utility.module.ts"],"names":[],"mappings":"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","file":"utility-utility-module-es2015.js","sourcesContent":["export default \"<div class=\\\"vendor-create-wrapper\\\">\\n\\n      <app-alert-message [message]=\\\"errorMessage\\\" [isAlert]=\\\"isError\\\"></app-alert-message>\\n      <form #createInsuranceChargeForm = \\\"ngForm\\\" name=\\\"createInsuranceChargeForm\\\" (ngSubmit)=\\\"submitInsuranceChargeForm(createInsuranceChargeForm)\\\"  novalidate>\\n        <h4 class=\\\"main-title-mini float-left mt-3\\\">\\n          <span>Add Insurance</span>\\n        </h4>\\n\\n        <div class=\\\"card ov clear\\\">\\n\\n          <div class=\\\"card-body ov\\\">\\n\\n            <app-loader *ngIf=\\\"!isInsuranceSubmitted\\\"></app-loader>\\n\\n            <app-alert-message [message]=\\\"alertMessage\\\" [isError]=\\\"isError\\\" ></app-alert-message>\\n\\n        <ng-container *ngIf=\\\"isInsuranceSubmitted\\\">\\n        <div class=\\\"row\\\">\\n\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                  <label>Condo Unit count<span class=\\\"mandatory\\\">*</span></label>\\n                  <input type=\\\"text\\\" [disabled]=true class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"aptunitCount\\\" [(ngModel)]=\\\"insuranceCharge.AptunitCount\\\" required>\\n              </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                  <label>Insurance Number<span class=\\\"mandatory\\\">*</span></label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"insuranceNo\\\" [(ngModel)]=\\\"insuranceCharge.InsuranceNo\\\" required>\\n              </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                  <label>Total Cost<span class=\\\"mandatory\\\">*</span></label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" (keyup)=\\\"calculateCostPerAptFrmTotalCost($event)\\\" placeholder=\\\"Enter\\\" name=\\\"totalUnit\\\" [(ngModel)]=\\\"insuranceCharge.TotalCost\\\" required>\\n              </div>\\n          </div>\\n\\n        </div>\\n          <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                  <label>Cost per Condo<span class=\\\"mandatory\\\">*</span></label>\\n                  <input type=\\\"text\\\" [disabled]=true class=\\\"form-control\\\"  placeholder=\\\"Enter\\\" name=\\\"costPerUnit\\\" [(ngModel)]=\\\"insuranceCharge.CostPerApt\\\" required>\\n              </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"input-box mb-3\\\">\\n                        <label>Date Entered<span class=\\\"mandatory\\\">*</span></label>\\n                        <input class=\\\"form-control\\\" name=\\\"dateTaken\\\" [owlDateTime]=\\\"dateTaken\\\" [owlDateTimeTrigger]=\\\"dateTaken\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"insuranceCharge.DateEntered\\\" required>\\n              <owl-date-time #dateTaken [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n              <div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"dateTaken\\\">\\n                  <i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n                </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"input-box\\\">\\n              <label>Comments</label>\\n              <textarea placeholder=\\\"some text here\\\" name=\\\"insuranceComments\\\" [(ngModel)]=\\\"insuranceCharge.Comments\\\"></textarea>\\n            </div>\\n          </div>\\n          </div>\\n        </ng-container>\\n      </div>\\n    </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"list-inline float-right mt-4\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn blue mr-4\\\"  (click)=\\\"Cancel()\\\">Cancel</button>\\n                  <button class=\\\"btn blue mr-2\\\" [disabled]=\\\"createInsuranceChargeForm.invalid\\\" *ngIf=\\\"!isEdit\\\">Submit</button>\\n                  <button class=\\\"btn blue mr-2\\\" [disabled]=\\\"createInsuranceChargeForm.invalid\\\" *ngIf=\\\"isEdit\\\">Update</button>\\n              </div>\\n            </div>\\n          </div>\\n      </form>\\n\\n</div>\\n\"","export default \"<div class=\\\"vendor-create-wrapper\\\">\\n\\n      <app-alert-message [message]=\\\"errorMessage\\\" [isAlert]=\\\"isError\\\"></app-alert-message>\\n      <form #createElectricityReadingForm = \\\"ngForm\\\" name=\\\"createElectricityReadingForm\\\" (ngSubmit)=\\\"submitReadingForm(createElectricityReadingForm)\\\"  novalidate>\\n        <h4 class=\\\"main-title-mini float-left mt-3\\\">\\n          <span>Add Electricity Reading</span>\\n        </h4>\\n\\n        <div class=\\\"card ov clear\\\">\\n\\n          <div class=\\\"card-body ov\\\">\\n\\n            <app-loader *ngIf=\\\"!isReadingSubmitted\\\"></app-loader>\\n\\n            <app-alert-message [message]=\\\"alertMessage\\\" [isError]=\\\"isError\\\" ></app-alert-message>\\n\\n        <ng-container *ngIf=\\\"isReadingSubmitted\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"input-box mb-3\\\">\\n                        <label>From<span class=\\\"mandatory\\\">*</span></label>\\n                        <input class=\\\"form-control\\\" name=\\\"reportFrom\\\" [owlDateTime]=\\\"reportFrom\\\" [owlDateTimeTrigger]=\\\"reportFrom\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"electricReading.fromDate\\\" required>\\n              <owl-date-time #reportFrom [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n              <div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"reportFrom\\\">\\n                  <i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n                </div>\\n                </div>\\n          </div>\\n\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"input-box mb-3\\\">\\n                        <label>To<span class=\\\"mandatory\\\">*</span></label>\\n                        <input class=\\\"form-control\\\" name=\\\"reportTo\\\" [owlDateTime]=\\\"reportTo\\\" [owlDateTimeTrigger]=\\\"reportTo\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"electricReading.toDate\\\" required>\\n              <owl-date-time #reportTo [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n              <div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"reportTo\\\">\\n                  <i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n                </div>\\n                </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                  <label>Condo Unit count<span class=\\\"mandatory\\\">*</span></label>\\n                  <input type=\\\"text\\\" [disabled]=true class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"aptunitCount\\\" [(ngModel)]=\\\"electricReading.AptunitCount\\\" required>\\n              </div>\\n          </div>\\n\\n        </div>\\n          <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                  <label>Previous Reading<span class=\\\"mandatory\\\">*</span></label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" (keyup)=\\\"calculateUnitPerAptFrmPreReading($event)\\\" placeholder=\\\"Enter\\\" name=\\\"prevReading\\\" [(ngModel)]=\\\"electricReading.PrevReading\\\" required>\\n              </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                  <label>Current Reading<span class=\\\"mandatory\\\">*</span></label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" (keyup)=\\\"calculateUnitPerAptFrmCurReading($event)\\\" placeholder=\\\"Enter\\\" name=\\\"currReading\\\" [(ngModel)]=\\\"electricReading.CurrReading\\\" required>\\n              </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"input-box mb-3\\\">\\n                        <label>Date Taken<span class=\\\"mandatory\\\">*</span></label>\\n                        <input class=\\\"form-control\\\" name=\\\"dateTaken\\\" [owlDateTime]=\\\"dateTaken\\\" [owlDateTimeTrigger]=\\\"dateTaken\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"electricReading.dateTaken\\\" required>\\n              <owl-date-time #dateTaken [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n              <div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"dateTaken\\\">\\n                  <i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n                </div>\\n                </div>\\n          </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                  <label>Electrical Units per Condo<span class=\\\"mandatory\\\">*</span></label>\\n                  <input type=\\\"text\\\" [disabled]=true  class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"electricUnit\\\" [(ngModel)]=\\\"electricReading.ElectricalUnitPerApT\\\" required>\\n              </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                  <label>Cost per Condo Unit<span class=\\\"mandatory\\\">*</span></label>\\n                  <input type=\\\"text\\\" [disabled]=true  class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"electricCost\\\" [(ngModel)]=\\\"electricReading.CostPerApt\\\" required>\\n              </div>\\n          </div>\\n          <div class=\\\"col-sm-6\\\">\\n\\n            <div class=\\\"input-box\\\">\\n                        <label>Comments</label>\\n                        <textarea placeholder=\\\"some text here\\\" name=\\\"UtilityReadingComments\\\" [(ngModel)]=\\\"electricReading.Comments\\\"></textarea>\\n                    </div>\\n\\n          </div>\\n          </div>\\n        </ng-container>\\n      </div>\\n\\n    </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"list-inline float-right mt-4\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn blue mr-4\\\"  (click)=\\\"Cancel()\\\">Cancel</button>\\n                  <button class=\\\"btn blue mr-2\\\" [disabled]=\\\"createElectricityReadingForm.invalid\\\" *ngIf=\\\"!isEdit\\\">Submit</button>\\n                  <button class=\\\"btn blue mr-2\\\" [disabled]=\\\"createElectricityReadingForm.invalid\\\" *ngIf=\\\"isEdit\\\">Update</button>\\n              </div>\\n            </div>\\n          </div>\\n      </form>\\n\\n</div>\\n\"","export default \"<div *ngIf=\\\"!selected_utility_type \\\"class=\\\"gl-other-reports-wrapper\\\">\\n\\n\\t<h4 class=\\\"main-title-mini\\\">Select the reports</h4>\\n\\t<div class=\\\"card\\\">\\n\\t\\t<div class=\\\"card-body p-0\\\">\\n\\t\\t\\t<div class=\\\"simple-lists\\\">\\n\\t\\t\\t\\t<ng-container *ngFor=\\\"let utility of utilityCategoryData; let i = index\\\">\\n\\t\\t\\t\\t\\t<a (click)=\\\"selectUtility(utility)\\\">{{utility.category}}</a>\\n\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\\n<ng-container *ngIf=\\\"selected_utility_type\\\">\\n    <app-electricity-reading *ngIf=\\\"utility_selected_category.category == 'Common Electricity Charges'\\\" (onCancel)=\\\"onCancel($event)\\\"></app-electricity-reading>\\n    <app-water-reading *ngIf=\\\"utility_selected_category.category == 'Water Meter Charges'\\\" (onCancel)=\\\"onCancel($event)\\\" [utility_selected_category]=\\\"utility_selected_category\\\"></app-water-reading>\\n\\t\\t<app-add-insurance *ngIf=\\\"utility_selected_category.category == 'Common Insurance'\\\" (onCancel)=\\\"onCancel($event)\\\" ></app-add-insurance>\\n</ng-container>\\n\"","export default \"<div class=\\\"property-tower-wrapper\\\">\\n\\n\\t<ng-container>\\n\\n\\t\\t<form #propertyDetailsForm = \\\"ngForm\\\" name=\\\"propertyDetailsForm\\\" novalidate>\\n\\n\\t\\t\\t<div class=\\\"data-wrapper\\\">\\n\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                <label>Total Units: {{totalItems}}</label>\\n\\t\\t\\t    \\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t</div>\\n\\n\\t\\t</form>\\n\\n\\t</ng-container>\\n\\n  <app-loader *ngIf=\\\"!isTowersLoaded\\\"></app-loader>\\n\\n\\t<ng-container *ngIf=\\\"isTowersLoaded\\\">\\n\\n\\t\\t<div id=\\\"propertyUnitDetailsAccordion\\\">\\n\\n\\t\\t\\t<!-- <h4 class=\\\"main-title-mini float-left mb-3\\\">Units</h4> -->\\n\\n\\t\\t\\t<ul class=\\\"list-group tabs clear\\\">\\n        <div class=\\\"row\\\">\\n          <div  class=\\\"col-sm-2\\\">\\n                  <label>Block Unit<span class=\\\"mandatory\\\">*</span></label>\\n          </div>\\n          <div  class=\\\"col-sm-2\\\">\\n                  <label>Previous reading<span class=\\\"mandatory\\\">*</span></label>\\n          </div>\\n          <div class=\\\"col-sm-2\\\">\\n                  <label>Current Reading<span class=\\\"mandatory\\\">*</span></label>\\n          </div>\\n          <div class=\\\"col-sm-2\\\">\\n                <label>Units this month<span class=\\\"mandatory\\\">*</span></label>\\n          </div>\\n          <div class=\\\"col-sm-2\\\">\\n                <label>Date Taken<span class=\\\"mandatory\\\">*</span></label>\\n          </div>\\n          </div>\\n\\t\\t\\t\\t<ng-container  *ngFor=\\\"let unit of towerUnitData | slice:ItemStartIndex:ItemEndIndex; let i = index; first as isFirst\\\">\\n          <app-unit-reading-info [unit]=\\\"unit\\\"  [tower]=\\\"tower\\\" [waterReadingPeriodID]=\\\"waterReadingPeriodID\\\" [utility_selected_category]=\\\"utility_selected_category\\\"></app-unit-reading-info>\\n\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t</ul>\\n\\n\\t\\t\\t<app-pagination\\n\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"\\n\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\n\\t\\t\\t</app-pagination>\\n\\n\\t\\t</div>\\n\\n\\t</ng-container>\\n\\n</div>\\n\"","export default \"<div class=\\\"property-tower-unit-wrapper\\\">\\n  <app-alert-message [message]=\\\"alertMessage\\\" [isError]=\\\"isError\\\" ></app-alert-message>\\n\\n  <form  #waterReadingDetailsForm = \\\"ngForm\\\" name=\\\"waterReadingDetailsForm\\\" (ngSubmit)=\\\"submitWaterMeterReading(waterReadingDetailsForm)\\\" novalidate>\\n\\n  <div class=\\\"data-wrapper\\\">\\n  <div class=\\\"row\\\">\\n    <div  class=\\\"col-sm-2\\\">\\n        <div class=\\\"input-box\\\">\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" [disabled]=true placeholder=\\\"Enter\\\" name=\\\"blockUnitNo\\\" [(ngModel)]=\\\"unit.apartmentBlockUnitNumber\\\" required>\\n        </div>\\n    </div>\\n    <div  class=\\\"col-sm-2\\\">\\n        <div class=\\\"input-box\\\">\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" [disabled]=\\\"unit.water_charge.prevReading || !isEdit\\\"  placeholder=\\\"Enter\\\" (keyup)=\\\"calculateUnitPerAptFrmPreReading($event)\\\" name=\\\"prevReading\\\" [(ngModel)]=\\\"waterReading.prevReading\\\" required>\\n        </div>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n        <div class=\\\"input-box\\\">\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" [disabled]=!isEdit placeholder=\\\"Enter\\\" (keyup)=\\\"calculateUnitPerAptFrmCurReading($event)\\\" name=\\\"currReading\\\" [(ngModel)]=\\\"waterReading.currReading\\\" required>\\n        </div>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n        <div class=\\\"input-box\\\">\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" [disabled]=true placeholder=\\\"Enter\\\" name=\\\"currUnit\\\" [(ngModel)]=\\\"waterReading.units\\\" required>\\n        </div>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n      <div class=\\\"input-box mb-3\\\">\\n                  <input class=\\\"form-control\\\" name=\\\"dateTaken\\\" [disabled]=!isEdit [owlDateTime]=\\\"dateTaken\\\" [owlDateTimeTrigger]=\\\"dateTaken\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"waterReading.dateTaken\\\" required>\\n        <owl-date-time #dateTaken [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n        <div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"dateTaken\\\">\\n            <!-- <i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather> -->\\n          </div>\\n          </div>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n\\n      <div *ngIf=\\\"isEdit\\\" class=\\\"list-inline float-right\\\">\\n        <button class=\\\"btn blue\\\" [disabled]=\\\"waterReadingDetailsForm.invalid\\\">Submit</button>\\n        <!-- <button class=\\\"btn blue\\\" [disabled]=\\\"waterReadingDetailsForm.invalid\\\">Update</button> -->\\n      </div>\\n\\n      <div class=\\\"icon-wrapper  mb-2\\\" *ngIf=\\\"!isEdit\\\">\\n        <i-feather class=\\\"icon edit\\\" name=\\\"edit\\\" (click)=\\\"showEditForm()\\\"></i-feather>\\n      </div>\\n\\n      <div class=\\\"icon-wrapper  mb-2\\\" *ngIf=\\\"isEdit\\\">\\n        <i-feather class=\\\"icon back\\\" name=\\\"chevron-left\\\" (click)=\\\"showEditForm()\\\"></i-feather>\\n      </div>\\n\\n    </div>\\n    </div>\\n </div>\\n\\n</form>\\n</div>\\n\"","export default \"<div class=\\\"property-details-wrapper profile-section\\\">\\n\\n  <form #setWaterReadingPeriodForm = \\\"ngForm\\\" name=\\\"setWaterReadingPeriodForm\\\"  (ngSubmit)=\\\"submitReadingPeriodForm(setWaterReadingPeriodForm)\\\" novalidate>\\n\\n    <div class=\\\"card ov mb-30\\\">\\n\\n      <div class=\\\"card-header\\\">\\n        <div class=\\\"float-left\\\">\\n            <h5>Select Reading Period</h5>\\n          </div>\\n      </div>\\n      <div class=\\\"card-body ov\\\">\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"input-box mb-3\\\">\\n                        <label>From<span class=\\\"mandatory\\\">*</span></label>\\n                        <input class=\\\"form-control\\\" name=\\\"reportFrom\\\" [owlDateTime]=\\\"reportFrom\\\" [owlDateTimeTrigger]=\\\"reportFrom\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"waterReadingFromDate\\\" required>\\n              <owl-date-time #reportFrom [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n              <div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"reportFrom\\\">\\n                  <i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n                </div>\\n                </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"input-box mb-3\\\">\\n                        <label>To<span class=\\\"mandatory\\\">*</span></label>\\n                        <input class=\\\"form-control\\\" name=\\\"reportTo\\\" [owlDateTime]=\\\"reportTo\\\" [owlDateTimeTrigger]=\\\"reportTo\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"waterReadingToDate\\\" required>\\n              <owl-date-time #reportTo [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n              <div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"reportTo\\\">\\n                  <i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n                </div>\\n                </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"list-inline  mt-4\\\">\\n                <button type=\\\"button\\\" class=\\\"btn blue mr-4\\\"  (click)=\\\"cancel()\\\">Cancel</button>\\n                <button class=\\\"btn blue mr-2\\\" [disabled]=\\\"setWaterReadingPeriodForm.invalid\\\">Submit</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n\\n  <app-loader *ngIf=\\\"!isSetPeriod\\\"></app-loader>\\n\\n\\n\\t<h4 *ngIf=\\\"waterReadingPeriodID\\\" class=\\\"main-title-mini float-left\\\">Towers</h4>\\n\\n\\t<div *ngIf=\\\"waterReadingPeriodID\\\" class=\\\"card clear\\\" id=\\\"propertyDetailsAccordion\\\">\\n\\n\\t\\t<div class=\\\"card-body p-0\\\">\\n\\n\\t\\t\\t<app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"isDataLoaded\\\">\\n\\n\\t\\t\\t\\t<ul class=\\\"list-group tabs clear\\\">\\n\\n\\t\\t\\t\\t\\t<ng-container  *ngFor=\\\"let tower of propertyTowerData; let i = index; first as isFirst\\\">\\n\\t\\t\\t\\t\\t\\t<li class=\\\"list-group-item collapsed\\\" data-toggle=\\\"collapse\\\" attr.data-target=\\\"#towerDetail{{i}}\\\" aria-expanded=\\\"true\\\" attr.aria-controls=\\\"towerDetail{{i}}\\\">\\n\\t\\t\\t\\t\\t\\t\\t<span>{{tower.apartmentBlockNumber}}</span>\\n\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t<div id=\\\"towerDetail{{i}}\\\" class=\\\"collapse\\\"  attr.aria-labelledby=\\\"towerDetail{{i}}\\\" data-parent=\\\"#propertyDetailsAccordion\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"details\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<app-tower-reading-info [tower]=\\\"tower\\\" [waterReadingPeriodID]=\\\"waterReadingPeriodID\\\" [allApartmentWaterCharge]=\\\"allApartmentWaterCharge\\\" [utility_selected_category]=\\\"utility_selected_category\\\"></app-tower-reading-info>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t</ul>\\n\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n</div>\\n\"","export default \"<div class=\\\"inventory-view-wrapper\\\">\\n\\n\\n\\t<form #viewUtilityCategoryForm = \\\"ngForm\\\" name=\\\"viewUtilityCategoryForm\\\"  novalidate>\\n\\n\\t\\t<div class=\\\"card ov mb-30\\\">\\n\\n\\t\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t\\t<div class=\\\"float-left\\\">\\n\\t    \\t\\t\\t<h5>Select Category</h5>\\n\\t    \\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-body ov\\\">\\n\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"input-box\\\">\\n                        <label>Utility Category<span class=\\\"mandatory\\\">*</span></label>\\n                        <select (change)=\\\"onUtilityCatregoryChange()\\\"\\n                    name=\\\"utilityCategory\\\"\\n                    id=\\\"utilityCategory\\\"\\n                    class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"selectedUtilityCategory\\\" required>\\n                    <option value=\\\"undefined\\\" selected>Select</option>\\n                    <option *ngFor=\\\"let item of utilityCategoryData\\\" [value]=\\\"item.category\\\">{{ item.category }}</option>\\n                </select>\\n            </div>\\n          </div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</form>\\n\\n\\n\\t<div *ngIf=\\\"selectedUtilityCategory\\\" class=\\\"card table-card\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All {{selectedUtilityCategory}} <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n\\t\\t\\t\\t\\t<li *ngIf=\\\"isWaterHistory()\\\" class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n\\t\\t\\t    \\t<select (change)=\\\"onFilterByTowerChange()\\\" name=\\\"utilityTowerFilter\\\" id=\\\"utilityTowerFilter\\\" class=\\\"form-control filter-width\\\" [(ngModel)]=\\\"selectedTower\\\" required>\\n\\t\\t\\t\\t    \\t<option value=\\\"All\\\" selected>Select Tower</option>\\n\\t\\t\\t\\t    \\t<option *ngFor=\\\"let tower of propertyTowerData\\\" [value]=\\\"tower.apartmentBlockNumber\\\">{{ tower.apartmentBlockNumber }}</option>\\n\\t\\t\\t    \\t</select>\\n\\t\\t    \\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"utilitySearch\\\" >\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n    \\t\\t\\t\\t<a class=\\\"btn trans-white mt_5\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Print</span>\\n    \\t\\t\\t\\t</a>\\n    \\t\\t\\t</li>\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n\\n  \\t\\t<app-loader *ngIf=\\\"!isUltilityInsuranceHisLoaded && !isUltilityWaterHisLoaded && !isUltilityElectricHisLoaded\\\"></app-loader>\\n\\n  \\t\\t<div class=\\\"card-body p-0\\\">\\n\\n  \\t\\t\\t<ng-container *ngIf=\\\"selectedUtilityCategory == 'Common Electricity Charges' && isUltilityElectricHisLoaded\\\">\\n\\n  \\t\\t\\t\\t<table class=\\\"table table-checker table-resizable\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">From\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('fromDate')\\\" [ngClass]=\\\"getFieldOrderBy('fromDate')\\\"></span>\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">To\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('toDate')\\\" [ngClass]=\\\"getFieldOrderBy('toDate')\\\"></span>\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">Pre Reading\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('preReading')\\\" [ngClass]=\\\"getFieldOrderBy('preReading')\\\"></span>\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">Curr Reading\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('currReading')\\\" [ngClass]=\\\"getFieldOrderBy('currReading')\\\"></span>\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">Condo unit\\n                  <span (click)=\\\"sortUnitData('aptUnit')\\\" [ngClass]=\\\"getFieldOrderBy('aptUnit')\\\"></span>\\n\\t\\t\\t\\t\\t\\t  </th>\\n              <th scope=\\\"col\\\">Cost Per Unit\\n                <span (click)=\\\"sortUnitData('costPerUnit')\\\" [ngClass]=\\\"getFieldOrderBy('costPerUnit')\\\"></span>\\n              </th>\\n              <th scope=\\\"col\\\">Added By\\n                <span (click)=\\\"sortUnitData('addedBy')\\\" [ngClass]=\\\"getFieldOrderBy('addedBy')\\\"></span>\\n              </th>\\n\\t\\t\\t\\t\\t    </tr>\\n\\t\\t\\t\\t    </thead>\\n\\t\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t\\t    <tr *ngFor=\\\"let utility of utilityElecteicalListData | simpleSearch: utilitySearch | columnSearch: columnField:selectedInput | sort : unitFieldType: unitOrder | slice:ItemStartIndex:ItemEndIndex ; let i = index\\\" [ngClass]=\\\"utility.isActive ? '' : 'notactive'\\\">\\n\\t\\t\\t\\t\\t      <td class=\\\"name\\\">{{getUtilityFromPeriod(utility.utilityTrackerElectricityChargeId)}}</td>\\n\\t\\t\\t\\t\\t      <td class=\\\"grey\\\">{{getUtilityToPeriod(utility.utilityTrackerElectricityChargeId)}}</td>\\n\\t\\t\\t\\t\\t      <td class=\\\"grey\\\">{{utility.prevReading}}</td>\\n                <td class=\\\"grey\\\">{{utility.currReading}}</td>\\n                <td class=\\\"grey\\\">{{utility.electricalUnitPerAptUnit}}</td>\\n                <td class=\\\"grey\\\">{{utility.costPerAptUnit}}</td>\\n                <td class=\\\"grey\\\">{{utility.insertedByUser}}</td>\\n\\t\\t\\t\\t\\t      <td>\\n\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t    </tr>\\n\\t\\t\\t\\t    </tbody>\\n\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t<div class=\\\"button-wrapper border-top\\\" *ngIf=\\\"isNoItemsAvailable()\\\">\\n\\t    \\t\\t\\t<p class=\\\"snippet\\\">No Records Found</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<app-pagination\\n\\t\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"\\n\\t\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\n\\t\\t\\t\\t</app-pagination>\\n\\n  \\t\\t\\t</ng-container>\\n\\n\\n        <ng-container *ngIf=\\\"this.selectedUtilityCategory == 'Water Meter Charges' && isUltilityWaterHisLoaded\\\">\\n\\n          <table class=\\\"table table-checker table-resizable\\\" [ngClass]=\\\"isMobileView()\\\">\\n          <thead>\\n              <tr>\\n                <th scope=\\\"col\\\">Tower\\n                  <span (click)=\\\"sortUnitData('block')\\\" [ngClass]=\\\"getFieldOrderBy('block')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Condo Unit\\n                  <span (click)=\\\"sortUnitData('aptUnit')\\\" [ngClass]=\\\"getFieldOrderBy('aptUnit')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Connection No\\n                  <span (click)=\\\"sortUnitData('connectionNo')\\\" [ngClass]=\\\"getFieldOrderBy('connectionNo')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Previous Reading\\n                  <span (click)=\\\"sortUnitData('prevReading')\\\" [ngClass]=\\\"getFieldOrderBy('prevReading')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Current Reading\\n                  <span (click)=\\\"sortUnitData('currReading')\\\" [ngClass]=\\\"getFieldOrderBy('currReading')\\\"></span>\\n                </th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let utility of filteredUtilityWaterListData | simpleSearch: utilitySearch | sort : unitFieldType: unitOrder | slice:ItemStartIndex:ItemEndIndex ; let i = index\\\">\\n                <td class=\\\"grey\\\">{{utility.block}}</td>\\n                <td class=\\\"grey\\\">{{utility.aptUnit}}</td>\\n                <td class=\\\"grey\\\"><span *ngIf=\\\"utility.waterCharge.length>0\\\">{{utility.waterCharge[0].connectionNo}}</span></td>\\n                <td class=\\\"grey\\\"><span *ngIf=\\\"utility.waterCharge.length>0\\\">{{utility.waterCharge[0].prevReading}}</span></td>\\n                <td class=\\\"grey\\\"><span *ngIf=\\\"utility.waterCharge.length>0\\\">{{utility.waterCharge[0].currReading}}</span></td>\\n              </tr>\\n            </tbody>\\n        </table>\\n        <div class=\\\"button-wrapper border-top\\\" *ngIf=\\\"isNoItemsAvailable()\\\">\\n            <p class=\\\"snippet\\\">No Records Found</p>\\n        </div>\\n        <app-pagination\\n          [totalItems]=\\\"totalItems\\\"\\n          [ItemStartIndex]=\\\"ItemStartIndex\\\"\\n          [ItemEndIndex] = \\\"ItemEndIndex\\\"\\n          [itemLimit] = \\\"itemLimit\\\"\\n          (outputParams) = \\\"getIndexParams($event)\\\">\\n        </app-pagination>\\n\\n        </ng-container>\\n\\n        <ng-container *ngIf=\\\"this.selectedUtilityCategory == 'Common Insurance' && isUltilityInsuranceHisLoaded\\\">\\n\\n          <table class=\\\"table table-checker table-resizable\\\" [ngClass]=\\\"isMobileView()\\\">\\n          <thead>\\n              <tr>\\n                <th scope=\\\"col\\\">Insurance Number\\n                  <span (click)=\\\"sortUnitData('insuranceNo')\\\" [ngClass]=\\\"getFieldOrderBy('insuranceNo')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Condo Unit Count\\n                  <span (click)=\\\"sortUnitData('aptUnitCount')\\\" [ngClass]=\\\"getFieldOrderBy('aptUnitCount')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Total Cost\\n                  <span (click)=\\\"sortUnitData('totalCost')\\\" [ngClass]=\\\"getFieldOrderBy('totalCost')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Cost Per Condo\\n                  <span (click)=\\\"sortUnitData('costPerApt')\\\" [ngClass]=\\\"getFieldOrderBy('costPerApt')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Date Entered\\n                  <span (click)=\\\"sortUnitData('dateEntered')\\\" [ngClass]=\\\"getFieldOrderBy('dateEntered')\\\"></span>\\n                </th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let utility of utilityInsuranceListData | simpleSearch: utilitySearch | sort : unitFieldType: unitOrder | slice:ItemStartIndex:ItemEndIndex ; let i = index\\\">\\n                <td class=\\\"grey\\\">{{utility.insuranceNumber}}</td>\\n                <td class=\\\"grey\\\">{{utility.apartmentUnitCount}}</td>\\n                <td class=\\\"grey\\\">{{utility.totalCost}}</td>\\n                <td class=\\\"grey\\\">{{utility.costPerAptUnit}}</td>\\n                <td class=\\\"grey\\\">{{utility.dateEntered}}</td>\\n              </tr>\\n            </tbody>\\n        </table>\\n        <div class=\\\"button-wrapper border-top\\\" *ngIf=\\\"isNoItemsAvailable()\\\">\\n            <p class=\\\"snippet\\\">No Records Found</p>\\n        </div>\\n        <app-pagination\\n          [totalItems]=\\\"totalItems\\\"\\n          [ItemStartIndex]=\\\"ItemStartIndex\\\"\\n          [ItemEndIndex] = \\\"ItemEndIndex\\\"\\n          [itemLimit] = \\\"itemLimit\\\"\\n          (outputParams) = \\\"getIndexParams($event)\\\">\\n        </app-pagination>\\n\\n        </ng-container>\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n\\n</div>\\n\"","export default \"<div class=\\\"income-tracker-reports-customer-reports\\\">\\n\\n\\t<h4 class=\\\"main-title-mini\\\">Electricity Report</h4>\\n\\n\\n\\t<app-loader *ngIf=\\\"!isReportLoaded\\\"></app-loader>\\n\\n  <div *ngIf=\\\"isReportLoaded\\\" class=\\\"card table-card\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All Electricity Reading <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"utilitySearch\\\" >\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<!-- <li class=\\\"list-inline-item\\\">\\n    \\t\\t\\t\\t<a class=\\\"btn trans-white mt_5\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Print</span>\\n    \\t\\t\\t\\t</a>\\n    \\t\\t\\t</li> -->\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n\\n  \\t\\t<div class=\\\"card-body p-0\\\">\\n\\n  \\t\\t\\t<ng-container>\\n\\n  \\t\\t\\t\\t<table class=\\\"table table-checker table-resizable\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">From\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('fromDate')\\\" [ngClass]=\\\"getFieldOrderBy('fromDate')\\\"></span>\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">To\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('toDate')\\\" [ngClass]=\\\"getFieldOrderBy('toDate')\\\"></span>\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">Pre Reading\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('preReading')\\\" [ngClass]=\\\"getFieldOrderBy('preReading')\\\"></span>\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">Curr Reading\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('currReading')\\\" [ngClass]=\\\"getFieldOrderBy('currReading')\\\"></span>\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">Condo unit\\n                  <span (click)=\\\"sortUnitData('aptUnit')\\\" [ngClass]=\\\"getFieldOrderBy('aptUnit')\\\"></span>\\n\\t\\t\\t\\t\\t\\t  </th>\\n              <th scope=\\\"col\\\">Cost Per Unit\\n                <span (click)=\\\"sortUnitData('costPerUnit')\\\" [ngClass]=\\\"getFieldOrderBy('costPerUnit')\\\"></span>\\n              </th>\\n              <th scope=\\\"col\\\">Added By\\n                <span (click)=\\\"sortUnitData('addedBy')\\\" [ngClass]=\\\"getFieldOrderBy('addedBy')\\\"></span>\\n              </th>\\n\\t\\t\\t\\t\\t    </tr>\\n\\t\\t\\t\\t    </thead>\\n\\t\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t\\t    <tr *ngFor=\\\"let utility of utilityElecteicalListData | simpleSearch: utilitySearch | columnSearch: columnField:selectedInput | sort : unitFieldType: unitOrder | slice:ItemStartIndex:ItemEndIndex ; let i = index\\\" [ngClass]=\\\"utility.isActive ? '' : 'notactive'\\\">\\n\\t\\t\\t\\t\\t      <td class=\\\"name\\\">{{getUtilityFromPeriod(utility.utilityTrackerElectricityChargeId)}}</td>\\n\\t\\t\\t\\t\\t      <td class=\\\"grey\\\">{{getUtilityToPeriod(utility.utilityTrackerElectricityChargeId)}}</td>\\n\\t\\t\\t\\t\\t      <td class=\\\"grey\\\">{{utility.prevReading}}</td>\\n                <td class=\\\"grey\\\">{{utility.currReading}}</td>\\n                <td class=\\\"grey\\\">{{utility.electricalUnitPerAptUnit}}</td>\\n                <td class=\\\"grey\\\">{{utility.costPerAptUnit}}</td>\\n                <td class=\\\"grey\\\">{{utility.insertedByUser}}</td>\\n\\t\\t\\t\\t\\t      <td>\\n\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t    </tr>\\n\\t\\t\\t\\t    </tbody>\\n\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t<div class=\\\"button-wrapper border-top\\\" *ngIf=\\\"isNoItemsAvailable()\\\">\\n\\t    \\t\\t\\t<p class=\\\"snippet\\\">No Records Found</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<app-pagination\\n\\t\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"\\n\\t\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\n\\t\\t\\t\\t</app-pagination>\\n\\n  \\t\\t\\t</ng-container>\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n\\n</div>\\n\"","export default \"<div class=\\\"income-tracker-reports-customer-reports\\\">\\n\\n\\t<h4 class=\\\"main-title-mini\\\">Insurance Report</h4>\\n\\n\\n\\t<app-loader *ngIf=\\\"!isReportLoaded\\\"></app-loader>\\n\\n  <div *ngIf=\\\"isReportLoaded\\\" class=\\\"card table-card\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All Insurance <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"utilitySearch\\\" >\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<!-- <li class=\\\"list-inline-item\\\">\\n    \\t\\t\\t\\t<a class=\\\"btn trans-white mt_5\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Print</span>\\n    \\t\\t\\t\\t</a>\\n    \\t\\t\\t</li> -->\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n\\n  \\t\\t<div  class=\\\"card-body p-0\\\">\\n\\n        <ng-container>\\n\\n          <table class=\\\"table table-checker table-resizable\\\" [ngClass]=\\\"isMobileView()\\\">\\n          <thead>\\n              <tr>\\n                <th scope=\\\"col\\\">Insurance Number\\n                  <span (click)=\\\"sortUnitData('insuranceNo')\\\" [ngClass]=\\\"getFieldOrderBy('insuranceNo')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Condo Unit Count\\n                  <span (click)=\\\"sortUnitData('aptUnitCount')\\\" [ngClass]=\\\"getFieldOrderBy('aptUnitCount')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Total Cost\\n                  <span (click)=\\\"sortUnitData('totalCost')\\\" [ngClass]=\\\"getFieldOrderBy('totalCost')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Cost Per Condo\\n                  <span (click)=\\\"sortUnitData('costPerApt')\\\" [ngClass]=\\\"getFieldOrderBy('costPerApt')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Date Entered\\n                  <span (click)=\\\"sortUnitData('dateEntered')\\\" [ngClass]=\\\"getFieldOrderBy('dateEntered')\\\"></span>\\n                </th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let utility of utilityInsuranceListData | simpleSearch: utilitySearch | sort : unitFieldType: unitOrder | slice:ItemStartIndex:ItemEndIndex ; let i = index\\\">\\n                <td class=\\\"grey\\\">{{utility.insuranceNumber}}</td>\\n                <td class=\\\"grey\\\">{{utility.apartmentUnitCount}}</td>\\n                <td class=\\\"grey\\\">{{utility.totalCost}}</td>\\n                <td class=\\\"grey\\\">{{utility.costPerAptUnit}}</td>\\n                <td class=\\\"grey\\\">{{utility.dateEntered}}</td>\\n              </tr>\\n            </tbody>\\n        </table>\\n        <div class=\\\"button-wrapper border-top\\\" *ngIf=\\\"isNoItemsAvailable()\\\">\\n            <p class=\\\"snippet\\\">No Records Found</p>\\n        </div>\\n        <app-pagination\\n          [totalItems]=\\\"totalItems\\\"\\n          [ItemStartIndex]=\\\"ItemStartIndex\\\"\\n          [ItemEndIndex] = \\\"ItemEndIndex\\\"\\n          [itemLimit] = \\\"itemLimit\\\"\\n          (outputParams) = \\\"getIndexParams($event)\\\">\\n        </app-pagination>\\n\\n        </ng-container>\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n\\n</div>\\n\"","export default \"<div class=\\\"reports-wrapper\\\">\\n\\n\\t<app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n\\n\\t<ng-container *ngIf=\\\"isDataLoaded\\\">\\n\\n\\t\\t<h5 class=\\\"mb-3\\\"> Utility Reports</h5>\\n\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-sm-6 mb-20\\\" *ngFor=\\\"let report of reportDataList\\\">\\n\\n\\t\\t\\t\\t\\t<div class=\\\"card report-card\\\">\\n\\t\\t\\t\\t\\t\\t<a class=\\\"t-no-decor\\\" href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t\\t\\t\\trouterLink = \\\"/ams/utility/reports/{{report.lookupValueId}}\\\"\\n\\t\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<h6>{{report.lookupValueName}}</h6>\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>{{report.description}}</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t</ng-container>\\n\\n</div>\\n\"","export default \"<div class=\\\"income-tracker-reports-customer-reports\\\">\\n\\n\\t<h4 class=\\\"main-title-mini\\\">Water Reading Report</h4>\\n\\n\\n\\t<app-loader *ngIf=\\\"!isReportLoaded\\\"></app-loader>\\n\\n  <div *ngIf=\\\"isReportLoaded\\\" class=\\\"card table-card\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All Water Reading <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n\\t\\t\\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n\\t\\t\\t    \\t<select (change)=\\\"onFilterByTowerChange()\\\" name=\\\"utilityTowerFilter\\\" id=\\\"utilityTowerFilter\\\" class=\\\"form-control filter-width\\\" [(ngModel)]=\\\"selectedTower\\\" required>\\n\\t\\t\\t\\t    \\t<option value=\\\"All\\\" selected>Select Tower</option>\\n\\t\\t\\t\\t    \\t<option *ngFor=\\\"let tower of propertyTowerData\\\" [value]=\\\"tower.apartmentBlockNumber\\\">{{ tower.apartmentBlockNumber }}</option>\\n\\t\\t\\t    \\t</select>\\n\\t\\t    \\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"utilitySearch\\\" >\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<!-- <li class=\\\"list-inline-item\\\">\\n    \\t\\t\\t\\t<a class=\\\"btn trans-white mt_5\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Print</span>\\n    \\t\\t\\t\\t</a>\\n    \\t\\t\\t</li> -->\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n\\n\\n  \\t\\t<div class=\\\"card-body p-0\\\">\\n\\n        <ng-container>\\n\\n          <table class=\\\"table table-checker table-resizable\\\" [ngClass]=\\\"isMobileView()\\\">\\n          <thead>\\n              <tr>\\n                <th scope=\\\"col\\\">Tower\\n                  <span (click)=\\\"sortUnitData('block')\\\" [ngClass]=\\\"getFieldOrderBy('block')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Condo Unit\\n                  <span (click)=\\\"sortUnitData('aptUnit')\\\" [ngClass]=\\\"getFieldOrderBy('aptUnit')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Connection No\\n                  <span (click)=\\\"sortUnitData('connectionNo')\\\" [ngClass]=\\\"getFieldOrderBy('connectionNo')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Previous Reading\\n                  <span (click)=\\\"sortUnitData('prevReading')\\\" [ngClass]=\\\"getFieldOrderBy('prevReading')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Current Reading\\n                  <span (click)=\\\"sortUnitData('currReading')\\\" [ngClass]=\\\"getFieldOrderBy('currReading')\\\"></span>\\n                </th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let utility of filteredUtilityWaterListData | simpleSearch: utilitySearch | sort : unitFieldType: unitOrder | slice:ItemStartIndex:ItemEndIndex ; let i = index\\\">\\n                <td class=\\\"grey\\\">{{utility.block}}</td>\\n                <td class=\\\"grey\\\">{{utility.aptUnit}}</td>\\n                <td class=\\\"grey\\\"><span *ngIf=\\\"utility.waterCharge.length>0\\\">{{utility.waterCharge[0].connectionNo}}</span></td>\\n                <td class=\\\"grey\\\"><span *ngIf=\\\"utility.waterCharge.length>0\\\">{{utility.waterCharge[0].prevReading}}</span></td>\\n                <td class=\\\"grey\\\"><span *ngIf=\\\"utility.waterCharge.length>0\\\">{{utility.waterCharge[0].currReading}}</span></td>\\n              </tr>\\n            </tbody>\\n        </table>\\n        <div class=\\\"button-wrapper border-top\\\" *ngIf=\\\"isNoItemsAvailable()\\\">\\n            <p class=\\\"snippet\\\">No Records Found</p>\\n        </div>\\n        <app-pagination\\n          [totalItems]=\\\"totalItems\\\"\\n          [ItemStartIndex]=\\\"ItemStartIndex\\\"\\n          [ItemEndIndex] = \\\"ItemEndIndex\\\"\\n          [itemLimit] = \\\"itemLimit\\\"\\n          (outputParams) = \\\"getIndexParams($event)\\\">\\n        </app-pagination>\\n\\n        </ng-container>\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n</div>\\n\"","export default \"<div class=\\\"vendors-setup-wrapper\\\">\\n\\n\\t<app-loader *ngIf=\\\"!isUtilityCategoryLoaded\\\"></app-loader>\\n\\n\\t<div class=\\\"category-list list-boxes\\\" *ngIf=\\\"isUtilityCategoryLoaded\\\">\\n\\t\\t<h4 class=\\\"main-title-mini\\\">Utility Categories</h4>\\n\\t\\t<ng-container *ngFor=\\\"let item of utilityCategoryData; let i = index\\\">\\n\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"card-body nohover\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"icons\\\">\\n\\t\\t\\t\\t\\t\\t\\t<!-- <a href=\\\"javascript:void(0)\\\" routerLink=\\\"/ams/vendor/all-vendors/{{item.lookupValueId}}\\\"\\n\\t\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\"><i-feather class=\\\"icon view\\\" name=\\\"eye\\\"></i-feather></a> -->\\n\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\"><i-feather class=\\\"icon edit\\\" name=\\\"edit\\\" (click)=\\\"updateUtilityCategory(item, i)\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\"><i-feather class=\\\"icon del\\\" name=\\\"x\\\" (click)=\\\"showRemoveCategoryConfirmModal(item)\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<h6>{{item.category}}</h6>\\n\\t\\t\\t\\t\\t\\t<p class=\\\"float-left\\\">{{item.ratePerUnit}} per unit</p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</li>\\n\\t\\t</ng-container>\\n\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t<div class=\\\"card-body new text-center\\\">\\n\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" class=\\\"rounded-btn green\\\" (click)=\\\"addNewUtilityCategory()\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"icon\\\">+</div>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t<h6 class=\\\"tc-green\\\">Add New Category</h6>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</li>\\n\\t</div>\\n\\n\\t<div class=\\\"card mt-30\\\" *ngIf=\\\"isUtilityCategoryNew || isUtilityCategoryUpdate\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h6 *ngIf=\\\"isUtilityCategoryNew\\\">Add Utility Category</h6>\\n    \\t\\t\\t<h6 *ngIf=\\\"!isUtilityCategoryNew\\\">Update Utility Category</h6>\\n    \\t\\t</div>\\n    \\t\\t<div class=\\\"float-right\\\" (click)=\\\"removeCategoryBox()\\\">\\n    \\t\\t\\t<i-feather class=\\\"icon del\\\" name=\\\"x\\\"></i-feather>\\n    \\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card-body\\\">\\n\\n\\t\\t\\t<app-alert-message [message]=\\\"alertMessage\\\" [isError]=\\\"isError\\\"></app-alert-message>\\n\\n\\t\\t\\t<app-loader *ngIf=\\\"!isUtilityCategorySubmitted\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"isUtilityCategorySubmitted\\\">\\n\\n\\t\\t\\t\\t<form #addUtilityCategoryForm = \\\"ngForm\\\" name=\\\"addUtilityCategoryForm\\\" (ngSubmit)=\\\"showConfirmModal(addUtilityCategoryForm)\\\"  novalidate>\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Category Name<span class=\\\"mandatory\\\">*</span></label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"UtilityCategory\\\" [(ngModel)]=\\\"UtilityCategory\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n            <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                          <label>Rate per Unit<span class=\\\"mandatory\\\">*</span></label>\\n                          <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"unitRate\\\" [(ngModel)]=\\\"UtilityRateUnit\\\" required>\\n                      </div>\\n            </div>\\n\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline float-right\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addUtilityCategoryForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t</div>\\n\\t</div>\\n\\n</div>\\n\"","export default \"<p>utility works!</p>\\n\"","export default \".mandatory {\\n  color: red;\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9hbXMvdXRpbGl0eS9jb21wb25lbnRzL3V0aWxpdHktYWRkLXJlYWRpbmcvYWRkLWluc3VyYW5jZS9hZGQtaW5zdXJhbmNlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hbXMvdXRpbGl0eS9jb21wb25lbnRzL3V0aWxpdHktYWRkLXJlYWRpbmcvYWRkLWluc3VyYW5jZS9hZGQtaW5zdXJhbmNlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBQTtFQUNBLGVBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL2Ftcy91dGlsaXR5L2NvbXBvbmVudHMvdXRpbGl0eS1hZGQtcmVhZGluZy9hZGQtaW5zdXJhbmNlL2FkZC1pbnN1cmFuY2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFuZGF0b3J5e1xuICBjb2xvcjogcmVkO1xuICBmb250LXNpemU6IDE2cHg7XG59XG4iLCIubWFuZGF0b3J5IHtcbiAgY29sb3I6IHJlZDtcbiAgZm9udC1zaXplOiAxNnB4O1xufSJdfQ== */\"","import { Component, OnInit,Output, EventEmitter } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\n\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from '../../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n@Component({\n  selector: 'app-add-insurance',\n  templateUrl: './add-insurance.component.html',\n  styleUrls: ['./add-insurance.component.scss']\n})\nexport class AddInsuranceComponent implements OnInit {\n\n  @Output() onCancel = new EventEmitter();\n\n  insuranceCharge: any;\n\n  isInsuranceSubmitted: boolean = true;\n  isEdit: boolean = false;\n  isError: boolean = false;\n  categoryCostPerApt: any;\n  alertMessage:string = \"\";\n\n  public params = {\n    apartmentId: parseInt(this.cookieService.get('apartmentId'))\n  }\n  constructor(  private router: Router,\n    private route: ActivatedRoute,\n    private utilityTrackerService:UtilityTrackerService,\n    private lookupService: LookupService,\n    private apartmentService: ApartmentService,\n    private sharedService:SharedService,\n    private cookieService:CookieService) { }\n\n\n  Cancel(){\n    this.onCancel.emit(false)\n  }\n\n  submitInsuranceChargeForm(form) {\n\n    this.isInsuranceSubmitted = false;\n\n      let details = {\n\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"apartmentUnitCount\": this.insuranceCharge.AptunitCount,\n        \"insuranceNumber\": this.insuranceCharge.InsuranceNo,\n        \"totalCost\": this.insuranceCharge.TotalCost,\n        \"costPerAptUnit\": this.insuranceCharge.CostPerApt,\n        \"dateEntered\": this.insuranceCharge.DateEntered,\n        \"comments\": this.insuranceCharge.Comments,\n        \"isActive\": true,\n        \"insertedBy\": parseInt(this.cookieService.get('userId')),\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": null,\n        \"updatedOn\": null\n\n      }\n      let params ={\n        utilityTrackerInsuranceCharge: details\n      }\n\n      this.utilityTrackerService.addUtilityTrackerInsuranceCharge(params).subscribe((res:any) => {\n\n          if(res.message) {\n            this.isInsuranceSubmitted = true;\n            this.resetData();\n            this.sharedService.setAlertMessage(\"Insurance added successfully\");\n          }\n          else {\n            this.isInsuranceSubmitted = true;\n            this.isError = true;\n            this.alertMessage = res.errorMessage;\n          }\n        }, error => {\n          this.isInsuranceSubmitted = true;\n          this.isError = true;\n          this.alertMessage = \"Some error occured\";\n      });\n\n  }\n\n  calculateCostPerAptFrmTotalCost(e){\n    if(this.insuranceCharge.TotalCost){\n      let result_des = this.insuranceCharge.TotalCost/this.insuranceCharge.AptunitCount;\n     this.insuranceCharge.CostPerApt = result_des.toFixed(2);\n    }\n  }\n\n  resetData(){\n    this.insuranceCharge.InsuranceNo = undefined;\n    this.insuranceCharge.TotalCost = undefined;\n    this.insuranceCharge.CostPerApt = undefined;\n    this.insuranceCharge.Comments = undefined;\n  }\n\n  ngOnInit(): void {\n    this.insuranceCharge = {};\n\n    this.insuranceCharge.DateEntered = new Date().toISOString();\n\n    let params = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n    this.apartmentService.getApartmentBlockUnitByApartmentId(params).subscribe((res:any) =>{\n      this.insuranceCharge.AptunitCount = res.length;\n    })\n    // this.utilityTrackerService.getUtilityTrackerCategorysByApartmentId(apartment_id).subscribe((res:any) => {\n    //     let electric_category = res.find(x=> x.category == 'Common Electricity Charges')\n    //     this.categoryCostPerApt = electric_category.ratePerUnit;\n    //   });\n   }\n\n\n}\n","export default \".mandatory {\\n  color: red;\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9hbXMvdXRpbGl0eS9jb21wb25lbnRzL3V0aWxpdHktYWRkLXJlYWRpbmcvZWxlY3RyaWNpdHktcmVhZGluZy9lbGVjdHJpY2l0eS1yZWFkaW5nLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hbXMvdXRpbGl0eS9jb21wb25lbnRzL3V0aWxpdHktYWRkLXJlYWRpbmcvZWxlY3RyaWNpdHktcmVhZGluZy9lbGVjdHJpY2l0eS1yZWFkaW5nLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBQTtFQUNBLGVBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL2Ftcy91dGlsaXR5L2NvbXBvbmVudHMvdXRpbGl0eS1hZGQtcmVhZGluZy9lbGVjdHJpY2l0eS1yZWFkaW5nL2VsZWN0cmljaXR5LXJlYWRpbmcuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFuZGF0b3J5e1xuICBjb2xvcjogcmVkO1xuICBmb250LXNpemU6IDE2cHg7XG59XG4iLCIubWFuZGF0b3J5IHtcbiAgY29sb3I6IHJlZDtcbiAgZm9udC1zaXplOiAxNnB4O1xufSJdfQ== */\"","import { Component, OnInit,Output, EventEmitter } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\n\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from '../../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-electricity-reading',\n  templateUrl: './electricity-reading.component.html',\n  styleUrls: ['./electricity-reading.component.scss']\n})\n\n\nexport class ElectricityReadingComponent implements OnInit {\n\n  @Output() onCancel = new EventEmitter();\n\n  electricReading: any;\n\n  isReadingSubmitted: boolean = true;\n  isEditReading: boolean = false;\n  isEdit: boolean = false;\n  isError: boolean = false;\n  categoryCostPerApt: any;\n  alertMessage:string = \"\";\n\n  public params = {\n    apartmentId: parseInt(this.cookieService.get('apartmentId'))\n  }\n  constructor(  private router: Router,\n    private route: ActivatedRoute,\n    private utilityTrackerService:UtilityTrackerService,\n    private lookupService: LookupService,\n    private apartmentService: ApartmentService,\n    private sharedService:SharedService,\n    private cookieService:CookieService) { }\n\n\n  Cancel(){\n    this.onCancel.emit(false)\n  }\n\n  submitReadingForm(form){\n\n      let electric_period = {\n\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"periodFrom\": this.electricReading.fromDate,\n        \"periodTo\": this.electricReading.toDate,\n        \"isActive\": true,\n        \"insertedBy\": parseInt(this.cookieService.get('userId')),\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": 0,\n        \"updatedOn\": null\n      }\n      let params ={\n        utilityTrackerElectricityPeriod: electric_period\n      }\n\n      this.utilityTrackerService.addUtilityTrackerElectricityPeriod(params).subscribe((period_res:any) =>{\n        this.electricReading.ElectricityPeriodId = period_res.message\n        this.addOrUpdateElectricityReading(form)\n      })\n  }\n\n  addOrUpdateElectricityReading(form) {\n\n    this.isReadingSubmitted = false;\n\n    if(!this.isEditReading){\n\n      let details = {\n\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"apartmentUnitCount\": this.electricReading.AptunitCount,\n        \"utilityTrackerElectricityPeriodId\": this.electricReading.ElectricityPeriodId,\n        \"prevReading\": this.electricReading.PrevReading,\n        \"currReading\": this.electricReading.CurrReading,\n        \"electricalUnitPerAptUnit\": this.electricReading.ElectricalUnit,\n        \"costPerAptUnit\": this.electricReading.CostPerApt,\n        \"dateTaken\": this.electricReading.DateTaken,\n        \"comments\": this.electricReading.comments,\n        \"isActive\": true,\n        \"insertedBy\": parseInt(this.cookieService.get('userId')),\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": 0,\n        \"updatedOn\": null\n\n      }\n      let params ={\n        utilityTrackerElectricityCharge: details\n      }\n\n      this.utilityTrackerService.addUtilityTrackerElectricityCharge(params).subscribe((res:any) => {\n\n          if(res.message) {\n            this.isReadingSubmitted = true;\n            this.resetData();\n            this.sharedService.setAlertMessage(\"Electricity reading added successfully\");\n          }\n          else {\n            this.isReadingSubmitted = true;\n            this.isError = true;\n            this.alertMessage = res.errorMessage;\n          }\n        }, error => {\n          this.isReadingSubmitted = true;\n          this.isError = true;\n          this.alertMessage = \"Some error occured\";\n      });\n    }\n\n    else {\n\n      let details = {\n\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"apartmentUnitCount\": this.electricReading.AptunitCount,\n        \"utilityTrackerElectricityPeriodId\": this.electricReading.ElectricityPeriodId,\n        \"prevReading\": this.electricReading.PrevReading,\n        \"currReading\": this.electricReading.CurrReading,\n        \"electricalUnitPerAptUnit\": this.electricReading.ElectricalUnitPerApT,\n        \"costPerAptUnit\": this.electricReading.CostPerApt,\n        \"dateTaken\": this.electricReading.DateTaken,\n        \"comments\": this.electricReading.Comments,\n        \"isActive\": true,\n        \"insertedBy\": parseInt(this.cookieService.get('userId')),\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": 0,\n        \"updatedOn\": null\n      }\n\n      let params ={\n        utilityTrackerElectricityCharge: details\n      }\n\n      this.utilityTrackerService.addUtilityTrackerElectricityCharge(params).subscribe((res:any) => {\n\n          if(res.message) {\n            this.isReadingSubmitted = true;\n            this.resetData();\n            this.sharedService.setAlertMessage(\"Electricity reading updated successfully\");\n          }\n          else {\n            this.isError = true;\n            this.isReadingSubmitted = true;\n            this.alertMessage = res.errorMessage;\n          }\n        }, error => {\n          this.isReadingSubmitted = true;\n          this.isError = true;\n          this.alertMessage = \"Some error occured\";\n      });\n    }\n  }\n\n  calculateUnitPerAptFrmCurReading(e){\n    //this.electricReading.CurrReading = e;\n    if(this.electricReading.CurrReading && this.electricReading.PrevReading){\n      let sub = (this.electricReading.CurrReading - this.electricReading.PrevReading);\n      let result_des = sub/this.electricReading.AptunitCount;\n     this.electricReading.ElectricalUnitPerApT = result_des.toFixed(2);\n     this.electricReading.CostPerApt = (this.electricReading.ElectricalUnitPerApT * this.categoryCostPerApt).toFixed(2);\n    }\n  }\n\n  calculateUnitPerAptFrmPreReading(e){\n    //this.electricReading.PrevReading = e\n    if(this.electricReading.CurrReading && this.electricReading.PrevReading){\n      let sub = (this.electricReading.CurrReading - this.electricReading.PrevReading);\n      let result_des = sub/this.electricReading.AptunitCount;\n     this.electricReading.ElectricalUnitPerApT = result_des.toFixed(2);\n     this.electricReading.CostPerApt = (this.electricReading.ElectricalUnitPerApT * this.categoryCostPerApt).toFixed(2);\n\n    }\n  }\n\n\n  resetData(){\n    this.electricReading.fromDate = undefined;\n    this.electricReading.toDate = undefined;\n    this.electricReading.PrevReading = undefined;\n    this.electricReading.CurrReading = undefined;\n    this.electricReading.ElectricalUnitPerApT = undefined;\n    this.electricReading.Comments = undefined;\n    this.electricReading.CostPerApt = undefined;\n  }\n\n  ngOnInit(): void {\n    this.electricReading = {};\n\n    this.electricReading.dateTaken = new Date().toISOString();\n\n    let params = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n    this.apartmentService.getApartmentBlockUnitByApartmentId(params).subscribe((res:any) =>{\n      this.electricReading.AptunitCount = res.length;\n    })\n    this.utilityTrackerService.getUtilityTrackerCategorysByApartmentId(params).subscribe((res:any) => {\n        let electric_category = res.find(x=> x.category == 'Common Electricity Charges')\n        this.categoryCostPerApt = electric_category.ratePerUnit;\n      });\n   }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy91dGlsaXR5L2NvbXBvbmVudHMvdXRpbGl0eS1hZGQtcmVhZGluZy91dGlsaXR5LWFkZC1yZWFkaW5nLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Injector } from '@angular/core';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ModalService } from '../../../../shared/services/modal.service';\n\n@Component({\n  selector: 'app-utility-add-reading',\n  templateUrl: './utility-add-reading.component.html',\n  styleUrls: ['./utility-add-reading.component.scss']\n})\nexport class UtilityAddReadingComponent implements OnInit {\n\n  utilityCategoryData:any;\n  apartment_id: number;\n  isUtilityCategoryLoaded:boolean = false;\n  selected_utility_type: boolean = false;\n  utility_selected_category: any;\n  utilityReading: any;\n  selected_index: any;\n\n  modalService:any;\n\n  \n  public params = {\n    apartmentId: parseInt(this.cookieService.get('apartmentId'))\n  }\n  constructor( private injector: Injector,\n    private utilityTrackerService:UtilityTrackerService,\n  \tprivate lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) {this.modalService = this.injector.get(ModalService);\n }\n\n  loadUtilityCategory(){\n    let params = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n  this.utilityTrackerService.getUtilityTrackerCategorysByApartmentId(params).subscribe((res:any) => {\n      this.utilityCategoryData = res.filter(item => {\n          return item.isActive;\n       });\n         this.isUtilityCategoryLoaded = true;\n       },\n       error => {\n     });\n  }\n\n  onSelectCat(i){\n    this.selected_index = i;\n  }\n\n  onCancel(e){\n    this.selected_utility_type = false;\n  }\n\n  selectUtility(category){\n   this.selected_utility_type = true;\n   this.utility_selected_category = category;\n  }\n\n  ngOnInit(): void {\n    this.apartment_id = parseInt(this.cookieService.get('apartmentId'))\n    this.loadUtilityCategory()\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy91dGlsaXR5L2NvbXBvbmVudHMvdXRpbGl0eS1hZGQtcmVhZGluZy93YXRlci1yZWFkaW5nL3Rvd2VyLXJlYWRpbmctaW5mby90b3dlci1yZWFkaW5nLWluZm8uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { SharedService } from '../../../../../../shared/services/shared.service';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-tower-reading-info',\n  templateUrl: './tower-reading-info.component.html',\n  styleUrls: ['./tower-reading-info.component.scss']\n})\nexport class TowerReadingInfoComponent implements OnInit {\n\n  @Input() tower:any;\n\n  @Input() waterReadingPeriodID:any;\n\n  @Input() allApartmentWaterCharge:any;\n\n  @Input() utility_selected_category:any;\n\n  isEdit:boolean = false;\n  waterReading: any;\n  isTowersLoaded:boolean = false;\n\n  isUnitSold:boolean = false;\n  isUnitVacant:boolean = false;\n\n  towerUnitData:any;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n\n  public params = {\n    apartmentBlockId: parseInt(this.tower.apartmentBlockId)\n  }\n  constructor(\n  \tprivate apartmentService:ApartmentService,\n    private lookupService: LookupService,\n    private utilityTrackerService:UtilityTrackerService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) { }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n\n  ngOnInit() {\n\n    this.waterReading = {};\n\n    let params = {\n      apartmentBlockId: parseInt(this.tower.apartmentBlockId)\n    }\n    this.apartmentService.getApartmentBlockUnitByBlockId(params).subscribe((res: any) => {\n\n      this.towerUnitData = res;\n      this.totalItems = this.towerUnitData.length;\n\n      if (this.totalItems > this.itemLimit) {\n        this.ItemEndIndex = this.itemLimit;\n      }\n      else {\n        this.ItemEndIndex = this.totalItems;\n      }\n      for (let unit of this.towerUnitData) {\n        let block_unit = this.allApartmentWaterCharge.find(x => x.aptUnit == unit.apartmentBlockUnitNumber)\n        if (block_unit) {\n          unit.water_charge = block_unit.waterCharge[0];\n        } else {\n          unit.water_charge = {};\n        }\n      }\n      this.isTowersLoaded = true;\n\n    });\n\n  }\n\n}\n","export default \".mandatory {\\n  color: red;\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9hbXMvdXRpbGl0eS9jb21wb25lbnRzL3V0aWxpdHktYWRkLXJlYWRpbmcvd2F0ZXItcmVhZGluZy90b3dlci1yZWFkaW5nLWluZm8vdW5pdC1yZWFkaW5nLWluZm8vdW5pdC1yZWFkaW5nLWluZm8uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Ftcy91dGlsaXR5L2NvbXBvbmVudHMvdXRpbGl0eS1hZGQtcmVhZGluZy93YXRlci1yZWFkaW5nL3Rvd2VyLXJlYWRpbmctaW5mby91bml0LXJlYWRpbmctaW5mby91bml0LXJlYWRpbmctaW5mby5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQUE7RUFDQSxlQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9hbXMvdXRpbGl0eS9jb21wb25lbnRzL3V0aWxpdHktYWRkLXJlYWRpbmcvd2F0ZXItcmVhZGluZy90b3dlci1yZWFkaW5nLWluZm8vdW5pdC1yZWFkaW5nLWluZm8vdW5pdC1yZWFkaW5nLWluZm8uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFuZGF0b3J5e1xuICBjb2xvcjogcmVkO1xuICBmb250LXNpemU6IDE2cHg7XG59XG4iLCIubWFuZGF0b3J5IHtcbiAgY29sb3I6IHJlZDtcbiAgZm9udC1zaXplOiAxNnB4O1xufSJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { SharedService } from '../../../../../../../shared/services/shared.service';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\n@Component({\n  selector: 'app-unit-reading-info',\n  templateUrl: './unit-reading-info.component.html',\n  styleUrls: ['./unit-reading-info.component.scss']\n})\nexport class UnitReadingInfoComponent implements OnInit {\n\n  @Input() tower:any;\n  @Input() unit:any;\n  @Input() waterReadingPeriodID:any;\n  @Input() utility_selected_category:any;\n\n  unitTypeData:any;\n  unitTypeId:any;\n\n  categoryCostPerApt: any;\n  waterReading: any;\n  isError: boolean = false;\n  alertMessage:string = \"\";\n\n  isEdit:boolean = false;\n\n  constructor(\n  \tprivate apartmentService:ApartmentService,\n    private lookupService: LookupService,\n    private utilityTrackerService:UtilityTrackerService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) { }\n\n  showEditForm(){\n  \tthis.isEdit = !this.isEdit;\n  }\n\n  getBooleanStatus(status){\n    return status ? 'Yes' : 'No'\n  }\n\n  getUnitType(name){\n\n    var data = _.filter( this.unitTypeData, function( item ) {\n      if(item.lookupValueName === name)\n        return item;\n    } );\n\n    if(data === undefined || data.length == 0){\n      this.unitTypeId = \"\";\n    }\n    else {\n      this.unitTypeId = data[0].lookupValueId;\n    }\n  }\n\n\n  submitWaterMeterReading(form){\n\n  \tlet details = {\n\n      \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n      \"apartmentBlockId\": this.tower.apartmentBlockId,\n      \"apartmentBlockUnitId\": this.unit.apartmentBlockUnitId,\n      \"waterChargeTypeId\": null,\n      \"utilityTrackerWaterChargePeriodId\": this.waterReadingPeriodID,\n      \"prevReading\": this.waterReading.prevReading,\n      \"currReading\": this.waterReading.currReading,\n      \"units\": this.waterReading.units,\n      \"unitNumber\": null,\n      \"cost\": parseInt(this.waterReading.cost),\n      \"dateTaken\": this.waterReading.dateTaken,\n      \"comments\": this.waterReading.comments,\n      \"isActive\": true,\n      \"insertedBy\": parseInt(this.cookieService.get('userId')),\n      \"insertedOn\": new Date().toISOString(),\n      \"updatedBy\":null,\n      \"updatedOn\": null\n\t}\n\n  let params = {\n    utilityTrackerWaterCharge: details\n  }\n\n  this.utilityTrackerService.addUtilityTrackerWaterCharge(params).subscribe((res:any) => {\n\n      if(res.message) {\n        this.isEdit = false;\n        this.sharedService.setAlertMessage(\"Water reading added successfully\");\n      }\n      else {\n        this.isError = true;\n        this.alertMessage = res.errorMessage;\n      }\n    }, error => {\n       this.isError = true;\n       this.alertMessage = \"Some error occured\";\n   });\n  }\n\n  calculateUnitPerAptFrmCurReading(e){\n    if(this.waterReading.currReading && this.waterReading.prevReading){\n      this.waterReading.units = (this.waterReading.currReading - this.waterReading.prevReading);\n     this.waterReading.cost = (this.waterReading.units * this.utility_selected_category.ratePerUnit).toFixed(2);\n    }\n  }\n\n  calculateUnitPerAptFrmPreReading(e){\n    if(this.waterReading.currReading && this.waterReading.prevReading){\n      this.waterReading.units = (this.waterReading.currReading - this.waterReading.prevReading);\n     this.waterReading.cost = (this.waterReading.units * this.utility_selected_category.ratePerUnit).toFixed(2);\n    }\n  }\n\n\n  ngOnInit() {\n    this.waterReading = {};\n    //let apartment_id = parseInt(this.cookieService.get('apartmentId'));\n    if(this.unit.water_charge == undefined){\n      this.unit.water_charge = {};\n    }\n    if(this.unit.water_charge.prevReading && this.unit.water_charge.currReading){\n      this.isEdit = false;\n      this.waterReading.units = (this.unit.water_charge.currReading - this.unit.water_charge.prevReading);\n    }else{\n      this.isEdit = true;\n    }\n    this.waterReading.prevReading = this.unit.water_charge.prevReading;\n    this.waterReading.currReading = this.unit.water_charge.currReading;\n    this.waterReading.dateTaken = new Date().toISOString();\n\n  \tthis.unitTypeId = \"\";\n\n  \t//get unit type\n    let params = {\n      LookupTypeId: 1\n    }\n    this.lookupService.getLookupValueByLookupTypeId(params).subscribe((res:any) => {\n      this.unitTypeData = res;\n\n      setTimeout(() => {\n      \tthis.getUnitType(this.unit.unitType);\n      }, 1000);\n\n    },\n    error => {\n\n    });\n\n   }\n\n  }\n","export default \".mandatory {\\n  color: red;\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9hbXMvdXRpbGl0eS9jb21wb25lbnRzL3V0aWxpdHktYWRkLXJlYWRpbmcvd2F0ZXItcmVhZGluZy93YXRlci1yZWFkaW5nLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hbXMvdXRpbGl0eS9jb21wb25lbnRzL3V0aWxpdHktYWRkLXJlYWRpbmcvd2F0ZXItcmVhZGluZy93YXRlci1yZWFkaW5nLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBQTtFQUNBLGVBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL2Ftcy91dGlsaXR5L2NvbXBvbmVudHMvdXRpbGl0eS1hZGQtcmVhZGluZy93YXRlci1yZWFkaW5nL3dhdGVyLXJlYWRpbmcuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFuZGF0b3J5e1xuICBjb2xvcjogcmVkO1xuICBmb250LXNpemU6IDE2cHg7XG59XG4iLCIubWFuZGF0b3J5IHtcbiAgY29sb3I6IHJlZDtcbiAgZm9udC1zaXplOiAxNnB4O1xufSJdfQ== */\"","import { Component, OnInit, Output,Input,  EventEmitter } from '@angular/core';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { SharedService } from '../../../../../shared/services/shared.service';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\n\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-water-reading',\n  templateUrl: './water-reading.component.html',\n  styleUrls: ['./water-reading.component.scss']\n})\nexport class WaterReadingComponent implements OnInit {\n\n  @Output() onCancel = new EventEmitter();\n  @Input() utility_selected_category:any;\n\n  isDataLoaded:boolean = false;\n  isSetPeriod:boolean = true;\n\n  propertyTowerData:any;\n\n  waterReadingFromDate: any\n  waterReadingToDate: any\n  allApartmentWaterCharge: any;\n\n  waterReadingPeriodID: any;\n\n  unitsLength:any;\n\n  public params = {\n    apartmentId: parseInt(this.cookieService.get('apartmentId'))\n  }\n  constructor(\n  \tprivate apartmentService:ApartmentService,\n    private lookupService: LookupService,\n    private utilityTrackerService:UtilityTrackerService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) { }\n\n  cancel(){\n    this.onCancel.emit(false)\n  }\n\n  submitReadingPeriodForm(form){\n    this.isSetPeriod = false;\n    let water_reading_period = {\n\n      \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n      \"periodFrom\": this.waterReadingFromDate,\n      \"periodTo\": this.waterReadingToDate,\n      \"isActive\": true,\n      \"insertedBy\": parseInt(this.cookieService.get('userId')),\n      \"insertedOn\": new Date().toISOString(),\n      \"updatedBy\": 0,\n      \"updatedOn\": null\n    }\n\n    let params = {\n      utilityTrackerWaterChargePeriod: water_reading_period\n    }\n\n    this.utilityTrackerService.addUtilityTrackerWaterChargePeriod(params).subscribe((period_res:any) =>{\n      this.waterReadingPeriodID = period_res.message\n      this.isSetPeriod = true;\n    })\n  }\n\n  ngOnInit() {\n    this.waterReadingPeriodID = undefined;\n    let params = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n  \tthis.apartmentService.getApartmentBlockByApartmentId(params).subscribe((res:any) => {\n  \t\tthis.propertyTowerData = res;\n  \t\tthis.isDataLoaded = true;\n\n  \t});\n\n    this.utilityTrackerService.getUtilityTrackerWaterChargesByApartmentId(params).subscribe((res:any) => {\n      this.allApartmentWaterCharge = res;\n    });\n\n  }\n\n}\n","export default \".mandatory {\\n  color: red;\\n  font-size: 16px;\\n}\\n\\n.filter-width {\\n  width: 150px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9hbXMvdXRpbGl0eS9jb21wb25lbnRzL3V0aWxpdHktaGlzdG9yeS91dGlsaXR5LWhpc3RvcnkuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Ftcy91dGlsaXR5L2NvbXBvbmVudHMvdXRpbGl0eS1oaXN0b3J5L3V0aWxpdHktaGlzdG9yeS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQUE7RUFDQSxlQUFBO0FDQ0Y7O0FERUE7RUFDRSxZQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9hbXMvdXRpbGl0eS9jb21wb25lbnRzL3V0aWxpdHktaGlzdG9yeS91dGlsaXR5LWhpc3RvcnkuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFuZGF0b3J5e1xuICBjb2xvcjogcmVkO1xuICBmb250LXNpemU6IDE2cHg7XG59XG5cbi5maWx0ZXItd2lkdGh7XG4gIHdpZHRoOiAxNTBweDtcbn1cbiIsIi5tYW5kYXRvcnkge1xuICBjb2xvcjogcmVkO1xuICBmb250LXNpemU6IDE2cHg7XG59XG5cbi5maWx0ZXItd2lkdGgge1xuICB3aWR0aDogMTUwcHg7XG59Il19 */\"","import { Component, OnInit, Injector } from '@angular/core';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\n\nimport { ModalService } from '../../../../shared/services/modal.service';\n\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-utility-history',\n  templateUrl: './utility-history.component.html',\n  styleUrls: ['./utility-history.component.scss']\n})\nexport class UtilityHistoryComponent implements OnInit {\n\n  utilityCategoryData:string = \"\";\n\n  isUtilityCategoryLoaded:boolean = false;\n  isUltilityElectricHisLoaded:boolean = false;\n  isUltilityWaterHisLoaded: boolean = false;\n  isUltilityInsuranceHisLoaded: boolean = false;\n  selectedUtilityCategory: any;\n  filteredUtilityWaterListData: any;\n  propertyTowerData: any;\n  selectedTower: any;\n\n\n  utilitySearch:string = \"\";\n\n  utilityElecteicalListPeriods: any;\n\n  apartment_id: number;\n  utilityElecteicalListData:any;\n  utilityWaterListData:any;\n  utilityInsuranceListData:any;\n\n  unitFieldType:string = \"utilityName\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n  totalFilterItems:any;\n\n  selectedInput:string = \"\";\n  columnField: any = {}\n\n  modalService:any;\n\n  public params = {\n    apartmentId: parseInt(this.cookieService.get('apartmentId'))\n  }\n  constructor(\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private apartmentService:ApartmentService,\n    private utilityTrackerService:UtilityTrackerService,\n    private cookieService:CookieService\n  ) {\n\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  selectColInput(value){\n    this.selectedInput = value;\n  }\n\n  isWaterHistory(){\n    if(this.selectedUtilityCategory == 'Water Meter Charges'){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n  onFilterByTowerChange(){\n    console.log(\"this.selectedTower\", this.selectedTower)\n    if(this.selectedTower == 'All'){\n      this.filteredUtilityWaterListData= this.utilityWaterListData;\n    }else{\n      this.filteredUtilityWaterListData= this.utilityWaterListData.filter(x=> x.block == this.selectedTower);\n   }\n   this.totalItems = this.filteredUtilityWaterListData.length;\n  }\n\n  onUtilityCatregoryChange(){\n   this.ItemStartIndex = 0;\n\n\n   if(this.selectedUtilityCategory == 'Common Electricity Charges' ){\n     this.isUltilityWaterHisLoaded = false;\n     this.isUltilityInsuranceHisLoaded = false;\n     this.getAllElectricalUtiliy();\n\n    }else if(this.selectedUtilityCategory == 'Water Meter Charges' ){\n      this.isUltilityElectricHisLoaded = false;\n      this.isUltilityInsuranceHisLoaded = false;\n     this.getAllWaterUtiliy();\n\n    }else if(this.selectedUtilityCategory == 'Common Insurance'){\n     this.isUltilityWaterHisLoaded = false;\n     this.isUltilityElectricHisLoaded = false;\n     this.getAllInsuranceUtiliy();\n\n   }else if(this.selectedUtilityCategory == 'undefined'){\n     this.selectedUtilityCategory = undefined;\n   }\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  isNoItemsAvailable(){\n    return this.totalItems == 0 ? true : false;\n  }\n\n  getUtilityFromPeriod(period_id){\n    let electeicalListPeriods = this.utilityElecteicalListPeriods.find(x=> x.period_id == period_id);\n    if(electeicalListPeriods){\n      return  electeicalListPeriods.periods[0].periodFrom.slice(0,10)\n    }\n  }\n\n  getUtilityToPeriod(period_id){\n    let electeicalListPeriods = this.utilityElecteicalListPeriods.find(x=> x.period_id == period_id);\n    if(electeicalListPeriods){\n      return electeicalListPeriods.periods[0].periodTo.slice(0,10)\n    }\n  }\n\n\n  getAllElectricalUtiliy(){\n  this.isUltilityElectricHisLoaded = false;\n  let params = {\n    apartmentId: parseInt(this.cookieService.get('apartmentId'))\n  }\n  this.utilityTrackerService.getElectricityChargesByApartmentId(params).subscribe((res: any) => {\n    this.utilityElecteicalListData = res.filter(item => {\n      return item.isActive;\n    });\n    this.utilityElecteicalListPeriods = []\n    for(let electrical_list of this.utilityElecteicalListData){\n    let period_param = {\"apartmentId\": parseInt(this.cookieService.get('apartmentId')), \"utilityTrackerElectricityPeriodId\": electrical_list.utilityTrackerElectricityPeriodId}\n    this.utilityTrackerService.getUtilityTrackerElectricityPeriodsById(period_param).subscribe((res: any) => {\n\n      let period_data={\"periods\": res, \"period_id\": electrical_list.utilityTrackerElectricityPeriodId}\n      this.utilityElecteicalListPeriods.push(period_data)\n    })\n   }\n\n    this.totalItems = this.utilityElecteicalListData.length;\n\n    if (this.totalItems > this.itemLimit) {\n      this.ItemEndIndex = this.itemLimit;\n    }\n    else {\n      this.ItemEndIndex = this.totalItems;\n    }\n\n    this.isUltilityElectricHisLoaded = true;\n\n  });\n\n}\n\n\ngetAllWaterUtiliy(){\nthis.selectedTower = 'All';\nthis.isUltilityWaterHisLoaded = false;\nlet params = {\n  apartmentId: parseInt(this.cookieService.get('apartmentId'))\n}\nthis.utilityTrackerService.getUtilityTrackerWaterChargesByApartmentId(params).subscribe((res: any) => {\n\n  this.utilityWaterListData = res;\n  this.filteredUtilityWaterListData= this.utilityWaterListData;\n  this.totalItems = this.filteredUtilityWaterListData.length;\n\n  if (this.totalItems > this.itemLimit) {\n    this.ItemEndIndex = this.itemLimit;\n  }\n  else {\n    this.ItemEndIndex = this.totalItems;\n  }\n\n  this.isUltilityWaterHisLoaded = true;\n\n});\n\n}\n\n\ngetAllInsuranceUtiliy(){\nthis.isUltilityInsuranceHisLoaded = false;\nlet params = {\n  apartmentId: parseInt(this.cookieService.get('apartmentId'))\n}\nthis.utilityTrackerService.getUtilityTrackerInsuranceChargesByApartmentId(params).subscribe((res: any) => {\n\n  this.utilityInsuranceListData = res.filter(item => {\n    return item.isActive;\n  });\n  this.utilityInsuranceListData.sort(function(a, b) {\n    a = new Date(a.dateEntered);\n    b = new Date(b.dateEntered);\n    return a>b ? -1 : a<b ? 1 : 0;\n  });\n  this.totalItems = this.utilityInsuranceListData.length;\n\n  if (this.totalItems > this.itemLimit) {\n    this.ItemEndIndex = this.itemLimit;\n  }\n  else {\n    this.ItemEndIndex = this.totalItems;\n  }\n\n  this.isUltilityInsuranceHisLoaded = true;\n\n});\n\n}\n\n\n  ngOnInit() {\n\n    let params = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n     }\n      this.utilityTrackerService.getUtilityTrackerCategorysByApartmentId(params).subscribe((res: any) => {\n      this.utilityCategoryData = res.filter(item => {\n        return item.isActive;\n      });\n      this.isUtilityCategoryLoaded = true;\n    },\n      error => {\n      });\n      this.apartmentService.getApartmentBlockByApartmentId(params).subscribe((res:any) => {\n        \tthis.propertyTowerData = res;\n    });\n   }\n\n  }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy91dGlsaXR5L2NvbXBvbmVudHMvdXRpbGl0eS1yZXBvcnRzL2VsZWN0cmljaXR5LXJlcG9ydC9lbGVjdHJpY2l0eS1yZXBvcnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Injector } from '@angular/core';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from '../../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\n\nimport { ModalService } from '../../../../../shared/services/modal.service';\n\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-electricity-report',\n  templateUrl: './electricity-report.component.html',\n  styleUrls: ['./electricity-report.component.scss']\n})\nexport class ElectricityReportComponent implements OnInit {\n\n\n  isReportLoaded: boolean = false;\n  propertyTowerData: any;\n  selectedTower: any;\n\n  utilitySearch:string = \"\";\n\n  utilityElecteicalListPeriods: any;\n\n  apartment_id: number;\n  utilityElecteicalListData:any;\n\n  unitFieldType:string = \"utilityName\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n  totalFilterItems:any;\n\n  selectedInput:string = \"\";\n  columnField: any = {}\n\n  modalService:any;\n\n  public params = {\n    apartmentId: parseInt(this.cookieService.get('apartmentId'))\n  }\n  constructor(\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private apartmentService:ApartmentService,\n    private utilityTrackerService:UtilityTrackerService,\n    private cookieService:CookieService\n  ) {\n\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  selectColInput(value){\n    this.selectedInput = value;\n  }\n\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  isNoItemsAvailable(){\n    return this.totalItems == 0 ? true : false;\n  }\n\n  getUtilityFromPeriod(period_id){\n    let electeicalListPeriods = this.utilityElecteicalListPeriods.find(x=> x.period_id == period_id);\n    if(electeicalListPeriods){\n      return  electeicalListPeriods.periods[0].periodFrom.slice(0,10)\n    }\n  }\n\n  getUtilityToPeriod(period_id){\n    let electeicalListPeriods = this.utilityElecteicalListPeriods.find(x=> x.period_id == period_id);\n    if(electeicalListPeriods){\n      return electeicalListPeriods.periods[0].periodTo.slice(0,10)\n    }\n  }\n\n\n  getAllElectricalUtiliy(){\n  this.isReportLoaded = false;\n  let params = {\n    apartmentId: parseInt(this.cookieService.get('apartmentId'))\n  }\n  this.utilityTrackerService.getElectricityChargesByApartmentId(params).subscribe((res: any) => {\n    this.utilityElecteicalListData = res.filter(item => {\n      return item.isActive;\n    });\n    this.utilityElecteicalListPeriods = []\n    for(let electrical_list of this.utilityElecteicalListData){\n    let period_param = {\"apartmentId\": parseInt(this.cookieService.get('apartmentId')), \"utilityTrackerElectricityPeriodId\": electrical_list.utilityTrackerElectricityPeriodId}\n    this.utilityTrackerService.getUtilityTrackerElectricityPeriodsById(period_param).subscribe((res: any) => {\n\n      let period_data={\"periods\": res, \"period_id\": electrical_list.utilityTrackerElectricityPeriodId}\n      this.utilityElecteicalListPeriods.push(period_data)\n    })\n   }\n\n    this.totalItems = this.utilityElecteicalListData.length;\n\n    if (this.totalItems > this.itemLimit) {\n      this.ItemEndIndex = this.itemLimit;\n    }\n    else {\n      this.ItemEndIndex = this.totalItems;\n    }\n\n    this.isReportLoaded = true;\n\n  });\n\n}\n\n\n  ngOnInit() {\n    this.getAllElectricalUtiliy();\n   }\n  }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy91dGlsaXR5L2NvbXBvbmVudHMvdXRpbGl0eS1yZXBvcnRzL2luc3VyYW5jZS1yZXBvcnQvaW5zdXJhbmNlLXJlcG9ydC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Injector } from '@angular/core';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from '../../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\n\nimport { ModalService } from '../../../../../shared/services/modal.service';\n\nimport * as _ from 'underscore';\n@Component({\n  selector: 'app-insurance-report',\n  templateUrl: './insurance-report.component.html',\n  styleUrls: ['./insurance-report.component.scss']\n})\nexport class InsuranceReportComponent implements OnInit {\n\n  isReportLoaded:boolean = false;\n\n  filteredUtilityWaterListData: any;\n  propertyTowerData: any;\n  selectedTower: any;\n\n\n  utilitySearch:string = \"\";\n\n  utilityElecteicalListPeriods: any;\n\n  apartment_id: number;\n  utilityInsuranceListData:any;\n\n  unitFieldType:string = \"utilityName\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n  totalFilterItems:any;\n\n  selectedInput:string = \"\";\n  columnField: any = {}\n\n  modalService:any;\n\n  public params = {\n    apartmentId: parseInt(this.cookieService.get('apartmentId'))\n  }\n  constructor(\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private apartmentService:ApartmentService,\n    private utilityTrackerService:UtilityTrackerService,\n    private cookieService:CookieService\n  ) {\n\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  selectColInput(value){\n    this.selectedInput = value;\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  isNoItemsAvailable(){\n    return this.totalItems == 0 ? true : false;\n  }\n\n  getUtilityFromPeriod(period_id){\n    let electeicalListPeriods = this.utilityElecteicalListPeriods.find(x=> x.period_id == period_id);\n    if(electeicalListPeriods){\n      return  electeicalListPeriods.periods[0].periodFrom.slice(0,10)\n    }\n  }\n\n  getUtilityToPeriod(period_id){\n    let electeicalListPeriods = this.utilityElecteicalListPeriods.find(x=> x.period_id == period_id);\n    if(electeicalListPeriods){\n      return electeicalListPeriods.periods[0].periodTo.slice(0,10)\n    }\n  }\n\n\ngetAllInsuranceUtiliy(){\n  this.isReportLoaded = false;\n  let params = {\n    apartmentId: parseInt(this.cookieService.get('apartmentId'))\n  }\n  this.utilityTrackerService.getUtilityTrackerInsuranceChargesByApartmentId(params).subscribe((res: any) => {\n\n    this.utilityInsuranceListData = res.filter(item => {\n      return item.isActive;\n    });\n    this.utilityInsuranceListData.sort(function(a, b) {\n      a = new Date(a.dateEntered);\n      b = new Date(b.dateEntered);\n      return a>b ? -1 : a<b ? 1 : 0;\n    });\n    this.totalItems = this.utilityInsuranceListData.length;\n\n    if (this.totalItems > this.itemLimit) {\n      this.ItemEndIndex = this.itemLimit;\n    }\n    else {\n      this.ItemEndIndex = this.totalItems;\n    }\n\n    this.isReportLoaded = true;\n\n  });\n\n}\n\n  ngOnInit() {\n\n  this.getAllInsuranceUtiliy()\n\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy91dGlsaXR5L2NvbXBvbmVudHMvdXRpbGl0eS1yZXBvcnRzL3V0aWxpdHktcmVwb3J0cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-utility-reports',\n  templateUrl: './utility-reports.component.html',\n  styleUrls: ['./utility-reports.component.scss']\n})\nexport class UtilityReportsComponent implements OnInit {\n\n  reportDataList: any;\n  isDataLoaded:boolean = false;\n\n  constructor(private cookieService:CookieService) { }\n\n  ngOnInit() {\n    this.reportDataList = [\n      {lookupValueId: 'electricity',lookupValueName: 'List of electrical reading', description:'Gives the list of electrical reading in the condo',type:'customer'},\n      {lookupValueId: 'water', lookupValueName: 'List of water reading',description:'Gives the list of  water reading in the condo',type:'customer'},\n      {lookupValueId: 'insurance', lookupValueName: 'List of insurance charges',description:'Gives the list of insurance charges in the condo',type:'customer'},\n\n    ]\n     this.isDataLoaded = true;\n   }\n\n}\n","export default \".filter-width {\\n  width: 150px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9hbXMvdXRpbGl0eS9jb21wb25lbnRzL3V0aWxpdHktcmVwb3J0cy93YXRlci1yZXBvcnQvd2F0ZXItcmVwb3J0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hbXMvdXRpbGl0eS9jb21wb25lbnRzL3V0aWxpdHktcmVwb3J0cy93YXRlci1yZXBvcnQvd2F0ZXItcmVwb3J0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvYW1zL3V0aWxpdHkvY29tcG9uZW50cy91dGlsaXR5LXJlcG9ydHMvd2F0ZXItcmVwb3J0L3dhdGVyLXJlcG9ydC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5maWx0ZXItd2lkdGh7XG4gIHdpZHRoOiAxNTBweDtcbn1cbiIsIi5maWx0ZXItd2lkdGgge1xuICB3aWR0aDogMTUwcHg7XG59Il19 */\"","import { Component, OnInit, Injector } from '@angular/core';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from '../../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\n\nimport { ModalService } from '../../../../../shared/services/modal.service';\n\nimport * as _ from 'underscore';\n@Component({\n  selector: 'app-water-report',\n  templateUrl: './water-report.component.html',\n  styleUrls: ['./water-report.component.scss']\n})\nexport class WaterReportComponent implements OnInit {\n\n\n  isReportLoaded:boolean = false;\n\n  filteredUtilityWaterListData: any;\n  propertyTowerData: any;\n  selectedTower: any;\n\n\n  utilitySearch:string = \"\";\n\n  utilityElecteicalListPeriods: any;\n\n  apartment_id: number;\n  utilityWaterListData:any;\n\n  unitFieldType:string = \"utilityName\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n  totalFilterItems:any;\n\n  selectedInput:string = \"\";\n  columnField: any = {}\n\n  modalService:any;\n\n  public params = {\n    apartmentId: parseInt(this.cookieService.get('apartmentId'))\n  }\n  constructor(\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private apartmentService:ApartmentService,\n    private utilityTrackerService:UtilityTrackerService,\n    private cookieService:CookieService\n  ) {\n\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  selectColInput(value){\n    this.selectedInput = value;\n  }\n\n\n  onFilterByTowerChange(){\n    console.log(\"this.selectedTower\", this.selectedTower)\n    if(this.selectedTower == 'All'){\n      this.filteredUtilityWaterListData= this.utilityWaterListData;\n    }else{\n      this.filteredUtilityWaterListData= this.utilityWaterListData.filter(x=> x.block == this.selectedTower);\n   }\n   this.totalItems = this.filteredUtilityWaterListData.length;\n  }\n\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  isNoItemsAvailable(){\n    return this.totalItems == 0 ? true : false;\n  }\n\n  getUtilityFromPeriod(period_id){\n    let electeicalListPeriods = this.utilityElecteicalListPeriods.find(x=> x.period_id == period_id);\n    if(electeicalListPeriods){\n      return  electeicalListPeriods.periods[0].periodFrom.slice(0,10)\n    }\n  }\n\n  getUtilityToPeriod(period_id){\n    let electeicalListPeriods = this.utilityElecteicalListPeriods.find(x=> x.period_id == period_id);\n    if(electeicalListPeriods){\n      return electeicalListPeriods.periods[0].periodTo.slice(0,10)\n    }\n  }\n\n\n\ngetAllWaterUtiliy(){\n  this.selectedTower = 'All';\n  this.isReportLoaded = false;\n  let params = {\n    apartmentId: parseInt(this.cookieService.get('apartmentId'))\n  }\n  this.utilityTrackerService.getUtilityTrackerWaterChargesByApartmentId(params).subscribe((res: any) => {\n\n    this.utilityWaterListData = res;\n    this.filteredUtilityWaterListData= this.utilityWaterListData;\n    this.totalItems = this.filteredUtilityWaterListData.length;\n\n    if (this.totalItems > this.itemLimit) {\n      this.ItemEndIndex = this.itemLimit;\n    }\n    else {\n      this.ItemEndIndex = this.totalItems;\n    }\n\n    this.isReportLoaded = true;\n\n  });\n\n}\n\n\n  ngOnInit() {\n    let params = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n     }\n      this.apartmentService.getApartmentBlockByApartmentId(params).subscribe((res:any) => {\n        this.propertyTowerData = res;\n    });\n     this.getAllWaterUtiliy()\n   }\n\n  }\n","export default \".mandatory {\\n  color: red;\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9hbXMvdXRpbGl0eS9jb21wb25lbnRzL3V0aWxpdHktc2V0dXAvdXRpbGl0eS1zZXR1cC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYW1zL3V0aWxpdHkvY29tcG9uZW50cy91dGlsaXR5LXNldHVwL3V0aWxpdHktc2V0dXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFBO0VBQ0EsZUFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvYW1zL3V0aWxpdHkvY29tcG9uZW50cy91dGlsaXR5LXNldHVwL3V0aWxpdHktc2V0dXAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFuZGF0b3J5e1xuICBjb2xvcjogcmVkO1xuICBmb250LXNpemU6IDE2cHg7XG59XG4iLCIubWFuZGF0b3J5IHtcbiAgY29sb3I6IHJlZDtcbiAgZm9udC1zaXplOiAxNnB4O1xufSJdfQ== */\"","import { Component, OnInit, Injector } from '@angular/core';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ModalService } from '../../../../shared/services/modal.service';\n\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-utility-setup',\n  templateUrl: './utility-setup.component.html',\n  styleUrls: ['./utility-setup.component.scss']\n})\nexport class UtilitySetupComponent implements OnInit {\n\n  utilityCategoryData:any;\n  apartment_id: number;\n\n  isUtilityCategoryLoaded:boolean = false;\n  isUtilityCategorySubmitted:boolean = true;\n\n  isUtilityCategoryNew:boolean = false;\n  isUtilityCategoryUpdate:boolean = false;\n\n  selectedItem: any;\n\n  UtilityCategory:string = \"\";\n  UtilityRateUnit:number;\n  UtilityCategoryUpdateId:number = 0;\n\n  alertMessage:string = \"\";\n  isError:boolean = false;\n\n  utilityListData:any;\n\n  modalService:any;\n\n  public params = {\n    apartmentId: parseInt(this.cookieService.get('apartmentId'))\n  }\n  constructor(\n    private injector: Injector,\n    private utilityTrackerService:UtilityTrackerService,\n  \tprivate lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) {this.modalService = this.injector.get(ModalService);\n }\n\n  addNewUtilityCategory(){\n    this.UtilityCategory = \"\";\n    this.UtilityRateUnit = undefined;\n  \tthis.isUtilityCategoryNew = true;\n  \tthis.isUtilityCategoryUpdate = false;\n  }\n\n  updateUtilityCategory(item){\n  \tthis.isUtilityCategoryUpdate = true;\n  \tthis.isUtilityCategoryNew = false;\n    this.selectedItem = item;\n  \tthis.UtilityCategory = item.category;\n    this.UtilityRateUnit =  item.ratePerUnit;\n  \tthis.UtilityCategoryUpdateId = item.utilityTrackerCategoryId;\n  }\n\n  deleteUtilityCategory(item){\n\n  \tthis.isUtilityCategoryLoaded = false;\n    console.log(item);\n  \tvar params = {\n      utilityId: item.utilityTrackerCategoryId,\n      deleteBy: parseInt(this.cookieService.get('userId'))\n    }\n\n  \tthis.utilityTrackerService.deleteUtilityTrackerCategory(params).subscribe((res:any) => {\n      this.loadUtilityCategory()\n  \t});\n  }\n\n  showConfirmModal(form) {\n    if (this.isUtilityCategoryNew) {\n    //  this.modalService.showCategoryModal(form);\n     this.submitUtilityCategoryForm(form)\n    } else {\n      this.addOrUpdateUtilityCategoryForm(form)\n    }\n }\n\n showRemoveCategoryConfirmModal(item) {\n    this.modalService.showConfirmModal(item);\n }\n\n  removeCategoryBox(){\n  \tthis.isUtilityCategoryNew = false;\n  \tthis.isUtilityCategoryUpdate = false;\n    this.isUtilityCategorySubmitted = true;\n  \tthis.isError = false;\n  }\n\n  getUtilitysCount(id){\n\n    var data = this.utilityListData.filter( item => {\n      return item.utilityCategoryId == id;\n    });\n\n    if(data === undefined || data.length === 0) {\n      return 0\n    }\n    else {\n      return data.length\n    }\n\n  }\n\n  submitUtilityCategoryForm(form) {\n   //adding new category not supporting  now..\n   this.isError = true;\n\n    this.alertMessage = \"Please raise Service Ticket\"\n  }\n\n  addOrUpdateUtilityCategoryForm(form) {\n\n  \tthis.isUtilityCategorySubmitted = false;\n    this.isError = false;\n\n  \tif(this.isUtilityCategoryNew) {\n\n  \t\tlet details = {\n\n\t\t  \"apartmentId\": this.apartment_id,\n\t\t  \"category\": this.UtilityCategory,\n\t\t  \"ratePerUnit\": this.UtilityRateUnit,\n      \"comments\": \"\",\n\t\t  \"isActive\": true,\n\t\t  \"insertedBy\": parseInt(this.cookieService.get('userId')),\n\t\t  \"insertedOn\": new Date().toISOString(),\n\t\t  \"updatedBy\": null,\n\t\t  \"updatedOn\": null,\n\n\t\t}\n\n    let params = {\n      utilityTrackerCategory: details\n    }\n\n\t\tthis.utilityTrackerService.addUtilityTrackerCategory(params).subscribe((res:any) => {\n\n\t  \t\tif(res.message) {\n          let params = {\n            apartmentId: parseInt(this.cookieService.get('apartmentId'))\n          }\n\t  \t\t\tthis.utilityTrackerService.getUtilityTrackerCategorysByApartmentId(params).subscribe((res:any) => {\n\t  \t\t\t\tthis.isUtilityCategorySubmitted = true;\n\t\t          \tthis.sharedService.setAlertMessage(\"Category added Successfully!\");\n\n\t\t          \tthis.utilityCategoryData = res.filter(item => {\n\t                \treturn item.isActive;\n\t              \t});\n\n\t  \t\t\t});\n\t  \t\t}\n\t  \t\telse {\n\t  \t\t\tthis.isUtilityCategorySubmitted = true;\n\t          \tthis.isError = true;\n\t          \tthis.alertMessage = res.errorMessage;\n\t  \t\t}\n  \t\t});\n  \t}\n  \telse {\n\n  \t\tlet details = {\n\n        \"utilityTrackerCategoryId\": this.UtilityCategoryUpdateId,\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n  \t\t  \"category\": this.UtilityCategory,\n  \t\t  \"ratePerUnit\": this.UtilityRateUnit,\n        \"comments\": \"\",\n  \t\t  \"isActive\": true,\n  \t\t  \"insertedBy\": this.selectedItem.insertedBy,\n  \t\t  \"insertedOn\": this.selectedItem.insertedOn,\n  \t\t  \"updatedBy\": parseInt(this.cookieService.get('userId')),\n  \t\t  \"updatedOn\": new Date().toISOString(),\n\n\t\t}\n    let params = {\n      utilityTrackerCategory: details\n    }\n\n\t\tthis.utilityTrackerService.updateUtilityTrackerCategory(params).subscribe((res:any) => {\n\n\t  \t\tif(res.message) {\n          let params = {\n            apartmentId: parseInt(this.cookieService.get('apartmentId'))\n          }\n\t        this.utilityTrackerService.getUtilityTrackerCategorysByApartmentId(params).subscribe((res:any) => {\n\t  \t\t\t\tthis.isUtilityCategorySubmitted = true;\n\t  \t\t\t\tthis.sharedService.setAlertMessage(\"Category updated Successfully!\");\n\n\t\t          \tthis.utilityCategoryData = res.filter(item => {\n\t                \treturn item.isActive;\n\t              \t});\n                  this.isUtilityCategoryNew = false;\n                  this.isUtilityCategoryUpdate = false;\n\n\t  \t\t\t});\n\t  \t\t}\n\t  \t\telse {\n\t  \t\t\tthis.isUtilityCategorySubmitted = true;\n\t          \tthis.isError = true;\n\t          \tthis.alertMessage = res.errorMessage;\n\t  \t\t}\n  \t\t});\n  \t}\n   }\n\n   loadUtilityCategory(){\n     let params = {\n       apartmentId: parseInt(this.cookieService.get('apartmentId'))\n     }\n\t this.utilityTrackerService.getUtilityTrackerCategorysByApartmentId(params).subscribe((res:any) => {\n       this.utilityCategoryData = res.filter(item => {\n           return item.isActive;\n        });\n          this.isUtilityCategoryLoaded = true;\n        },\n        error => {\n      });\n   }\n\n  ngOnInit() {\n    this.apartment_id = parseInt(this.cookieService.get('apartmentId'))\n    this.loadUtilityCategory()\n\n    this.sharedService.newcategoryadd.subscribe(is_category_form => {\n\n      if(is_category_form){\n        this.submitUtilityCategoryForm(is_category_form);\n      }\n    })\n\n    this.sharedService.unitlistdeleteindexcast.subscribe(item_id => {\n\n      if(item_id){\n        this.deleteUtilityCategory(item_id);\n      }\n    })\n }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from '../.././auth.guard';\n\nimport { UtilityComponent } from './utility.component';\nimport { UtilityReportsComponent } from './components/utility-reports/utility-reports.component';\nimport { ElectricityReportComponent } from './components/utility-reports/electricity-report/electricity-report.component';\nimport { InsuranceReportComponent } from './components/utility-reports/insurance-report/insurance-report.component';\nimport { WaterReportComponent } from './components/utility-reports/water-report/water-report.component';\nimport { UtilitySetupComponent } from './components/utility-setup/utility-setup.component';\nimport { UtilityAddReadingComponent } from './components/utility-add-reading/utility-add-reading.component';\nimport { ElectricityReadingComponent } from './components/utility-add-reading/electricity-reading/electricity-reading.component';\nimport { WaterReadingComponent } from './components/utility-add-reading/water-reading/water-reading.component';\nimport { UtilityHistoryComponent } from './components/utility-history/utility-history.component';\n\nconst routes: Routes = [\n\n\t{ path: '', redirectTo: 'settings', pathMatch: 'full'},\n\t{ path: 'settings', component: UtilitySetupComponent},\n\t{ path: 'reading', component: UtilityAddReadingComponent},\n\t{ path: 'reading/electric', component: ElectricityReadingComponent},\n\t{ path: 'reading/water', component: WaterReadingComponent},\n\t{ path: 'history', component: UtilityHistoryComponent},\n\t{ path: 'reports', component: UtilityReportsComponent},\n\t{ path: 'reports/electricity', component: ElectricityReportComponent},\n\t{ path: 'reports/water', component: WaterReportComponent},\n\t{ path: 'reports/insurance', component: InsuranceReportComponent},\n\t{ path: '**', redirectTo: 'settings', pathMatch: 'full'}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UtilityRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy91dGlsaXR5L3V0aWxpdHkuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-utility',\n  templateUrl: './utility.component.html',\n  styleUrls: ['./utility.component.scss']\n})\nexport class UtilityComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UtilityRoutingModule } from './utility-routing.module';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { UtilityComponent } from './utility.component';\nimport { UtilityReportsComponent } from './components/utility-reports/utility-reports.component';\nimport { UtilitySetupComponent } from './components/utility-setup/utility-setup.component';\nimport { UtilityAddReadingComponent } from './components/utility-add-reading/utility-add-reading.component';\nimport { ElectricityReadingComponent } from './components/utility-add-reading/electricity-reading/electricity-reading.component';\nimport { WaterReadingComponent } from './components/utility-add-reading/water-reading/water-reading.component';\nimport { UtilityHistoryComponent } from './components/utility-history/utility-history.component';\nimport { TowerReadingInfoComponent } from './components/utility-add-reading/water-reading/tower-reading-info/tower-reading-info.component';\nimport { UnitReadingInfoComponent } from './components/utility-add-reading/water-reading/tower-reading-info/unit-reading-info/unit-reading-info.component';\nimport { AddInsuranceComponent } from './components/utility-add-reading/add-insurance/add-insurance.component';\nimport { ElectricityReportComponent } from './components/utility-reports/electricity-report/electricity-report.component';\nimport { WaterReportComponent } from './components/utility-reports/water-report/water-report.component';\nimport { InsuranceReportComponent } from './components/utility-reports/insurance-report/insurance-report.component';\n\n@NgModule({\n  declarations: [\n  UtilityComponent,\n  UtilityReportsComponent,\n  UtilitySetupComponent,\n  UtilityAddReadingComponent,\n  ElectricityReadingComponent,\n  WaterReadingComponent,\n  UtilityHistoryComponent,\n  TowerReadingInfoComponent,\n  UnitReadingInfoComponent,\n  AddInsuranceComponent,\n  ElectricityReportComponent,\n  WaterReportComponent,\n  InsuranceReportComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    UtilityRoutingModule\n  ],\n  bootstrap: [ UtilityComponent ]\n})\nexport class UtilityModule { }\n"],"sourceRoot":"webpack:///"}