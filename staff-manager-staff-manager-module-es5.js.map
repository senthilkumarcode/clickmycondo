{"version":3,"sources":["webpack:///src/app/ams/staff-manager/components/add-entry/add-entry.component.html","webpack:///src/app/ams/staff-manager/components/add-staff/add-staff.component.html","webpack:///src/app/ams/staff-manager/components/staff-attendance/staff-attendance.component.html","webpack:///src/app/ams/staff-manager/components/staff-gates/staff-gates.component.html","webpack:///src/app/ams/staff-manager/components/staff-inactive-staff/staff-inactive-staff.component.html","webpack:///src/app/ams/staff-manager/components/staff-maintain-staff/staff-maintain-staff.component.html","webpack:///src/app/ams/staff-manager/components/staff-overtime/staff-overtime.component.html","webpack:///src/app/ams/staff-manager/components/staff-payroll/staff-payroll.component.html","webpack:///src/app/ams/staff-manager/components/staff-reports/staff-reports.component.html","webpack:///src/app/ams/staff-manager/components/staff-setup/staff-setup.component.html","webpack:///src/app/ams/staff-manager/components/staff-shifts/staff-shifts.component.html","webpack:///src/app/ams/staff-manager/staff-manager.component.html","webpack:///src/app/ams/staff-manager/components/add-entry/add-entry.component.scss","webpack:///src/app/ams/staff-manager/components/add-entry/add-entry.component.ts","webpack:///src/app/ams/staff-manager/components/add-staff/add-staff.component.scss","webpack:///src/app/ams/staff-manager/components/add-staff/add-staff.component.ts","webpack:///src/app/ams/staff-manager/components/staff-attendance/staff-attendance.component.scss","webpack:///src/app/ams/staff-manager/components/staff-attendance/staff-attendance.component.ts","webpack:///src/app/ams/staff-manager/components/staff-gates/staff-gates.component.scss","webpack:///src/app/ams/staff-manager/components/staff-gates/staff-gates.component.ts","webpack:///src/app/ams/staff-manager/components/staff-inactive-staff/staff-inactive-staff.component.scss","webpack:///src/app/ams/staff-manager/components/staff-inactive-staff/staff-inactive-staff.component.ts","webpack:///src/app/ams/staff-manager/components/staff-maintain-staff/staff-maintain-staff.component.scss","webpack:///src/app/ams/staff-manager/components/staff-maintain-staff/staff-maintain-staff.component.ts","webpack:///src/app/ams/staff-manager/components/staff-overtime/staff-overtime.component.scss","webpack:///src/app/ams/staff-manager/components/staff-overtime/staff-overtime.component.ts","webpack:///src/app/ams/staff-manager/components/staff-payroll/staff-payroll.component.scss","webpack:///src/app/ams/staff-manager/components/staff-payroll/staff-payroll.component.ts","webpack:///src/app/ams/staff-manager/components/staff-reports/staff-reports.component.scss","webpack:///src/app/ams/staff-manager/components/staff-reports/staff-reports.component.ts","webpack:///src/app/ams/staff-manager/components/staff-setup/staff-setup.component.scss","webpack:///src/app/ams/staff-manager/components/staff-setup/staff-setup.component.ts","webpack:///src/app/ams/staff-manager/components/staff-shifts/staff-shifts.component.scss","webpack:///src/app/ams/staff-manager/components/staff-shifts/staff-shifts.component.ts","webpack:///src/app/ams/staff-manager/staff-manager-routing.module.ts","webpack:///src/app/ams/staff-manager/staff-manager.component.scss","webpack:///src/app/ams/staff-manager/staff-manager.component.ts","webpack:///src/app/ams/staff-manager/staff-manager.module.ts"],"names":["AddEntryComponent","router","route","staffService","lookupService","sharedService","cookieService","isEditEntry","isEntrySubmitted","isEntryError","isEntrySuccess","alertEntryMessage","shiftType","jobTitle","entryComments","get","shiftsFilteredDataList","shiftsDataList","filter","item","shiftTypeId","getStaffByStaffId","entry","staffId","subscribe","res","selectedStaffCateogryId","staffCategoryId","selectedSubStaffCateogryId","staffSubCategoryId","data","officalStaffsDataList","lookupValueId","lookupValueName","undefined","length","personalStaffsDataList","form","details","parseInt","inTime","inGateId","outTime","outGateId","shiftId","params","attendance","addAttendance","message","setAlertMessage","navigate","errorMessage","error","id","updateAttendance","attendanceId","getAttendanceByAttendanceId","getStaffJobTitle","getShiftByShiftId","toString","getShifts","apartmentId","getAllStaffsByApartmentId","staffDataList","isActive","gatesParams","getAllGatesByApartmentId","gatesDataList","shiftParams","getAllShiftsByApartmentId","shiftTypeParams","LookupTypeId","getLookupValueByLookupTypeId","shiftTypeList","officalListParams","personalListParams","selector","template","AddStaffComponent","userService","isEditStaff","isStaffSubmitted","isStaffAdded","isStaffError","isStaffSuccess","alertStaffMessage","vendorType","isTypeSelected","isFileAdded","fileList","listOfFiles","isPhotoAdded","photoList","listOfPhotos","userId","genderType","outputParams","staffArray","splice","index","emit","event","i","target","files","selectedFile","push","name","size","selectedPhoto","bytes","toFixed","typeId","staffCategoryData","userDetails","staff","firstName","lastName","emailId","password","address","dob","bloodGroup","contactNumber","userParams","user","addUser","userRole","roleParams","addUserRole","staffDetails","alternateContact","healthIssue","comments","plannedEntryTime","plannedExitTime","jobStartDate","jobEndDate","vacationLeaveDays","sickLeaveDays","basePay","overtimePayperhour","allowance1","allowance2","allowance3","deduction1","deduction2","deduction3","perDaySalary","staffParams","addStaff","alertTicketMessage","console","log","updateUser","updateStaff","genderId","getStaffType","groupParams","bloodGroupData","staffTypeData","categoryParams","StaffAttendanceComponent","isEntryDataLoaded","unitFieldType","unitOrder","ItemStartIndex","itemLimit","entryData","selectedInput","columnField","ItemEndIndex","type","window","innerWidth","value","gateDataList","gateId","gateName","getAllAttendancesByApartmentId","entryListData","dataListparams","officialListparams","personalListparams","totalItems","StaffGatesComponent","injector","dialog","isGateLoaded","isGateTableLoaded","isAddGateLoaded","isEditGate","modalService","gate","Date","toISOString","addGate","getAllGates","updateGate","gateListData","showConfirmModal","setTimeout","elem","document","querySelector","scrollTo","getBoundingClientRect","top","scroll","behavior","getGateByGateId","unitlistdeleteindexcast","deleteBy","deleteGate","setUnitListDeleteIndex","StaffInactiveStaffComponent","isStaffDataLoaded","staffData","staffTypeId","toLowerCase","staffOfficalCategoryData","staffPersonalCategoryData","staffListData","staffOfficialParams","staffPersonalParams","StaffMaintainStaffComponent","dateTime","format","map","obj","staffCategory","staffSubCategory","officialParams","officialCategoryParams","deleteStaff","StaffOvertimeComponent","StaffPayrollComponent","StaffReportsComponent","StaffSetupComponent","categoryOffcialData","categoryPersonalData","isCategoryDataLoaded","isStaffLoaded","staffType","staffDeleteTypeId","isError","isEditStaffCategory","category","categoryAvailable","lookupvalue","addLookupValue","categoryOffcialListData","updateLookupValue","categoryPersonalListData","categoryPersonalParams","updateUserId","deleteLookupvalue","StaffShiftsComponent","isShiftsLoaded","isShiftTableLoaded","shiftStartTime","shiftTotalHrs","shiftData","isEditShift","isAddShiftLoaded","shift","addShift","getAllShifts","updateShift","startTime","toDate","totalHours","shiftsListData","deleteShift","routes","path","redirectTo","pathMatch","component","StaffManagerRoutingModule","imports","forChild","exports","StaffManagerComponent","StaffManagerModule","declarations","bootstrap"],"mappings":"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","file":"staff-manager-staff-manager-module-es5.js","sourcesContent":["export default \"<div class=\\\"staff-add-entry-wrapper\\\">\\n\\t\\n\\t<div class=\\\"card mb-30\\\">\\n\\t\\t\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>\\n    \\t\\t\\t\\t<span *ngIf=\\\"!isEditEntry\\\">Add Entry</span>\\n    \\t\\t\\t\\t<span *ngIf=\\\"isEditEntry\\\">Edit Entry</span>\\n    \\t\\t\\t</h5>\\n    \\t\\t</div>\\n    \\t\\t<div class=\\\"float-right\\\">\\n    \\t\\t\\t<a href=\\\"javascript:void(0)\\\" routerLink=\\\"/ams/staff/attendance\\\" \\n\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t<i-feather class=\\\"icon back\\\" name=\\\"chevron-left\\\"></i-feather>\\n\\t\\t\\t\\t</a>\\n    \\t\\t</div>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<form #addEntryForm = \\\"ngForm\\\" name=\\\"addEntryForm\\\" (ngSubmit)=\\\"submitEntryForm(addEntryForm)\\\"  novalidate>\\n\\n\\t\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<app-alert-message [message]=\\\"alertEntryMessage\\\" [isError]=\\\"isEntryError\\\"></app-alert-message>\\n\\n\\t\\t\\t\\t<app-loader *ngIf=\\\"!isEntrySubmitted\\\"></app-loader>\\n\\n\\t\\t\\t\\t<ng-container *ngIf=\\\"isEntrySubmitted\\\">\\n\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t                    <label>Name*</label>\\n\\t\\t\\t\\t                    <select \\n\\t\\t\\t\\t\\t\\t\\t\\t        name=\\\"staffId\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t        id=\\\"staffId\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"entry.staffId\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t        (ngModelChange)=\\\"getStaffJobTitle()\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of staffDataList\\\" [value]=\\\"item.staffId\\\">{{ item.firstName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t                    <label>Job title*</label>\\n\\t\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter text\\\" name=\\\"ticketSubject\\\" [(ngModel)]=\\\"entry.jobTitle\\\" required>\\n\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t                    <label>In-time*</label>\\n\\t\\t\\t\\t                    <input class=\\\"form-control\\\" name=\\\"staffInTime\\\" [owlDateTime]=\\\"staffInTime\\\" [owlDateTimeTrigger]=\\\"staffInTime\\\" placeholder=\\\"Date Time\\\" [(ngModel)]=\\\"entry.inTime\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #staffInTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"staffInTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon del-c float-left mr-1\\\" name=\\\"x-circle\\\" width=\\\"18\\\" *ngIf=\\\"entry.inTime != '' && entry.inTime != undefined\\\" (click)=\\\"entry.inTime=''\\\"></i-feather>\\n\\t  \\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n\\t  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t                    <label>Out-time</label>\\n\\t\\t\\t\\t                    <input class=\\\"form-control\\\" name=\\\"staffOutTime\\\" [owlDateTime]=\\\"staffOutTime\\\" [owlDateTimeTrigger]=\\\"staffOutTime\\\" placeholder=\\\"Date Time\\\" [(ngModel)]=\\\"entry.outTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #staffOutTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"staffOutTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon del-c float-left mr-1\\\" name=\\\"x-circle\\\" width=\\\"18\\\" *ngIf=\\\"entry.outTime != '' && entry.outTime != undefined\\\" (click)=\\\"entry.outTime=''\\\"></i-feather>\\n\\t  \\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n\\t  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t                    <label>In Gate*</label>\\n\\t\\t\\t\\t                    <select \\n\\t\\t\\t\\t\\t\\t\\t\\t        name=\\\"inGateId\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t        id=\\\"inGateId\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"entry.inGateId\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of gatesDataList\\\" [value]=\\\"item.gateId\\\">{{ item.gateName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t                    <label>Out Gate*</label>\\n\\t\\t\\t\\t                    <select \\n\\t\\t\\t\\t\\t\\t\\t\\t        name=\\\"outGateId\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t        id=\\\"outGateId\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"entry.outGateId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of gatesDataList\\\" [value]=\\\"item.gateId\\\">{{ item.gateName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>shift Type*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t                            <input name=\\\"shiftType\\\" id=\\\"Morning\\\" [(ngModel)]=\\\"shiftType\\\" (ngModelChange)=\\\"getShifts()\\\" value=\\\"127\\\" type=\\\"radio\\\" required>\\n\\t\\t\\t                            <label class=\\\"radio-inline\\\" for=\\\"Morning\\\">Morning</label>\\n\\t\\t                     \\t\\t</div>\\n\\t\\t\\t                    \\t<div class=\\\"form-group\\\">\\n\\t\\t\\t                            <input name=\\\"shiftType\\\" id=\\\"Night\\\" [(ngModel)]=\\\"shiftType\\\" (ngModelChange)=\\\"getShifts()\\\" value=\\\"128\\\" type=\\\"radio\\\" required>\\n\\t\\t\\t                            <label class=\\\"radio-inline\\\" for=\\\"Night\\\">Night</label>\\n\\t\\t\\t                         </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"isShiftSelected()\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t                    <label>Start Time*</label>\\n\\t\\t\\t\\t                    <select \\n\\t\\t\\t\\t\\t\\t\\t\\t        name=\\\"startTime\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t        id=\\\"startTime\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"entry.shiftId\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of shiftsFilteredDataList\\\" [value]=\\\"item.shiftId\\\">{{ item.startTime }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t                    <label>Comments</label>\\n\\t\\t\\t\\t                    <textarea placeholder=\\\"some text here\\\" name=\\\"comments\\\" [(ngModel)]=\\\"entryComments\\\"></textarea>\\n\\t\\t\\t\\t                </div>\\n\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline float-right mt-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addEntryForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\n\\t\\t\\t</div>\\n\\n\\t\\t</form>\\n\\n\\t</div>\\n\\n\\t\\n\\n</div>\"","export default \"<div class=\\\"staff-add-staff-wrapper\\\">\\n\\n\\t<form #addStaffForm = \\\"ngForm\\\" name=\\\"addStaffForm\\\" (ngSubmit)=\\\"submitAddStaffForm(addStaffForm)\\\"  novalidate>\\n\\n\\t\\t<div class=\\\"card mb-30\\\">\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t\\t<div class=\\\"float-left\\\">\\n\\t    \\t\\t\\t<h5>\\n\\t    \\t\\t\\t\\t<span *ngIf=\\\"!isEditStaff\\\">Add Staff</span>\\n\\t    \\t\\t\\t\\t<span *ngIf=\\\"isEditStaff\\\">Edit Staff</span>\\n\\t    \\t\\t\\t</h5>\\n\\t    \\t\\t</div>\\n\\t    \\t\\t<div class=\\\"float-right\\\">\\n\\t    \\t\\t\\t<a href=\\\"javascript:void(0)\\\" routerLink=\\\"/ams/staff/maintain-staff\\\" \\n\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon back\\\" name=\\\"chevron-left\\\"></i-feather>\\n\\t\\t\\t\\t\\t</a>\\n    \\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t<div class=\\\"card-body p-0\\\" id=\\\"accordion\\\">\\n\\n\\t\\t\\t\\t<app-alert-message [message]=\\\"alertStaffMessage\\\" [isError]=\\\"isStaffError\\\" [isSuccess]=\\\"isStaffSuccess\\\"></app-alert-message>\\n\\n\\t\\t\\t\\t<app-loader *ngIf=\\\"isStaffSubmitted\\\"></app-loader>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<ng-container *ngIf=\\\"!isStaffSubmitted\\\">\\n\\n\\t\\t\\t\\t<ul class=\\\"list-group tabs clear\\\">\\n\\t\\t\\t\\t\\t<li class=\\\"list-group-item\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#staffCollapseOne\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"CollapseOne\\\">Personal Info</li>\\n\\t\\t\\t\\t\\t<div id=\\\"staffCollapseOne\\\" class=\\\"collapse show\\\" aria-labelledby=\\\"CollapseOne\\\" data-parent=\\\"#accordion\\\">\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<div class=\\\"details\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t                    <label>First Name*</label>\\n\\t\\t\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"staff.firstName\\\" required>\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t                    <label>Last Name*</label>\\n\\t\\t\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"staff.lastName\\\" required>\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"!isEditStaff\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t                    <label>Password*</label>\\n\\t\\t\\t\\t\\t                    <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"password\\\" [(ngModel)]=\\\"staff.password\\\" required>\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t                    <label>Date Of Birth</label>\\n\\t\\t\\t\\t\\t                    <input class=\\\"form-control\\\" name=\\\"staffDOB\\\" [owlDateTime]=\\\"staffDOB\\\" [owlDateTimeTrigger]=\\\"staffDOB\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"staff.dob\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #staffDOB [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"staffDOB\\\">\\n\\t\\t  \\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n\\t\\t  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t                    <label>Address</label>\\n\\t\\t\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"address\\\" [(ngModel)]=\\\"staff.address\\\">\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t                    <label>Email*</label>\\n\\t\\t\\t\\t\\t                    <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"staffEmail\\\" [(ngModel)]=\\\"staff.emailId\\\" required>\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t                    <label>Contact Number</label>\\n\\t\\t\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"contactNumber\\\" [(ngModel)]=\\\"staff.contactNumber\\\">\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t                    <label>Alternate Contact Number</label>\\n\\t\\t\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"alternateContact\\\" [(ngModel)]=\\\"staff.alternateContact\\\">\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t                   <label>Blood Group</label>\\n\\t\\t\\t\\t\\t                   <select \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t        name=\\\"bloodGroup\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t        id=\\\"bloodGroup\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"staff.bloodGroup\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of bloodGroupData\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t                    <label>Vehicle ID</label>\\n\\t\\t\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"staffVehicleId\\\" [(ngModel)]=\\\"staff.vehicleId\\\">\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Gender*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t                            <input name=\\\"genderType\\\" id=\\\"male\\\" [(ngModel)]=\\\"genderType\\\"  value=\\\"43\\\" type=\\\"radio\\\" required>\\n\\t\\t\\t\\t                            <label class=\\\"radio-inline\\\" for=\\\"male\\\">Male</label>\\n\\t\\t\\t                     \\t\\t</div>\\n\\t\\t\\t\\t                    \\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t                            <input name=\\\"genderType\\\" id=\\\"female\\\" [(ngModel)]=\\\"genderType\\\" value=\\\"44\\\" type=\\\"radio\\\" required>\\n\\t\\t\\t\\t                            <label class=\\\"radio-inline\\\" for=\\\"female\\\">Female</label>\\n\\t\\t\\t\\t                         </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Is Vendor*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t                            <input name=\\\"vendorType\\\" id=\\\"Yes\\\" [(ngModel)]=\\\"vendorType\\\" value=\\\"Yes\\\" type=\\\"radio\\\" >\\n\\t\\t\\t\\t                            <label class=\\\"radio-inline\\\" for=\\\"Yes\\\">Yes</label>\\n\\t\\t\\t                     \\t\\t</div>\\n\\t\\t\\t\\t                    \\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t                            <input name=\\\"vendorType\\\" id=\\\"No\\\" [(ngModel)]=\\\"vendorType\\\" value=\\\"No\\\" type=\\\"radio\\\" >\\n\\t\\t\\t\\t                            <label class=\\\"radio-inline\\\" for=\\\"No\\\">No</label>\\n\\t\\t\\t\\t                         </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t <div class=\\\"col-sm-4\\\" *ngIf=\\\"isVendor()\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t                   <label>Vendor Name*</label>\\n\\t\\t\\t\\t\\t                   <select \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t        name=\\\"vendorName\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t        id=\\\"vendorName\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"staff.vendorId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of vendorNameList\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t                    <label>Health Issue Notes ( 35 characters)</label>\\n\\t\\t\\t\\t\\t                    <textarea placeholder=\\\"some text here\\\" name=\\\"healthIssue\\\" [(ngModel)]=\\\"staff.healthIssue\\\"></textarea>\\n\\t\\t\\t\\t\\t                </div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t                    <label>Comments</label>\\n\\t\\t\\t\\t\\t                    <textarea placeholder=\\\"some text here\\\" name=\\\"staffComments\\\" [(ngModel)]=\\\"staff.comments\\\"></textarea>\\n\\t\\t\\t\\t\\t                </div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-3\\\">\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"btn sf lime-green\\\" for=\\\"my-photo-selector\\\" (click)=\\\"uploaderPhoto.click()\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    <input class=\\\"form-control\\\"  #uploaderPhoto type=\\\"file\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    [(ngModel)]=\\\"staff.file\\\" (change)=\\\"uploadPhoto($event)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    <i class=\\\"fa fa-paperclip mr-2\\\" aria-hidden=\\\"true\\\"></i> Upload Photo</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"file-desp\\\" *ngIf=\\\"isPhotoAdded\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let item of listOfPhotos; let i = index\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"name mr-3\\\">{{item.name}}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"size\\\">{{bytesToSize(item.size)}}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon del\\\" name=\\\"x\\\" (click)=\\\"deletePhoto(i)\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t                \\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-3\\\">\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"btn sf lime-green\\\" for=\\\"my-file-selector\\\" (click)=\\\"uploaderFile.click()\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    <input class=\\\"form-control\\\"  #uploaderFile type=\\\"file\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    [(ngModel)]=\\\"staff.multifile\\\" (change)=\\\"uploadFile($event)\\\" multiple>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    <i class=\\\"fa fa-paperclip mr-2\\\" aria-hidden=\\\"true\\\"></i> Upload ID Card Docs</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"file-desp\\\" *ngIf=\\\"isFileAdded\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let item of listOfFiles; let i = index\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"name mr-3\\\">{{item.name}}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"size\\\">{{bytesToSize(item.size)}}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon del\\\" name=\\\"x\\\" (click)=\\\"deleteFile(i)\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t                \\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<li class=\\\"list-group-item collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#staffCollapseTwo\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"CollapseTwo\\\">Salary & Leave</li>\\n\\t\\t\\t\\t\\t<div id=\\\"staffCollapseTwo\\\" class=\\\"collapse\\\" aria-labelledby=\\\"CollapseTwo\\\" data-parent=\\\"#accordion\\\">\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<div class=\\\"details\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t                    <label>Base Pay*</label>\\n\\t\\t\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"basePay\\\" [(ngModel)]=\\\"staff.basePay\\\" required>\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t                    <label>Allowance 1</label>\\n\\t\\t\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"allowance1\\\" [(ngModel)]=\\\"staff.allowance1\\\">\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t                    <label>Allowance 2</label>\\n\\t\\t\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"allowance2\\\" [(ngModel)]=\\\"staff.allowance2\\\">\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t                    <label>Allowance 3</label>\\n\\t\\t\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"allowance3\\\" [(ngModel)]=\\\"staff.allowance3\\\">\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t                    <label>Overtime Pay Per Hour</label>\\n\\t\\t\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"overtimePayperhour\\\" [(ngModel)]=\\\"staff.overtimePayperhour\\\">\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t                    <label>Deduction 1</label>\\n\\t\\t\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"deduction1\\\" [(ngModel)]=\\\"staff.deduction1\\\">\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t                    <label>Deduction 2</label>\\n\\t\\t\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"deduction2\\\" [(ngModel)]=\\\"staff.deduction2\\\">\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t                    <label>Deduction 3</label>\\n\\t\\t\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"deduction3\\\" [(ngModel)]=\\\"staff.deduction3\\\">\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t                    <label>Salary Per Day</label>\\n\\t\\t\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"perDaySalary\\\" [(ngModel)]=\\\"staff.perDaySalary\\\">\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t                    <label>Vacation Leave Days</label>\\n\\t\\t\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"vacationLeaveDays\\\" [(ngModel)]=\\\"staff.vacationLeaveDays\\\">\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t                    <label>Sick Leave Days</label>\\n\\t\\t\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"sickLeaveDays\\\" [(ngModel)]=\\\"staff.sickLeaveDays\\\">\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<li class=\\\"list-group-item collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#staffCollapseThree\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"CollapseThree\\\">Work Information</li>\\n\\t\\t\\t\\t\\t<div id=\\\"staffCollapseThree\\\" class=\\\"collapse\\\" aria-labelledby=\\\"CollapseThree\\\" data-parent=\\\"#accordion\\\">\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<div class=\\\"details\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t                    <label>Category*</label>\\n\\t\\t\\t\\t\\t                    <select \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t        name=\\\"staffCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t        id=\\\"staffCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"staff.staffCategoryId\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t        (ngModelChange)=\\\"getStaffType(staff.staffCategoryId)\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of staffTypeData\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"isCategoryEnabled()\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t                    <label>Sub Category*</label>\\n\\t\\t\\t\\t\\t                   <select \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t        name=\\\"staffSubCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t        id=\\\"staffSubCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"staff.staffSubCategoryId\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of staffCategoryData\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t                    <label>Job Start Date</label>\\n\\t\\t\\t\\t\\t                    <input class=\\\"form-control\\\" name=\\\"jobStartDate\\\" [owlDateTime]=\\\"jobStartDate\\\" [owlDateTimeTrigger]=\\\"jobStartDate\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"staff.jobStartDate\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #jobStartDate [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"jobStartDate\\\">\\n\\t\\t  \\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n\\t\\t  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t                    <label>Job End Date</label>\\n\\t\\t\\t\\t\\t                    <input class=\\\"form-control\\\" name=\\\"jobEndDate\\\" [owlDateTime]=\\\"jobEndDate\\\" [owlDateTimeTrigger]=\\\"jobEndDate\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"staff.jobEndDate\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #jobEndDate [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"jobEndDate\\\">\\n\\t\\t  \\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n\\t\\t  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t                    <label>Planned Entry Time</label>\\n\\t\\t\\t\\t\\t                    <input class=\\\"form-control\\\" name=\\\"plannedEntryTime\\\" [owlDateTime]=\\\"plannedEntryTime\\\" [owlDateTimeTrigger]=\\\"plannedEntryTime\\\" placeholder=\\\"Date Time\\\" [(ngModel)]=\\\"staff.plannedEntryTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #plannedEntryTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"plannedEntryTime\\\">\\n\\t\\t  \\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n\\t\\t  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t                    <label>Planned Exit Time</label>\\n\\t\\t\\t\\t\\t                    <input class=\\\"form-control\\\" name=\\\"plannedExitTime\\\" [owlDateTime]=\\\"plannedExitTime\\\" [owlDateTimeTrigger]=\\\"plannedExitTime\\\" placeholder=\\\"Date Time\\\" [(ngModel)]=\\\"staff.plannedExitTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #plannedExitTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"plannedExitTime\\\">\\n\\t\\t  \\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n\\t\\t  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t</ul>\\n\\n\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\\"row\\\" *ngIf=\\\"!isStaffSubmitted\\\">\\n\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t<ul class=\\\"list-inline float-right\\\">\\n\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addStaffForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t</ul>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t</form>\\n\\n</div>\"","export default \"<div class=\\\"staff-attendance-wrapper\\\">\\n\\t\\n\\t<app-loader *ngIf=\\\"!isEntryDataLoaded\\\"></app-loader>\\n\\n\\t<div class=\\\"card table-card\\\" *ngIf=\\\"isEntryDataLoaded\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All Entries <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"entryData\\\" >\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n    \\t\\t\\t\\t<a class=\\\"btn l-blue mt_5\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Print</span>\\n    \\t\\t\\t\\t</a>\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\n    \\t\\t\\t\\t<a class=\\\"btn lime-green mt_5\\\"\\n    \\t\\t\\t\\trouterLink=\\\"/ams/staff/add-entry\\\" \\n\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon plus\\\" name=\\\"plus\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Add Attendance</span>\\n    \\t\\t\\t\\t</a>\\n\\n    \\t\\t\\t</li>\\n\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n\\n\\n  \\t\\t<div class=\\\"card-body p-0\\\">\\n  \\t\\t\\t\\n  \\t\\t\\t<table class=\\\"table table-checker table-resizable\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">\\n\\t\\t\\t\\t      \\tName\\n\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('firstName')\\\" [ngClass]=\\\"getFieldOrderBy('firstName')\\\"></span>\\n\\t\\t\\t\\t      \\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Staff Name\\\" [(ngModel)]=\\\"columnField['firstName']\\\" (ngModelChange)=\\\"selectColInput('firstName')\\\" >\\n\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">\\n\\t\\t\\t\\t      \\tJob Title\\n\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('jobTitle')\\\" [ngClass]=\\\"getFieldOrderBy('jobTitle')\\\"></span>\\n\\t\\t\\t\\t      \\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Job Title\\\" [(ngModel)]=\\\"columnField['jobTitle']\\\" (ngModelChange)=\\\"selectColInput('jobTitle')\\\" >\\n\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">In Time <span (click)=\\\"sortUnitData('inTime')\\\" [ngClass]=\\\"getFieldOrderBy('inTime')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Out Time<span (click)=\\\"sortUnitData('outTime')\\\" [ngClass]=\\\"getFieldOrderBy('outTime')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">In Gate <span (click)=\\\"sortUnitData('inGateId')\\\" [ngClass]=\\\"getFieldOrderBy('inGateId')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Out Gate <span (click)=\\\"sortUnitData('outGateId')\\\" [ngClass]=\\\"getFieldOrderBy('outGateId')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">comments <span (click)=\\\"sortUnitData('notes')\\\" [ngClass]=\\\"getFieldOrderBy('notes')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" class=\\\"simple-actions\\\">Action</th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let entry of entryListData | simpleSearch: staffData | \\n\\t\\t\\t\\t    sort : unitFieldType: unitOrder | slice:ItemUserStartIndex:ItemUserEndIndex ; let i = index\\\">\\n\\t\\t\\t\\t      <td class=\\\"name\\\">{{getStaffName(entry.staffId)}}</td>\\n\\t\\t\\t\\t      <td class=\\\"name\\\">{{getJobTitle(entry.staffId)}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{entry.inTime}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{entry.outTime}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{getInGateName(entry.inGateId)}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{getOutGateName(entry.outGateId)}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{entry.notes}}</td>\\n\\t\\t\\t\\t      <td class=\\\"simple-actions\\\">\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t      \\tclass=\\\"mr-2\\\" \\n\\t\\t\\t\\t      \\tplacement=\\\"top\\\" [ngbPopover]=\\\"popAddCheckInContent\\\" triggers=\\\"mouseenter:mouseleave\\\"\\n\\t\\t\\t\\t      \\trouterLink=\\\"/ams/staff/edit-entry/{{entry.attendanceId}}\\\" \\n\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon edit\\\" name=\\\"edit\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\t\\t\\t\\n\\t\\t\\t<app-pagination \\n\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t\\t</app-pagination>\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n</div>\"","export default \"<div class=\\\"staff-gates-wrapper\\\">\\n\\n\\t<div class=\\\"card mb-30\\\">\\n\\t\\t\\n\\t\\t<div class=\\\"card-header no-border\\\">\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n\\t\\t\\t\\t<h5 class=\\\"lh-38\\\">Gates List <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n\\t\\t\\t</div>\\n\\n    \\t\\t<div class=\\\"float-right\\\">\\n    \\t\\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\n\\t\\t    \\t\\t\\t<a class=\\\"btn lime-green mt_5\\\" (click)=\\\"addGate()\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon plus\\\" name=\\\"plus\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t\\t<span>Add Gate</span>\\n\\t\\t    \\t\\t\\t</a>\\n\\t\\t    \\t\\t\\t\\n\\t    \\t\\t\\t</li>\\n    \\t\\t\\t</ul>\\n    \\t\\t</div>\\n\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div class=\\\"card-body p-0\\\">\\n\\t\\t\\t\\n\\t\\t\\t<app-loader *ngIf=\\\"!isGateTableLoaded\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"isGateTableLoaded\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"simple-lists\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<ng-container *ngFor=\\\"let gate of gateListData; let i = index\\\">\\n\\t\\t\\t\\t\\t\\t<li class=\\\"list-group-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"float-left\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<h5>{{gate.gateName}}</h5>\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>{{gate.comments}}</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"float-right\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"icon-link mr-2\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"editGate(gate.gateId)\\\"><i-feather class=\\\"icon edit\\\" name=\\\"edit\\\"></i-feather></a>\\n\\t\\t\\t\\t      \\t\\t\\t<a class=\\\"icon-link\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"showConfirmModal(gate)\\\"><i-feather class=\\\"icon delete\\\" name=\\\"trash\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t</div>\\n\\t\\t<app-pagination \\n\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t</app-pagination>\\n\\t</div>\\n\\n\\t\\n\\t<div class=\\\"add-gate-card\\\" *ngIf=\\\"isAddGateLoaded\\\">\\n\\n\\t\\t<div class=\\\"card mb-30\\\">\\n\\n\\t\\t\\t<div class=\\\"card-header\\\">\\n\\t    \\t\\t<div class=\\\"float-left\\\">\\n\\t    \\t\\t\\t<h5>\\n\\t    \\t\\t\\t\\t<span *ngIf=\\\"!isEditGate\\\">Add Gate</span>\\n\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"isEditGate\\\">Edit Gate</span>\\n\\t\\t\\t\\t\\t</h5>\\n\\t    \\t\\t</div>\\n\\t    \\t\\t<div class=\\\"float-right\\\" (click)=\\\"closeGate()\\\">\\n\\t\\t\\t\\t\\t<i-feather class=\\\"icon del\\\" name=\\\"x\\\" width=\\\"20\\\"></i-feather>\\n\\t\\t\\t\\t</div>\\n    \\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"card-body\\\">\\n\\n\\t\\t\\t\\t<app-loader *ngIf=\\\"!isGateLoaded\\\"></app-loader>\\n\\n\\t\\t\\t\\t<ng-container *ngIf=\\\"isGateLoaded\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<form #addGateForm = \\\"ngForm\\\" name=\\\"addGateForm\\\" (ngSubmit)=\\\"submitGateForm(addGateForm)\\\"  novalidate>\\n\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t                    <label>Gate Name*</label>\\n\\t\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter text\\\" name=\\\"gateName\\\" [(ngModel)]=\\\"gate.gateName\\\" required>\\n\\t\\t\\t\\t        \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t                    <label>Comments</label>\\n\\t\\t\\t\\t                    <textarea placeholder=\\\"some text here\\\" name=\\\"healthIssue\\\" [(ngModel)]=\\\"gate.comments\\\" required></textarea>\\n\\t\\t\\t\\t                </div>\\n\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline float-right\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addGateForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n</div>\"","export default \"<div class=\\\"staff-manager-inactive-staff-wrapper\\\">\\n\\t\\n\\t<app-loader *ngIf=\\\"!isStaffDataLoaded\\\"></app-loader>\\n\\n\\t\\n\\n\\t<div class=\\\"card table-card\\\" *ngIf=\\\"isStaffDataLoaded\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All Inactive Staffs <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"staffData\\\" >\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n    \\t\\t\\t\\t<a class=\\\"btn trans-white mt_5\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Print</span>\\n    \\t\\t\\t\\t</a>\\n    \\t\\t\\t</li>\\n\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n\\n\\n  \\t\\t<div class=\\\"card-body p-0\\\">\\n  \\t\\t\\t\\n  \\t\\t\\t<table class=\\\"table table-checker table-resizable\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Staff Name \\n\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('firstName')\\\" [ngClass]=\\\"getFieldOrderBy('firstName')\\\"></span>\\n\\t\\t\\t\\t      \\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Staff Name\\\" [(ngModel)]=\\\"columnField['firstName']\\\" (ngModelChange)=\\\"selectColInput('firstName')\\\" >\\n\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Email ID\\n\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('emailId')\\\" [ngClass]=\\\"getFieldOrderBy('emailId')\\\"></span>\\n\\t\\t\\t\\t      \\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Email ID\\\" [(ngModel)]=\\\"columnField['emailId']\\\" (ngModelChange)=\\\"selectColInput('emailId')\\\" >\\n\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Category \\n\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('staffCategory')\\\" [ngClass]=\\\"getFieldOrderBy('staffCategory')\\\"></span>\\n\\t\\t\\t\\t      \\t<app-simple-select-box\\n\\t\\t\\t\\t\\t\\t\\tfieldName = \\\"staffCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\tfieldText = \\\"\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldItemName=\\\"lookupValueName\\\"\\n\\t\\t\\t\\t\\t\\t\\tisLabel = \\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldModel] = \\\"staffCategoryId\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldPlaceholder = \\\"Select\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldRequired] = \\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldList] = \\\"staffTypeData\\\"\\n\\t\\t\\t\\t\\t\\t\\t(inputChange) = \\\"onSelectChange($event, 'staffCategory', 'lookupValueName')\\\">\\t\\t\\n\\t\\t\\t\\t\\t\\t</app-simple-select-box>\\n\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t       <th scope=\\\"col\\\">Sub Category\\n\\t\\t\\t\\t       \\t<span (click)=\\\"sortUnitData('staffSubCategory')\\\" [ngClass]=\\\"getFieldOrderBy('staffSubCategory')\\\"></span>\\n\\t\\t\\t\\t       \\t<app-simple-select-box\\n\\t\\t\\t\\t\\t\\t\\tfieldName = \\\"staffSubCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\tfieldText = \\\"\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldItemName=\\\"lookupValueName\\\"\\n\\t\\t\\t\\t\\t\\t\\tisLabel = \\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldModel] = \\\"staffSubCategoryId\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldPlaceholder = \\\"Select\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldRequired] = \\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldList] = \\\"staffOfficalCategoryData\\\"\\n\\t\\t\\t\\t\\t\\t\\t(inputChange) = \\\"onSelectChange($event, 'staffSubCategory', 'lookupValueName')\\\">\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</app-simple-select-box>\\n\\t\\t\\t\\t       </th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Phone Number \\n\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('contactNumber')\\\" [ngClass]=\\\"getFieldOrderBy('contactNumber')\\\"></span>\\n\\t\\t\\t\\t      \\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Phone Number\\\" [(ngModel)]=\\\"columnField['contactNumber']\\\" (ngModelChange)=\\\"selectColInput('contactNumber')\\\" >\\n\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" class=\\\"simple-actions\\\">\\n\\t\\t\\t\\t      Actions\\n\\t\\t\\t\\t      <input type=\\\"text\\\" class=\\\"form-control vis-h\\\" placeholder=\\\"Action\\\" [(ngModel)]=\\\"columnField['action']\\\" (ngModelChange)=\\\"selectColInput('action')\\\" >\\n\\t\\t\\t\\t  \\t </th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let staff of staffListData | simpleSearch: staffData | columnSearch: columnField:selectedInput | sort : unitFieldType: unitOrder | slice:ItemUserStartIndex:ItemUserEndIndex; let i = index\\\">\\n\\t\\t\\t\\t      <td class=\\\"name\\\">{{staff.firstName}}</td>\\n\\t\\t\\t\\t      <td class=\\\"name\\\">{{staff.emailId}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{getStaffCategory(staff, staff.staffCategoryId)}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{getStaffSubCategory(staff, staff.staffSubCategoryId)}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{staff.contactNumber}}</td>\\n\\t\\t\\t\\t      <td class=\\\"simple-actions\\\">\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t      \\tclass=\\\"mr-2\\\" \\n\\t\\t\\t\\t      \\tplacement=\\\"top\\\" [ngbPopover]=\\\"popAddCheckInContent\\\" triggers=\\\"mouseenter:mouseleave\\\"\\n\\t\\t\\t\\t      \\trouterLink=\\\"/ams/staff/edit-staff/{{staff.staffId}}\\\" \\n\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon edit\\\" name=\\\"edit\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t  </td>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\t\\t\\t\\n\\t\\t\\t<app-pagination \\n\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t\\t</app-pagination>\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n</div>\"","export default \"<div class=\\\"staff-manager-maintain-staff-wrapper\\\">\\n\\t\\n\\t<app-loader *ngIf=\\\"!isStaffDataLoaded\\\"></app-loader>\\n\\n\\t\\n\\n\\t<div class=\\\"card table-card\\\" *ngIf=\\\"isStaffDataLoaded\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All Staffs <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"staffData\\\" >\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n    \\t\\t\\t\\t<a class=\\\"btn trans-white mt_5\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Print</span>\\n    \\t\\t\\t\\t</a>\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\n    \\t\\t\\t\\t<a class=\\\"btn lime-green mt_5\\\"\\n    \\t\\t\\t\\trouterLink=\\\"/ams/staff/add-staff\\\" \\n\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon plus\\\" name=\\\"plus\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Add Staff</span>\\n    \\t\\t\\t\\t</a>\\n\\n    \\t\\t\\t</li>\\n\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n\\n\\n  \\t\\t<div class=\\\"card-body p-0\\\">\\n  \\t\\t\\t\\n  \\t\\t\\t<table class=\\\"table table-checker table-resizable\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Staff Name \\n\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('firstName')\\\" [ngClass]=\\\"getFieldOrderBy('firstName')\\\"></span>\\n\\t\\t\\t\\t      \\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Staff Name\\\" [(ngModel)]=\\\"columnField['firstName']\\\" (ngModelChange)=\\\"selectColInput('firstName')\\\" >\\n\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Email ID\\n\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('emailId')\\\" [ngClass]=\\\"getFieldOrderBy('emailId')\\\"></span>\\n\\t\\t\\t\\t      \\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Email ID\\\" [(ngModel)]=\\\"columnField['emailId']\\\" (ngModelChange)=\\\"selectColInput('emailId')\\\" >\\n\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Category \\n\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('staffCategory_Label')\\\" [ngClass]=\\\"getFieldOrderBy('staffCategory_Label')\\\"></span>\\n\\t\\t\\t\\t      \\t<app-simple-select-box\\n\\t\\t\\t\\t\\t\\t\\tfieldName = \\\"staffCategory_Label\\\" \\n\\t\\t\\t\\t\\t\\t\\tfieldText = \\\"\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldItemName=\\\"lookupValueName\\\"\\n\\t\\t\\t\\t\\t\\t\\tisLabel = \\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldModel] = \\\"staffCategoryId\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldPlaceholder = \\\"Select\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldRequired] = \\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldList] = \\\"staffTypeData\\\"\\n\\t\\t\\t\\t\\t\\t\\t(inputChange) = \\\"onSelectChange($event, 'staffCategory_Label', 'lookupValueName')\\\">\\t\\t\\n\\t\\t\\t\\t\\t\\t</app-simple-select-box>\\n\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t       <th scope=\\\"col\\\">Sub Category\\n\\t\\t\\t\\t       \\t<span (click)=\\\"sortUnitData('staffSubcategory_Label')\\\" [ngClass]=\\\"getFieldOrderBy('staffSubcategory_Label')\\\"></span>\\n\\t\\t\\t\\t       \\t<app-simple-select-box\\n\\t\\t\\t\\t\\t\\t\\tfieldName = \\\"staffSubcategory_Label\\\" \\n\\t\\t\\t\\t\\t\\t\\tfieldText = \\\"\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldItemName=\\\"lookupValueName\\\"\\n\\t\\t\\t\\t\\t\\t\\tisLabel = \\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldModel] = \\\"staffSubCategoryId\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldPlaceholder = \\\"Select\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldRequired] = \\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldList] = \\\"staffOfficalCategoryData\\\"\\n\\t\\t\\t\\t\\t\\t\\t(inputChange) = \\\"onSelectChange($event, 'staffSubcategory_Label', 'lookupValueName')\\\">\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</app-simple-select-box>\\n\\t\\t\\t\\t       </th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Phone Number \\n\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('contactNumber')\\\" [ngClass]=\\\"getFieldOrderBy('contactNumber')\\\"></span>\\n\\t\\t\\t\\t      \\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Phone Number\\\" [(ngModel)]=\\\"columnField['contactNumber']\\\" (ngModelChange)=\\\"selectColInput('contactNumber')\\\" >\\n\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" class=\\\"simple-actions\\\">\\n\\t\\t\\t\\t      Actions\\n\\t\\t\\t\\t      <input type=\\\"text\\\" class=\\\"form-control vis-h\\\" placeholder=\\\"Action\\\" [(ngModel)]=\\\"columnField['action']\\\" (ngModelChange)=\\\"selectColInput('action')\\\" >\\n\\t\\t\\t\\t  \\t </th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let staff of staffListData | simpleSearch: staffData | columnSearch: columnField:selectedInput | sort : unitFieldType: unitOrder | slice:ItemUserStartIndex:ItemUserEndIndex; let i = index\\\" [ngClass]=\\\"staff.isActive ? 'active' : 'notactive'\\\">\\n\\t\\t\\t\\t      <td class=\\\"name\\\">{{staff.firstName}}</td>\\n\\t\\t\\t\\t      <td class=\\\"name\\\">{{staff.emailId}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{staff.staffCategory_Label}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{staff.staffSubcategory_Label}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{staff.contactNumber}}</td>\\n\\t\\t\\t\\t      <td class=\\\"simple-actions\\\">\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t      \\tclass=\\\"mr-2\\\" \\n\\t\\t\\t\\t      \\tplacement=\\\"top\\\" [ngbPopover]=\\\"popAddCheckInContent\\\" triggers=\\\"mouseenter:mouseleave\\\"\\n\\t\\t\\t\\t      \\trouterLink=\\\"/ams/staff/edit-staff/{{staff.staffId}}\\\" \\n\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon edit\\\" name=\\\"edit\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" (click)=\\\"showConfirmModal(staff.staffId)\\\"><i-feather class=\\\"icon delete\\\" name=\\\"trash\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\t\\t\\t\\n\\t\\t\\t<app-pagination \\n\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t\\t</app-pagination>\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n</div>\"","export default \"<p>\\n  staff-overtime works!\\n</p>\\n\"","export default \"<p>\\n  staff-payroll works!\\n</p>\\n\"","export default \"<p>\\n  staff-reports works!\\n</p>\\n\"","export default \"<div class=\\\"staff-setup-wrapper\\\">\\n\\n\\t<h5 class=\\\"mb-3\\\">\\n\\t\\t<span *ngIf=\\\"!isEditStaffCategory\\\">Add Staff Category</span>\\n\\t\\t<span *ngIf=\\\"isEditStaffCategory\\\">Edit Staff Category</span>\\n\\t</h5>\\n\\n\\t<div class=\\\"card mb-30\\\">\\n\\t\\t\\n\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t<app-alert-message [message]=\\\"errorMessage\\\" [isAlert]=\\\"isError\\\"></app-alert-message>\\n\\n\\t\\t\\t<app-loader *ngIf=\\\"!isStaffLoaded\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"isStaffLoaded\\\">\\n\\n\\t\\t\\t\\t<form #addStaffForm = \\\"ngForm\\\" name=\\\"addStaffForm\\\" (ngSubmit)=\\\"submitStaffForm(addStaffForm)\\\"  novalidate>\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t                    <label>Category*</label>\\n\\t\\t\\t                    <select \\n\\t\\t\\t\\t\\t\\t\\t        name=\\\"staffType\\\" \\n\\t\\t\\t\\t\\t\\t\\t        id=\\\"staffType\\\" \\n\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"staffType\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of staffCategoryData\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Sub Category*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter text\\\" name=\\\"staffCategory\\\" [(ngModel)]=\\\"staffCategory\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline mt-25\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addStaffForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n\\t<app-loader *ngIf=\\\"!isCategoryDataLoaded\\\"></app-loader>\\n\\n\\t<div class=\\\"card table-card mb-30\\\" *ngIf=\\\"isCategoryDataLoaded\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>Offical Staffs</h5>\\n    \\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\\"card-body p-0\\\">\\n\\t\\t\\n\\t\\t<table class=\\\"table\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('status')\\\">Category <span [ngClass]=\\\"getFieldOrderBy('status')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('subcategory')\\\">Supervisor <span [ngClass]=\\\"getFieldOrderBy('subcategory')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('level1')\\\">Level-1 <span [ngClass]=\\\"getFieldOrderBy('level1')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('level2')\\\">Level-2 <span [ngClass]=\\\"getFieldOrderBy('level2')\\\"></span></th>\\n\\t\\t\\t\\t      <!-- <th scope=\\\"col\\\" (click)=\\\"sortUnitData('l1day')\\\">L1 Escdays<span [ngClass]=\\\"getFieldOrderBy('l1day')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('l2day')\\\">L2 Escdays<span [ngClass]=\\\"getFieldOrderBy('l1day')\\\"></span></th> -->\\n\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Action</th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let category of categoryOffcialListData | sort : unitFieldType: unitOrder | slice:ItemUserStartIndex:ItemUserEndIndex | simpleSearch: categoryOffcialData ; let i = index\\\">\\n\\t\\t\\t\\t      <td>{{category.lookupValueName}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\"></td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\"></td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\"></td>\\n\\t\\t\\t\\t      <!-- <td class=\\\"grey\\\"></td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\"></td> -->\\n\\t\\t\\t\\t      <td>\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\" class=\\\"mr-2\\\" (click)=\\\"staffType=115;editStaffCategory(category)\\\">\\n\\t\\t\\t\\t      \\t\\t<i-feather class=\\\"icon edit\\\" name=\\\"edit\\\"></i-feather>\\n\\t\\t\\t\\t      \\t</a>\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\" (click)=\\\"staffDeleteTypeId=115;showConfirmModal(i);\\\"><i-feather class=\\\"icon delete\\\" name=\\\"trash\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n\\n\\t<div class=\\\"card table-card mb-30\\\" *ngIf=\\\"isCategoryDataLoaded\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>Personal Staffs</h5>\\n    \\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\\"card-body p-0\\\">\\n\\t\\t\\n\\t\\t<table class=\\\"table\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('status')\\\">Category <span [ngClass]=\\\"getFieldOrderBy('status')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('subcategory')\\\">Supervisor <span [ngClass]=\\\"getFieldOrderBy('subcategory')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('level1')\\\">Level-1 <span [ngClass]=\\\"getFieldOrderBy('level1')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('level2')\\\">Level-2 <span [ngClass]=\\\"getFieldOrderBy('level2')\\\"></span></th>\\n\\t\\t\\t\\t       <!-- <th scope=\\\"col\\\" (click)=\\\"sortUnitData('l1day')\\\">Escalation to L1 day<span [ngClass]=\\\"getFieldOrderBy('l1day')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('l2day')\\\">Escalation to L2day<span [ngClass]=\\\"getFieldOrderBy('l1day')\\\"></span></th> -->\\n\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Action</th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let category of categoryPersonalListData | simpleSearch: categoryPersonalData | sort : unitFieldType: unitOrder | slice:ItemUserStartIndex:ItemUserEndIndex ; let i = index\\\">\\n\\t\\t\\t\\t      <td>{{category.lookupValueName}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\"></td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\"></td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\"></td>\\n\\t\\t\\t\\t       <!-- <td class=\\\"grey\\\"></td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\"></td> -->\\n\\t\\t\\t\\t      <td>\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\" class=\\\"mr-2\\\" (click)=\\\"staffType=116;editStaffCategory(category)\\\">\\n\\t\\t\\t\\t      \\t\\t<i-feather class=\\\"icon edit\\\" name=\\\"edit\\\"></i-feather>\\n\\t\\t\\t\\t      \\t</a>\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\" (click)=\\\"staffDeleteTypeId=116;showConfirmModal(i)\\\"><i-feather class=\\\"icon delete\\\" name=\\\"trash\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n\\t<app-staff-gates></app-staff-gates>\\n\\n\\t<app-staff-shifts></app-staff-shifts>\\n\\n</div>\"","export default \"<div class=\\\"staff-shifts-wrapper\\\">\\n\\n\\t<div class=\\\"card mb-30 table-card\\\">\\n\\t\\t\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All Shifts <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<div class=\\\"float-right\\\">\\n    \\t\\t\\t\\n    \\t\\t\\t<ul class=\\\"list-inline\\\">\\n\\t    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n\\t    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n\\t    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"shiftData\\\" >\\n\\t    \\t\\t\\t</li>\\n\\t    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\n\\t    \\t\\t\\t\\t<a class=\\\"btn lime-green\\\" (click)=\\\"addShift()\\\">\\n\\t    \\t\\t\\t\\t\\t<i-feather class=\\\"icon plus\\\" name=\\\"plus\\\"></i-feather>\\n\\t    \\t\\t\\t\\t\\t<span>Add Shift</span>\\n\\t    \\t\\t\\t\\t</a>\\n\\n    \\t\\t\\t\\t</li>\\n    \\t\\t\\t</ul>\\n\\n    \\t\\t</div>\\n  \\t\\t</div>\\n\\n\\t\\t<div class=\\\"card-body p-0\\\" *ngIf=\\\"isShiftTableLoaded\\\">\\n  \\t\\t\\t\\n  \\t\\t\\t<table class=\\\"table\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('shiftType')\\\">Shift Type<span [ngClass]=\\\"getFieldOrderBy('shiftType')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('startTime')\\\">Shift Start Time<span [ngClass]=\\\"getFieldOrderBy('startTime')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('totalHours')\\\">Total (Hrs)<span [ngClass]=\\\"getFieldOrderBy('totalHours')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Action</th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let shift of shiftsListData | sort : unitFieldType: unitOrder | slice:ItemUserStartIndex:ItemUserEndIndex | simpleSearch: shiftData ; let i = index\\\">\\n\\t\\t\\t\\t      <td class=\\\"name text-capitalize\\\">{{getShiftType(shift.shiftTypeId)}}</td>\\n\\t\\t\\t\\t      <td class=\\\"name\\\">{{shift.startTime}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{shift.totalHours}}</td>\\n\\t\\t\\t\\t      <td>\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t      \\tclass=\\\"mr-2\\\" \\n\\t\\t\\t\\t      \\t(click)=\\\"editShift(shift)\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon edit\\\" name=\\\"edit\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" (click)=\\\"showConfirmModal(shift)\\\"><i-feather class=\\\"icon delete\\\" name=\\\"trash\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\t\\t\\t\\n\\t\\t\\t<app-pagination \\n\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t\\t</app-pagination>\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n\\n\\t<div class=\\\"add-shift-card\\\" *ngIf=\\\"isAddShiftLoaded\\\">\\n\\n\\t\\t<div class=\\\"card mb-30\\\">\\n\\t\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t\\t<div class=\\\"float-left\\\">\\n\\t    \\t\\t\\t<h5 *ngIf=\\\"!isEditShift\\\">Add Staff Shifts</h5>\\n\\t    \\t\\t\\t<h5 *ngIf=\\\"isEditShift\\\">Edit Staff Shifts</h5>\\n\\t    \\t\\t</div>\\n\\t    \\t\\t<div class=\\\"float-right\\\" (click)=\\\"closeShift()\\\">\\n\\t\\t\\t\\t\\t<i-feather class=\\\"icon del\\\" name=\\\"x\\\" width=\\\"20\\\"></i-feather>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<app-loader *ngIf=\\\"!isShiftsLoaded\\\"></app-loader>\\n\\n\\t\\t\\t\\t<ng-container *ngIf=\\\"isShiftsLoaded\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<form #addShiftForm = \\\"ngForm\\\" name=\\\"addShiftForm\\\" (ngSubmit)=\\\"submitShiftsForm(addShiftForm)\\\"  novalidate>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t                   <label>Shift Type*</label>\\n\\t\\t\\t\\t                   <select \\n\\t\\t\\t\\t\\t\\t\\t\\t        name=\\\"shiftTypeId\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t        id=\\\"shiftTypeId\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"shiftTypeId\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of shiftTypeList\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t\\t\\t                </div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t                    <label>Shift Start Time</label>\\n\\t\\t\\t\\t                    <input class=\\\"form-control\\\" name=\\\"startTime\\\" [owlDateTime]=\\\"startTime\\\" [owlDateTimeTrigger]=\\\"startTime\\\" placeholder=\\\"Date Time\\\" [(ngModel)]=\\\"shiftStartTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time [pickerType]=\\\"'timer'\\\" #startTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"startTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t                    <label>Total hrs</label>\\n\\t\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"shiftTotalHrs\\\" [(ngModel)]=\\\"shiftTotalHrs\\\" required>\\n\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline float-right\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addShiftForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n\\n</div>\"","export default \"<router-outlet></router-outlet>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9zdGFmZi1tYW5hZ2VyL2NvbXBvbmVudHMvYWRkLWVudHJ5L2FkZC1lbnRyeS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { StaffService } from 'src/app/api/controllers/Staff';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-add-entry',\n  templateUrl: './add-entry.component.html',\n  styleUrls: ['./add-entry.component.scss']\n})\nexport class AddEntryComponent implements OnInit {\n  \n  isEditEntry:boolean = false;\n\n  isEntrySubmitted:boolean = true;\n\n  isEntryError:boolean = false;\n  isEntrySuccess:boolean = false;\n  alertEntryMessage:string = \"\";\n\n\n  entry:any;\n\n  staffDataList:any;\n  gatesDataList:any;\n  shiftsDataList:any;\n  shiftsFilteredDataList:any;\n  shiftTypeList:any;\n\n  shiftType:string = \"\";\n\n  selectedStaffCateogryId:any;\n  selectedSubStaffCateogryId:any;\n  jobTitle:string = \"\";\n\n  officalStaffsDataList:any;\n  personalStaffsDataList:any;\n\n  attendanceId:any;\n\n  entryComments:string = \"\";\n\n  constructor(\n  \tprivate router: Router,\n    private route: ActivatedRoute,\n    private staffService:StaffService,\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n\n  ) { }\n\n  isAdmin(){\n    return ( this.cookieService.get('userRole') == 'Admin' || this.cookieService.get('userRole') == 'Staff') ? true : false;\n  }\n\n  isShiftSelected (){\n  \treturn this.shiftType != \"\" ? true : false;\n  }\n\n  getShifts(){\n  \tthis.shiftsFilteredDataList = this.shiftsDataList.filter(item => {\n  \t\treturn item.shiftTypeId == this.shiftType;\n  \t})\n  }\n\n  getStaffJobTitle(){\n\n  \tthis.staffService.getStaffByStaffId(this.entry.staffId).subscribe((res:any) => {\n\n  \t\tthis.selectedStaffCateogryId = res[0].staffCategoryId || null;\n  \t\tthis.selectedSubStaffCateogryId = res[0].staffSubCategoryId || null;\n\n  \t\t\n  \t\t\n  \t\tif(this.selectedStaffCateogryId != null) {\n  \t\t\t// offical staff\n  \t\t\tif(this.selectedStaffCateogryId == 115) {\n  \t\t\t\t\n  \t\t\t\tlet data = this.officalStaffsDataList.filter(item => {\n  \t\t\t\t\tif(item.lookupValueId == this.selectedSubStaffCateogryId){\n  \t\t\t\t\t\treturn item.lookupValueName;\n  \t\t\t\t\t}\n  \t\t\t\t})\n\n  \t\t\t\t if(data === undefined || data.length == 0){\n  \t\t\t\t \tthis.entry.jobTitle = \"\";\n  \t\t\t\t }\n  \t\t\t\t else {\n  \t\t\t\t \tthis.entry.jobTitle = data[0].lookupValueName;\n  \t\t\t\t }\n\n  \t\t\t\t\n\n  \t\t\t}\n  \t\t\telse {\n  \t\t\t\tlet data = this.personalStaffsDataList.filter(item => {\n  \t\t\t\t\tif(item.lookupValueId == this.selectedSubStaffCateogryId){\n  \t\t\t\t\t\treturn item.lookupValueName;\n  \t\t\t\t\t}\n  \t\t\t\t})\n  \t\t\t\tif(data === undefined || data.length == 0){\n  \t\t\t\t \tthis.entry.jobTitle = \"\";\n  \t\t\t\t }\n  \t\t\t\t else {\n  \t\t\t\t \tthis.entry.jobTitle = data[0].lookupValueName;\n  \t\t\t\t }\n  \t\t\t}\n  \t\t}\n  \t\telse {\n  \t\t\tthis.entry.jobTitle = \"\";\n  \t\t}\n\n\n  \t});\n\n  }\n\n \n\n  submitEntryForm(form) {\n\n  \tthis.isEntrySubmitted = false;\n\n    if(!this.isEditEntry) {\n\n      let details = {\n\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"staffId\": parseInt(this.entry.staffId),\n        \"inTime\": this.entry.inTime,\n        \"inGateId\": parseInt(this.entry.inGateId),\n        \"outTime\": this.entry.outTime,\n        \"outGateId\": parseInt(this.entry.outGateId),\n        \"shiftId\": parseInt(this.entry.shiftId),\n        \"notes\": this.entryComments,\n        \"isActive\": true,\n        \"insertedBy\": parseInt(this.cookieService.get('userId')),\n        \"insertedOn\": \"2019-12-04T05:43:41.299Z\",\n        \"updatedBy\": 0,\n        \"updatedOn\": \"2019-12-04T05:43:41.299Z\"\n\n      }\n\n      let params = {\n        attendance: details\n      }\n\n      this.staffService.addAttendance(params).subscribe((res:any) => {\n       \n       if(res.message){\n         this.isEntrySubmitted = true;\n         this.sharedService.setAlertMessage(\"Entry added successfully\");\n        this.router.navigate(['ams/staff/attendance']);\n       }\n       else {\n         this.isEntrySubmitted = true;\n         this.isEntryError = true;\n         this.alertEntryMessage = res.errorMessage;\n       }\n\n      },\n      error => {\n        this.isEntrySubmitted = true;\n      this.isEntryError = true;\n      this.alertEntryMessage = \"Some error occured\";\n      }\n      );\n\n    }\n\n  \telse {\n\n      let details = {\n        \"attendanceId\":parseInt(this.route.params['value'].id),\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"staffId\": parseInt(this.entry.staffId),\n        \"inTime\": this.entry.inTime,\n        \"inGateId\": parseInt(this.entry.inGateId),\n        \"outTime\": this.entry.outTime,\n        \"outGateId\": parseInt(this.entry.outGateId),\n        \"shiftId\": parseInt(this.entry.shiftId),\n        \"notes\": this.entryComments,\n        \"isActive\": true,\n        \"insertedBy\": 0,\n        \"insertedOn\": \"2019-12-04T05:43:41.299Z\",\n        \"updatedBy\": parseInt(this.cookieService.get('userId')),\n        \"updatedOn\": \"2019-12-04T05:43:41.299Z\"\n\n      }\n\n      let params = {\n        attendance: details\n      }\n\n      this.staffService.updateAttendance(params).subscribe((res:any) => {\n       \n       if(res.message){\n         this.isEntrySubmitted = true;\n         this.sharedService.setAlertMessage(\"Entry updated successfully\");\n        this.router.navigate(['ams/staff/attendance']);\n       }\n       else {\n         this.isEntrySubmitted = true;\n         this.isEntryError = true;\n         this.alertEntryMessage = res.errorMessage;\n       }\n\n      },\n      error => {\n        this.isEntrySubmitted = true;\n        this.isEntryError = true;\n        this.alertEntryMessage = \"Some error occured\";\n      }\n      );\n\n    }\n\n\t\n\n  }\n\n  ngOnInit() {\n\n  \tthis.entry = {};\n  \tthis.entry.staffId = \"\";\n  \tthis.entry.inGateId = \"\";\n  \tthis.entry.outGateId = \"\";\n  \tthis.entry.shiftId = \"\";\n\n\n    if(this.route.params['value'].id != undefined) {\n      \n      this.isEditEntry = true;\n\n      this.attendanceId = this.route.params['value'].id;\n      \n      this.staffService.getAttendanceByAttendanceId(this.route.params['value'].id).subscribe((res:any) => {\n          \n        this.entry = res[0];\n        this.getStaffJobTitle();\n\n        this.staffService.getShiftByShiftId(this.entry.shiftId).subscribe((res:any) => {\n           \n           this.shiftType = res[0].shiftTypeId.toString();\n           this.getShifts();\n\n        },\n        error => {\n          \n        });\n\n\n      },\n      error => {\n        \n      }\n      );\n\n    }\n\n    let params = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n\n  \tthis.staffService.getAllStaffsByApartmentId(params).subscribe((res:any) => {\n       \n \t\tthis.staffDataList = res.filter(item => {\n \t\t\treturn item.isActive;\n \t\t});\n\n \t\t\n\n\n    },\n    error => {\n      \n    }\n    );\n\n    let gatesParams = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n\n    this.staffService.getAllGatesByApartmentId(gatesParams).subscribe((res:any) => {\n       \n \t\tthis.gatesDataList = res.filter(item => {\n \t\t\treturn item.isActive;\n \t\t});\n\n\n    },\n    error => {\n      \n    }\n    );\n\n    let shiftParams = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n\n    this.staffService.getAllShiftsByApartmentId(shiftParams).subscribe((res:any) => {\n       \n \t\tthis.shiftsDataList = res.filter(item => {\n \t\t\treturn item.isActive;\n \t\t});\n\n \t\t\n\n    },\n    error => {\n      \n    }\n    );\n\n\n    //get all shift types\n\n    let shiftTypeParams = {\n      LookupTypeId: 28\n    }\n\n    this.lookupService.getLookupValueByLookupTypeId(shiftTypeParams).subscribe((res:any) => {\n       \n \t\tthis.shiftTypeList = res.filter(item => {\n \t\t\treturn item.isActive;\n \t\t});\n\n\n    },\n    error => {\n      \n    }\n    );\n\n    let officalListParams = {\n      LookupTypeId: 26\n    }\n\n    //get all offical staff \n    this.lookupService.getLookupValueByLookupTypeId(officalListParams).subscribe((res:any) => {\n       \n \t\tthis.officalStaffsDataList = res.filter(item => {\n \t\t\treturn item.isActive;\n \t\t});\n\n    },\n    error => {\n      \n    }\n    );\n\n    let personalListParams = {\n      LookupTypeId: 27\n    }\n\n    //get all personal staffs \n    this.lookupService.getLookupValueByLookupTypeId(personalListParams).subscribe((res:any) => {\n       \n \t\tthis.personalStaffsDataList = res.filter(item => {\n \t\t\treturn item.isActive;\n \t\t});\n\n\n    },\n    error => {\n      \n    }\n    );\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9zdGFmZi1tYW5hZ2VyL2NvbXBvbmVudHMvYWRkLXN0YWZmL2FkZC1zdGFmZi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { UserService } from 'src/app/api/controllers/User';\nimport { StaffService } from 'src/app/api/controllers/Staff';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-add-staff',\n  templateUrl: './add-staff.component.html',\n  styleUrls: ['./add-staff.component.scss']\n})\nexport class AddStaffComponent implements OnInit {\n  \n  isEditStaff:boolean = false;\n\n  isStaffSubmitted:boolean = false;\n  isStaffAdded:boolean = false;\n\n  isStaffError:boolean = false;\n  isStaffSuccess:boolean = false;\n  alertStaffMessage:string = \"\";\n\n  bloodGroupData:any;\n\n  staff:any;\n\n  vendorType:string = \"\";\n  vendorNameList:any;\n\n  isTypeSelected:boolean = false;\n\n  staffTypeData:any;\n  staffCategoryData:any;\n\n  isFileAdded:boolean = false;\n  selectedFile: File;\n  fileList: File[] = [];\n  listOfFiles: any[] = [];\n\n\n  isPhotoAdded:boolean = false;\n  selectedPhoto: File;\n  photoList: File[] = [];\n  listOfPhotos: any[] = [];\n\n  userId:any = null;\n  staffId:any = null;\n\n  genderType:string = null;\n\n  @Input ('index') index;\n  @Input ('array') staffArray;\n\n  @Output() public outputParams = new EventEmitter();\n\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private userService:UserService,\n    private staffService:StaffService,\n    private lookupService:LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) { }\n\n  isArrayOne(){\n    return this.staffArray.length > 1 ? true : false;\n  }\n\n  deleteStaff(){\n    this.staffArray.splice(this.index, 1);\n    this.outputParams.emit(this.staffArray);\n  }\n\n  uploadFile(event){\n    this.isFileAdded = true;\n\n    for (var i = 0; i <= event.target.files.length - 1; i++) {\n      var selectedFile = event.target.files[i];\n      this.fileList.push(selectedFile);\n      this.listOfFiles.push({'name':selectedFile.name, 'size':selectedFile.size})\n    }\n\n  }\n\n  deleteFile(index){\n    // Delete the item from fileNames list\n    this.listOfFiles.splice(index, 1);\n    // delete file from FileList\n    this.fileList.splice(index, 1);\n\n    this.selectedFile = null;\n\n    if(this.fileList.length == 0 && this.listOfFiles.length == 0){\n      this.isFileAdded = false;\n    }\n\n  }\n\n  uploadPhoto(event){\n    this.isPhotoAdded = true;\n\n    for (var i = 0; i <= event.target.files.length - 1; i++) {\n      var selectedPhoto = event.target.files[i];\n      this.photoList.push(selectedPhoto);\n      this.listOfPhotos.push({'name':selectedPhoto.name, 'size':selectedPhoto.size})\n    }\n\n  }\n\n  deletePhoto(index){\n    // Delete the item from fileNames list\n    this.listOfPhotos.splice(index, 1);\n    // delete file from FileList\n    this.photoList.splice(index, 1);\n\n    this.selectedPhoto = null;\n\n    if(this.photoList.length == 0 && this.listOfPhotos.length == 0){\n      this.isPhotoAdded = false;\n    }\n\n  }\n\n  bytesToSize(bytes) {\n   if(bytes < 1024) return bytes + \" Bytes\";\n    else if(bytes < 1048576) return(bytes / 1024).toFixed(3) + \" KB\";\n    else if(bytes < 1073741824) return(bytes / 1048576).toFixed(3) + \" MB\";\n    else return(bytes / 1073741824).toFixed(3) + \" GB\";\n  }\n\n  isCategoryEnabled(){\n    if(!this.isEditStaff){\n      if(this.isTypeSelected)\n        return true;\n      else\n        return false;\n    }\n    else{\n      return true;\n    }\n  }\n\n  getStaffType(typeId){\n\n    this.isTypeSelected = true;\n\n    if(typeId == \"115\"){\n\n      let params = {\n        LookupTypeId: 26\n      }\n\n      //staff offical category\n      this.lookupService.getLookupValueByLookupTypeId(params).subscribe((res:any) => {\n            \n        this.staffCategoryData = res.filter( item => {\n          return item.isActive;\n        });\n        \n      },\n      error => {\n        \n      }\n      );\n\n    }\n\n    else {\n\n      let params = {\n        LookupTypeId: 27\n      }\n\n      //staff personal category\n      this.lookupService.getLookupValueByLookupTypeId(params).subscribe((res:any) => {\n            \n        this.staffCategoryData = res.filter( item => {\n          return item.isActive;\n        });\n      },\n      error => {\n        \n      }\n      );\n\n    }\n\n  }\n\n  isVendor(){\n    return this.vendorType == 'Yes' ? true : false;\n  }\n\n  submitAddStaffForm(form) {\n\n    this.isStaffSubmitted = true;\n    this.isStaffError = false;\n\n    if(!this.isEditStaff) {\n\n      //add user\n      let userDetails = {\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"firstName\": this.staff.firstName,\n        \"middleName\": \"string\",\n        \"lastName\": this.staff.lastName,\n        \"emailId\": this.staff.emailId,\n        \"password\": this.staff.password,\n        \"salt\": null,\n        \"address1\": this.staff.address || \"\",\n        \"address2\": \"string\",\n        \"city\": \"string\",\n        \"state\": \"string\",\n        \"country\": \"string\",\n        \"zipCode\": \"string\",\n        \"genderId\": parseInt(this.genderType),\n        \"dob\": this.staff.dob,\n        \"joinedOn\": \"2019-11-10T09:58:08.934Z\",\n        \"bloodGroup\": this.staff.bloodGroup,\n        \"phoneNumber\": this.staff.contactNumber.toString(),\n        \"emergencyContactNumber\": \"string\",\n        \"emergencyContactPerson\": \"string\",\n        \"emergencyContactNumberSecondary\": \"string\",\n        \"emergencyContactPersonSecondary\": \"string\",\n        \"accessCardNumber\": \"string\",\n        \"notes\": \"string\",\n        \"profilePictureId\": null,\n        \"isLiving\": true,\n        \"isActive\": true,\n        \"isApproved\": true,\n        \"resetPassword\": true,\n        \"insertedBy\": parseInt(this.cookieService.get('userId')),\n        \"updatedBy\": 0\n      }\n\n      let userParams = {\n        user: userDetails\n      }\n\n      //add user \n      this.userService.addUser(userParams).subscribe((res:any) => {\n            \n            if(res.message) {\n\n              this.userId = res.message;\n\n                let userRole = {\n                  \"userId\": this.userId,\n                  \"roleId\": 5, // for staff\n                  \"isActive\": true,\n                  \"insertedBy\": parseInt(this.cookieService.get('userId')),\n                  \"insertedOn\": \"2019-11-10T10:00:28.212Z\",\n                  \"updatedBy\": 0,\n                  \"updatedOn\": \"2019-11-10T10:00:28.212Z\"\n                }\n\n                let roleParams = {\n                  userRole: userRole\n                }\n\n                //add userrole\n                this.userService.addUserRole(roleParams).subscribe((res:any) => {\n\n                  if(res.message) {\n\n                    let staffDetails = {\n\n                      \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n                      \"userId\": this.userId,\n                      \"firstName\": this.staff.firstName,\n                      \"middleName\": \"string\",\n                      \"lastName\": this.staff.lastName,\n                      \"emailId\": this.staff.emailId,\n                      \"contactNumber\": this.staff.contactNumber.toString(),\n                      \"alternateContact\": this.staff.alternateContact.toString(),\n                      \"staffNumber\": null,\n                      \"staffCategoryId\": parseInt(this.staff.staffCategoryId),\n                      \"staffSubCategoryId\": parseInt(this.staff.staffSubCategoryId),\n                      \"dob\": this.staff.dob,\n                      \"genderId\": parseInt(this.genderType),\n                      \"bloodGroup\": this.staff.bloodGroup,\n                      \"vendorId\": null,\n                      \"vehicleId\": null,\n                      \"healthIssue\": this.staff.healthIssue,\n                      \"comments\": this.staff.comments,\n                      \"plannedEntryTime\": this.staff.plannedEntryTime,\n                      \"plannedExitTime\": this.staff.plannedExitTime,\n                      \"jobStartDate\": this.staff.jobStartDate,\n                      \"jobEndDate\": this.staff.jobEndDate,\n                      \"mtwtfss\": \"string\",\n                      \"photoId\": 4,\n                      \"idcardImg1\": null,\n                      \"idcardImg2\": null,\n                      \"vacationLeaveDays\": parseInt(this.staff.vacationLeaveDays),\n                      \"sickLeaveDays\": parseInt(this.staff.sickLeaveDays),\n                      \"basePay\": this.staff.basePay,\n                      \"overtimePayperhour\": this.staff.overtimePayperhour,\n                      \"allowance1\": this.staff.allowance1,\n                      \"allowance2\": this.staff.allowance2,\n                      \"allowance3\": this.staff.allowance3,\n                      \"deduction1\": this.staff.deduction1,\n                      \"deduction2\": this.staff.deduction2,\n                      \"deduction3\": this.staff.deduction3,\n                      \"perDaySalary\": this.staff.perDaySalary,\n                      \"shiftId\": null,\n                      \"jobTitleId\": parseInt(this.staff.staffSubCategoryId),\n                      \"isActive\": true,\n                      \"insertedBy\": parseInt(this.cookieService.get('userId')),\n                      \"insertedOn\": \"2019-11-30T12:41:45.620Z\",\n                      \"updatedBy\": parseInt(this.cookieService.get('userId')),\n                      \"updatedOn\": \"2019-11-30T12:41:45.620Z\"\n                    }\n\n                    let staffParams = {\n                      staff: staffDetails\n                    }\n\n\n                    this.staffService.addStaff(staffParams).subscribe((res:any) => {\n\n                      this.isStaffSubmitted = false;\n           \n                      if(res.message) {\n                        this.sharedService.setAlertMessage(\"Staff added successfully\");\n                        this.router.navigate(['ams/staff/maintain-staff']);\n\n                      }\n                      else {\n                        this.isStaffError = true;\n                        this.alertStaffMessage = res.alertTicketMessage;\n                      }\n\n                    }, error => {\n\n                      this.isStaffSubmitted = false;\n                      this.isStaffError = true;\n                      this.alertStaffMessage = res.errorMessage;\n\n                    });\n\n\n                  }\n\n                },\n                error => {\n                  console.log(error);\n                }\n                );\n\n            }\n            else {\n\n              this.isStaffSubmitted = false;\n              this.isStaffError = true;\n              this.alertStaffMessage = res.errorMessage;\n\n            }\n\n      },\n      error => {\n        \n      }\n      );\n\n\n    }\n    else {\n\n      this.isStaffSubmitted = true;\n      this.isStaffError = false;\n\n      //edit user\n      let userDetails = {\n        \"userId\": this.userId,\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"firstName\": this.staff.firstName,\n        \"middleName\": \"string\",\n        \"lastName\": this.staff.lastName,\n        \"emailId\": this.staff.emailId,\n        \"password\": this.staff.password,\n        \"salt\": null,\n        \"address1\": this.staff.address || \"\",\n        \"address2\": \"string\",\n        \"city\": \"string\",\n        \"state\": \"string\",\n        \"country\": \"string\",\n        \"zipCode\": \"string\",\n        \"genderId\": parseInt(this.genderType),\n        \"dob\": this.staff.dob,\n        \"joinedOn\": \"2019-11-10T09:58:08.934Z\",\n        \"bloodGroup\": this.staff.bloodGroup,\n        \"phoneNumber\": this.staff.contactNumber.toString(),\n        \"emergencyContactNumber\": \"string\",\n        \"emergencyContactPerson\": \"string\",\n        \"emergencyContactNumberSecondary\": \"string\",\n        \"emergencyContactPersonSecondary\": \"string\",\n        \"accessCardNumber\": \"string\",\n        \"notes\": \"string\",\n        \"profilePictureId\": null,\n        \"isLiving\": true,\n        \"isActive\": true,\n        \"isApproved\": true,\n        \"resetPassword\": true,\n        \"insertedBy\": 0,\n        \"updatedBy\": parseInt(this.cookieService.get('userId'))\n      }\n\n      let userParams = {\n        user: userDetails\n      }\n\n       //edit user \n      this.userService.updateUser(userParams).subscribe((res:any) => {\n            \n            if(res.message) {\n\n              let staffDetails = {\n                  \"staffId\": this.route.params['value'].id,\n                  \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n                  \"userId\": this.userId,\n                  \"firstName\": this.staff.firstName,\n                  \"middleName\": \"string\",\n                  \"lastName\": this.staff.lastName,\n                  \"emailId\": this.staff.emailId,\n                  \"contactNumber\": this.staff.contactNumber.toString(),\n                  \"alternateContact\": this.staff.alternateContact.toString(),\n                  \"staffNumber\": null,\n                  \"staffCategoryId\": parseInt(this.staff.staffCategoryId),\n                  \"staffSubCategoryId\": parseInt(this.staff.staffSubCategoryId),\n                  \"dob\": this.staff.dob,\n                  \"genderId\": parseInt(this.genderType),\n                  \"bloodGroup\": this.staff.bloodGroup,\n                  \"vendorId\": null,\n                  \"vehicleId\": null,\n                  \"healthIssue\": this.staff.healthIssue,\n                  \"comments\": this.staff.comments,\n                  \"plannedEntryTime\": this.staff.plannedEntryTime,\n                  \"plannedExitTime\": this.staff.plannedExitTime,\n                  \"jobStartDate\": this.staff.jobStartDate,\n                  \"jobEndDate\": this.staff.jobEndDate,\n                  \"mtwtfss\": \"string\",\n                  \"photoId\": 4,\n                  \"idcardImg1\": null,\n                  \"idcardImg2\": null,\n                  \"vacationLeaveDays\": parseInt(this.staff.vacationLeaveDays),\n                  \"sickLeaveDays\": parseInt(this.staff.sickLeaveDays),\n                  \"basePay\": this.staff.basePay,\n                  \"overtimePayperhour\": this.staff.overtimePayperhour,\n                  \"allowance1\": this.staff.allowance1,\n                  \"allowance2\": this.staff.allowance2,\n                  \"allowance3\": this.staff.allowance3,\n                  \"deduction1\": this.staff.deduction1,\n                  \"deduction2\": this.staff.deduction2,\n                  \"deduction3\": this.staff.deduction3,\n                  \"perDaySalary\": this.staff.perDaySalary,\n                  \"shiftId\": null,\n                  \"jobTitleId\": parseInt(this.staff.staffSubCategoryId),\n                  \"isActive\": true,\n                  \"insertedBy\": 0,\n                  \"insertedOn\": \"2019-11-30T12:41:45.620Z\",\n                  \"updatedBy\": parseInt(this.cookieService.get('userId')),\n                  \"updatedOn\": \"2019-11-30T12:41:45.620Z\"\n               }\n\n               let staffParams = {\n                staff: staffDetails\n              }\n\n               //edit staff\n               this.staffService.updateStaff(staffParams).subscribe((res:any) => {\n\n                  this.isStaffSubmitted = false;\n       \n                  if(res.message) {\n                    //this.isStaffSuccess = true;\n                    //this.alertStaffMessage = \"Staff updated successfully\";\n                    //this.staffId = res.message;\n                    this.sharedService.setAlertMessage(\"Staff updated successfully\");\n                    this.router.navigate(['ams/staff/maintain-staff']);\n\n                  }\n                  else {\n                    this.isStaffError = true;\n                    this.alertStaffMessage = res.alertTicketMessage;\n                  }\n\n                }, error => {\n\n                  this.isStaffSubmitted = false;\n                  this.isStaffError = true;\n                  this.alertStaffMessage = res.errorMessage;\n\n              });\n\n\n            }\n            else {\n\n              this.isStaffSubmitted = false;\n              this.isStaffError = true;\n              this.alertStaffMessage = res.errorMessage;\n\n            }\n\n      });\n\n    }\n\n  }\n\n  ngOnInit() {\n\n  \tthis.staff = {};\n    this.staff.bloodGroup = \"\";\n    this.staff.staffCategoryId = \"\";\n    this.staff.staffSubCategoryId = \"\";\n    this.staff.contactNumber = \"\";\n    this.staff.alternateContact = \"\";\n\n    if(this.route.params['value'].id != undefined) {\n      \n      this.isEditStaff = true;\n      this.isStaffAdded = true;\n\n      this.staffId = this.route.params['value'].id;\n      \n      this.staffService.getStaffByStaffId(this.route.params['value'].id).subscribe((res:any) => {\n          \n        this.staff = res[0];\n        this.userId = this.staff.userId;\n        this.genderType = this.staff.genderId.toString();\n        this.getStaffType(this.staff.staffCategoryId);\n\n      },\n      error => {\n        \n      }\n      );\n\n    }\n\n    let groupParams = {\n      LookupTypeId: 24\n    }\n\n    this.lookupService.getLookupValueByLookupTypeId(groupParams).subscribe((res:any) => {\n      this.bloodGroupData = res;\n    });\n\n    let staffParams = {\n      LookupTypeId: 25\n    }\n\n    //staff type\n    this.lookupService.getLookupValueByLookupTypeId(staffParams).subscribe((res:any) => {\n          \n       this.staffTypeData = res.filter( item => {\n          return item.isActive;\n       });\n\n    },\n    error => {\n      \n    }\n    );\n\n    let categoryParams = {\n      LookupTypeId: 26\n    }\n\n    //category type\n    this.lookupService.getLookupValueByLookupTypeId(categoryParams).subscribe((res:any) => {\n          \n       this.staffCategoryData = res.filter( item => {\n          return item.isActive;\n        });\n\n    },\n    error => {\n      \n    }\n    );\n\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9zdGFmZi1tYW5hZ2VyL2NvbXBvbmVudHMvc3RhZmYtYXR0ZW5kYW5jZS9zdGFmZi1hdHRlbmRhbmNlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\nimport { StaffService } from 'src/app/api/controllers/Staff';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-staff-attendance',\n  templateUrl: './staff-attendance.component.html',\n  styleUrls: ['./staff-attendance.component.scss']\n})\nexport class StaffAttendanceComponent implements OnInit {\n  \n  entryListData:any;\n\n  isEntryDataLoaded:boolean = false;\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n\n  entry:any;\n  entryData:string = \"\";\n\n  staffDetails:any;\n  gateDataList:any;\n\n  officalStaffsDataList:any;\n  personalStaffsDataList:any;\n\n  selectedInput:string = \"\";\n  columnField: any = {}\n\n  constructor(\n    private staffService:StaffService,\n    private lookupService: LookupService,\n    private cookieService: CookieService\n  ) { }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  selectColInput(value){\n    this.selectedInput = value;\n  }\n\n  onSelectChange(event, type, name){\n\n    if(!_.isEmpty(event)){\n      this.selectedInput = type;\n      this.columnField[type] = event[name];\n    }\n    else {\n       this.columnField = {};\n    }\n    \n  }\n\n  getInGateName(id) {\n  \t\n  \tvar data = this.gateDataList.filter( item => {\n  \t\treturn item.gateId == id;\n  \t});\n\n  \tif(data === undefined || data.length === 0) {\n  \t\tthis.entry.inGateId = \"\";\n  \t\treturn \"\"\n  \t}\n  \telse {\n  \t\tthis.entry.inGateId = data[0].gateName;\n  \t\treturn data[0].gateName;\n  \t}\n\n  }\n\n  getOutGateName(id) {\n  \t\n  \tvar data = this.gateDataList.filter( item => {\n  \t\treturn item.gateId == id;\n  \t});\n\n  \tif(data === undefined || data.length === 0) {\n  \t\tthis.entry.outGateId = \"\";\n  \t\treturn \"\"\n  \t}\n  \telse {\n  \t\tthis.entry.outGateId = data[0].gateName;\n  \t\treturn data[0].gateName;\n  \t}\n\n  }\n\n  getStaffName(id) {\n\n  \tvar data = this.staffDetails.filter( item => {\n  \t\treturn item.staffId == id;\n  \t});\n\n  \tif(data === undefined || data.length === 0) {\n  \t\tthis.entry.firstName = \"\";\n  \t\treturn \"\"\n  \t}\n  \telse {\n  \t\tthis.entry.firstName = data[0].firstName;\n  \t\treturn data[0].firstName;\n  \t}\n  \t\n\n  }\n\n\n  getJobTitle(id){\n\n  \tvar data = this.staffDetails.filter( item => {\n  \t\treturn item.staffId == id;\n  \t});\n\n  \tif(data === undefined || data.length === 0) {\n  \t\tthis.entry.jobTitle = \"\";\n  \t\treturn \"\"\n  \t}\n  \telse {\n  \t\tvar selectedStaffCateogryId = data[0].staffCategoryId;\n  \t\tvar selectedSubStaffCateogryId = data[0].staffSubCategoryId;\n\n  \t\t// offical staff\n  \t\t\tif(selectedStaffCateogryId == 115) {\n  \t\t\t\t\n  \t\t\t\tlet name = this.officalStaffsDataList.filter(item => {\n  \t\t\t\t\tif(item.lookupValueId == selectedSubStaffCateogryId){\n  \t\t\t\t\t\treturn item.lookupValueName;\n  \t\t\t\t\t}\n  \t\t\t\t})\n\n\n  \t\t\t\t if(name === undefined || name.length == 0){\n  \t\t\t\t \tthis.entry.jobTitle = \"\";\n  \t\t\t\t \treturn \"\"\n  \t\t\t\t }\n  \t\t\t\t else {\n  \t\t\t\t \tthis.entry.jobTitle = name[0].lookupValueName;\n  \t\t\t\t \treturn name[0].lookupValueName;\n  \t\t\t\t }\n\n  \t\t\t\t\n\n  \t\t\t}\n  \t\t\telse {\n  \t\t\t\tlet name = this.personalStaffsDataList.filter(item => {\n  \t\t\t\t\tif(item.lookupValueId == selectedSubStaffCateogryId){\n  \t\t\t\t\t\treturn item.lookupValueName;\n  \t\t\t\t\t}\n  \t\t\t\t})\n  \t\t\t\tif(name === undefined || name.length == 0){\n  \t\t\t\t \tthis.entry.jobTitle = \"\";\n  \t\t\t\t \treturn \"\"\n  \t\t\t\t }\n  \t\t\t\t else {\n  \t\t\t\t \tthis.entry.jobTitle = name[0].lookupValueName;\n  \t\t\t\t \treturn name[0].lookupValueName;\n  \t\t\t\t }\n  \t\t\t}\n\n\n\n  \t}\n\n  }\n\n\n  ngOnInit() {\n\n  \tthis.entry = {};\n\n\n  \tthis.staffDetails = [];\n  \tthis.gateDataList = [];\n\n  \tthis.officalStaffsDataList = [];\n  \tthis.personalStaffsDataList = [];\n\n\tlet params = {\n\t\tapartmentId: parseInt(this.cookieService.get('apartmentId'))\n\t}\n\n  \tthis.staffService.getAllAttendancesByApartmentId(params).subscribe((res:any) => {\n\n    //filter active true items\n    this.entryListData = res.filter(data => {\n      return data.isActive\n    });\n\n    _.each(this.entryListData, item => {\n    \t\n    \tthis.staffService.getStaffByStaffId(item.staffId).subscribe((staff:any) => {\n\n    \t\tthis.staffDetails.push(staff[0]);\n\n    \t});\n\n\t});\n\t\n\tlet dataListparams = {\n\t\tapartmentId: parseInt(this.cookieService.get('apartmentId'))\n\t}\n\n    //get all gates\n\tthis.staffService.getAllGatesByApartmentId(dataListparams).subscribe((res:any) => {\n\t\tthis.gateDataList = res;\n\t});\n\n\tlet officialListparams = {\n\t\tLookupTypeId: 26\n\t}\n\n\t//get all offical staff \n    this.lookupService.getLookupValueByLookupTypeId(officialListparams).subscribe((res:any) => {\n       \n \t\tthis.officalStaffsDataList = res.filter(item => {\n \t\t\treturn item.isActive;\n \t\t});\n\n    },\n    error => {\n      \n    }\n\t);\n\t\n\tlet personalListparams = {\n\t\tLookupTypeId: 27\n\t}\n\n\n    //get all personal staffs \n    this.lookupService.getLookupValueByLookupTypeId(personalListparams).subscribe((res:any) => {\n       \n \t\tthis.personalStaffsDataList = res.filter(item => {\n \t\t\treturn item.isActive;\n \t\t});\n\n\n    },\n    error => {\n      \n    }\n    );\n\n\n    this.totalItems = this.entryListData.length;\n\n    if(this.totalItems>this.itemLimit){\n      this.ItemEndIndex = this.itemLimit;\n    }\n\n    else {\n      this.ItemEndIndex = this.totalItems;\n    }\n\n    this.isEntryDataLoaded = true;\n\n  });\n\n\n\n\n\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9zdGFmZi1tYW5hZ2VyL2NvbXBvbmVudHMvc3RhZmYtZ2F0ZXMvc3RhZmYtZ2F0ZXMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Injector } from '@angular/core';\n\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { StaffService } from 'src/app/api/controllers/Staff';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-staff-gates',\n  templateUrl: './staff-gates.component.html',\n  styleUrls: ['./staff-gates.component.scss']\n})\nexport class StaffGatesComponent implements OnInit {\n  \n  gate:any;\n\n  isGateLoaded:boolean = true;\n\n  isGateTableLoaded:boolean = false;\n\n  modalService:any;\n\n  gateListData:any;\n\n  isAddGateLoaded:boolean = false;\n\n  isEditGate:boolean = false;\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n\n  constructor(\n  \tprivate injector: Injector,\n  \tpublic dialog: MatDialog,\n    private staffService:StaffService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) { \n  \tthis.modalService = this.injector.get(ModalService);\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  submitGateForm(form) {\n\n  \tthis.isGateLoaded = false;\n\n    if(!this.isEditGate) {\n\n      let details = {\n\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"gateName\": this.gate.gateName,\n        \"comments\": this.gate.comments,\n        \"isActive\": true,\n        \"insertedBy\": parseInt(this.cookieService.get('userId')),\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": 0,\n        \"updatedOn\": new Date().toISOString()\n\n      }\n\n      let params = {\n        gate: details\n      }\n\n      this.staffService.addGate(params).subscribe((res:any) => {\n\n        if(res.message) {\n\n          this.isGateLoaded = true;\n          this.sharedService.setAlertMessage(\"Gate added Successfully!\");\n\n          this.getAllGates();\n        }\n\n      }, error => {\n\n      })\n\n    }\n\n  \telse {\n\n      let details = {\n\n        \"gateId\": parseInt(this.gate.gateId),\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"gateName\": this.gate.gateName,\n        \"comments\": this.gate.comments,\n        \"isActive\": this.gate.isActive,\n        \"insertedBy\": parseInt(this.cookieService.get('userId')),\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": parseInt(this.cookieService.get('userId')),\n        \"updatedOn\": new Date().toISOString()\n\n      }\n\n      let params = {\n        gate: details\n      }\n\n      this.staffService.updateGate(params).subscribe((res:any) => {\n\n        if(res.message) {\n\n          this.isGateLoaded = true;\n          this.sharedService.setAlertMessage(\"Gate updated Successfully!\");\n\n          this.getAllGates();\n        }\n\n      }, error => {\n\n      })\n\n    }\n\n\t\n\n  }\n\n  getAllGates(){\n    \n    let params = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n\n  \tthis.staffService.getAllGatesByApartmentId(params).subscribe((res:any) => {\n\n  \t\tthis.isGateTableLoaded = true;\n  \t\t\n      this.gateListData = res.filter(item => {\n  \t\t\treturn item.isActive;\n  \t\t});\n\n      this.totalItems = this.gateListData.length;\n\n      if(this.totalItems>this.itemLimit){\n        this.ItemEndIndex = this.itemLimit;\n      }\n\n      else {\n        this.ItemEndIndex = this.totalItems;\n      }\n\n\n  \t}, error => {\n\n\t});\n\n  }\n\n  showConfirmModal(item) {\n    this.modalService.showConfirmModal(item);\n  }\n\n  addGate(){\n\n    this.isEditGate = false;\n    this.isAddGateLoaded = false;\n\n    setTimeout(() => {\n\n      this.isAddGateLoaded = true;\n\n    }, 10);\n\n    setTimeout(() => {\n\n      var elem = document.querySelector('.add-gate-card');\n      var scrollTo = elem.getBoundingClientRect().top - 100;\n\n      window.scroll({\n        top: scrollTo,\n        behavior: 'smooth'\n      });\n\n    }, 100);\n\n  }\n\n  editGate(id){\n\n    this.isEditGate = true;\n    this.isGateLoaded = false;\n\n    this.staffService.getGateByGateId(id).subscribe((res:any) => {\n\n      this.isGateLoaded = true;\n      this.gate = res[0];\n\n      this.isAddGateLoaded = false;\n\n      setTimeout(() => {\n\n        this.isAddGateLoaded = true;\n\n      }, 10);\n\n      setTimeout(() => {\n\n        var elem = document.querySelector('.add-gate-card');\n        var scrollTo = elem.getBoundingClientRect().top - 100;\n\n        window.scroll({\n          top: scrollTo,\n          behavior: 'smooth'\n        });\n\n      }, 100);\n\n\n    }, error => {\n\n    });\n\n\n  }\n\n  closeGate(){\n    this.isAddGateLoaded = false;\n  }\n\n  ngOnInit() {\n\n  \tthis.gate = {};\n\n  \tthis.getAllGates();\n\n\n    // delete gate\n    this.sharedService.unitlistdeleteindexcast.subscribe( item => {\n\n      if(item != null){\n\n        this.isGateTableLoaded = false;\n\n        var params = {\n          gateId: item.gateId,\n          deleteBy: parseInt(this.cookieService.get('userId'))\n        }\n\n        this.staffService.deleteGate(params).subscribe((res:any) => {\n\n          this.gateListData = this.gateListData.filter((type) => type.gateId !== item.gateId);\n          this.sharedService.setUnitListDeleteIndex(null);\n          this.isGateTableLoaded = true;\n\n        });\n\n        \n      }\n\n    });\n\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9zdGFmZi1tYW5hZ2VyL2NvbXBvbmVudHMvc3RhZmYtaW5hY3RpdmUtc3RhZmYvc3RhZmYtaW5hY3RpdmUtc3RhZmYuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\nimport { StaffService } from 'src/app/api/controllers/Staff';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-staff-inactive-staff',\n  templateUrl: './staff-inactive-staff.component.html',\n  styleUrls: ['./staff-inactive-staff.component.scss']\n})\nexport class StaffInactiveStaffComponent implements OnInit {\n\n  staffListData:any;\n\n  isStaffDataLoaded:boolean = false;\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n\n  staffData:string = \"\";\n\n  totalFilterItems:any;\n\n  staffTypeData:any;\n  staffOfficalCategoryData:any;\n  staffPersonalCategoryData:any;\n  staffTypeId:any;\n\n  selectedInput:string = \"\";\n  columnField: any = {}\n\n  constructor(\n  \tprivate staffService:StaffService,\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService: CookieService\n  ) { }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  selectColInput(value){\n    this.selectedInput = value;\n  }\n\n  onSelectChange(event, type, name){\n\n    if(!_.isEmpty(event)){\n      this.selectedInput = type;\n      this.columnField[type] = event[name];\n    }\n    else {\n       this.columnField = {};\n    }\n    \n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  getStaffCategory(id){\n     \n    var data = _.filter( this.staffTypeData, function( item ) {\n      if(item.lookupValueId === id)\n        return item;\n    });\n\n    if(data === undefined || data.length == 0){\n      return '';\n    }\n    else {\n      this.staffTypeId = data[0].lookupValueId;\n      return data[0].lookupValueName.toLowerCase();\n    }\n\n  }\n\n  getStaffSubCategory(id) {\n    if(this.staffTypeId == 115){\n\n      var data = _.filter( this.staffOfficalCategoryData, function( item ) {\n      if(item.lookupValueId === id)\n        return item;\n      } );\n      if(data === undefined || data.length == 0){\n        return '';\n      }\n      else {\n        return data[0].lookupValueName;\n      }\n\n    }\n    else {\n\n      var data = _.filter( this.staffPersonalCategoryData, function( item ) {\n      if(item.lookupValueId === id)\n        return item;\n      } );\n\n      if(data === undefined || data.length == 0){\n        return '';\n      }\n      else {\n        return data[0].lookupValueName;\n      }\n\n    }\n    \n\n  }\n\n  ngOnInit() {\n\n    let params = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n\n  \tthis.staffService.getAllStaffsByApartmentId(params).subscribe((res:any) => {\n\n    //filter inactive true items\n    this.staffListData = res.filter(data => {\n      return !data.isActive\n    });\n\n\n    this.totalItems = this.staffListData.length;\n\n    if(this.totalItems>this.itemLimit){\n      this.ItemEndIndex = this.itemLimit;\n    }\n\n    else {\n      this.ItemEndIndex = this.totalItems;\n    }\n\n    this.isStaffDataLoaded = true;\n\n  });\n\n  let staffParams = {\n    LookupTypeId: 25\n  }\n\n    //staff type\n    this.lookupService.getLookupValueByLookupTypeId(staffParams).subscribe((res:any) => {\n          \n       this.staffTypeData = res.filter( item => {\n          return item.isActive;\n       });\n\n    },\n    error => {\n      \n    }\n    );\n\n    let staffOfficialParams = {\n      LookupTypeId: 26\n    }\n\n    //offical category type\n    this.lookupService.getLookupValueByLookupTypeId(staffOfficialParams).subscribe((res:any) => {\n          \n       this.staffOfficalCategoryData = res.filter( item => {\n          return item.isActive;\n       });\n\n       console.log(this.staffOfficalCategoryData);\n\n    },\n    error => {\n      \n    }\n    );\n\n    let staffPersonalParams = {\n      LookupTypeId: 27\n    }\n\n    //personal category type\n    this.lookupService.getLookupValueByLookupTypeId(staffPersonalParams).subscribe((res:any) => {\n          \n       this.staffPersonalCategoryData = res.filter( item => {\n          return item.isActive;\n        });\n\n    },\n    error => {\n      \n    }\n    );\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9zdGFmZi1tYW5hZ2VyL2NvbXBvbmVudHMvc3RhZmYtbWFpbnRhaW4tc3RhZmYvc3RhZmYtbWFpbnRhaW4tc3RhZmYuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Injector } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { StaffService } from 'src/app/api/controllers/Staff';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\n\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-staff-maintain-staff',\n  templateUrl: './staff-maintain-staff.component.html',\n  styleUrls: ['./staff-maintain-staff.component.scss']\n})\nexport class StaffMaintainStaffComponent implements OnInit {\n\n  staffListData:any;\n\n  isStaffDataLoaded:boolean = false;\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n\n  staff:any;\n  staffData:string = \"\";\n\n  modalService:any;\n\n  totalFilterItems:any;\n  visitTypeData:any;\n\n  staffTypeData:any;\n  staffOfficalCategoryData:any;\n  staffPersonalCategoryData:any;\n  staffTypeId:any;\n\n  selectedInput:string = \"\";\n  columnField: any = {}\n\n  constructor(\n    private injector: Injector,\n    private staffService:StaffService,\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService: CookieService\n  ) {\n    this.modalService = this.injector.get(ModalService);\n   }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  selectColInput(value){\n    this.selectedInput = value;\n  }\n\n  onSelectChange(event, type, name){\n\n    if(!_.isEmpty(event)){\n      this.selectedInput = type;\n      this.columnField[type] = event[name];\n    }\n    else {\n       this.columnField = {};\n    }\n    \n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  showConfirmModal(id) {\n    this.modalService.showConfirmModal(id);\n  }\n\n  getTimeFormat(dateTime){\n    return moment(dateTime).format(\"YYYY-MM-DD HH:mm\");\n  }\n\n  getStaffCategory(staff, id){\n     \n    var data = _.filter( this.staffTypeData, function( item ) {\n      if(item.lookupValueId === id)\n        return item;\n    });\n\n    if(data === undefined || data.length == 0){\n      return '';\n    }\n    else {\n\n      this.staffListData.map(obj=> {\n        if(obj.staffId == staff.staffId){\n          obj.staffCategory = data[0].lookupValueName;\n        }\n      });\n\n      return data[0].lookupValueName.toLowerCase();\n    }\n\n  }\n\n  getStaffSubCategory(staff, id) {\n    if(this.staffTypeId == 115){\n\n      var data = _.filter( this.staffOfficalCategoryData, function( item ) {\n      if(item.lookupValueId === id)\n        return item;\n      } );\n      if(data === undefined || data.length == 0){\n        return '';\n      }\n      else {\n\n        this.staffListData.map(obj=> {\n          if(obj.staffId == staff.staffId){\n            obj.staffSubCategory = data[0].lookupValueName;\n          }\n        });\n\n        return data[0].lookupValueName;\n      }\n\n    }\n    else {\n\n      var data = _.filter( this.staffPersonalCategoryData, function( item ) {\n      if(item.lookupValueId === id)\n        return item;\n      } );\n\n      if(data === undefined || data.length == 0){\n        return '';\n      }\n      else {\n\n        this.staffListData.map(obj=> {\n          if(obj.staffId == staff.staffId){\n            obj.staffSubCategory = data[0].lookupValueName;\n          }\n        });\n\n        return data[0].lookupValueName;\n      }\n\n    }\n    \n\n  }\n\n  ngOnInit() {\n\n    let params = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n\n    this.staffService.getAllStaffsByApartmentId(params).subscribe((res:any) => {\n\n    //filter active true items\n    this.staffListData = res.filter(data => {\n      return data.isActive\n    });\n\n\n    this.totalItems = this.staffListData.length;\n\n    if(this.totalItems>this.itemLimit){\n      this.ItemEndIndex = this.itemLimit;\n    }\n\n    else {\n      this.ItemEndIndex = this.totalItems;\n    }\n\n    this.isStaffDataLoaded = true;\n\n  });\n\n    let staffParams = {\n      LookupTypeId: 25\n    }\n\n    //staff type\n    this.lookupService.getLookupValueByLookupTypeId(staffParams).subscribe((res:any) => {\n          \n       this.staffTypeData = res.filter( item => {\n          return item.isActive;\n       });\n\n    },\n    error => {\n      \n    }\n    );\n\n    let officialParams = {\n      LookupTypeId: 26\n    }\n\n    //offical category type\n    this.lookupService.getLookupValueByLookupTypeId(officialParams).subscribe((res:any) => {\n          \n       this.staffOfficalCategoryData = res.filter( item => {\n          return item.isActive;\n       });\n\n       console.log(this.staffOfficalCategoryData);\n\n    },\n    error => {\n      \n    }\n    );\n\n    let officialCategoryParams = {\n      LookupTypeId: 27\n    }\n\n    //personal category type\n    this.lookupService.getLookupValueByLookupTypeId(officialCategoryParams).subscribe((res:any) => {\n          \n       this.staffPersonalCategoryData = res.filter( item => {\n          return item.isActive;\n        });\n\n    },\n    error => {\n      \n    }\n    );\n\n\n    // delete item\n    this.sharedService.unitlistdeleteindexcast.subscribe( id => {\n\n      if(id != null){\n\n        var params = {\n          staffId: id,\n          deleteBy: parseInt(this.cookieService.get('userId'))\n        }\n\n        this.staffService.deleteStaff(params).subscribe((res:any) => {\n\n          _.each(this.staffListData, (type)=>{\n            if(type.staffId == id){\n              type.isActive = false;\n            }\n          })\n\n          setTimeout(() => {\n\n            this.staffListData = this.staffListData.filter((type) => type.staffId !== id);\n            this.totalItems = this.staffListData.length;\n            this.sharedService.setAlertMessage(\"Staff deleted\");\n            this.sharedService.setUnitListDeleteIndex(null);\n\n          }, 500)\n\n\n        }, error => {\n          console.log(error);\n        });\n\n        \n      }\n\n    } )\n\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9zdGFmZi1tYW5hZ2VyL2NvbXBvbmVudHMvc3RhZmYtb3ZlcnRpbWUvc3RhZmYtb3ZlcnRpbWUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-staff-overtime',\n  templateUrl: './staff-overtime.component.html',\n  styleUrls: ['./staff-overtime.component.scss']\n})\nexport class StaffOvertimeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9zdGFmZi1tYW5hZ2VyL2NvbXBvbmVudHMvc3RhZmYtcGF5cm9sbC9zdGFmZi1wYXlyb2xsLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-staff-payroll',\n  templateUrl: './staff-payroll.component.html',\n  styleUrls: ['./staff-payroll.component.scss']\n})\nexport class StaffPayrollComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9zdGFmZi1tYW5hZ2VyL2NvbXBvbmVudHMvc3RhZmYtcmVwb3J0cy9zdGFmZi1yZXBvcnRzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-staff-reports',\n  templateUrl: './staff-reports.component.html',\n  styleUrls: ['./staff-reports.component.scss']\n})\nexport class StaffReportsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9zdGFmZi1tYW5hZ2VyL2NvbXBvbmVudHMvc3RhZmYtc2V0dXAvc3RhZmYtc2V0dXAuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Injector } from '@angular/core';\n\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-staff-setup',\n  templateUrl: './staff-setup.component.html',\n  styleUrls: ['./staff-setup.component.scss']\n})\nexport class StaffSetupComponent implements OnInit {\n\n  categoryOffcialData:string = \"\";\n  categoryOffcialListData:any;\n\n  categoryPersonalData:string = \"\";\n  categoryPersonalListData:any;\n\n  isCategoryDataLoaded:boolean = false;\n\n  staffCategoryData:any;\n\n  modalService:any;\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  isStaffLoaded:boolean = false;\n\n  staffType:string = \"\";\n  staffTypeId:number;\n  staffCategory:string = \"\";\n  staffCategoryId:number;\n\n  staffDeleteTypeId:string = \"\"\n\n  errorMessage:string = \"\";\n  isError:boolean = false; \n\n\n  isEditStaffCategory:boolean = false;\n\n\n  constructor(\n    private injector: Injector,\n    public dialog: MatDialog,\n  \tprivate lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) { \n    this.modalService = this.injector.get(ModalService);\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  showConfirmModal(index) {\n    this.modalService.showConfirmModal(index);\n  }\n\n  editStaffCategory(category) {\n\n    this.isEditStaffCategory = true;\n    this.staffCategory = category.lookupValueName;\n    this.staffCategoryId = category.lookupValueId;\n    \n\n  }\n\n  submitStaffForm(form) {\n    \n    this.isError = false;\n\n\n    //offical category\n    if(this.staffType == \"115\"){\n\n      this.staffTypeId = 26;\n\n      var categoryAvailable = _.some( this.categoryOffcialData, item => {\n        return item.lookupValueName === this.staffCategory;\n      });\n\n      if(categoryAvailable) {\n        this.isError = true;\n        this.errorMessage = 'Category already available';\n        this.isStaffLoaded = true;\n      }\n      else {\n\n        this.isStaffLoaded = false;\n\n        if(!this.isEditStaffCategory) {\n\n          let details = {\n  \n            \"lookupTypeId\": this.staffTypeId,\n            \"lookupValueName\": this.staffCategory,\n            \"description\": this.staffCategory,\n            \"isActive\": true,\n            \"insertedBy\": parseInt(this.cookieService.get('userId')),\n            \"insertedOn\": \"2019-11-16T14:50:08.217Z\",\n            \"updatedBy\": 0,\n            \"updatedOn\": \"2019-11-16T14:50:08.217Z\"\n\n          }\n\n          let params = {\n            lookupvalue: details\n          }\n\n          this.lookupService.addLookupValue(params).subscribe((res:any) => {\n\n\n              this.isStaffLoaded = true;\n              this.isCategoryDataLoaded = false;\n\n              let params = {\n                LookupTypeId: this.staffTypeId\n              }\n\n              this.lookupService.getLookupValueByLookupTypeId(params).subscribe((res:any) => {\n\n                 var categoryOffcialListData = res.filter(item => {\n                  return item.isActive;\n                 });\n\n                 this.categoryOffcialListData = categoryOffcialListData;\n                 this.isCategoryDataLoaded = true;\n\n\n              },\n              error => {\n\n              }\n              );\n\n        },\n        error => {\n\n        }\n        );\n\n        }\n\n        else {\n\n          let details = {\n\n            \"lookupValueId\": this.staffCategoryId,\n            \"lookupTypeId\": this.staffTypeId,\n            \"lookupValueName\": this.staffCategory,\n            \"description\": this.staffCategory,\n            \"isActive\": true,\n            \"insertedBy\": 0,\n            \"insertedOn\": \"2019-11-16T14:50:08.217Z\",\n            \"updatedBy\": parseInt(this.cookieService.get('userId')),\n            \"updatedOn\": \"2019-11-16T14:50:08.217Z\"\n\n          }\n\n          let params = {\n            lookupvalue: details\n          }\n\n          this.lookupService.updateLookupValue(params).subscribe((res:any) => {\n\n\n              this.isStaffLoaded = true;\n              this.isCategoryDataLoaded = false;\n              this.isEditStaffCategory = false;\n\n              let params = {\n                LookupTypeId: this.staffTypeId\n              }\n\n              this.lookupService.getLookupValueByLookupTypeId(params).subscribe((res:any) => {\n\n                 var categoryOffcialListData = res.filter(item => {\n                  return item.isActive;\n                 });\n\n                 this.categoryOffcialListData = categoryOffcialListData;\n                 this.isCategoryDataLoaded = true;\n\n\n              },\n              error => {\n\n              }\n              );\n\n          },\n          error => {\n\n          }\n          );\n\n\n        }\n\n\n      }\n      \n\n    }\n    else {\n\n      this.staffTypeId = 27;\n\n      var categoryAvailable = _.some( this.categoryPersonalData, item => {\n        return item.lookupValueName === this.staffCategory;\n      });\n\n      if(categoryAvailable) {\n        this.isError = true;\n        this.errorMessage = 'Category already available';\n        this.isStaffLoaded = true;\n      }\n\n      else {\n\n          this.isStaffLoaded = false;\n\n           if(!this.isEditStaffCategory) {\n\n              let details = {\n        \n                \"lookupTypeId\": this.staffTypeId,\n                \"lookupValueName\": this.staffCategory,\n                \"description\": this.staffCategory,\n                \"isActive\": true,\n                \"insertedBy\": parseInt(this.cookieService.get('userId')),\n                \"insertedOn\": \"2019-11-16T14:50:08.217Z\",\n                \"updatedBy\": 0,\n                \"updatedOn\": \"2019-11-16T14:50:08.217Z\"\n\n              }\n\n              let params = {\n                lookupvalue: details\n              }\n\n              this.lookupService.addLookupValue(params).subscribe((res:any) => {\n\n\n                  this.isStaffLoaded = true;\n                  this.isCategoryDataLoaded = false;\n\n                  let params = {\n                    LookupTypeId: this.staffTypeId\n                  }\n\n                  this.lookupService.getLookupValueByLookupTypeId(params).subscribe((res:any) => {\n\n                     var categoryPersonalListData = res.filter(item => {\n                       return item.isActive;\n                     });\n\n                     this.categoryPersonalListData = categoryPersonalListData;\n                     this.isCategoryDataLoaded = true;\n\n\n                  },\n                  error => {\n\n                  }\n                  );\n\n              },\n              error => {\n\n              }\n              ); \n\n\n           }\n\n           else {\n\n             let details = {\n\n              \"lookupValueId\": this.staffCategoryId,\n              \"lookupTypeId\": this.staffTypeId,\n              \"lookupValueName\": this.staffCategory,\n              \"description\": this.staffCategory,\n              \"isActive\": true,\n              \"insertedBy\": 0,\n              \"insertedOn\": \"2019-11-16T14:50:08.217Z\",\n              \"updatedBy\": parseInt(this.cookieService.get('userId')),\n              \"updatedOn\": \"2019-11-16T14:50:08.217Z\"\n\n            }\n\n            let params = {\n              lookupvalue: details\n            }\n\n            this.lookupService.updateLookupValue(params).subscribe((res:any) => {\n\n\n                  this.isStaffLoaded = true;\n                  this.isCategoryDataLoaded = false;\n                  this.isEditStaffCategory = false;\n\n                  let params = {\n                    LookupTypeId: this.staffTypeId\n                  }\n\n                  this.lookupService.getLookupValueByLookupTypeId(params).subscribe((res:any) => {\n\n                     var categoryPersonalListData = res.filter(item => {\n                       return item.isActive;\n                     });\n\n                     this.categoryPersonalListData = categoryPersonalListData;\n                     this.isCategoryDataLoaded = true;\n\n\n                  },\n                  error => {\n\n                  }\n                  );\n\n            },\n            error => {\n\n            }\n            ); \n\n\n           }\n\n        }\n\n    }\n\n\n\n  }\n\n  ngOnInit() {\n\n    let params = {\n      LookupTypeId: 25\n    }\n\n    //get all staff type\n      this.lookupService.getLookupValueByLookupTypeId(params).subscribe((res:any) => {\n\n        this.staffCategoryData = res;\n\n        this.isStaffLoaded = true;\n\n\n      },\n      error => {\n\n      }\n      );\n\n    let categoryParams = {\n      LookupTypeId: 26\n    }\n\n  \t//get all offical category\n    this.lookupService.getLookupValueByLookupTypeId(categoryParams).subscribe((res:any) => {\n\n      var categoryOffcialListData = res.filter(item => {\n        return item.isActive;\n      });\n\n\n      this.categoryOffcialListData = categoryOffcialListData;\n\n      let categoryPersonalParams = {\n        LookupTypeId: 27\n      }\n\n      //get all personal category\n      this.lookupService.getLookupValueByLookupTypeId(categoryPersonalParams).subscribe((res:any) => {\n\n        var categoryPersonalListData = res.filter(item => {\n          return item.isActive;\n        });\n\n        this.categoryPersonalListData = categoryPersonalListData;\n\n        this.isCategoryDataLoaded = true;\n\n\n      },\n      error => {\n\n      }\n      );\n\n\n    },\n    error => {\n      \n    }\n    );\n\n\n    // delete lookupvalue\n    this.sharedService.unitlistdeleteindexcast.subscribe( index => {\n\n      if(index != null){\n\n        if(this.staffDeleteTypeId == \"115\"){\n\n          var params = {\n            lookupValueId: this.categoryOffcialListData[index].lookupValueId,\n            updateUserId: parseInt(this.cookieService.get('userId'))\n          }\n\n        }\n        else {\n\n          var params = {\n            lookupValueId: this.categoryPersonalListData[index].lookupValueId,\n            updateUserId: parseInt(this.cookieService.get('userId'))\n          }\n\n        }\n        \n\n        this.isCategoryDataLoaded = false;\n\n        this.lookupService.deleteLookupvalue(params).subscribe((res:any) => {\n\n          if(this.staffDeleteTypeId == \"115\"){\n            this.categoryOffcialListData.splice(index, 1);\n          }\n          else {\n            this.categoryPersonalListData.splice(index, 1);\n          }\n          this.isCategoryDataLoaded = true;\n          this.sharedService.setUnitListDeleteIndex(null);\n\n        }, error => {\n          console.log(error);\n        });\n\n        \n      }\n\n    } )\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9zdGFmZi1tYW5hZ2VyL2NvbXBvbmVudHMvc3RhZmYtc2hpZnRzL3N0YWZmLXNoaWZ0cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Injector } from '@angular/core';\n\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { StaffService } from 'src/app/api/controllers/Staff';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as moment from 'moment';\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-staff-shifts',\n  templateUrl: './staff-shifts.component.html',\n  styleUrls: ['./staff-shifts.component.scss']\n})\nexport class StaffShiftsComponent implements OnInit {\n  \n  isShiftsLoaded:boolean = true;\n\n  isShiftTableLoaded:boolean = false;\n\n  shiftTypeList:any;\n\n  shift:any;\n  shiftId:any;\n  shiftTypeId:string = \"\";\n  shiftStartTime:any = \"\";\n  shiftTotalHrs:number = 0;\n\n  shiftsListData:any;\n  shiftData:string = \"\";\n\n  shiftType:string = \"\";\n\n  isEditShift:boolean = false;\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n\n  isAddShiftLoaded:boolean = false;\n\n  modalService:any;\n\n  constructor(\n    private injector: Injector,\n    public dialog: MatDialog,\n    private staffService:StaffService,\n  \tprivate lookupService:LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) { \n    this.modalService = this.injector.get(ModalService);\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  getShiftType(id) {\n    \n    var data = _.filter( this.shiftTypeList, function( item ) {\n      if(item.lookupValueId === id)\n        return item;\n    });\n\n    if(data === undefined || data.length == 0){\n      return '';\n    }\n    else {\n      this.shiftType = data[0].lookupValueName;\n      return data[0].lookupValueName.toLowerCase();\n    }\n\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  submitShiftsForm(form) {\n\n    this.isShiftsLoaded = false;\n\n    if(!this.isEditShift) {\n\n      let details = {\n\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"shiftTypeId\": parseInt(this.shiftTypeId),\n        \"startTime\": moment(this.shiftStartTime).format('HH:mm'),\n        \"totalHours\": this.shiftTotalHrs,\n        \"isActive\": true,\n        \"insertedBy\": parseInt(this.cookieService.get('userId')),\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": 0,\n        \"updatedOn\": \"2019-12-03T06:11:51.972Z\"\n\n      }\n\n      let params = {\n        shift: details\n      }\n\n      this.staffService.addShift(params).subscribe((res:any) => {\n\n        if(res.message) {\n\n          this.isShiftsLoaded = true;\n          this.sharedService.setAlertMessage(\"Shift added Successfully!\");\n\n          this.getAllShifts();\n        }\n\n      },\n      error => {\n        \n      }\n      );\n\n   }\n   else {\n\n     let details = {\n        \"shiftId\": this.shiftId,\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"shiftTypeId\": parseInt(this.shiftTypeId),\n        \"startTime\": moment(this.shiftStartTime).format('HH:mm'),\n        \"totalHours\": this.shiftTotalHrs,\n        \"isActive\": true,\n        \"insertedBy\": 0,\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": parseInt(this.cookieService.get('userId')),\n        \"updatedOn\": new Date().toISOString()\n\n      }\n\n      let params = {\n        shift: details\n      }\n\n      this.staffService.updateShift(params).subscribe((res:any) => {\n\n        if(res.message) {\n          this.isShiftsLoaded = true;\n          this.sharedService.setAlertMessage(\"Shift updated Successfully!\");\n\n          this.getAllShifts();\n        }\n\n      },\n      error => {\n        \n      }\n      );\n\n   }\n    \n\n  }\n\n  addShift(){\n\n    this.isEditShift = false;\n    this.isAddShiftLoaded = false;\n\n    setTimeout(() => {\n\n      this.isAddShiftLoaded = true;\n\n    }, 10);\n\n    setTimeout(() => {\n\n      var elem = document.querySelector('.add-shift-card');\n      var scrollTo = elem.getBoundingClientRect().top;\n\n      window.scroll({\n        top: scrollTo,\n        behavior: 'smooth'\n      });\n\n    }, 10);\n\n  }\n\n  editShift(shift){\n\n    this.isAddShiftLoaded = false;\n\n    setTimeout(() => {\n      this.isAddShiftLoaded = true;\n    }, 10);\n\n    this.isEditShift = true;\n    this.shiftTypeId = shift.shiftTypeId;\n    this.shiftStartTime = moment(shift.startTime, 'HH:mm').toDate();\n    this.shiftTotalHrs = shift.totalHours;\n    this.shiftId = shift.shiftId;\n\n    setTimeout(() => {\n\n      var elem = document.querySelector('.add-shift-card');\n      var scrollTo = elem.getBoundingClientRect().top - 100;\n\n      window.scroll({\n        top: scrollTo,\n        behavior: 'smooth'\n      });\n\n    }, 100);\n\n  }\n\n  closeShift(){\n    this.isAddShiftLoaded = false;\n  }\n\n  showConfirmModal(item) {\n    this.modalService.showConfirmModal(item);\n  }\n\n  getAllShifts(){\n\n    this.isShiftTableLoaded = false;\n\n    let params = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n\n    this.staffService.getAllShiftsByApartmentId(params).subscribe((res:any) => {\n\n      this.shiftsListData = res.filter(item => {\n        return item.isActive;\n      });\n\n\n      this.totalItems = this.shiftsListData.length;\n\n      if(this.totalItems>this.itemLimit){\n        this.ItemEndIndex = this.itemLimit;\n      }\n\n      else {\n        this.ItemEndIndex = this.totalItems;\n      }\n\n      this.isShiftTableLoaded = true;\n\n    },\n    error => {\n      \n    }\n    );\n\n  }\n\n  ngOnInit() {\n\n  \tthis.shift = {};\n\n    this.getAllShifts();\n\n    let params = {\n      LookupTypeId: 28\n    }\n\n  \t//shift type\n    this.lookupService.getLookupValueByLookupTypeId(params).subscribe((res:any) => {\n          \t\n\n       this.shiftTypeList = res.filter( item => {\n          return item.isActive;\n        });\n\n    },\n    error => {\n      \n    }\n    );\n\n    // delete item\n    this.sharedService.unitlistdeleteindexcast.subscribe( item => {\n\n      if(item != null){\n\n        var params = {\n          shiftId: item.shiftId,\n          deleteBy: parseInt(this.cookieService.get('userId'))\n        }\n\n        this.isShiftTableLoaded = false;\n\n        this.staffService.deleteShift(params).subscribe((res:any) => {\n\n          this.shiftsListData = this.shiftsListData.filter((type) => type.shiftId !== item.shiftId);\n          this.sharedService.setUnitListDeleteIndex(null);\n          this.isShiftTableLoaded = true;\n\n\n        }, error => {\n          console.log(error);\n        });\n\n        \n      }\n\n    } )\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from '../.././auth.guard';\n\nimport { StaffManagerComponent } from './staff-manager.component';\nimport { StaffSetupComponent } from './components/staff-setup/staff-setup.component';\nimport { StaffMaintainStaffComponent } from './components/staff-maintain-staff/staff-maintain-staff.component';\nimport { StaffInactiveStaffComponent } from './components/staff-inactive-staff/staff-inactive-staff.component';\nimport { StaffAttendanceComponent } from './components/staff-attendance/staff-attendance.component';\nimport { StaffPayrollComponent } from './components/staff-payroll/staff-payroll.component';\nimport { StaffOvertimeComponent } from './components/staff-overtime/staff-overtime.component';\nimport { StaffReportsComponent } from './components/staff-reports/staff-reports.component';\nimport { AddStaffComponent } from './components/add-staff/add-staff.component';\nimport { StaffGatesComponent } from './components/staff-gates/staff-gates.component';\nimport { StaffShiftsComponent } from './components/staff-shifts/staff-shifts.component';\nimport { AddEntryComponent } from './components/add-entry/add-entry.component';\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: 'settings', pathMatch: 'full'},\n\t{ path: 'settings', component: StaffSetupComponent},\n\t{ path: 'maintain-staff', component: StaffMaintainStaffComponent},\n\t{ path: 'add-staff', component: AddStaffComponent},\n\t{ path: 'edit-staff/:id', component: AddStaffComponent},\n\t{ path: 'inactive-staff', component: StaffInactiveStaffComponent},\n\t{ path: 'overtime', component: StaffOvertimeComponent},\n\t{ path: 'attendance', component: StaffAttendanceComponent},\n\t{ path: 'add-entry', component: AddEntryComponent},\n\t{ path: 'edit-entry/:id', component: AddEntryComponent},\n\t{ path: 'payroll', component: StaffPayrollComponent},\n\t{ path: 'reports', component: StaffReportsComponent },\n\t{ path: '**', redirectTo: 'settings', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class StaffManagerRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9zdGFmZi1tYW5hZ2VyL3N0YWZmLW1hbmFnZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-staff-manager',\n  templateUrl: './staff-manager.component.html',\n  styleUrls: ['./staff-manager.component.scss']\n})\nexport class StaffManagerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StaffManagerRoutingModule } from './staff-manager-routing.module';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { StaffManagerComponent } from './staff-manager.component';\nimport { StaffSetupComponent } from './components/staff-setup/staff-setup.component';\nimport { StaffMaintainStaffComponent } from './components/staff-maintain-staff/staff-maintain-staff.component';\nimport { StaffInactiveStaffComponent } from './components/staff-inactive-staff/staff-inactive-staff.component';\nimport { StaffAttendanceComponent } from './components/staff-attendance/staff-attendance.component';\nimport { StaffPayrollComponent } from './components/staff-payroll/staff-payroll.component';\nimport { StaffOvertimeComponent } from './components/staff-overtime/staff-overtime.component';\nimport { StaffReportsComponent } from './components/staff-reports/staff-reports.component';\nimport { AddStaffComponent } from './components/add-staff/add-staff.component';\nimport { StaffGatesComponent } from './components/staff-gates/staff-gates.component';\nimport { StaffShiftsComponent } from './components/staff-shifts/staff-shifts.component';\nimport { AddEntryComponent } from './components/add-entry/add-entry.component';\n\n@NgModule({\n  declarations: [\n\tStaffManagerComponent,\n\tStaffSetupComponent,\n\tStaffMaintainStaffComponent,\n\tStaffInactiveStaffComponent,\n\tStaffAttendanceComponent,\n\tStaffPayrollComponent,\n\tStaffOvertimeComponent,\n\tStaffReportsComponent,\n\tAddStaffComponent,\n\tStaffGatesComponent,\n\tStaffShiftsComponent,\n\tAddEntryComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    StaffManagerRoutingModule\n  ],\n  bootstrap: [ StaffManagerComponent ]\n})\nexport class StaffManagerModule { }\n"]}