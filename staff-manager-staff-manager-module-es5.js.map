{"version":3,"sources":["webpack:///src/app/ams/staff-manager/components/add-entry/add-entry.component.html","webpack:///src/app/ams/staff-manager/components/add-staff/add-staff.component.html","webpack:///src/app/ams/staff-manager/components/staff-attendance/staff-attendance.component.html","webpack:///src/app/ams/staff-manager/components/staff-gates/staff-gates.component.html","webpack:///src/app/ams/staff-manager/components/staff-inactive-staff/staff-inactive-staff.component.html","webpack:///src/app/ams/staff-manager/components/staff-maintain-staff/staff-maintain-staff.component.html","webpack:///src/app/ams/staff-manager/components/staff-overtime/staff-overtime.component.html","webpack:///src/app/ams/staff-manager/components/staff-payroll/staff-payroll.component.html","webpack:///src/app/ams/staff-manager/components/staff-reports/staff-reports.component.html","webpack:///src/app/ams/staff-manager/components/staff-setup/staff-setup.component.html","webpack:///src/app/ams/staff-manager/components/staff-shifts/staff-shifts.component.html","webpack:///src/app/ams/staff-manager/staff-manager.component.html","webpack:///src/app/ams/staff-manager/components/add-entry/add-entry.component.scss","webpack:///src/app/ams/staff-manager/components/add-entry/add-entry.component.ts","webpack:///src/app/ams/staff-manager/components/add-staff/add-staff.component.scss","webpack:///src/app/ams/staff-manager/components/add-staff/add-staff.component.ts","webpack:///src/app/ams/staff-manager/components/staff-attendance/staff-attendance.component.scss","webpack:///src/app/ams/staff-manager/components/staff-attendance/staff-attendance.component.ts","webpack:///src/app/ams/staff-manager/components/staff-gates/staff-gates.component.scss","webpack:///src/app/ams/staff-manager/components/staff-gates/staff-gates.component.ts","webpack:///src/app/ams/staff-manager/components/staff-inactive-staff/staff-inactive-staff.component.scss","webpack:///src/app/ams/staff-manager/components/staff-inactive-staff/staff-inactive-staff.component.ts","webpack:///src/app/ams/staff-manager/components/staff-maintain-staff/staff-maintain-staff.component.scss","webpack:///src/app/ams/staff-manager/components/staff-maintain-staff/staff-maintain-staff.component.ts","webpack:///src/app/ams/staff-manager/components/staff-overtime/staff-overtime.component.scss","webpack:///src/app/ams/staff-manager/components/staff-overtime/staff-overtime.component.ts","webpack:///src/app/ams/staff-manager/components/staff-payroll/staff-payroll.component.scss","webpack:///src/app/ams/staff-manager/components/staff-payroll/staff-payroll.component.ts","webpack:///src/app/ams/staff-manager/components/staff-reports/staff-reports.component.scss","webpack:///src/app/ams/staff-manager/components/staff-reports/staff-reports.component.ts","webpack:///src/app/ams/staff-manager/components/staff-setup/staff-setup.component.scss","webpack:///src/app/ams/staff-manager/components/staff-setup/staff-setup.component.ts","webpack:///src/app/ams/staff-manager/components/staff-shifts/staff-shifts.component.scss","webpack:///src/app/ams/staff-manager/components/staff-shifts/staff-shifts.component.ts","webpack:///src/app/ams/staff-manager/staff-manager-routing.module.ts","webpack:///src/app/ams/staff-manager/staff-manager.component.scss","webpack:///src/app/ams/staff-manager/staff-manager.component.ts","webpack:///src/app/ams/staff-manager/staff-manager.module.ts"],"names":["AddEntryComponent","router","route","staffService","lookupService","sharedService","cookieService","isEditEntry","isEntrySubmitted","isEntryError","isEntrySuccess","alertEntryMessage","shiftType","jobTitle","entryComments","get","shiftsFilteredDataList","shiftsDataList","filter","item","shiftTypeId","getStaffByStaffId","entry","staffId","subscribe","res","selectedStaffCateogryId","staffCategoryId","selectedSubStaffCateogryId","staffSubCategoryId","data","officalStaffsDataList","lookupValueId","lookupValueName","undefined","length","personalStaffsDataList","form","details","parseInt","inTime","inGateId","outTime","outGateId","shiftId","params","attendance","addAttendance","message","setAlertMessage","navigate","errorMessage","error","id","updateAttendance","attendanceId","getAttendanceByAttendanceId","getStaffJobTitle","getShiftByShiftId","toString","getShifts","apartmentId","getAllStaffsByApartmentId","staffDataList","isActive","gatesParams","getAllGatesByApartmentId","gatesDataList","shiftParams","getAllShiftsByApartmentId","shiftTypeParams","LookupTypeId","getLookupValueByLookupTypeId","shiftTypeList","officalListParams","personalListParams","selector","template","AddStaffComponent","userService","isEditStaff","isStaffSubmitted","isStaffAdded","isAdminRegister","isStaffError","isStaffSuccess","alertStaffMessage","userRoleId","vendorType","isTypeSelected","isFileAdded","fileList","listOfFiles","isPhotoAdded","photoList","listOfPhotos","userId","genderType","userRolesData","userTypeList","outputParams","staffArray","splice","index","emit","event","i","target","files","selectedFile","push","name","size","selectedPhoto","bytes","toFixed","typeId","staffCategoryData","userDetails","staff","firstName","lastName","emailId","password","address","dob","bloodGroup","contactNumber","userParams","user","addUser","roleId","userType","userRole","roleParams","addUserRole","staffDetails","alternateContact","healthIssue","comments","plannedEntryTime","plannedExitTime","jobStartDate","jobEndDate","vacationLeaveDays","sickLeaveDays","basePay","overtimePayperhour","allowance1","allowance2","allowance3","deduction1","deduction2","deduction3","perDaySalary","staffParams","addStaff","alertTicketMessage","console","log","updateUser","updateStaff","evt","genderId","getStaffType","groupParams","bloodGroupData","staffTypeData","categoryParams","getAllRoleTypes","resp","paramsRoles","RoleTypeId","ApartmentId","getAllRolesByRoleTypeIdByApartmentId","StaffAttendanceComponent","constantsService","isEntryDataLoaded","unitFieldType","unitOrder","ItemStartIndex","itemLimit","entryData","selectedInput","columnField","ItemEndIndex","type","window","innerWidth","value","gateDataList","gateId","gateName","filtergroup","jqx","filter_or_operator","filtervalue","filtercondition","filterData","createfilter","operator","addfilter","datagrid","showfiltercolumnbackground","columnData","forEach","datafield","applyfilters","clearfilters","detail","dataRecord","getrowdata","rowId","navigateByUrl","cellsrenderer","row","column","columnrenderer","text","width","renderer","minwidth","format","dateFormat","cellsalign","align","coloumn","getAllAttendancesByApartmentId","entryListData","gridSourceData","localdata","datatype","dataAdapter","dataListparams","officialListparams","personalListparams","totalItems","editAttendenceStaff","CustomEvent","dispatchEvent","StaffGatesComponent","injector","dialog","isGateLoaded","isGateTableLoaded","isAddGateLoaded","isEditGate","modalService","gate","Date","toISOString","addGate","getAllGates","updateGate","gateListData","showConfirmModal","setTimeout","elem","document","querySelector","scrollTo","getBoundingClientRect","top","scroll","behavior","getGateByGateId","unitlistdeleteindexcast","deleteBy","deleteGate","setUnitListDeleteIndex","StaffInactiveStaffComponent","isStaffDataLoaded","staffData","staffTypeId","toLowerCase","staffOfficalCategoryData","staffPersonalCategoryData","pinned","staffListData","staffOfficialParams","staffPersonalParams","editMainstaff","StaffMaintainStaffComponent","dateTime","map","obj","staffCategory","staffSubCategory","officialParams","officialCategoryParams","deleteStaff","showConfirmDeleteEvent","StaffOvertimeComponent","StaffPayrollComponent","StaffReportsComponent","StaffSetupComponent","categoryOffcialData","categoryPersonalData","isCategoryDataLoaded","isStaffLoaded","staffType","staffDeleteTypeId","isError","isEditStaffCategory","category","categoryAvailable","lookupvalue","addLookupValue","categoryOffcialListData","updateLookupValue","categoryPersonalListData","categoryPersonalParams","updateUserId","deleteLookupvalue","StaffShiftsComponent","isShiftsLoaded","isShiftTableLoaded","shiftStartTime","shiftTotalHrs","shiftData","isEditShift","isAddShiftLoaded","shift","addShift","getAllShifts","updateShift","startTime","toDate","totalHours","shiftsListData","deleteShift","routes","path","redirectTo","pathMatch","component","StaffManagerRoutingModule","imports","forChild","exports","StaffManagerComponent","StaffManagerModule","declarations","bootstrap"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACef,QAAaA,iBAAiB;AAAA;AAAA;AAgC5B,iCACSC,MADT,EAEUC,KAFV,EAGUC,YAHV,EAIUC,aAJV,EAKUC,aALV,EAMUC,aANV,EAMqC;AAAA;;AAL5B,aAAAL,MAAA,GAAAA,MAAA;AACC,aAAAC,KAAA,GAAAA,KAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AApCV,aAAAC,WAAA,GAAsB,KAAtB;AAEA,aAAAC,gBAAA,GAA2B,IAA3B;AAEA,aAAAC,YAAA,GAAuB,KAAvB;AACA,aAAAC,cAAA,GAAyB,KAAzB;AACA,aAAAC,iBAAA,GAA2B,EAA3B;AAWA,aAAAC,SAAA,GAAmB,EAAnB;AAIA,aAAAC,QAAA,GAAkB,EAAlB;AAOA,aAAAC,aAAA,GAAuB,EAAvB;AAUK;;AAxCuB;AAAA;AAAA,kCA0CrB;AACL,iBAAS,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,UAAvB,KAAsC,OAAtC,IAAiD,KAAKT,aAAL,CAAmBS,GAAnB,CAAuB,UAAvB,KAAsC,OAAzF,GAAoG,IAApG,GAA2G,KAAlH;AACD;AA5C2B;AAAA;AAAA,0CA8Cb;AACd,iBAAO,KAAKH,SAAL,IAAkB,EAAlB,GAAuB,IAAvB,GAA8B,KAArC;AACA;AAhD2B;AAAA;AAAA,oCAkDnB;AAAA;;AACR,eAAKI,sBAAL,GAA8B,KAAKC,cAAL,CAAoBC,MAApB,CAA2B,UAAAC,IAAI,EAAI;AAChE,mBAAOA,IAAI,CAACC,WAAL,IAAoB,KAAI,CAACR,SAAhC;AACA,WAF6B,CAA9B;AAGA;AAtD2B;AAAA;AAAA,2CAwDZ;AAAA;;AAEf,eAAKT,YAAL,CAAkBkB,iBAAlB,CAAoC,KAAKC,KAAL,CAAWC,OAA/C,EAAwDC,SAAxD,CAAkE,UAACC,GAAD,EAAa;AAE9E,kBAAI,CAACC,uBAAL,GAA+BD,GAAG,CAAC,CAAD,CAAH,CAAOE,eAAP,IAA0B,IAAzD;AACA,kBAAI,CAACC,0BAAL,GAAkCH,GAAG,CAAC,CAAD,CAAH,CAAOI,kBAAP,IAA6B,IAA/D;;AAIA,gBAAG,MAAI,CAACH,uBAAL,IAAgC,IAAnC,EAAyC;AACxC;AACA,kBAAG,MAAI,CAACA,uBAAL,IAAgC,GAAnC,EAAwC;AAEvC,oBAAII,IAAI,GAAG,MAAI,CAACC,qBAAL,CAA2Bb,MAA3B,CAAkC,UAAAC,IAAI,EAAI;AACpD,sBAAGA,IAAI,CAACa,aAAL,IAAsB,MAAI,CAACJ,0BAA9B,EAAyD;AACxD,2BAAOT,IAAI,CAACc,eAAZ;AACA;AACD,iBAJU,CAAX;;AAMC,oBAAGH,IAAI,KAAKI,SAAT,IAAsBJ,IAAI,CAACK,MAAL,IAAe,CAAxC,EAA0C;AACzC,wBAAI,CAACb,KAAL,CAAWT,QAAX,GAAsB,EAAtB;AACA,iBAFD,MAGK;AACJ,wBAAI,CAACS,KAAL,CAAWT,QAAX,GAAsBiB,IAAI,CAAC,CAAD,CAAJ,CAAQG,eAA9B;AACA;AAIF,eAjBD,MAkBK;AACJ,oBAAIH,KAAI,GAAG,MAAI,CAACM,sBAAL,CAA4BlB,MAA5B,CAAmC,UAAAC,IAAI,EAAI;AACrD,sBAAGA,IAAI,CAACa,aAAL,IAAsB,MAAI,CAACJ,0BAA9B,EAAyD;AACxD,2BAAOT,IAAI,CAACc,eAAZ;AACA;AACD,iBAJU,CAAX;;AAKA,oBAAGH,KAAI,KAAKI,SAAT,IAAsBJ,KAAI,CAACK,MAAL,IAAe,CAAxC,EAA0C;AACxC,wBAAI,CAACb,KAAL,CAAWT,QAAX,GAAsB,EAAtB;AACA,iBAFF,MAGM;AACJ,wBAAI,CAACS,KAAL,CAAWT,QAAX,GAAsBiB,KAAI,CAAC,CAAD,CAAJ,CAAQG,eAA9B;AACA;AACF;AACD,aAjCD,MAkCK;AACJ,oBAAI,CAACX,KAAL,CAAWT,QAAX,GAAsB,EAAtB;AACA;AAGD,WA9CD;AAgDA;AA1G2B;AAAA;AAAA,wCA8GZwB,IA9GY,EA8GN;AAAA;;AAErB,eAAK7B,gBAAL,GAAwB,KAAxB;;AAEC,cAAG,CAAC,KAAKD,WAAT,EAAsB;AAEpB,gBAAI+B,OAAO,GAAG;AAEZ,6BAAeC,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD,CAFX;AAGZ,yBAAWwB,QAAQ,CAAC,KAAKjB,KAAL,CAAWC,OAAZ,CAHP;AAIZ,wBAAU,KAAKD,KAAL,CAAWkB,MAJT;AAKZ,0BAAYD,QAAQ,CAAC,KAAKjB,KAAL,CAAWmB,QAAZ,CALR;AAMZ,yBAAW,KAAKnB,KAAL,CAAWoB,OANV;AAOZ,2BAAaH,QAAQ,CAAC,KAAKjB,KAAL,CAAWqB,SAAZ,CAPT;AAQZ,yBAAWJ,QAAQ,CAAC,KAAKjB,KAAL,CAAWsB,OAAZ,CARP;AASZ,uBAAS,KAAK9B,aATF;AAUZ,0BAAY,IAVA;AAWZ,4BAAcyB,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD,CAXV;AAYZ,4BAAc,0BAZF;AAaZ,2BAAa,CAbD;AAcZ,2BAAa;AAdD,aAAd;AAkBA,gBAAI8B,MAAM,GAAG;AACXC,wBAAU,EAAER;AADD,aAAb;AAIA,iBAAKnC,YAAL,CAAkB4C,aAAlB,CAAgCF,MAAhC,EAAwCrB,SAAxC,CAAkD,UAACC,GAAD,EAAa;AAE9D,kBAAGA,GAAG,CAACuB,OAAP,EAAe;AACb,sBAAI,CAACxC,gBAAL,GAAwB,IAAxB;;AACA,sBAAI,CAACH,aAAL,CAAmB4C,eAAnB,CAAmC,0BAAnC;;AACD,sBAAI,CAAChD,MAAL,CAAYiD,QAAZ,CAAqB,CAAC,sBAAD,CAArB;AACA,eAJD,MAKK;AACH,sBAAI,CAAC1C,gBAAL,GAAwB,IAAxB;AACA,sBAAI,CAACC,YAAL,GAAoB,IAApB;AACA,sBAAI,CAACE,iBAAL,GAAyBc,GAAG,CAAC0B,YAA7B;AACD;AAED,aAbD,EAcA,UAAAC,KAAK,EAAI;AACP,oBAAI,CAAC5C,gBAAL,GAAwB,IAAxB;AACF,oBAAI,CAACC,YAAL,GAAoB,IAApB;AACA,oBAAI,CAACE,iBAAL,GAAyB,oBAAzB;AACC,aAlBD;AAqBD,WA7CD,MA+CI;AAEF,gBAAI2B,QAAO,GAAG;AACZ,8BAAeC,QAAQ,CAAC,KAAKrC,KAAL,CAAW2C,MAAX,CAAkB,OAAlB,EAA2BQ,EAA5B,CADX;AAEZ,6BAAed,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD,CAFX;AAGZ,yBAAWwB,QAAQ,CAAC,KAAKjB,KAAL,CAAWC,OAAZ,CAHP;AAIZ,wBAAU,KAAKD,KAAL,CAAWkB,MAJT;AAKZ,0BAAYD,QAAQ,CAAC,KAAKjB,KAAL,CAAWmB,QAAZ,CALR;AAMZ,yBAAW,KAAKnB,KAAL,CAAWoB,OANV;AAOZ,2BAAaH,QAAQ,CAAC,KAAKjB,KAAL,CAAWqB,SAAZ,CAPT;AAQZ,yBAAWJ,QAAQ,CAAC,KAAKjB,KAAL,CAAWsB,OAAZ,CARP;AASZ,uBAAS,KAAK9B,aATF;AAUZ,0BAAY,IAVA;AAWZ,4BAAc,CAXF;AAYZ,4BAAc,0BAZF;AAaZ,2BAAayB,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD,CAbT;AAcZ,2BAAa;AAdD,aAAd;AAkBA,gBAAI8B,OAAM,GAAG;AACXC,wBAAU,EAAER;AADD,aAAb;AAIA,iBAAKnC,YAAL,CAAkBmD,gBAAlB,CAAmCT,OAAnC,EAA2CrB,SAA3C,CAAqD,UAACC,GAAD,EAAa;AAEjE,kBAAGA,GAAG,CAACuB,OAAP,EAAe;AACb,sBAAI,CAACxC,gBAAL,GAAwB,IAAxB;;AACA,sBAAI,CAACH,aAAL,CAAmB4C,eAAnB,CAAmC,4BAAnC;;AACD,sBAAI,CAAChD,MAAL,CAAYiD,QAAZ,CAAqB,CAAC,sBAAD,CAArB;AACA,eAJD,MAKK;AACH,sBAAI,CAAC1C,gBAAL,GAAwB,IAAxB;AACA,sBAAI,CAACC,YAAL,GAAoB,IAApB;AACA,sBAAI,CAACE,iBAAL,GAAyBc,GAAG,CAAC0B,YAA7B;AACD;AAED,aAbD,EAcA,UAAAC,KAAK,EAAI;AACP,oBAAI,CAAC5C,gBAAL,GAAwB,IAAxB;AACA,oBAAI,CAACC,YAAL,GAAoB,IAApB;AACA,oBAAI,CAACE,iBAAL,GAAyB,oBAAzB;AACD,aAlBD;AAqBD;AAIF;AAlN2B;AAAA;AAAA,mCAoNjB;AAAA;;AAEV,eAAKW,KAAL,GAAa,EAAb;AACA,eAAKA,KAAL,CAAWC,OAAX,GAAqB,EAArB;AACA,eAAKD,KAAL,CAAWmB,QAAX,GAAsB,EAAtB;AACA,eAAKnB,KAAL,CAAWqB,SAAX,GAAuB,EAAvB;AACA,eAAKrB,KAAL,CAAWsB,OAAX,GAAqB,EAArB;;AAGC,cAAG,KAAK1C,KAAL,CAAW2C,MAAX,CAAkB,OAAlB,EAA2BQ,EAA3B,IAAiCnB,SAApC,EAA+C;AAE7C,iBAAK3B,WAAL,GAAmB,IAAnB;AAEA,iBAAKgD,YAAL,GAAoB,KAAKrD,KAAL,CAAW2C,MAAX,CAAkB,OAAlB,EAA2BQ,EAA/C;AAEA,iBAAKlD,YAAL,CAAkBqD,2BAAlB,CAA8C,KAAKtD,KAAL,CAAW2C,MAAX,CAAkB,OAAlB,EAA2BQ,EAAzE,EAA6E7B,SAA7E,CAAuF,UAACC,GAAD,EAAa;AAElG,oBAAI,CAACH,KAAL,GAAaG,GAAG,CAAC,CAAD,CAAhB;;AACA,oBAAI,CAACgC,gBAAL;;AAEA,oBAAI,CAACtD,YAAL,CAAkBuD,iBAAlB,CAAoC,MAAI,CAACpC,KAAL,CAAWsB,OAA/C,EAAwDpB,SAAxD,CAAkE,UAACC,GAAD,EAAa;AAE5E,sBAAI,CAACb,SAAL,GAAiBa,GAAG,CAAC,CAAD,CAAH,CAAOL,WAAP,CAAmBuC,QAAnB,EAAjB;;AACA,sBAAI,CAACC,SAAL;AAEF,eALD,EAMA,UAAAR,KAAK,EAAI,CAER,CARD;AAWD,aAhBD,EAiBA,UAAAA,KAAK,EAAI,CAER,CAnBD;AAsBD;;AAED,cAAIP,MAAM,GAAG;AACXgB,uBAAW,EAAEtB,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADV,WAAb;AAID,eAAKZ,YAAL,CAAkB2D,yBAAlB,CAA4CjB,MAA5C,EAAoDrB,SAApD,CAA8D,UAACC,GAAD,EAAa;AAE3E,kBAAI,CAACsC,aAAL,GAAqBtC,GAAG,CAACP,MAAJ,CAAW,UAAAC,IAAI,EAAI;AACvC,qBAAOA,IAAI,CAAC6C,QAAZ;AACA,aAFoB,CAArB;AAOE,WATF,EAUC,UAAAZ,KAAK,EAAI,CAER,CAZF;AAeC,cAAIa,WAAW,GAAG;AAChBJ,uBAAW,EAAEtB,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADL,WAAlB;AAIA,eAAKZ,YAAL,CAAkB+D,wBAAlB,CAA2CD,WAA3C,EAAwDzC,SAAxD,CAAkE,UAACC,GAAD,EAAa;AAEhF,kBAAI,CAAC0C,aAAL,GAAqB1C,GAAG,CAACP,MAAJ,CAAW,UAAAC,IAAI,EAAI;AACvC,qBAAOA,IAAI,CAAC6C,QAAZ;AACA,aAFoB,CAArB;AAKE,WAPD,EAQA,UAAAZ,KAAK,EAAI,CAER,CAVD;AAaA,cAAIgB,WAAW,GAAG;AAChBP,uBAAW,EAAEtB,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADL,WAAlB;AAIA,eAAKZ,YAAL,CAAkBkE,yBAAlB,CAA4CD,WAA5C,EAAyD5C,SAAzD,CAAmE,UAACC,GAAD,EAAa;AAEjF,kBAAI,CAACR,cAAL,GAAsBQ,GAAG,CAACP,MAAJ,CAAW,UAAAC,IAAI,EAAI;AACxC,qBAAOA,IAAI,CAAC6C,QAAZ;AACA,aAFqB,CAAtB;AAME,WARD,EASA,UAAAZ,KAAK,EAAI,CAER,CAXD,EA/ES,CA8FT;;AAEA,cAAIkB,eAAe,GAAG;AACpBC,wBAAY,EAAE;AADM,WAAtB;AAIA,eAAKnE,aAAL,CAAmBoE,4BAAnB,CAAgDF,eAAhD,EAAiE9C,SAAjE,CAA2E,UAACC,GAAD,EAAa;AAEzF,kBAAI,CAACgD,aAAL,GAAqBhD,GAAG,CAACP,MAAJ,CAAW,UAAAC,IAAI,EAAI;AACvC,qBAAOA,IAAI,CAAC6C,QAAZ;AACA,aAFoB,CAArB;AAKE,WAPD,EAQA,UAAAZ,KAAK,EAAI,CAER,CAVD;AAaA,cAAIsB,iBAAiB,GAAG;AACtBH,wBAAY,EAAE;AADQ,WAAxB,CAjHS,CAqHT;;AACA,eAAKnE,aAAL,CAAmBoE,4BAAnB,CAAgDE,iBAAhD,EAAmElD,SAAnE,CAA6E,UAACC,GAAD,EAAa;AAE3F,kBAAI,CAACM,qBAAL,GAA6BN,GAAG,CAACP,MAAJ,CAAW,UAAAC,IAAI,EAAI;AAC/C,qBAAOA,IAAI,CAAC6C,QAAZ;AACA,aAF4B,CAA7B;AAIE,WAND,EAOA,UAAAZ,KAAK,EAAI,CAER,CATD;AAYA,cAAIuB,kBAAkB,GAAG;AACvBJ,wBAAY,EAAE;AADS,WAAzB,CAlIS,CAsIT;;AACA,eAAKnE,aAAL,CAAmBoE,4BAAnB,CAAgDG,kBAAhD,EAAoEnD,SAApE,CAA8E,UAACC,GAAD,EAAa;AAE5F,kBAAI,CAACW,sBAAL,GAA8BX,GAAG,CAACP,MAAJ,CAAW,UAAAC,IAAI,EAAI;AAChD,qBAAOA,IAAI,CAAC6C,QAAZ;AACA,aAF6B,CAA9B;AAKE,WAPD,EAQA,UAAAZ,KAAK,EAAI,CAER,CAVD;AAaD;AAxW2B;;AAAA;AAAA,OAA9B;;;;cAiCmB;;cACA;;cACM;;cACE;;cACD;;cACA;;;;AAtCbpD,qBAAiB,6DAL7B,gEAAU;AACT4E,cAAQ,EAAE,eADD;AAETC,cAAQ,EAAR;AAAA;AAAA,oIAFS;;;;AAAA,KAAV,CAK6B,E,+EAiCX,sD,EACA,8D,EACM,0E,EACE,4E,EACD,6E,EACA,gE,EAtCI,GAAjB7E,iBAAiB,CAAjB;;;;;;;;;;;;;;;;ACfb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACmBf,QAAa8E,iBAAiB;AAAA;AAAA;AAgD5B,iCACU7E,MADV,EAEUC,KAFV,EAGU6E,WAHV,EAIU5E,YAJV,EAKUC,aALV,EAMUC,aANV,EAOUC,aAPV,EAOqC;AAAA;;AAN3B,aAAAL,MAAA,GAAAA,MAAA;AACA,aAAAC,KAAA,GAAAA,KAAA;AACA,aAAA6E,WAAA,GAAAA,WAAA;AACA,aAAA5E,YAAA,GAAAA,YAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AArDV,aAAA0E,WAAA,GAAsB,KAAtB;AAEA,aAAAC,gBAAA,GAA2B,KAA3B;AACA,aAAAC,YAAA,GAAuB,KAAvB;AACA,aAAAC,eAAA,GAA0B,KAA1B;AACA,aAAAC,YAAA,GAAuB,KAAvB;AACA,aAAAC,cAAA,GAAyB,KAAzB;AACA,aAAAC,iBAAA,GAA2B,EAA3B;AACA,aAAAC,UAAA,GAAoB,EAApB;AAMA,aAAAC,UAAA,GAAoB,EAApB;AAGA,aAAAC,cAAA,GAAyB,KAAzB;AAKA,aAAAC,WAAA,GAAsB,KAAtB;AAEA,aAAAC,QAAA,GAAmB,EAAnB;AACA,aAAAC,WAAA,GAAqB,EAArB;AAGA,aAAAC,YAAA,GAAuB,KAAvB;AAEA,aAAAC,SAAA,GAAoB,EAApB;AACA,aAAAC,YAAA,GAAsB,EAAtB;AAEA,aAAAC,MAAA,GAAa,IAAb;AACA,aAAAzE,OAAA,GAAc,IAAd;AAEA,aAAA0E,UAAA,GAAoB,IAApB;AACA,aAAAC,aAAA,GAAyB,EAAzB;AACA,aAAAC,YAAA,GAAwB,EAAxB;AAKiB,aAAAC,YAAA,GAAe,IAAI,0DAAJ,EAAf;AAWZ;;AAxDuB;AAAA;AAAA,qCA0DlB;AACR,iBAAO,KAAKC,UAAL,CAAgBlE,MAAhB,GAAyB,CAAzB,GAA6B,IAA7B,GAAoC,KAA3C;AACD;AA5D2B;AAAA;AAAA,sCA8DjB;AACT,eAAKkE,UAAL,CAAgBC,MAAhB,CAAuB,KAAKC,KAA5B,EAAmC,CAAnC;AACA,eAAKH,YAAL,CAAkBI,IAAlB,CAAuB,KAAKH,UAA5B;AACD;AAjE2B;AAAA;AAAA,mCAmEjBI,KAnEiB,EAmEZ;AACd,eAAKf,WAAL,GAAmB,IAAnB;;AAEA,eAAK,IAAIgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAID,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBzE,MAAnB,GAA4B,CAAjD,EAAoDuE,CAAC,EAArD,EAAyD;AACvD,gBAAIG,YAAY,GAAGJ,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBF,CAAnB,CAAnB;AACA,iBAAKf,QAAL,CAAcmB,IAAd,CAAmBD,YAAnB;AACA,iBAAKjB,WAAL,CAAiBkB,IAAjB,CAAsB;AAAC,sBAAOD,YAAY,CAACE,IAArB;AAA2B,sBAAOF,YAAY,CAACG;AAA/C,aAAtB;AACD;AAEF;AA5E2B;AAAA;AAAA,mCA8EjBT,KA9EiB,EA8EZ;AACd;AACA,eAAKX,WAAL,CAAiBU,MAAjB,CAAwBC,KAAxB,EAA+B,CAA/B,EAFc,CAGd;;AACA,eAAKZ,QAAL,CAAcW,MAAd,CAAqBC,KAArB,EAA4B,CAA5B;AAEA,eAAKM,YAAL,GAAoB,IAApB;;AAEA,cAAG,KAAKlB,QAAL,CAAcxD,MAAd,IAAwB,CAAxB,IAA6B,KAAKyD,WAAL,CAAiBzD,MAAjB,IAA2B,CAA3D,EAA6D;AAC3D,iBAAKuD,WAAL,GAAmB,KAAnB;AACD;AAEF;AA1F2B;AAAA;AAAA,oCA4FhBe,KA5FgB,EA4FX;AACf,eAAKZ,YAAL,GAAoB,IAApB;;AAEA,eAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAID,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBzE,MAAnB,GAA4B,CAAjD,EAAoDuE,CAAC,EAArD,EAAyD;AACvD,gBAAIO,aAAa,GAAGR,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBF,CAAnB,CAApB;AACA,iBAAKZ,SAAL,CAAegB,IAAf,CAAoBG,aAApB;AACA,iBAAKlB,YAAL,CAAkBe,IAAlB,CAAuB;AAAC,sBAAOG,aAAa,CAACF,IAAtB;AAA4B,sBAAOE,aAAa,CAACD;AAAjD,aAAvB;AACD;AAEF;AArG2B;AAAA;AAAA,oCAuGhBT,KAvGgB,EAuGX;AACf;AACA,eAAKR,YAAL,CAAkBO,MAAlB,CAAyBC,KAAzB,EAAgC,CAAhC,EAFe,CAGf;;AACA,eAAKT,SAAL,CAAeQ,MAAf,CAAsBC,KAAtB,EAA6B,CAA7B;AAEA,eAAKU,aAAL,GAAqB,IAArB;;AAEA,cAAG,KAAKnB,SAAL,CAAe3D,MAAf,IAAyB,CAAzB,IAA8B,KAAK4D,YAAL,CAAkB5D,MAAlB,IAA4B,CAA7D,EAA+D;AAC7D,iBAAK0D,YAAL,GAAoB,KAApB;AACD;AAEF;AAnH2B;AAAA;AAAA,oCAqHhBqB,KArHgB,EAqHT;AAClB,cAAGA,KAAK,GAAG,IAAX,EAAiB,OAAOA,KAAK,GAAG,QAAf,CAAjB,KACM,IAAGA,KAAK,GAAG,OAAX,EAAoB,OAAM,CAACA,KAAK,GAAG,IAAT,EAAeC,OAAf,CAAuB,CAAvB,IAA4B,KAAlC,CAApB,KACA,IAAGD,KAAK,GAAG,UAAX,EAAuB,OAAM,CAACA,KAAK,GAAG,OAAT,EAAkBC,OAAlB,CAA0B,CAA1B,IAA+B,KAArC,CAAvB,KACA,OAAM,CAACD,KAAK,GAAG,UAAT,EAAqBC,OAArB,CAA6B,CAA7B,IAAkC,KAAxC;AACN;AA1H2B;AAAA;AAAA,4CA4HX;AACf,cAAG,CAAC,KAAKnC,WAAT,EAAqB;AACnB,gBAAG,KAAKS,cAAR,EACE,OAAO,IAAP,CADF,KAGE,OAAO,KAAP;AACH,WALD,MAMI;AACF,mBAAO,IAAP;AACD;AACF;AAtI2B;AAAA;AAAA,qCAwIf2B,MAxIe,EAwIT;AAAA;;AAEjB,eAAK3B,cAAL,GAAsB,IAAtB;;AAEA,cAAG2B,MAAM,IAAI,KAAb,EAAmB;AAEjB,gBAAIvE,MAAM,GAAG;AACX0B,0BAAY,EAAE;AADH,aAAb,CAFiB,CAMjB;;AACA,iBAAKnE,aAAL,CAAmBoE,4BAAnB,CAAgD3B,MAAhD,EAAwDrB,SAAxD,CAAkE,UAACC,GAAD,EAAa;AAE7E,oBAAI,CAAC4F,iBAAL,GAAyB5F,GAAG,CAACP,MAAJ,CAAY,UAAAC,IAAI,EAAI;AAC3C,uBAAOA,IAAI,CAAC6C,QAAZ;AACD,eAFwB,CAAzB;AAID,aAND,EAOA,UAAAZ,KAAK,EAAI,CAER,CATD;AAYD,WAnBD,MAqBK;AAEH,gBAAIP,QAAM,GAAG;AACX0B,0BAAY,EAAE;AADH,aAAb,CAFG,CAMH;;AACA,iBAAKnE,aAAL,CAAmBoE,4BAAnB,CAAgD3B,QAAhD,EAAwDrB,SAAxD,CAAkE,UAACC,GAAD,EAAa;AAE7E,oBAAI,CAAC4F,iBAAL,GAAyB5F,GAAG,CAACP,MAAJ,CAAY,UAAAC,IAAI,EAAI;AAC3C,uBAAOA,IAAI,CAAC6C,QAAZ;AACD,eAFwB,CAAzB;AAGD,aALD,EAMA,UAAAZ,KAAK,EAAI,CAER,CARD;AAWD;AAEF;AArL2B;AAAA;AAAA,mCAuLpB;AACN,iBAAO,KAAKoC,UAAL,IAAmB,KAAnB,GAA2B,IAA3B,GAAkC,KAAzC;AACD;AAzL2B;AAAA;AAAA,2CA2LTnD,IA3LS,EA2LH;AAAA;;AAEvB,eAAK4C,gBAAL,GAAwB,IAAxB;AACA,eAAKG,YAAL,GAAoB,KAApB;;AAEA,cAAG,CAAC,KAAKJ,WAAT,EAAsB;AAEpB;AACA,gBAAIsC,WAAW,GAAG;AAChB,6BAAe/E,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD,CADP;AAEhB,2BAAa,KAAKwG,KAAL,CAAWC,SAFR;AAGhB,4BAAc,EAHE;AAIhB,0BAAY,KAAKD,KAAL,CAAWE,QAJP;AAKhB,yBAAW,KAAKF,KAAL,CAAWG,OALN;AAMhB,0BAAY,KAAKH,KAAL,CAAWI,QANP;AAOhB,sBAAQ,IAPQ;AAQhB,0BAAY,KAAKJ,KAAL,CAAWK,OAAX,IAAsB,EARlB;AAShB,0BAAY,EATI;AAUhB,sBAAQ,EAVQ;AAWhB,uBAAS,EAXO;AAYhB,yBAAW,EAZK;AAahB,yBAAW,EAbK;AAchB,0BAAYrF,QAAQ,CAAC,KAAK0D,UAAN,CAdJ;AAehB,qBAAO,KAAKsB,KAAL,CAAWM,GAfF;AAgBhB,0BAAY,0BAhBI;AAiBhB,4BAAc,KAAKN,KAAL,CAAWO,UAjBT;AAkBhB,6BAAe,KAAKP,KAAL,CAAWQ,aAAX,CAAyBpE,QAAzB,EAlBC;AAmBhB,wCAA0B,EAnBV;AAoBhB,wCAA0B,EApBV;AAqBhB,iDAAmC,EArBnB;AAsBhB,iDAAmC,EAtBnB;AAuBhB,kCAAoB,EAvBJ;AAwBhB,uBAAS,EAxBO;AAyBhB,kCAAoB,IAzBJ;AA0BhB,0BAAY,IA1BI;AA2BhB,0BAAY,IA3BI;AA4BhB,4BAAc,IA5BE;AA6BhB,+BAAiB,IA7BD;AA8BhB,4BAAcpB,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD,CA9BN;AA+BhB,2BAAa;AA/BG,aAAlB;AAkCA,gBAAIiH,UAAU,GAAG;AACfC,kBAAI,EAAEX;AADS,aAAjB,CArCoB,CAyCpB;;AACA,iBAAKvC,WAAL,CAAiBmD,OAAjB,CAAyBF,UAAzB,EAAqCxG,SAArC,CAA+C,UAACC,GAAD,EAAa;AAEtD,kBAAGA,GAAG,CAACuB,OAAP,EAAgB;AAEd,sBAAI,CAACgD,MAAL,GAAcvE,GAAG,CAACuB,OAAlB;AACA,oBAAImF,MAAJ;;AACA,oBAAG,MAAI,CAACC,QAAL,IAAiB,CAApB,EAAsB;AACpBD,wBAAM,GAAG,MAAI,CAAC5C,UAAd;AACD,iBAFD,MAEK;AACH4C,wBAAM,GAAG,CAAT;AACD;;AACC,oBAAIE,QAAQ,GAAG;AACb,4BAAU,MAAI,CAACrC,MADF;AAEb,4BAAUmC,MAFG;AAGb,8BAAY,IAHC;AAIb,gCAAc5F,QAAQ,CAAC,MAAI,CAACjC,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD,CAJT;AAKb,gCAAc,0BALD;AAMb,+BAAa,CANA;AAOb,+BAAa;AAPA,iBAAf;AAUA,oBAAIuH,UAAU,GAAG;AACfD,0BAAQ,EAAEA;AADK,iBAAjB,CAnBY,CAuBZ;;AACA,sBAAI,CAACtD,WAAL,CAAiBwD,WAAjB,CAA6BD,UAA7B,EAAyC9G,SAAzC,CAAmD,UAACC,GAAD,EAAa;AAE9D,sBAAGA,GAAG,CAACuB,OAAP,EAAgB;AAEd,wBAAIwF,YAAY,GAAG;AAEjB,qCAAejG,QAAQ,CAAC,MAAI,CAACjC,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD,CAFN;AAGjB,gCAAU,MAAI,CAACiF,MAHE;AAIjB,mCAAa,MAAI,CAACuB,KAAL,CAAWC,SAJP;AAKjB,oCAAc,EALG;AAMjB,kCAAY,MAAI,CAACD,KAAL,CAAWE,QANN;AAOjB,iCAAW,MAAI,CAACF,KAAL,CAAWG,OAPL;AAQjB,uCAAiB,MAAI,CAACH,KAAL,CAAWQ,aAAX,CAAyBpE,QAAzB,EARA;AASjB,0CAAoB,MAAI,CAAC4D,KAAL,CAAWkB,gBAAX,CAA4B9E,QAA5B,EATH;AAUjB,qCAAe,IAVE;AAWjB,yCAAmBpB,QAAQ,CAAC,MAAI,CAACgF,KAAL,CAAW5F,eAAZ,CAXV;AAYjB,4CAAsBY,QAAQ,CAAC,MAAI,CAACgF,KAAL,CAAW1F,kBAAZ,CAZb;AAajB,6BAAO,MAAI,CAAC0F,KAAL,CAAWM,GAbD;AAcjB,kCAAYtF,QAAQ,CAAC,MAAI,CAAC0D,UAAN,CAdH;AAejB,oCAAc,MAAI,CAACsB,KAAL,CAAWO,UAfR;AAgBjB,kCAAY,IAhBK;AAiBjB,mCAAa,IAjBI;AAkBjB,qCAAe,MAAI,CAACP,KAAL,CAAWmB,WAlBT;AAmBjB,kCAAY,MAAI,CAACnB,KAAL,CAAWoB,QAnBN;AAoBjB,0CAAoB,MAAI,CAACpB,KAAL,CAAWqB,gBApBd;AAqBjB,yCAAmB,MAAI,CAACrB,KAAL,CAAWsB,eArBb;AAsBjB,sCAAgB,MAAI,CAACtB,KAAL,CAAWuB,YAtBV;AAuBjB,oCAAc,MAAI,CAACvB,KAAL,CAAWwB,UAvBR;AAwBjB,iCAAW,EAxBM;AAyBjB,iCAAW,CAzBM;AA0BjB,oCAAc,IA1BG;AA2BjB,oCAAc,IA3BG;AA4BjB,2CAAqBxG,QAAQ,CAAC,MAAI,CAACgF,KAAL,CAAWyB,iBAAZ,CA5BZ;AA6BjB,uCAAiBzG,QAAQ,CAAC,MAAI,CAACgF,KAAL,CAAW0B,aAAZ,CA7BR;AA8BjB,iCAAW,MAAI,CAAC1B,KAAL,CAAW2B,OA9BL;AA+BjB,4CAAsB,MAAI,CAAC3B,KAAL,CAAW4B,kBA/BhB;AAgCjB,oCAAc,MAAI,CAAC5B,KAAL,CAAW6B,UAhCR;AAiCjB,oCAAc,MAAI,CAAC7B,KAAL,CAAW8B,UAjCR;AAkCjB,oCAAc,MAAI,CAAC9B,KAAL,CAAW+B,UAlCR;AAmCjB,oCAAc,MAAI,CAAC/B,KAAL,CAAWgC,UAnCR;AAoCjB,oCAAc,MAAI,CAAChC,KAAL,CAAWiC,UApCR;AAqCjB,oCAAc,MAAI,CAACjC,KAAL,CAAWkC,UArCR;AAsCjB,sCAAgB,MAAI,CAAClC,KAAL,CAAWmC,YAtCV;AAuCjB,iCAAW,IAvCM;AAwCjB,oCAAcnH,QAAQ,CAAC,MAAI,CAACgF,KAAL,CAAW1F,kBAAZ,CAxCL;AAyCjB,kCAAY,IAzCK;AA0CjB,oCAAcU,QAAQ,CAAC,MAAI,CAACjC,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD,CA1CL;AA2CjB,oCAAc,0BA3CG;AA4CjB,mCAAawB,QAAQ,CAAC,MAAI,CAACjC,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD,CA5CJ;AA6CjB,mCAAa;AA7CI,qBAAnB;AAgDA,wBAAI4I,WAAW,GAAG;AAChBpC,2BAAK,EAAEiB;AADS,qBAAlB;;AAKA,0BAAI,CAACrI,YAAL,CAAkByJ,QAAlB,CAA2BD,WAA3B,EAAwCnI,SAAxC,CAAkD,UAACC,GAAD,EAAa;AAE7D,4BAAI,CAACwD,gBAAL,GAAwB,KAAxB;;AAEA,0BAAGxD,GAAG,CAACuB,OAAP,EAAgB;AACd,8BAAI,CAAC3C,aAAL,CAAmB4C,eAAnB,CAAmC,0BAAnC;;AACA,8BAAI,CAAChD,MAAL,CAAYiD,QAAZ,CAAqB,CAAC,0BAAD,CAArB;AACD,uBAHD,MAIK;AACH,8BAAI,CAACkC,YAAL,GAAoB,IAApB;AACA,8BAAI,CAACE,iBAAL,GAAyB7D,GAAG,CAACoI,kBAA7B;AACD;AAEF,qBAbD,EAaG,UAAAzG,KAAK,EAAI;AAEV,4BAAI,CAAC6B,gBAAL,GAAwB,KAAxB;AACA,4BAAI,CAACG,YAAL,GAAoB,IAApB;AACA,4BAAI,CAACE,iBAAL,GAAyB7D,GAAG,CAAC0B,YAA7B;AAED,qBAnBD;AAsBD;AAEF,iBAjFD,EAkFA,UAAAC,KAAK,EAAI;AACP0G,yBAAO,CAACC,GAAR,CAAY3G,KAAZ;AACD,iBApFD;AAuFH,eA/GD,MAgHK;AAEH,sBAAI,CAAC6B,gBAAL,GAAwB,KAAxB;AACA,sBAAI,CAACG,YAAL,GAAoB,IAApB;AACA,sBAAI,CAACE,iBAAL,GAAyB7D,GAAG,CAAC0B,YAA7B;AAED;AAEN,aA1HD,EA2HA,UAAAC,KAAK,EAAI,CAER,CA7HD;AAiID,WA3KD,MA4KK;AAEH,iBAAK6B,gBAAL,GAAwB,IAAxB;AACA,iBAAKG,YAAL,GAAoB,KAApB,CAHG,CAKH;;AACA,gBAAIkC,YAAW,GAAG;AAChB,wBAAU,KAAKtB,MADC;AAEhB,6BAAezD,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD,CAFP;AAGhB,2BAAa,KAAKwG,KAAL,CAAWC,SAHR;AAIhB,4BAAc,QAJE;AAKhB,0BAAY,KAAKD,KAAL,CAAWE,QALP;AAMhB,yBAAW,KAAKF,KAAL,CAAWG,OANN;AAOhB,0BAAY,KAAKH,KAAL,CAAWI,QAPP;AAQhB,sBAAQ,IARQ;AAShB,0BAAY,KAAKJ,KAAL,CAAWK,OAAX,IAAsB,EATlB;AAUhB,0BAAY,QAVI;AAWhB,sBAAQ,QAXQ;AAYhB,uBAAS,QAZO;AAahB,yBAAW,QAbK;AAchB,yBAAW,QAdK;AAehB,0BAAYrF,QAAQ,CAAC,KAAK0D,UAAN,CAfJ;AAgBhB,qBAAO,KAAKsB,KAAL,CAAWM,GAhBF;AAiBhB,0BAAY,0BAjBI;AAkBhB,4BAAc,KAAKN,KAAL,CAAWO,UAlBT;AAmBhB,6BAAe,KAAKP,KAAL,CAAWQ,aAAX,CAAyBpE,QAAzB,EAnBC;AAoBhB,wCAA0B,QApBV;AAqBhB,wCAA0B,QArBV;AAsBhB,iDAAmC,QAtBnB;AAuBhB,iDAAmC,QAvBnB;AAwBhB,kCAAoB,QAxBJ;AAyBhB,uBAAS,QAzBO;AA0BhB,kCAAoB,IA1BJ;AA2BhB,0BAAY,IA3BI;AA4BhB,0BAAY,IA5BI;AA6BhB,4BAAc,IA7BE;AA8BhB,+BAAiB,IA9BD;AA+BhB,4BAAc,CA/BE;AAgChB,2BAAapB,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD;AAhCL,aAAlB;AAmCA,gBAAIiH,WAAU,GAAG;AACfC,kBAAI,EAAEX;AADS,aAAjB,CAzCG,CA6CF;;AACD,iBAAKvC,WAAL,CAAiBiF,UAAjB,CAA4BhC,WAA5B,EAAwCxG,SAAxC,CAAkD,UAACC,GAAD,EAAa;AAEzD,kBAAGA,GAAG,CAACuB,OAAP,EAAgB;AAEd,oBAAIwF,YAAY,GAAG;AACf,6BAAW,MAAI,CAACtI,KAAL,CAAW2C,MAAX,CAAkB,OAAlB,EAA2BQ,EADvB;AAEf,iCAAed,QAAQ,CAAC,MAAI,CAACjC,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD,CAFR;AAGf,4BAAU,MAAI,CAACiF,MAHA;AAIf,+BAAa,MAAI,CAACuB,KAAL,CAAWC,SAJT;AAKf,gCAAc,QALC;AAMf,8BAAY,MAAI,CAACD,KAAL,CAAWE,QANR;AAOf,6BAAW,MAAI,CAACF,KAAL,CAAWG,OAPP;AAQf,mCAAiB,MAAI,CAACH,KAAL,CAAWQ,aAAX,CAAyBpE,QAAzB,EARF;AASf,sCAAoB,MAAI,CAAC4D,KAAL,CAAWkB,gBAAX,CAA4B9E,QAA5B,EATL;AAUf,iCAAe,IAVA;AAWf,qCAAmBpB,QAAQ,CAAC,MAAI,CAACgF,KAAL,CAAW5F,eAAZ,CAXZ;AAYf,wCAAsBY,QAAQ,CAAC,MAAI,CAACgF,KAAL,CAAW1F,kBAAZ,CAZf;AAaf,yBAAO,MAAI,CAAC0F,KAAL,CAAWM,GAbH;AAcf,8BAAYtF,QAAQ,CAAC,MAAI,CAAC0D,UAAN,CAdL;AAef,gCAAc,MAAI,CAACsB,KAAL,CAAWO,UAfV;AAgBf,8BAAY,IAhBG;AAiBf,+BAAa,IAjBE;AAkBf,iCAAe,MAAI,CAACP,KAAL,CAAWmB,WAlBX;AAmBf,8BAAY,MAAI,CAACnB,KAAL,CAAWoB,QAnBR;AAoBf,sCAAoB,MAAI,CAACpB,KAAL,CAAWqB,gBApBhB;AAqBf,qCAAmB,MAAI,CAACrB,KAAL,CAAWsB,eArBf;AAsBf,kCAAgB,MAAI,CAACtB,KAAL,CAAWuB,YAtBZ;AAuBf,gCAAc,MAAI,CAACvB,KAAL,CAAWwB,UAvBV;AAwBf,6BAAW,QAxBI;AAyBf,6BAAW,CAzBI;AA0Bf,gCAAc,IA1BC;AA2Bf,gCAAc,IA3BC;AA4Bf,uCAAqBxG,QAAQ,CAAC,MAAI,CAACgF,KAAL,CAAWyB,iBAAZ,CA5Bd;AA6Bf,mCAAiBzG,QAAQ,CAAC,MAAI,CAACgF,KAAL,CAAW0B,aAAZ,CA7BV;AA8Bf,6BAAW,MAAI,CAAC1B,KAAL,CAAW2B,OA9BP;AA+Bf,wCAAsB,MAAI,CAAC3B,KAAL,CAAW4B,kBA/BlB;AAgCf,gCAAc,MAAI,CAAC5B,KAAL,CAAW6B,UAhCV;AAiCf,gCAAc,MAAI,CAAC7B,KAAL,CAAW8B,UAjCV;AAkCf,gCAAc,MAAI,CAAC9B,KAAL,CAAW+B,UAlCV;AAmCf,gCAAc,MAAI,CAAC/B,KAAL,CAAWgC,UAnCV;AAoCf,gCAAc,MAAI,CAAChC,KAAL,CAAWiC,UApCV;AAqCf,gCAAc,MAAI,CAACjC,KAAL,CAAWkC,UArCV;AAsCf,kCAAgB,MAAI,CAAClC,KAAL,CAAWmC,YAtCZ;AAuCf,6BAAW,IAvCI;AAwCf,gCAAcnH,QAAQ,CAAC,MAAI,CAACgF,KAAL,CAAW1F,kBAAZ,CAxCP;AAyCf,8BAAY,IAzCG;AA0Cf,gCAAc,CA1CC;AA2Cf,gCAAc,0BA3CC;AA4Cf,+BAAaU,QAAQ,CAAC,MAAI,CAACjC,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD,CA5CN;AA6Cf,+BAAa;AA7CE,iBAAnB;AAgDC,oBAAI4I,WAAW,GAAG;AACjBpC,uBAAK,EAAEiB;AADU,iBAAlB,CAlDa,CAsDb;;AACA,sBAAI,CAACrI,YAAL,CAAkB8J,WAAlB,CAA8BN,WAA9B,EAA2CnI,SAA3C,CAAqD,UAACC,GAAD,EAAa;AAE/D,wBAAI,CAACwD,gBAAL,GAAwB,KAAxB;;AAEA,sBAAGxD,GAAG,CAACuB,OAAP,EAAgB;AACd;AACA;AACA;AACA,0BAAI,CAAC3C,aAAL,CAAmB4C,eAAnB,CAAmC,4BAAnC;;AACA,0BAAI,CAAChD,MAAL,CAAYiD,QAAZ,CAAqB,CAAC,0BAAD,CAArB;AAED,mBAPD,MAQK;AACH,0BAAI,CAACkC,YAAL,GAAoB,IAApB;AACA,0BAAI,CAACE,iBAAL,GAAyB7D,GAAG,CAACoI,kBAA7B;AACD;AAEF,iBAjBF,EAiBI,UAAAzG,KAAK,EAAI;AAEV,wBAAI,CAAC6B,gBAAL,GAAwB,KAAxB;AACA,wBAAI,CAACG,YAAL,GAAoB,IAApB;AACA,wBAAI,CAACE,iBAAL,GAAyB7D,GAAG,CAAC0B,YAA7B;AAEH,iBAvBA;AA0BF,eAjFD,MAkFK;AAEH,sBAAI,CAAC8B,gBAAL,GAAwB,KAAxB;AACA,sBAAI,CAACG,YAAL,GAAoB,IAApB;AACA,sBAAI,CAACE,iBAAL,GAAyB7D,GAAG,CAAC0B,YAA7B;AAED;AAEN,aA5FD;AA8FD;AAEF;AA1f2B;AAAA;AAAA,uCA4fb+G,GA5fa,EA4fV;AAChB,eAAK/E,eAAL,GAAuB,KAAvB;;AACA,cAAG,KAAKiD,QAAL,IAAiB,CAApB,EAAsB;AACpB,iBAAKjD,eAAL,GAAuB,IAAvB;AACD,WAFD,MAEM,IAAG,KAAKiD,QAAL,IAAiB,CAApB,EAAsB;AAC1B,iBAAKjD,eAAL,GAAuB,KAAvB;AACD;AACJ;AAngB6B;AAAA;AAAA,mCAqgBjB;AAAA;;AAEV,eAAKoC,KAAL,GAAa,EAAb;AACC,eAAKA,KAAL,CAAWO,UAAX,GAAwB,EAAxB;AACA,eAAKP,KAAL,CAAW5F,eAAX,GAA6B,EAA7B;AACA,eAAK4F,KAAL,CAAW1F,kBAAX,GAAgC,EAAhC;AACA,eAAK0F,KAAL,CAAWQ,aAAX,GAA2B,EAA3B;AACA,eAAKR,KAAL,CAAWkB,gBAAX,GAA8B,EAA9B;;AAEA,cAAG,KAAKvI,KAAL,CAAW2C,MAAX,CAAkB,OAAlB,EAA2BQ,EAA3B,IAAiCnB,SAApC,EAA+C;AAE7C,iBAAK8C,WAAL,GAAmB,IAAnB;AACA,iBAAKE,YAAL,GAAoB,IAApB;AAEA,iBAAK3D,OAAL,GAAe,KAAKrB,KAAL,CAAW2C,MAAX,CAAkB,OAAlB,EAA2BQ,EAA1C;AAEA,iBAAKlD,YAAL,CAAkBkB,iBAAlB,CAAoC,KAAKnB,KAAL,CAAW2C,MAAX,CAAkB,OAAlB,EAA2BQ,EAA/D,EAAmE7B,SAAnE,CAA6E,UAACC,GAAD,EAAa;AAExF,oBAAI,CAAC8F,KAAL,GAAa9F,GAAG,CAAC,CAAD,CAAhB;AACA,oBAAI,CAACuE,MAAL,GAAc,MAAI,CAACuB,KAAL,CAAWvB,MAAzB;AACA,oBAAI,CAACC,UAAL,GAAkB,MAAI,CAACsB,KAAL,CAAW4C,QAAX,CAAoBxG,QAApB,EAAlB;;AACA,oBAAI,CAACyG,YAAL,CAAkB,MAAI,CAAC7C,KAAL,CAAW5F,eAA7B;AAED,aAPD,EAQA,UAAAyB,KAAK,EAAI,CAER,CAVD;AAaD;;AAED,cAAIiH,WAAW,GAAG;AAChB9F,wBAAY,EAAE;AADE,WAAlB;AAIA,eAAKnE,aAAL,CAAmBoE,4BAAnB,CAAgD6F,WAAhD,EAA6D7I,SAA7D,CAAuE,UAACC,GAAD,EAAa;AAClF,kBAAI,CAAC6I,cAAL,GAAsB7I,GAAtB;AACD,WAFD;AAIA,cAAIkI,WAAW,GAAG;AAChBpF,wBAAY,EAAE;AADE,WAAlB,CAvCS,CA2CT;;AACA,eAAKnE,aAAL,CAAmBoE,4BAAnB,CAAgDmF,WAAhD,EAA6DnI,SAA7D,CAAuE,UAACC,GAAD,EAAa;AAEjF,kBAAI,CAAC8I,aAAL,GAAqB9I,GAAG,CAACP,MAAJ,CAAY,UAAAC,IAAI,EAAI;AACtC,qBAAOA,IAAI,CAAC6C,QAAZ;AACF,aAFoB,CAArB;AAIF,WAND,EAOA,UAAAZ,KAAK,EAAI,CAER,CATD;AAYA,cAAIoH,cAAc,GAAG;AACnBjG,wBAAY,EAAE;AADK,WAArB,CAxDS,CA4DT;;AACA,eAAKnE,aAAL,CAAmBoE,4BAAnB,CAAgDgG,cAAhD,EAAgEhJ,SAAhE,CAA0E,UAACC,GAAD,EAAa;AAEpF,kBAAI,CAAC4F,iBAAL,GAAyB5F,GAAG,CAACP,MAAJ,CAAY,UAAAC,IAAI,EAAI;AAC1C,qBAAOA,IAAI,CAAC6C,QAAZ;AACD,aAFuB,CAAzB;AAIF,WAND,EAOA,UAAAZ,KAAK,EAAI,CAER,CATD,EA7DS,CAyET;;AAEA,eAAK2B,WAAL,CAAiB0F,eAAjB,GAAmCjJ,SAAnC,CACE,UAACkJ,IAAD,EAAa;AACX,kBAAI,CAACvE,YAAL,GAAoBuE,IAApB;AACD,WAHH,EA3ES,CAgFT;;AACA,cAAIC,WAAW,GAAE;AACfC,sBAAU,EAAG,CADE;AAEfC,uBAAW,EAAGtI,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AAFP,WAAjB;AAKA,eAAKgE,WAAL,CAAiB+F,oCAAjB,CAAsDH,WAAtD,EAAmEnJ,SAAnE,CAA6E,UAACC,GAAD,EAAa;AACxFqI,mBAAO,CAACC,GAAR,CAAYtI,GAAZ;AACA,kBAAI,CAACyE,aAAL,GAAqBzE,GAArB;AAED,WAJD;AAOD;AAlmB2B;;AAAA;AAAA,OAA9B;;;;cAiDoB;;cACD;;cACK;;cACC;;cACC;;cACA;;cACA;;;;AAbP,8DAAhB,4DAAO,OAAP,CAAgB,E,+EAAA,G,2BAAA,E,OAAA,E,MAAA;AACA,8DAAhB,4DAAO,OAAP,CAAgB,E,+EAAA,G,2BAAA,E,YAAA,E,MAAA;AAEP,8DAAT,8DAAS,E,+EAAA,G,2BAAA,E,cAAA,E,MAAA;AA7CCqD,qBAAiB,6DAL7B,gEAAU;AACTF,cAAQ,EAAE,eADD;AAETC,cAAQ,EAAR;AAAA;AAAA,oIAFS;;;;AAAA,KAAV,CAK6B,E,+EAiDV,sD,EACD,8D,EACK,wE,EACC,0E,EACC,4E,EACA,6E,EACA,gE,EAvDI,GAAjBC,iBAAiB,CAAjB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACgBf,QAAaiG,wBAAwB;AAAA;AAAA;AA8BnC,wCACU5K,YADV,EAEUC,aAFV,EAGOE,aAHP,EAIO0K,gBAJP,EAKO/K,MALP,EAKoB;AAAA;;AAJV,aAAAE,YAAA,GAAAA,YAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACH,aAAAE,aAAA,GAAAA,aAAA;AACA,aAAA0K,gBAAA,GAAAA,gBAAA;AACA,aAAA/K,MAAA,GAAAA,MAAA;AA/BP,aAAAgL,iBAAA,GAA4B,KAA5B;AAEA,aAAAC,aAAA,GAAuB,QAAvB;AACA,aAAAC,SAAA,GAAoB,IAApB;AAEA,aAAAC,cAAA,GAAqB,CAArB;AAGA,aAAAC,SAAA,GAAgB,EAAhB;AAGA,aAAAC,SAAA,GAAmB,EAAnB;AAQA,aAAAC,aAAA,GAAuB,EAAvB;AACA,aAAAC,WAAA,GAAmB,EAAnB;AAYK;;AApC8B;AAAA;AAAA,uCAsCpB/E,KAtCoB,EAsCf;AAClB,eAAK2E,cAAL,GAAsB3E,KAAK,CAAC2E,cAA5B;AACA,eAAKK,YAAL,GAAoBhF,KAAK,CAACgF,YAA1B;AACA,eAAKJ,SAAL,GAAiB5E,KAAK,CAAC4E,SAAvB;AACD;AA1CkC;AAAA;AAAA,qCA4CtBK,IA5CsB,EA4ClB;AACf,eAAKR,aAAL,GAAqBQ,IAArB;AACA,eAAKP,SAAL,GAAiB,CAAC,KAAKA,SAAvB;AACD;AA/CkC;AAAA;AAAA,wCAiDnBO,IAjDmB,EAiDb;AACpB,cAAG,KAAKR,aAAL,IAAsBQ,IAAzB,EAA8B;AAC5B,mBAAO,KAAKP,SAAL,GAAiB,KAAjB,GAAyB,MAAhC;AACD,WAFD,MAGK,OAAO,EAAP;AACN;AAtDkC;AAAA;AAAA,uCAwDpB;AACb,iBAAOQ,MAAM,CAACC,UAAP,IAAqB,GAArB,GAA2B,kBAA3B,GAAgD,EAAvD;AACD;AA1DkC;AAAA;AAAA,uCA4DpBC,KA5DoB,EA4Df;AAClB,eAAKN,aAAL,GAAqBM,KAArB;AACD;AA9DkC;AAAA;AAAA,uCAgEpBpF,KAhEoB,EAgEbiF,IAhEa,EAgEP3E,IAhEO,EAgEH;AAE9B,cAAG,CAAC,mDAAUN,KAAV,CAAJ,EAAqB;AACnB,iBAAK8E,aAAL,GAAqBG,IAArB;AACA,iBAAKF,WAAL,CAAiBE,IAAjB,IAAyBjF,KAAK,CAACM,IAAD,CAA9B;AACD,WAHD,MAIK;AACF,iBAAKyE,WAAL,GAAmB,EAAnB;AACF;AAEF;AA1EkC;AAAA;AAAA,sCA4ErBnI,EA5EqB,EA4EjB;AAEjB,cAAIvB,IAAI,GAAG,KAAKgK,YAAL,CAAkB5K,MAAlB,CAA0B,UAAAC,IAAI,EAAI;AAC5C,mBAAOA,IAAI,CAAC4K,MAAL,IAAe1I,EAAtB;AACA,WAFU,CAAX;;AAIA,cAAGvB,IAAI,KAAKI,SAAT,IAAsBJ,IAAI,CAACK,MAAL,KAAgB,CAAzC,EAA4C;AAC3C,iBAAKb,KAAL,CAAWmB,QAAX,GAAsB,EAAtB;AACA,mBAAO,EAAP;AACA,WAHD,MAIK;AACJ,iBAAKnB,KAAL,CAAWmB,QAAX,GAAsBX,IAAI,CAAC,CAAD,CAAJ,CAAQkK,QAA9B;AACA,mBAAOlK,IAAI,CAAC,CAAD,CAAJ,CAAQkK,QAAf;AACA;AAED;AA3FkC;AAAA;AAAA,uCA6FpB3I,EA7FoB,EA6FhB;AAElB,cAAIvB,IAAI,GAAG,KAAKgK,YAAL,CAAkB5K,MAAlB,CAA0B,UAAAC,IAAI,EAAI;AAC5C,mBAAOA,IAAI,CAAC4K,MAAL,IAAe1I,EAAtB;AACA,WAFU,CAAX;;AAIA,cAAGvB,IAAI,KAAKI,SAAT,IAAsBJ,IAAI,CAACK,MAAL,KAAgB,CAAzC,EAA4C;AAC3C,iBAAKb,KAAL,CAAWqB,SAAX,GAAuB,EAAvB;AACA,mBAAO,EAAP;AACA,WAHD,MAIK;AACJ,iBAAKrB,KAAL,CAAWqB,SAAX,GAAuBb,IAAI,CAAC,CAAD,CAAJ,CAAQkK,QAA/B;AACA,mBAAOlK,IAAI,CAAC,CAAD,CAAJ,CAAQkK,QAAf;AACA;AAED;AA5GkC;AAAA;AAAA,qCA8GtB3I,EA9GsB,EA8GlB;AAEhB,cAAIvB,IAAI,GAAG,KAAK0G,YAAL,CAAkBtH,MAAlB,CAA0B,UAAAC,IAAI,EAAI;AAC5C,mBAAOA,IAAI,CAACI,OAAL,IAAgB8B,EAAvB;AACA,WAFU,CAAX;;AAIA,cAAGvB,IAAI,KAAKI,SAAT,IAAsBJ,IAAI,CAACK,MAAL,KAAgB,CAAzC,EAA4C;AAC3C,iBAAKb,KAAL,CAAWkG,SAAX,GAAuB,EAAvB;AACA,mBAAO,EAAP;AACA,WAHD,MAIK;AACJ,iBAAKlG,KAAL,CAAWkG,SAAX,GAAuB1F,IAAI,CAAC,CAAD,CAAJ,CAAQ0F,SAA/B;AACA,mBAAO1F,IAAI,CAAC,CAAD,CAAJ,CAAQ0F,SAAf;AACA;AAGD;AA9HkC;AAAA;AAAA,oCAiIvBnE,EAjIuB,EAiIrB;AAEb,cAAIvB,IAAI,GAAG,KAAK0G,YAAL,CAAkBtH,MAAlB,CAA0B,UAAAC,IAAI,EAAI;AAC5C,mBAAOA,IAAI,CAACI,OAAL,IAAgB8B,EAAvB;AACA,WAFU,CAAX;;AAIA,cAAGvB,IAAI,KAAKI,SAAT,IAAsBJ,IAAI,CAACK,MAAL,KAAgB,CAAzC,EAA4C;AAC3C,iBAAKb,KAAL,CAAWT,QAAX,GAAsB,EAAtB;AACA,mBAAO,EAAP;AACA,WAHD,MAIK;AACJ,gBAAIa,uBAAuB,GAAGI,IAAI,CAAC,CAAD,CAAJ,CAAQH,eAAtC;AACA,gBAAIC,0BAA0B,GAAGE,IAAI,CAAC,CAAD,CAAJ,CAAQD,kBAAzC,CAFI,CAIJ;;AACC,gBAAGH,uBAAuB,IAAI,GAA9B,EAAmC;AAElC,kBAAIqF,IAAI,GAAG,KAAKhF,qBAAL,CAA2Bb,MAA3B,CAAkC,UAAAC,IAAI,EAAI;AACpD,oBAAGA,IAAI,CAACa,aAAL,IAAsBJ,0BAAzB,EAAoD;AACnD,yBAAOT,IAAI,CAACc,eAAZ;AACA;AACD,eAJU,CAAX;;AAOC,kBAAG8E,IAAI,KAAK7E,SAAT,IAAsB6E,IAAI,CAAC5E,MAAL,IAAe,CAAxC,EAA0C;AACzC,qBAAKb,KAAL,CAAWT,QAAX,GAAsB,EAAtB;AACA,uBAAO,EAAP;AACA,eAHD,MAIK;AACJ,qBAAKS,KAAL,CAAWT,QAAX,GAAsBkG,IAAI,CAAC,CAAD,CAAJ,CAAQ9E,eAA9B;AACA,uBAAO8E,IAAI,CAAC,CAAD,CAAJ,CAAQ9E,eAAf;AACA;AAIF,aApBD,MAqBK;AACJ,kBAAI8E,KAAI,GAAG,KAAK3E,sBAAL,CAA4BlB,MAA5B,CAAmC,UAAAC,IAAI,EAAI;AACrD,oBAAGA,IAAI,CAACa,aAAL,IAAsBJ,0BAAzB,EAAoD;AACnD,yBAAOT,IAAI,CAACc,eAAZ;AACA;AACD,eAJU,CAAX;;AAKA,kBAAG8E,KAAI,KAAK7E,SAAT,IAAsB6E,KAAI,CAAC5E,MAAL,IAAe,CAAxC,EAA0C;AACxC,qBAAKb,KAAL,CAAWT,QAAX,GAAsB,EAAtB;AACA,uBAAO,EAAP;AACA,eAHF,MAIM;AACJ,qBAAKS,KAAL,CAAWT,QAAX,GAAsBkG,KAAI,CAAC,CAAD,CAAJ,CAAQ9E,eAA9B;AACA,uBAAO8E,KAAI,CAAC,CAAD,CAAJ,CAAQ9E,eAAf;AACA;AACF;AAIF;AAED;AAzLkC;AAAA;AAAA,2CA2LhB;AAAA;;AAEjB,cAAG,KAAKqJ,SAAL,IAAkB,EAArB,EAAwB;AAEtB,gBAAIW,WAAW,GAAG,IAAIC,GAAG,CAAChL,MAAR,EAAlB;AACA,gBAAIiL,kBAAkB,GAAG,CAAzB;AACA,gBAAIC,WAAW,GAAG,KAAKd,SAAvB;AACA,gBAAIe,eAAe,GAAG,UAAtB;AACA,gBAAIC,UAAU,GAAGL,WAAW,CAACM,YAAZ,CAAyB,cAAzB,EAAyCH,WAAzC,EAAsDC,eAAtD,CAAjB;AACAJ,uBAAW,CAACO,QAAZ,GAAuB,IAAvB;AACAP,uBAAW,CAACQ,SAAZ,CAAsBN,kBAAtB,EAA0CG,UAA1C;AAEA,iBAAKI,QAAL,CAAcC,0BAAd,CAAyC,KAAzC;AAEA,iBAAKC,UAAL,CAAgBC,OAAhB,CAAwB,UAAA1L,IAAI,EAAI;AAC9B,kBAAGA,IAAI,CAAC2L,SAAL,IAAkB,SAArB,EAAgC;AAC9B,sBAAI,CAACJ,QAAL,CAAcD,SAAd,CAAwBtL,IAAI,CAAC2L,SAA7B,EAAwCb,WAAxC,EAAqD,IAArD;AACD;AACF,aAJD;AAMA,iBAAKS,QAAL,CAAcK,YAAd;AAED,WApBD,MAqBK;AACH,iBAAKL,QAAL,CAAcM,YAAd;AACD;AAEF;AAtNkC;AAAA;AAAA,8CAyNbC,MAzNa,EAyNL;AAC5B,cAAIC,UAAU,GAAG,KAAKR,QAAL,CAAcS,UAAd,CAAyBF,MAAM,CAACG,KAAhC,CAAjB;AACA,cAAI7J,YAAY,GAAG2J,UAAU,CAAC3J,YAA9B;AACA,eAAKtD,MAAL,CAAYoN,aAAZ,CAA0B,2BAA2B9J,YAArD;AACD;AA7NkC;AAAA;AAAA,mCA+NxB;AAAA;;AAEZ,cAAI+J,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAMC,MAAN,EAAc3B,KAAd,EAAwB;AACrC,mBAAO,wCAAwCA,KAAxC,GAAgD,QAAvD;AACD,WAFN;;AAIK,cAAI4B,cAAc,GAAG,SAAjBA,cAAiB,CAAC5B,KAAD,EAAW;AAC9B,mBAAO,gCAAgCA,KAAhC,GAAwC,QAA/C;AACD,WAFD;;AAIA,eAAKe,UAAL,GAAkB,CAAC;AACjBc,gBAAI,EAAE,MADW;AAEjBZ,qBAAS,EAAE,aAFM;AAGjBa,iBAAK,EAAE,GAHU;AAIjBL,yBAAa,EAAEA,aAJE;AAKjBM,oBAAQ,EAAEH;AALO,WAAD,EAMhB;AACAC,gBAAI,EAAE,UADN;AAEAZ,qBAAS,EAAE,cAFX;AAGAa,iBAAK,EAAE,GAHP;AAIAL,yBAAa,EAAEA,aAJf;AAKAM,oBAAQ,EAAEH;AALV,WANgB,EAalB;AACIC,gBAAI,EAAE,QADV;AAEIZ,qBAAS,EAAE,QAFf;AAGIe,oBAAQ,EAAE,GAHd;AAIIP,yBAAa,EAAE,uBAACC,GAAD,EAAMC,MAAN,EAAc3B,KAAd,EAAgC;AAC7C,qBAAO,wCAAwC,mCAAM,CAACA,KAAD,CAAN,CAAciC,MAAd,CAAqB,MAAI,CAAC9C,gBAAL,CAAsB+C,UAA3C,CAAxC,GAAiG,QAAxG;AACD,aANL;AAOIH,oBAAQ,EAAEH;AAPd,WAbkB,EAsBlB;AACIC,gBAAI,EAAE,SADV;AAEIZ,qBAAS,EAAE,SAFf;AAGIe,oBAAQ,EAAE,GAHd;AAIIP,yBAAa,EAAE,uBAACC,GAAD,EAAMC,MAAN,EAAc3B,KAAd,EAAgC;AAC7C,qBAAO,wCAAwC,mCAAM,CAACA,KAAD,CAAN,CAAciC,MAAd,CAAqB,MAAI,CAAC9C,gBAAL,CAAsB+C,UAA3C,CAAxC,GAAiG,QAAxG;AACD,aANL;AAOIH,oBAAQ,EAAEH;AAPd,WAtBkB,EA+BlB;AACIC,gBAAI,EAAE,QADV;AAEIZ,qBAAS,EAAE,UAFf;AAGIe,oBAAQ,EAAE,GAHd;AAIIP,yBAAa,EAAEA,aAJnB;AAKIM,oBAAQ,EAAEH;AALd,WA/BkB,EAsClB;AACIC,gBAAI,EAAE,SADV;AAEIZ,qBAAS,EAAE,WAFf;AAGIe,oBAAQ,EAAE,GAHd;AAIIP,yBAAa,EAAEA,aAJnB;AAKIM,oBAAQ,EAAEH;AALd,WAtCkB,EA6ClB;AACEC,gBAAI,EAAE,UADR;AAEEZ,qBAAS,EAAE,YAFb;AAGEe,oBAAQ,EAAE,GAHZ;AAIEP,yBAAa,EAAEA,aAJjB;AAKEM,oBAAQ,EAAEH;AALZ,WA7CkB,EAoDlB;AACIC,gBAAI,EAAE,SADV;AAEIM,sBAAU,EAAE,QAFhB;AAGIC,iBAAK,EAAE,QAHX;AAIIJ,oBAAQ,EAAE,GAJd;AAMIP,yBAAa,EAAE,uBAACC,GAAD,EAAKW,OAAL,EAAarC,KAAb,EAA4B;AAClD,qBAAO,iCACH,yEADG,GACwE0B,GADxE,GAC6E,KAD7E,GAEH,2DAFG,GAGH,MAHG,GAIJ,QAJH;AAKQ,aAZL;AAaIK,oBAAQ,EAAEH;AAbd,WApDkB,CAAlB;AAmEH,eAAKnM,KAAL,GAAa,EAAb;AAGA,eAAKkH,YAAL,GAAoB,EAApB;AACA,eAAKsD,YAAL,GAAoB,EAApB;AAEA,eAAK/J,qBAAL,GAA6B,EAA7B;AACA,eAAKK,sBAAL,GAA8B,EAA9B;AAEF,cAAIS,MAAM,GAAG;AACZgB,uBAAW,EAAEtB,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADT,WAAb;AAIE,eAAKZ,YAAL,CAAkBgO,8BAAlB,CAAiDtL,MAAjD,EAAyDrB,SAAzD,CAAmE,UAACC,GAAD,EAAa;AAE/E;AACA,kBAAI,CAAC2M,aAAL,GAAqB3M,GAAG,CAACP,MAAJ,CAAW,UAAAY,IAAI,EAAI;AACtC,qBAAOA,IAAI,CAACkC,QAAZ;AACD,aAFoB,CAArB;AAIA,4DAAO,MAAI,CAACoK,aAAZ,EAA2B,UAAAjN,IAAI,EAAI;AAElC,oBAAI,CAAChB,YAAL,CAAkBkB,iBAAlB,CAAoCF,IAAI,CAACI,OAAzC,EAAkDC,SAAlD,CAA4D,UAAC+F,KAAD,EAAe;AAE1E,sBAAI,CAACiB,YAAL,CAAkB1B,IAAlB,CAAuBS,KAAK,CAAC,CAAD,CAA5B;AAEA,eAJD;AAMH,aARE;AASHuC,mBAAO,CAACC,GAAR,CAAY,eAAZ,EAA4B,MAAI,CAACqE,aAAjC;AACA,kBAAI,CAACC,cAAL,GAAsB;AACrBC,uBAAS,EAAE,MAAI,CAACF,aADK;AAErBG,sBAAQ,EAAE;AAFW,aAAtB;AAIE,kBAAI,CAACH,aAAL,GAAqB,IAAIlC,GAAG,CAACsC,WAAR,CAAoB,MAAI,CAACH,cAAzB,CAArB;AACF,gBAAII,cAAc,GAAG;AACpB5K,yBAAW,EAAEtB,QAAQ,CAAC,MAAI,CAACjC,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADD,aAArB,CAtBkF,CA0B/E;;AACH,kBAAI,CAACZ,YAAL,CAAkB+D,wBAAlB,CAA2CuK,cAA3C,EAA2DjN,SAA3D,CAAqE,UAACC,GAAD,EAAa;AACjF,oBAAI,CAACqK,YAAL,GAAoBrK,GAApB;AACA,aAFD;;AAIA,gBAAIiN,kBAAkB,GAAG;AACxBnK,0BAAY,EAAE;AADU,aAAzB,CA/BkF,CAmClF;;AACG,kBAAI,CAACnE,aAAL,CAAmBoE,4BAAnB,CAAgDkK,kBAAhD,EAAoElN,SAApE,CAA8E,UAACC,GAAD,EAAa;AAE5F,oBAAI,CAACM,qBAAL,GAA6BN,GAAG,CAACP,MAAJ,CAAW,UAAAC,IAAI,EAAI;AAC/C,uBAAOA,IAAI,CAAC6C,QAAZ;AACA,eAF4B,CAA7B;AAIE,aAND,EAOA,UAAAZ,KAAK,EAAI,CAER,CATD;;AAYH,gBAAIuL,kBAAkB,GAAG;AACxBpK,0BAAY,EAAE;AADU,aAAzB,CAhDkF,CAqD/E;;AACA,kBAAI,CAACnE,aAAL,CAAmBoE,4BAAnB,CAAgDmK,kBAAhD,EAAoEnN,SAApE,CAA8E,UAACC,GAAD,EAAa;AAE5F,oBAAI,CAACW,sBAAL,GAA8BX,GAAG,CAACP,MAAJ,CAAW,UAAAC,IAAI,EAAI;AAChD,uBAAOA,IAAI,CAAC6C,QAAZ;AACA,eAF6B,CAA9B;AAKE,aAPD,EAQA,UAAAZ,KAAK,EAAI,CAER,CAVD;;AAcA,kBAAI,CAACwL,UAAL,GAAkB,MAAI,CAACR,aAAL,CAAmBjM,MAArC;;AAEA,gBAAG,MAAI,CAACyM,UAAL,GAAgB,MAAI,CAACvD,SAAxB,EAAkC;AAChC,oBAAI,CAACI,YAAL,GAAoB,MAAI,CAACJ,SAAzB;AACD,aAFD,MAIK;AACH,oBAAI,CAACI,YAAL,GAAoB,MAAI,CAACmD,UAAzB;AACD;;AAED,kBAAI,CAAC3D,iBAAL,GAAyB,IAAzB;AAED,WAhFA;AAiFA;AA1YkC;;AAAA;AAAA,OAArC;;;;cA+ByB;;cACE;;cACH;;cACE;;cACV;;;;AAN4B,8DAAzC,gEAAU,UAAV,EAAsB;AAAE,gBAAQ;AAAV,KAAtB,CAAyC,E,wEAAU,8G,CAAV,G,kCAAA,E,UAAA,E,MAAA;AA4L1C,8DADC,mEAAa,8BAAb,EAA6C,CAAC,eAAD,CAA7C,CACD,E,iFAAA,E,uFAAA,E,qFAAA,G,kCAAA,E,uBAAA,E,IAAA;AAzNWF,4BAAwB,6DALpC,gEAAU;AACTnG,cAAQ,EAAE,sBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,kJAFS;;;;AAAA,KAAV,CAKoC,E,+EA+BZ,0E,EACE,4E,EACH,gE,EACE,0F,EACV,sD,EAnCqB,GAAxBkG,wBAAwB,CAAxB;;AA+Yb,aAAS8D,mBAAT,CAA6BtB,GAA7B,EAAgC;AAC/B,UAAI9G,KAAK,GAAG,IAAIqI,WAAJ,CAAgB,uBAAhB,EAAyC;AACnD7B,cAAM,EAAE;AACPG,eAAK,EAAEG;AADA;AAD2C,OAAzC,CAAZ;AAKA5B,YAAM,CAACoD,aAAP,CAAqBtI,KAArB;AACE;;AACAkF,UAAc,CAACkD,mBAAf,GAAqCA,mBAArC;;;;;;;;;;;;;;;;ACvaH;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcf,QAAaG,mBAAmB;AAAA;AAAA;AAwB9B,mCACSC,QADT,EAEQC,MAFR,EAGU/O,YAHV,EAIUE,aAJV,EAKUC,aALV,EAKqC;AAAA;;AAJ5B,aAAA2O,QAAA,GAAAA,QAAA;AACD,aAAAC,MAAA,GAAAA,MAAA;AACE,aAAA/O,YAAA,GAAAA,YAAA;AACA,aAAAE,aAAA,GAAAA,aAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AAzBV,aAAA6O,YAAA,GAAuB,IAAvB;AAEA,aAAAC,iBAAA,GAA4B,KAA5B;AAMA,aAAAC,eAAA,GAA0B,KAA1B;AAEA,aAAAC,UAAA,GAAqB,KAArB;AAEA,aAAApE,aAAA,GAAuB,QAAvB;AACA,aAAAC,SAAA,GAAoB,IAApB;AAEA,aAAAC,cAAA,GAAqB,CAArB;AAGA,aAAAC,SAAA,GAAgB,EAAhB;AASC,aAAKkE,YAAL,GAAoB,KAAKN,QAAL,CAAclO,GAAd,CAAkB,2EAAlB,CAApB;AACA;;AAhC6B;AAAA;AAAA,uCAkCf0F,KAlCe,EAkCV;AAClB,eAAK2E,cAAL,GAAsB3E,KAAK,CAAC2E,cAA5B;AACA,eAAKK,YAAL,GAAoBhF,KAAK,CAACgF,YAA1B;AACA,eAAKJ,SAAL,GAAiB5E,KAAK,CAAC4E,SAAvB;AACD;AAtC6B;AAAA;AAAA,qCAwCjBK,IAxCiB,EAwCb;AACf,eAAKR,aAAL,GAAqBQ,IAArB;AACA,eAAKP,SAAL,GAAiB,CAAC,KAAKA,SAAvB;AACD;AA3C6B;AAAA;AAAA,wCA6CdO,IA7Cc,EA6CR;AACpB,cAAG,KAAKR,aAAL,IAAsBQ,IAAzB,EAA8B;AAC5B,mBAAO,KAAKP,SAAL,GAAiB,KAAjB,GAAyB,MAAhC;AACD,WAFD,MAGK,OAAO,EAAP;AACN;AAlD6B;AAAA;AAAA,uCAoDf9I,IApDe,EAoDT;AAAA;;AAEpB,eAAK8M,YAAL,GAAoB,KAApB;;AAEC,cAAG,CAAC,KAAKG,UAAT,EAAqB;AAEnB,gBAAIhN,OAAO,GAAG;AAEZ,6BAAeC,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD,CAFX;AAGZ,0BAAY,KAAKyO,IAAL,CAAUxD,QAHV;AAIZ,0BAAY,KAAKwD,IAAL,CAAU7G,QAJV;AAKZ,0BAAY,IALA;AAMZ,4BAAcpG,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD,CANV;AAOZ,4BAAc,IAAI0O,IAAJ,GAAWC,WAAX,EAPF;AAQZ,2BAAa,CARD;AASZ,2BAAa,IAAID,IAAJ,GAAWC,WAAX;AATD,aAAd;AAaA,gBAAI7M,MAAM,GAAG;AACX2M,kBAAI,EAAElN;AADK,aAAb;AAIA,iBAAKnC,YAAL,CAAkBwP,OAAlB,CAA0B9M,MAA1B,EAAkCrB,SAAlC,CAA4C,UAACC,GAAD,EAAa;AAEvD,kBAAGA,GAAG,CAACuB,OAAP,EAAgB;AAEd,uBAAI,CAACmM,YAAL,GAAoB,IAApB;;AACA,uBAAI,CAAC9O,aAAL,CAAmB4C,eAAnB,CAAmC,0BAAnC;;AAEA,uBAAI,CAAC2M,WAAL;AACD;AAEF,aAVD,EAUG,UAAAxM,KAAK,EAAI,CAEX,CAZD;AAcD,WAjCD,MAmCI;AAEF,gBAAId,SAAO,GAAG;AAEZ,wBAAUC,QAAQ,CAAC,KAAKiN,IAAL,CAAUzD,MAAX,CAFN;AAGZ,6BAAexJ,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD,CAHX;AAIZ,0BAAY,KAAKyO,IAAL,CAAUxD,QAJV;AAKZ,0BAAY,KAAKwD,IAAL,CAAU7G,QALV;AAMZ,0BAAY,KAAK6G,IAAL,CAAUxL,QANV;AAOZ,4BAAczB,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD,CAPV;AAQZ,4BAAc,IAAI0O,IAAJ,GAAWC,WAAX,EARF;AASZ,2BAAanN,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD,CATT;AAUZ,2BAAa,IAAI0O,IAAJ,GAAWC,WAAX;AAVD,aAAd;AAcA,gBAAI7M,QAAM,GAAG;AACX2M,kBAAI,EAAElN;AADK,aAAb;AAIA,iBAAKnC,YAAL,CAAkB0P,UAAlB,CAA6BhN,QAA7B,EAAqCrB,SAArC,CAA+C,UAACC,GAAD,EAAa;AAE1D,kBAAGA,GAAG,CAACuB,OAAP,EAAgB;AAEd,uBAAI,CAACmM,YAAL,GAAoB,IAApB;;AACA,uBAAI,CAAC9O,aAAL,CAAmB4C,eAAnB,CAAmC,4BAAnC;;AAEA,uBAAI,CAAC2M,WAAL;AACD;AAEF,aAVD,EAUG,UAAAxM,KAAK,EAAI,CAEX,CAZD;AAcD;AAIF;AAjI6B;AAAA;AAAA,sCAmInB;AAAA;;AAET,cAAIP,MAAM,GAAG;AACXgB,uBAAW,EAAEtB,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADV,WAAb;AAID,eAAKZ,YAAL,CAAkB+D,wBAAlB,CAA2CrB,MAA3C,EAAmDrB,SAAnD,CAA6D,UAACC,GAAD,EAAa;AAEzE,mBAAI,CAAC2N,iBAAL,GAAyB,IAAzB;AAEE,mBAAI,CAACU,YAAL,GAAoBrO,GAAG,CAACP,MAAJ,CAAW,UAAAC,IAAI,EAAI;AACxC,qBAAOA,IAAI,CAAC6C,QAAZ;AACA,aAFqB,CAApB;AAIA,mBAAI,CAAC4K,UAAL,GAAkB,OAAI,CAACkB,YAAL,CAAkB3N,MAApC;;AAEA,gBAAG,OAAI,CAACyM,UAAL,GAAgB,OAAI,CAACvD,SAAxB,EAAkC;AAChC,qBAAI,CAACI,YAAL,GAAoB,OAAI,CAACJ,SAAzB;AACD,aAFD,MAIK;AACH,qBAAI,CAACI,YAAL,GAAoB,OAAI,CAACmD,UAAzB;AACD;AAGH,WAnBD,EAmBG,UAAAxL,KAAK,EAAI,CAEb,CArBC;AAuBA;AAhK6B;AAAA;AAAA,yCAkKbjC,IAlKa,EAkKP;AACrB,eAAKoO,YAAL,CAAkBQ,gBAAlB,CAAmC5O,IAAnC;AACD;AApK6B;AAAA;AAAA,kCAsKvB;AAAA;;AAEL,eAAKmO,UAAL,GAAkB,KAAlB;AACA,eAAKD,eAAL,GAAuB,KAAvB;AAEAW,oBAAU,CAAC,YAAM;AAEf,mBAAI,CAACX,eAAL,GAAuB,IAAvB;AAED,WAJS,EAIP,EAJO,CAAV;AAMAW,oBAAU,CAAC,YAAM;AAEf,gBAAIC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,CAAX;AACA,gBAAIC,QAAQ,GAAGH,IAAI,CAACI,qBAAL,GAA6BC,GAA7B,GAAmC,GAAlD;AAEA3E,kBAAM,CAAC4E,MAAP,CAAc;AACZD,iBAAG,EAAEF,QADO;AAEZI,sBAAQ,EAAE;AAFE,aAAd;AAKD,WAVS,EAUP,GAVO,CAAV;AAYD;AA7L6B;AAAA;AAAA,iCA+LrBnN,EA/LqB,EA+LnB;AAAA;;AAET,eAAKiM,UAAL,GAAkB,IAAlB;AACA,eAAKH,YAAL,GAAoB,KAApB;AAEA,eAAKhP,YAAL,CAAkBsQ,eAAlB,CAAkCpN,EAAlC,EAAsC7B,SAAtC,CAAgD,UAACC,GAAD,EAAa;AAE3D,mBAAI,CAAC0N,YAAL,GAAoB,IAApB;AACA,mBAAI,CAACK,IAAL,GAAY/N,GAAG,CAAC,CAAD,CAAf;AAEA,mBAAI,CAAC4N,eAAL,GAAuB,KAAvB;AAEAW,sBAAU,CAAC,YAAM;AAEf,qBAAI,CAACX,eAAL,GAAuB,IAAvB;AAED,aAJS,EAIP,EAJO,CAAV;AAMAW,sBAAU,CAAC,YAAM;AAEf,kBAAIC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,CAAX;AACA,kBAAIC,QAAQ,GAAGH,IAAI,CAACI,qBAAL,GAA6BC,GAA7B,GAAmC,GAAlD;AAEA3E,oBAAM,CAAC4E,MAAP,CAAc;AACZD,mBAAG,EAAEF,QADO;AAEZI,wBAAQ,EAAE;AAFE,eAAd;AAKD,aAVS,EAUP,GAVO,CAAV;AAaD,WA1BD,EA0BG,UAAApN,KAAK,EAAI,CAEX,CA5BD;AA+BD;AAnO6B;AAAA;AAAA,oCAqOrB;AACP,eAAKiM,eAAL,GAAuB,KAAvB;AACD;AAvO6B;AAAA;AAAA,mCAyOnB;AAAA;;AAEV,eAAKG,IAAL,GAAY,EAAZ;AAEA,eAAKI,WAAL,GAJU,CAOT;;AACA,eAAKvP,aAAL,CAAmBqQ,uBAAnB,CAA2ClP,SAA3C,CAAsD,UAAAL,IAAI,EAAI;AAE5D,gBAAGA,IAAI,IAAI,IAAX,EAAgB;AAEd,qBAAI,CAACiO,iBAAL,GAAyB,KAAzB;AAEA,kBAAIvM,MAAM,GAAG;AACXkJ,sBAAM,EAAE5K,IAAI,CAAC4K,MADF;AAEX4E,wBAAQ,EAAEpO,QAAQ,CAAC,OAAI,CAACjC,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD;AAFP,eAAb;;AAKA,qBAAI,CAACZ,YAAL,CAAkByQ,UAAlB,CAA6B/N,MAA7B,EAAqCrB,SAArC,CAA+C,UAACC,GAAD,EAAa;AAE1D,uBAAI,CAACqO,YAAL,GAAoB,OAAI,CAACA,YAAL,CAAkB5O,MAAlB,CAAyB,UAACwK,IAAD;AAAA,yBAAUA,IAAI,CAACK,MAAL,KAAgB5K,IAAI,CAAC4K,MAA/B;AAAA,iBAAzB,CAApB;;AACA,uBAAI,CAAC1L,aAAL,CAAmBwQ,sBAAnB,CAA0C,IAA1C;;AACA,uBAAI,CAACzB,iBAAL,GAAyB,IAAzB;AAED,eAND;AASD;AAEF,WAtBD;AAyBD;AA1Q6B;;AAAA;AAAA,OAAhC;;;;cAyBqB;;cACH;;cACO;;cACC;;cACA;;;;AA7BbJ,uBAAmB,6DAL/B,gEAAU;AACTpK,cAAQ,EAAE,iBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,wIAFS;;;;AAAA,KAAV,CAK+B,E,+EAyBX,sD,EACH,kE,EACO,0E,EACC,6E,EACA,gE,EA7BM,GAAnBmK,mBAAmB,CAAnB;;;;;;;;;;;;;;;;ACdb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACiBf,QAAa8B,2BAA2B;AAAA;AAAA;AAiCtC,2CACS3Q,YADT,EAEUC,aAFV,EAGUC,aAHV,EAIUC,aAJV,EAKUL,MALV,EAKuB;AAAA;;AAJd,aAAAE,YAAA,GAAAA,YAAA;AACC,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAL,MAAA,GAAAA,MAAA;AAlCV,aAAA8Q,iBAAA,GAA4B,KAA5B;AAEA,aAAA7F,aAAA,GAAuB,QAAvB;AACA,aAAAC,SAAA,GAAoB,IAApB;AAEA,aAAAC,cAAA,GAAqB,CAArB;AAGA,aAAAC,SAAA,GAAgB,EAAhB;AAEA,aAAA2F,SAAA,GAAmB,EAAnB;AASA,aAAAzF,aAAA,GAAuB,EAAvB;AACA,aAAAC,WAAA,GAAmB,EAAnB;AAMO,aAAA3I,MAAA,GAAS;AACdgB,qBAAW,EAAEtB,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADP,SAAT;AASF;;AAvCiC;AAAA;AAAA,uCAyCvB0F,KAzCuB,EAyClB;AAClB,eAAK2E,cAAL,GAAsB3E,KAAK,CAAC2E,cAA5B;AACA,eAAKK,YAAL,GAAoBhF,KAAK,CAACgF,YAA1B;AACA,eAAKJ,SAAL,GAAiB5E,KAAK,CAAC4E,SAAvB;AACD;AA7CqC;AAAA;AAAA,qCA+CzBK,IA/CyB,EA+CrB;AACf,eAAKR,aAAL,GAAqBQ,IAArB;AACA,eAAKP,SAAL,GAAiB,CAAC,KAAKA,SAAvB;AACD;AAlDqC;AAAA;AAAA,wCAoDtBO,IApDsB,EAoDhB;AACpB,cAAG,KAAKR,aAAL,IAAsBQ,IAAzB,EAA8B;AAC5B,mBAAO,KAAKP,SAAL,GAAiB,KAAjB,GAAyB,MAAhC;AACD,WAFD,MAGK,OAAO,EAAP;AACN;AAzDqC;AAAA;AAAA,uCA2DvBU,KA3DuB,EA2DlB;AAClB,eAAKN,aAAL,GAAqBM,KAArB;AACD;AA7DqC;AAAA;AAAA,uCA+DvBpF,KA/DuB,EA+DhBiF,IA/DgB,EA+DV3E,IA/DU,EA+DN;AAE9B,cAAG,CAAC,mDAAUN,KAAV,CAAJ,EAAqB;AACnB,iBAAK8E,aAAL,GAAqBG,IAArB;AACA,iBAAKF,WAAL,CAAiBE,IAAjB,IAAyBjF,KAAK,CAACM,IAAD,CAA9B;AACD,WAHD,MAIK;AACF,iBAAKyE,WAAL,GAAmB,EAAnB;AACF;AAEF;AAzEqC;AAAA;AAAA,uCA2EvB;AACb,iBAAOG,MAAM,CAACC,UAAP,IAAqB,GAArB,GAA2B,kBAA3B,GAAgD,EAAvD;AACD;AA7EqC;AAAA;AAAA,yCA+ErBvI,EA/EqB,EA+EnB;AAEjB,cAAIvB,IAAI,GAAG,kDAAU,KAAKyI,aAAf,EAA8B,UAAUpJ,IAAV,EAAc;AACrD,gBAAGA,IAAI,CAACa,aAAL,KAAuBqB,EAA1B,EACE,OAAOlC,IAAP;AACH,WAHU,CAAX;;AAKA,cAAGW,IAAI,KAAKI,SAAT,IAAsBJ,IAAI,CAACK,MAAL,IAAe,CAAxC,EAA0C;AACxC,mBAAO,EAAP;AACD,WAFD,MAGK;AACH,iBAAK8O,WAAL,GAAmBnP,IAAI,CAAC,CAAD,CAAJ,CAAQE,aAA3B;AACA,mBAAOF,IAAI,CAAC,CAAD,CAAJ,CAAQG,eAAR,CAAwBiP,WAAxB,EAAP;AACD;AAEF;AA9FqC;AAAA;AAAA,4CAgGlB7N,EAhGkB,EAgGd;AACtB,cAAG,KAAK4N,WAAL,IAAoB,GAAvB,EAA2B;AAEzB,gBAAInP,IAAI,GAAG,kDAAU,KAAKqP,wBAAf,EAAyC,UAAUhQ,IAAV,EAAc;AAClE,kBAAGA,IAAI,CAACa,aAAL,KAAuBqB,EAA1B,EACE,OAAOlC,IAAP;AACD,aAHU,CAAX;;AAIA,gBAAGW,IAAI,KAAKI,SAAT,IAAsBJ,IAAI,CAACK,MAAL,IAAe,CAAxC,EAA0C;AACxC,qBAAO,EAAP;AACD,aAFD,MAGK;AACH,qBAAOL,IAAI,CAAC,CAAD,CAAJ,CAAQG,eAAf;AACD;AAEF,WAbD,MAcK;AAEH,gBAAIH,IAAI,GAAG,kDAAU,KAAKsP,yBAAf,EAA0C,UAAUjQ,IAAV,EAAc;AACnE,kBAAGA,IAAI,CAACa,aAAL,KAAuBqB,EAA1B,EACE,OAAOlC,IAAP;AACD,aAHU,CAAX;;AAKA,gBAAGW,IAAI,KAAKI,SAAT,IAAsBJ,IAAI,CAACK,MAAL,IAAe,CAAxC,EAA0C;AACxC,qBAAO,EAAP;AACD,aAFD,MAGK;AACH,qBAAOL,IAAI,CAAC,CAAD,CAAJ,CAAQG,eAAf;AACD;AAEF;AAGF;AAhIqC;AAAA;AAAA,2CAiInB;AAAA;;AAEjB,cAAG,KAAK+O,SAAL,IAAkB,EAArB,EAAwB;AAEtB,gBAAI/E,WAAW,GAAG,IAAIC,GAAG,CAAChL,MAAR,EAAlB;AACA,gBAAIiL,kBAAkB,GAAG,CAAzB;AACA,gBAAIC,WAAW,GAAG,KAAK4E,SAAvB;AACA,gBAAI3E,eAAe,GAAG,UAAtB;AACA,gBAAIC,UAAU,GAAGL,WAAW,CAACM,YAAZ,CAAyB,cAAzB,EAAyCH,WAAzC,EAAsDC,eAAtD,CAAjB;AACAJ,uBAAW,CAACO,QAAZ,GAAuB,IAAvB;AACAP,uBAAW,CAACQ,SAAZ,CAAsBN,kBAAtB,EAA0CG,UAA1C;AAEA,iBAAKI,QAAL,CAAcC,0BAAd,CAAyC,KAAzC;AAEA,iBAAKC,UAAL,CAAgBC,OAAhB,CAAwB,UAAA1L,IAAI,EAAI;AAC9B,kBAAGA,IAAI,CAAC2L,SAAL,IAAkB,SAArB,EAAgC;AAC9B,uBAAI,CAACJ,QAAL,CAAcD,SAAd,CAAwBtL,IAAI,CAAC2L,SAA7B,EAAwCb,WAAxC,EAAqD,IAArD;AACD;AACF,aAJD;AAMA,iBAAKS,QAAL,CAAcK,YAAd;AAED,WApBD,MAqBK;AACH,iBAAKL,QAAL,CAAcM,YAAd;AACD;AAEF;AA5JqC;AAAA;AAAA,wCA8JtBC,MA9JsB,EA8Jd;AACtB,cAAIC,UAAU,GAAG,KAAKR,QAAL,CAAcS,UAAd,CAAyBF,MAAM,CAACG,KAAhC,CAAjB;AACA,cAAI7L,OAAO,GAAG2L,UAAU,CAAC3L,OAAzB;AACA,eAAKtB,MAAL,CAAYoN,aAAZ,CAA0B,2BAA2B9L,OAArD;AACD;AAlKqC;AAAA;AAAA,mCAoK3B;AAAA;;AAET,cAAI+L,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAMC,MAAN,EAAc3B,KAAd,EAAwB;AAC1C,mBAAO,wCAAwCA,KAAxC,GAAgD,QAAvD;AACD,WAFD;;AAIA,cAAI4B,cAAc,GAAG,SAAjBA,cAAiB,CAAC5B,KAAD,EAAW;AAC9B,mBAAO,gCAAgCA,KAAhC,GAAwC,QAA/C;AACD,WAFD;;AAKA,eAAKe,UAAL,GAAkB,CAAC;AACdc,gBAAI,EAAE,YADQ;AAEdZ,qBAAS,EAAE,UAFG;AAGda,iBAAK,EAAE,GAHO;AAId0D,kBAAM,EAAE,IAJM;AAKd/D,yBAAa,EAAEA,aALD;AAMdM,oBAAQ,EAAEH;AANI,WAAD,EAOd;AACCC,gBAAI,EAAE,UADP;AAECZ,qBAAS,EAAE,oBAFZ;AAGCQ,yBAAa,EAAEA,aAHhB;AAICO,oBAAQ,EAAE,EAJX;AAKCD,oBAAQ,EAAEH;AALX,WAPc,EAad;AACCC,gBAAI,EAAE,UADP;AAECZ,qBAAS,EAAE,sBAFZ;AAGCQ,yBAAa,EAAEA,aAHhB;AAICO,oBAAQ,EAAE,GAJX;AAKCD,oBAAQ,EAAEH;AALX,WAbc,EAmBd;AACCC,gBAAI,EAAE,cADP;AAECZ,qBAAS,EAAE,wBAFZ;AAGCQ,yBAAa,EAAEA,aAHhB;AAICO,oBAAQ,EAAE,GAJX;AAKCD,oBAAQ,EAAEH;AALX,WAnBc,EAyBd;AACCC,gBAAI,EAAE,cADP;AAECZ,qBAAS,EAAE,wBAFZ;AAGCQ,yBAAa,EAAEA,aAHhB;AAICO,oBAAQ,EAAE,EAJX;AAKCD,oBAAQ,EAAEH;AALX,WAzBc,EA+Bd;AACCC,gBAAI,EAAE,SADP;AAECM,sBAAU,EAAE,QAFb;AAGCC,iBAAK,EAAE,QAHR;AAICN,iBAAK,EAAE,GAJR;AAKCL,yBAAa,EAAE,uBAACC,GAAD,EAAyB;AACtC,qBAAO,mGAAkGA,GAAlG,GAAuG,wEAA9G;AACD,aAPF;AAQCK,oBAAQ,EAAEH;AARX,WA/Bc,CAAlB;AA2CD,eAAKtN,YAAL,CAAkB2D,yBAAlB,CAA4C,KAAKjB,MAAjD,EAAyDrB,SAAzD,CAAmE,UAACC,GAAD,EAAa;AAE/E;AACA,mBAAI,CAAC6P,aAAL,GAAqB7P,GAAG,CAACP,MAAJ,CAAW,UAAAY,IAAI,EAAI;AACtC,qBAAO,CAACA,IAAI,CAACkC,QAAb;AACD,aAFoB,CAArB;AAIA,mBAAI,CAACqK,cAAL,GAAsB;AACpBC,uBAAS,EAAE,OAAI,CAACgD,aADI;AAEpB/C,sBAAQ,EAAE;AAFU,aAAtB;AAIA,mBAAI,CAAC+C,aAAL,GAAqB,IAAIpF,GAAG,CAACsC,WAAR,CAAoB,OAAI,CAACH,cAAzB,CAArB;AACAvE,mBAAO,CAACC,GAAR,CAAY,wBAAZ,EAAqC,OAAI,CAACuH,aAA1C;AACA,mBAAI,CAAC1C,UAAL,GAAkB,OAAI,CAAC0C,aAAL,CAAmBnP,MAArC;;AAEA,gBAAG,OAAI,CAACyM,UAAL,GAAgB,OAAI,CAACvD,SAAxB,EAAkC;AAChC,qBAAI,CAACI,YAAL,GAAoB,OAAI,CAACJ,SAAzB;AACD,aAFD,MAIK;AACH,qBAAI,CAACI,YAAL,GAAoB,OAAI,CAACmD,UAAzB;AACD;;AAED,mBAAI,CAACmC,iBAAL,GAAyB,IAAzB;AAED,WAzBA;AA2BD,cAAIpH,WAAW,GAAG;AAChBpF,wBAAY,EAAE;AADE,WAAlB,CAjFW,CAqFT;;AACA,eAAKnE,aAAL,CAAmBoE,4BAAnB,CAAgDmF,WAAhD,EAA6DnI,SAA7D,CAAuE,UAACC,GAAD,EAAa;AAEjF,mBAAI,CAAC8I,aAAL,GAAqB9I,GAAG,CAACP,MAAJ,CAAY,UAAAC,IAAI,EAAI;AACtC,qBAAOA,IAAI,CAAC6C,QAAZ;AACF,aAFoB,CAArB;AAIF,WAND,EAOA,UAAAZ,KAAK,EAAI,CAER,CATD;AAYA,cAAImO,mBAAmB,GAAG;AACxBhN,wBAAY,EAAE;AADU,WAA1B,CAlGS,CAsGT;;AACA,eAAKnE,aAAL,CAAmBoE,4BAAnB,CAAgD+M,mBAAhD,EAAqE/P,SAArE,CAA+E,UAACC,GAAD,EAAa;AAEzF,mBAAI,CAAC0P,wBAAL,GAAgC1P,GAAG,CAACP,MAAJ,CAAY,UAAAC,IAAI,EAAI;AACjD,qBAAOA,IAAI,CAAC6C,QAAZ;AACF,aAF+B,CAAhC;AAIA8F,mBAAO,CAACC,GAAR,CAAY,OAAI,CAACoH,wBAAjB;AAEF,WARD,EASA,UAAA/N,KAAK,EAAI,CAER,CAXD;AAcA,cAAIoO,mBAAmB,GAAG;AACxBjN,wBAAY,EAAE;AADU,WAA1B,CArHS,CAyHT;;AACA,eAAKnE,aAAL,CAAmBoE,4BAAnB,CAAgDgN,mBAAhD,EAAqEhQ,SAArE,CAA+E,UAACC,GAAD,EAAa;AAEzF,mBAAI,CAAC2P,yBAAL,GAAiC3P,GAAG,CAACP,MAAJ,CAAY,UAAAC,IAAI,EAAI;AAClD,qBAAOA,IAAI,CAAC6C,QAAZ;AACD,aAF+B,CAAjC;AAIF,WAND,EAOA,UAAAZ,KAAK,EAAI,CAER,CATD;AAYD;AA1SqC;;AAAA;AAAA,OAAxC;;;;cAkCwB;;cACG;;cACD;;cACC;;cACR;;;;AAVyB,8DAAzC,gEAAU,UAAV,EAAsB;AAAE,gBAAQ;AAAV,KAAtB,CAAyC,E,wEAAU,8G,CAAV,G,qCAAA,E,UAAA,E,MAAA;AAkI1C,8DADC,mEAAa,wBAAb,EAAuC,CAAC,eAAD,CAAvC,CACD,E,iFAAA,E,uFAAA,E,qFAAA,G,qCAAA,E,iBAAA,E,IAAA;AA9JW0N,+BAA2B,6DALvC,gEAAU;AACTlM,cAAQ,EAAE,0BADD;AAETC,cAAQ,EAAR;AAAA;AAAA,0JAFS;;;;AAAA,KAAV,CAKuC,E,+EAkChB,0E,EACG,4E,EACD,6E,EACC,gE,EACR,sD,EAtCqB,GAA3BiM,2BAA2B,CAA3B;;AA8Sb,aAASW,aAAT,CAAuBlE,GAAvB,EAA0B;AACxB,UAAI9G,KAAK,GAAG,IAAIqI,WAAJ,CAAgB,iBAAhB,EAAmC;AAC7C7B,cAAM,EAAE;AACJG,eAAK,EAAEG;AADH;AADqC,OAAnC,CAAZ;AAKA5B,YAAM,CAACoD,aAAP,CAAqBtI,KAArB;AACD;;AACAkF,UAAc,CAAC8F,aAAf,GAA+BA,aAA/B;;;;;;;;;;;;;;;;ACvUD;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACoBf,QAAaC,2BAA2B;AAAA;AAAA;AAsCtC,2CACUzC,QADV,EAEU9O,YAFV,EAGUC,aAHV,EAIUC,aAJV,EAKUC,aALV,EAMUL,MANV,EAMuB;AAAA;;AALb,aAAAgP,QAAA,GAAAA,QAAA;AACA,aAAA9O,YAAA,GAAAA,YAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAL,MAAA,GAAAA,MAAA;AAxCV,aAAA8Q,iBAAA,GAA4B,KAA5B;AAEA,aAAA7F,aAAA,GAAuB,QAAvB;AACA,aAAAC,SAAA,GAAoB,IAApB;AAEA,aAAAC,cAAA,GAAqB,CAArB;AAGA,aAAAC,SAAA,GAAgB,EAAhB;AAGA,aAAA2F,SAAA,GAAmB,EAAnB;AAYA,aAAAzF,aAAA,GAAuB,EAAvB;AACA,aAAAC,WAAA,GAAmB,EAAnB;AAOO,aAAA3I,MAAA,GAAS;AAChBgB,qBAAW,EAAEtB,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADL,SAAT;AAWL,aAAKwO,YAAL,GAAoB,KAAKN,QAAL,CAAclO,GAAd,CAAkB,2EAAlB,CAApB;AACA;;AA/CoC;AAAA;AAAA,uCAiDvB0F,KAjDuB,EAiDlB;AAClB,eAAK2E,cAAL,GAAsB3E,KAAK,CAAC2E,cAA5B;AACA,eAAKK,YAAL,GAAoBhF,KAAK,CAACgF,YAA1B;AACA,eAAKJ,SAAL,GAAiB5E,KAAK,CAAC4E,SAAvB;AACD;AArDqC;AAAA;AAAA,qCAuDzBK,IAvDyB,EAuDrB;AACf,eAAKR,aAAL,GAAqBQ,IAArB;AACA,eAAKP,SAAL,GAAiB,CAAC,KAAKA,SAAvB;AACD;AA1DqC;AAAA;AAAA,wCA4DtBO,IA5DsB,EA4DhB;AACpB,cAAG,KAAKR,aAAL,IAAsBQ,IAAzB,EAA8B;AAC5B,mBAAO,KAAKP,SAAL,GAAiB,KAAjB,GAAyB,MAAhC;AACD,WAFD,MAGK,OAAO,EAAP;AACN;AAjEqC;AAAA;AAAA,uCAmEvBU,KAnEuB,EAmElB;AAClB,eAAKN,aAAL,GAAqBM,KAArB;AACD;AArEqC;AAAA;AAAA,uCAuEvBpF,KAvEuB,EAuEhBiF,IAvEgB,EAuEV3E,IAvEU,EAuEN;AAE9B,cAAG,CAAC,mDAAUN,KAAV,CAAJ,EAAqB;AACnB,iBAAK8E,aAAL,GAAqBG,IAArB;AACA,iBAAKF,WAAL,CAAiBE,IAAjB,IAAyBjF,KAAK,CAACM,IAAD,CAA9B;AACD,WAHD,MAIK;AACF,iBAAKyE,WAAL,GAAmB,EAAnB;AACF;AAEF;AAjFqC;AAAA;AAAA,uCAmFvB;AACb,iBAAOG,MAAM,CAACC,UAAP,IAAqB,GAArB,GAA2B,kBAA3B,GAAgD,EAAvD;AACD;AArFqC;AAAA;AAAA,yCAuFrBvI,EAvFqB,EAuFjB;AACnB,eAAKkM,YAAL,CAAkBQ,gBAAlB,CAAmC1M,EAAnC;AACD;AAzFqC;AAAA;AAAA,sCA2FxBsO,QA3FwB,EA2FhB;AACpB,iBAAO,mCAAM,CAACA,QAAD,CAAN,CAAiB7D,MAAjB,CAAwB,kBAAxB,CAAP;AACD;AA7FqC;AAAA;AAAA,yCA+FrBvG,KA/FqB,EA+FdlE,EA/Fc,EA+FZ;AAExB,cAAIvB,IAAI,GAAG,kDAAU,KAAKyI,aAAf,EAA8B,UAAUpJ,IAAV,EAAc;AACrD,gBAAGA,IAAI,CAACa,aAAL,KAAuBqB,EAA1B,EACE,OAAOlC,IAAP;AACH,WAHU,CAAX;;AAKA,cAAGW,IAAI,KAAKI,SAAT,IAAsBJ,IAAI,CAACK,MAAL,IAAe,CAAxC,EAA0C;AACxC,mBAAO,EAAP;AACD,WAFD,MAGK;AAEH,iBAAKmP,aAAL,CAAmBM,GAAnB,CAAuB,UAAAC,GAAG,EAAG;AAC3B,kBAAGA,GAAG,CAACtQ,OAAJ,IAAegG,KAAK,CAAChG,OAAxB,EAAgC;AAC9BsQ,mBAAG,CAACC,aAAJ,GAAoBhQ,IAAI,CAAC,CAAD,CAAJ,CAAQG,eAA5B;AACD;AACF,aAJD;AAMA,mBAAOH,IAAI,CAAC,CAAD,CAAJ,CAAQG,eAAR,CAAwBiP,WAAxB,EAAP;AACD;AAEF;AApHqC;AAAA;AAAA,4CAsHlB3J,KAtHkB,EAsHXlE,EAtHW,EAsHP;AAC7B,cAAG,KAAK4N,WAAL,IAAoB,GAAvB,EAA2B;AAEzB,gBAAInP,IAAI,GAAG,kDAAU,KAAKqP,wBAAf,EAAyC,UAAUhQ,IAAV,EAAc;AAClE,kBAAGA,IAAI,CAACa,aAAL,KAAuBqB,EAA1B,EACE,OAAOlC,IAAP;AACD,aAHU,CAAX;;AAIA,gBAAGW,IAAI,KAAKI,SAAT,IAAsBJ,IAAI,CAACK,MAAL,IAAe,CAAxC,EAA0C;AACxC,qBAAO,EAAP;AACD,aAFD,MAGK;AAEH,mBAAKmP,aAAL,CAAmBM,GAAnB,CAAuB,UAAAC,GAAG,EAAG;AAC3B,oBAAGA,GAAG,CAACtQ,OAAJ,IAAegG,KAAK,CAAChG,OAAxB,EAAgC;AAC9BsQ,qBAAG,CAACE,gBAAJ,GAAuBjQ,IAAI,CAAC,CAAD,CAAJ,CAAQG,eAA/B;AACD;AACF,eAJD;AAMA,qBAAOH,IAAI,CAAC,CAAD,CAAJ,CAAQG,eAAf;AACD;AAEF,WApBD,MAqBK;AAEH,gBAAIH,IAAI,GAAG,kDAAU,KAAKsP,yBAAf,EAA0C,UAAUjQ,IAAV,EAAc;AACnE,kBAAGA,IAAI,CAACa,aAAL,KAAuBqB,EAA1B,EACE,OAAOlC,IAAP;AACD,aAHU,CAAX;;AAKA,gBAAGW,IAAI,KAAKI,SAAT,IAAsBJ,IAAI,CAACK,MAAL,IAAe,CAAxC,EAA0C;AACxC,qBAAO,EAAP;AACD,aAFD,MAGK;AAEH,mBAAKmP,aAAL,CAAmBM,GAAnB,CAAuB,UAAAC,GAAG,EAAG;AAC3B,oBAAGA,GAAG,CAACtQ,OAAJ,IAAegG,KAAK,CAAChG,OAAxB,EAAgC;AAC9BsQ,qBAAG,CAACE,gBAAJ,GAAuBjQ,IAAI,CAAC,CAAD,CAAJ,CAAQG,eAA/B;AACD;AACF,eAJD;AAMA,qBAAOH,IAAI,CAAC,CAAD,CAAJ,CAAQG,eAAf;AACD;AAEF;AAGF;AApKqC;AAAA;AAAA,2CAsKnB;AAAA;;AAEjB,cAAG,KAAK+O,SAAL,IAAkB,EAArB,EAAwB;AAEtB,gBAAI/E,WAAW,GAAG,IAAIC,GAAG,CAAChL,MAAR,EAAlB;AACA,gBAAIiL,kBAAkB,GAAG,CAAzB;AACA,gBAAIC,WAAW,GAAG,KAAK4E,SAAvB;AACA,gBAAI3E,eAAe,GAAG,UAAtB;AACA,gBAAIC,UAAU,GAAGL,WAAW,CAACM,YAAZ,CAAyB,cAAzB,EAAyCH,WAAzC,EAAsDC,eAAtD,CAAjB;AACAJ,uBAAW,CAACO,QAAZ,GAAuB,IAAvB;AACAP,uBAAW,CAACQ,SAAZ,CAAsBN,kBAAtB,EAA0CG,UAA1C;AAEA,iBAAKI,QAAL,CAAcC,0BAAd,CAAyC,KAAzC;AAEA,iBAAKC,UAAL,CAAgBC,OAAhB,CAAwB,UAAA1L,IAAI,EAAI;AAC9B,kBAAGA,IAAI,CAAC2L,SAAL,IAAkB,SAArB,EAAgC;AAC9B,uBAAI,CAACJ,QAAL,CAAcD,SAAd,CAAwBtL,IAAI,CAAC2L,SAA7B,EAAwCb,WAAxC,EAAqD,IAArD;AACD;AACF,aAJD;AAMA,iBAAKS,QAAL,CAAcK,YAAd;AAED,WApBD,MAqBK;AACH,iBAAKL,QAAL,CAAcM,YAAd;AACD;AAEF;AAjMqC;AAAA;AAAA,wCAqMtBC,MArMsB,EAqMd;AACtB,cAAIC,UAAU,GAAG,KAAKR,QAAL,CAAcS,UAAd,CAAyBF,MAAM,CAACG,KAAhC,CAAjB;AACA,cAAI7L,OAAO,GAAG2L,UAAU,CAAC3L,OAAzB;AACA,eAAKtB,MAAL,CAAYoN,aAAZ,CAA0B,2BAA2B9L,OAArD;AACD;AAzMqC;AAAA;AAAA,yCA4MrB0L,MA5MqB,EA4Mb;AACvB,cAAIC,UAAU,GAAG,KAAKR,QAAL,CAAcS,UAAd,CAAyBF,MAAM,CAACG,KAAhC,CAAjB;AACA,cAAI7L,OAAO,GAAG2L,UAAU,CAAC3L,OAAzB;AACA,eAAKgO,YAAL,CAAkBQ,gBAAlB,CAAmCxO,OAAnC;AACD;AAhNqC;AAAA;AAAA,mCAiN3B;AAAA;;AAGT,cAAI+L,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAMC,MAAN,EAAc3B,KAAd,EAAwB;AAC1C,mBAAO,wCAAwCA,KAAxC,GAAgD,QAAvD;AACD,WAFD;;AAIA,cAAI4B,cAAc,GAAG,SAAjBA,cAAiB,CAAC5B,KAAD,EAAW;AAC9B,mBAAO,gCAAgCA,KAAhC,GAAwC,QAA/C;AACD,WAFD;;AAKA,eAAKe,UAAL,GAAkB,CAAC;AACdc,gBAAI,EAAE,YADQ;AAEdZ,qBAAS,EAAE,WAFG;AAGda,iBAAK,EAAE,GAHO;AAId0D,kBAAM,EAAE,IAJM;AAKd/D,yBAAa,EAAEA,aALD;AAMdM,oBAAQ,EAAEH;AANI,WAAD,EAOd;AACCC,gBAAI,EAAE,UADP;AAECZ,qBAAS,EAAE,SAFZ;AAGCQ,yBAAa,EAAEA,aAHhB;AAICO,oBAAQ,EAAE,EAJX;AAKCD,oBAAQ,EAAEH;AALX,WAPc,EAad;AACCC,gBAAI,EAAE,UADP;AAECZ,qBAAS,EAAE,qBAFZ;AAGCQ,yBAAa,EAAEA,aAHhB;AAICO,oBAAQ,EAAE,GAJX;AAKCD,oBAAQ,EAAEH;AALX,WAbc,EAmBd;AACCC,gBAAI,EAAE,cADP;AAECZ,qBAAS,EAAE,mBAFZ;AAGCQ,yBAAa,EAAEA,aAHhB;AAICO,oBAAQ,EAAE,GAJX;AAKCD,oBAAQ,EAAEH;AALX,WAnBc,EAyBd;AACCC,gBAAI,EAAE,SADP;AAECM,sBAAU,EAAE,QAFb;AAGCC,iBAAK,EAAE,QAHR;AAICN,iBAAK,EAAE,GAJR;AAKCL,yBAAa,EAAE,uBAACC,GAAD,EAAyB;AACtC,qBAAO,mGAAkGA,GAAlG,GAAuG,iIAAvG,GAA0OA,GAA1O,GAA+O,0EAAtP;AACD,aAPF;AAQCK,oBAAQ,EAAEH;AARX,WAzBc,CAAlB;AAqCA,eAAKtN,YAAL,CAAkB2D,yBAAlB,CAA4C,KAAKjB,MAAjD,EAAyDrB,SAAzD,CAAmE,UAACC,GAAD,EAAa;AAEhF;AACA,mBAAI,CAAC6P,aAAL,GAAqB7P,GAAG,CAACP,MAAJ,CAAW,UAAAY,IAAI,EAAI;AACtC,qBAAOA,IAAI,CAACkC,QAAZ;AACD,aAFoB,CAArB;AAIA,mBAAI,CAACqK,cAAL,GAAsB;AACpBC,uBAAS,EAAE,OAAI,CAACgD,aADI;AAEpB/C,sBAAQ,EAAE;AAFU,aAAtB;AAIA,mBAAI,CAAC+C,aAAL,GAAqB,IAAIpF,GAAG,CAACsC,WAAR,CAAoB,OAAI,CAACH,cAAzB,CAArB;AACAvE,mBAAO,CAACC,GAAR,CAAY,eAAZ,EAA4B,OAAI,CAACuH,aAAjC;AAEA,mBAAI,CAAC1C,UAAL,GAAkB,OAAI,CAAC0C,aAAL,CAAmBnP,MAArC;;AAEA,gBAAG,OAAI,CAACyM,UAAL,GAAgB,OAAI,CAACvD,SAAxB,EAAkC;AAChC,qBAAI,CAACI,YAAL,GAAoB,OAAI,CAACJ,SAAzB;AACD,aAFD,MAIK;AACH,qBAAI,CAACI,YAAL,GAAoB,OAAI,CAACmD,UAAzB;AACD;;AAED,mBAAI,CAACmC,iBAAL,GAAyB,IAAzB;AAED,WA1BC;AA4BA,cAAIpH,WAAW,GAAG;AAChBpF,wBAAY,EAAE;AADE,WAAlB,CA7ES,CAiFT;;AACA,eAAKnE,aAAL,CAAmBoE,4BAAnB,CAAgDmF,WAAhD,EAA6DnI,SAA7D,CAAuE,UAACC,GAAD,EAAa;AAEjF,mBAAI,CAAC8I,aAAL,GAAqB9I,GAAG,CAACP,MAAJ,CAAY,UAAAC,IAAI,EAAI;AACtC,qBAAOA,IAAI,CAAC6C,QAAZ;AACF,aAFoB,CAArB;AAIF,WAND,EAOA,UAAAZ,KAAK,EAAI,CAER,CATD;AAYA,cAAI4O,cAAc,GAAG;AACnBzN,wBAAY,EAAE;AADK,WAArB,CA9FS,CAkGT;;AACA,eAAKnE,aAAL,CAAmBoE,4BAAnB,CAAgDwN,cAAhD,EAAgExQ,SAAhE,CAA0E,UAACC,GAAD,EAAa;AAEpF,mBAAI,CAAC0P,wBAAL,GAAgC1P,GAAG,CAACP,MAAJ,CAAY,UAAAC,IAAI,EAAI;AACjD,qBAAOA,IAAI,CAAC6C,QAAZ;AACF,aAF+B,CAAhC;AAIA8F,mBAAO,CAACC,GAAR,CAAY,OAAI,CAACoH,wBAAjB;AAEF,WARD,EASA,UAAA/N,KAAK,EAAI,CAER,CAXD;AAcA,cAAI6O,sBAAsB,GAAG;AAC3B1N,wBAAY,EAAE;AADa,WAA7B,CAjHS,CAqHT;;AACA,eAAKnE,aAAL,CAAmBoE,4BAAnB,CAAgDyN,sBAAhD,EAAwEzQ,SAAxE,CAAkF,UAACC,GAAD,EAAa;AAE5F,mBAAI,CAAC2P,yBAAL,GAAiC3P,GAAG,CAACP,MAAJ,CAAY,UAAAC,IAAI,EAAI;AAClD,qBAAOA,IAAI,CAAC6C,QAAZ;AACD,aAF+B,CAAjC;AAIF,WAND,EAOA,UAAAZ,KAAK,EAAI,CAER,CATD,EAtHS,CAmIT;;AACA,eAAK/C,aAAL,CAAmBqQ,uBAAnB,CAA2ClP,SAA3C,CAAsD,UAAA6B,EAAE,EAAI;AAE1D,gBAAGA,EAAE,IAAI,IAAT,EAAc;AAEZ,kBAAIR,MAAM,GAAG;AACXtB,uBAAO,EAAE8B,EADE;AAEXsN,wBAAQ,EAAEpO,QAAQ,CAAC,OAAI,CAACjC,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD;AAFP,eAAb;;AAKA,qBAAI,CAACZ,YAAL,CAAkB+R,WAAlB,CAA8BrP,MAA9B,EAAsCrB,SAAtC,CAAgD,UAACC,GAAD,EAAa;AAE3D,gEAAO,OAAI,CAAC6P,aAAZ,EAA2B,UAAC5F,IAAD,EAAQ;AACjC,sBAAGA,IAAI,CAACnK,OAAL,IAAgB8B,EAAnB,EAAsB;AACpBqI,wBAAI,CAAC1H,QAAL,GAAgB,KAAhB;AACD;AACF,iBAJD;AAMAgM,0BAAU,CAAC,YAAM;AAEf,yBAAI,CAACsB,aAAL,GAAqB,OAAI,CAACA,aAAL,CAAmBpQ,MAAnB,CAA0B,UAACwK,IAAD;AAAA,2BAAUA,IAAI,CAACnK,OAAL,KAAiB8B,EAA3B;AAAA,mBAA1B,CAArB;AACA,yBAAI,CAACuL,UAAL,GAAkB,OAAI,CAAC0C,aAAL,CAAmBnP,MAArC;;AACA,yBAAI,CAAC9B,aAAL,CAAmB4C,eAAnB,CAAmC,eAAnC;;AACA,yBAAI,CAAC5C,aAAL,CAAmBwQ,sBAAnB,CAA0C,IAA1C;AAED,iBAPS,EAOP,GAPO,CAAV;AAUD,eAlBD,EAkBG,UAAAzN,KAAK,EAAI;AACV0G,uBAAO,CAACC,GAAR,CAAY3G,KAAZ;AACD,eApBD;AAuBD;AAEF,WAlCD;AAqCD;AA1XqC;;AAAA;AAAA,OAAxC;;;;cAuCsB;;cACG;;cACE;;cACD;;cACC;;cACR;;;;AAXyB,8DAAzC,gEAAU,UAAV,EAAsB;AAAE,gBAAQ;AAAV,KAAtB,CAAyC,E,wEAAU,+G,CAAV,G,qCAAA,E,UAAA,E,MAAA;AAoK1C,8DADC,mEAAa,wBAAb,EAAuC,CAAC,eAAD,CAAvC,CACD,E,iFAAA,E,uFAAA,E,qFAAA,G,qCAAA,E,iBAAA,E,IAAA;AAOA,8DADC,mEAAa,yBAAb,EAAwC,CAAC,eAAD,CAAxC,CACD,E,iFAAA,E,uFAAA,E,qFAAA,G,qCAAA,E,kBAAA,E,IAAA;AA5MWsO,+BAA2B,6DALvC,gEAAU;AACT9M,cAAQ,EAAE,0BADD;AAETC,cAAQ,EAAR;AAAA;AAAA,0JAFS;;;;AAAA,KAAV,CAKuC,E,+EAuClB,sD,EACG,0E,EACE,4E,EACD,6E,EACC,gE,EACR,sD,EA5CqB,GAA3B6M,2BAA2B,CAA3B;;AA+Xb,aAASD,aAAT,CAAuBlE,GAAvB,EAA0B;AACxB,UAAI9G,KAAK,GAAG,IAAIqI,WAAJ,CAAgB,iBAAhB,EAAmC;AAC7C7B,cAAM,EAAE;AACJG,eAAK,EAAEG;AADH;AADqC,OAAnC,CAAZ;AAKA5B,YAAM,CAACoD,aAAP,CAAqBtI,KAArB;AACD;;AACAkF,UAAc,CAAC8F,aAAf,GAA+BA,aAA/B;;AAED,aAASU,sBAAT,CAAgC5E,GAAhC,EAAmC;AACjC,UAAI9G,KAAK,GAAG,IAAIqI,WAAJ,CAAgB,kBAAhB,EAAoC;AAC9C7B,cAAM,EAAE;AACJG,eAAK,EAAEG;AADH;AADsC,OAApC,CAAZ;AAKA5B,YAAM,CAACoD,aAAP,CAAqBtI,KAArB;AACD;;AACAkF,UAAc,CAACwG,sBAAf,GAAwCA,sBAAxC;;;;;;;;;;;;;;;;ACraD;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOf,QAAaC,sBAAsB;AAAA;AAAA;AAEjC,wCAAc;AAAA;AAAG;;AAFgB;AAAA;AAAA,mCAItB,CACV;AALgC;;AAAA;AAAA,OAAnC;;AAAaA,0BAAsB,6DALlC,gEAAU;AACTxN,cAAQ,EAAE,oBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,8IAFS;;;;AAAA,KAAV,CAKkC,E,iFAAA,GAAtBuN,sBAAsB,CAAtB;;;;;;;;;;;;;;;;ACPb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOf,QAAaC,qBAAqB;AAAA;AAAA;AAEhC,uCAAc;AAAA;AAAG;;AAFe;AAAA;AAAA,mCAIrB,CACV;AAL+B;;AAAA;AAAA,OAAlC;;AAAaA,yBAAqB,6DALjC,gEAAU;AACTzN,cAAQ,EAAE,mBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,4IAFS;;;;AAAA,KAAV,CAKiC,E,iFAAA,GAArBwN,qBAAqB,CAArB;;;;;;;;;;;;;;;;ACPb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOf,QAAaC,qBAAqB;AAAA;AAAA;AAEhC,uCAAc;AAAA;AAAG;;AAFe;AAAA;AAAA,mCAIrB,CACV;AAL+B;;AAAA;AAAA,OAAlC;;AAAaA,yBAAqB,6DALjC,gEAAU;AACT1N,cAAQ,EAAE,mBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,4IAFS;;;;AAAA,KAAV,CAKiC,E,iFAAA,GAArByN,qBAAqB,CAArB;;;;;;;;;;;;;;;;ACPb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACgBf,QAAaC,mBAAmB;AAAA;AAAA;AAiC9B,mCACUtD,QADV,EAESC,MAFT,EAGS9O,aAHT,EAIUC,aAJV,EAKUC,aALV,EAKqC;AAAA;;AAJ3B,aAAA2O,QAAA,GAAAA,QAAA;AACD,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAA9O,aAAA,GAAAA,aAAA;AACC,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AApCV,aAAAkS,mBAAA,GAA6B,EAA7B;AAGA,aAAAC,oBAAA,GAA8B,EAA9B;AAGA,aAAAC,oBAAA,GAA+B,KAA/B;AAMA,aAAAxH,aAAA,GAAuB,QAAvB;AACA,aAAAC,SAAA,GAAoB,IAApB;AAEA,aAAAwH,aAAA,GAAwB,KAAxB;AAEA,aAAAC,SAAA,GAAmB,EAAnB;AAEA,aAAAd,aAAA,GAAuB,EAAvB;AAGA,aAAAe,iBAAA,GAA2B,EAA3B;AAEA,aAAA1P,YAAA,GAAsB,EAAtB;AACA,aAAA2P,OAAA,GAAkB,KAAlB;AAGA,aAAAC,mBAAA,GAA8B,KAA9B;AAUE,aAAKxD,YAAL,GAAoB,KAAKN,QAAL,CAAclO,GAAd,CAAkB,2EAAlB,CAApB;AACD;;AAzC6B;AAAA;AAAA,qCA2CjB2K,IA3CiB,EA2Cb;AACf,eAAKR,aAAL,GAAqBQ,IAArB;AACA,eAAKP,SAAL,GAAiB,CAAC,KAAKA,SAAvB;AACD;AA9C6B;AAAA;AAAA,wCAgDdO,IAhDc,EAgDR;AACpB,cAAG,KAAKR,aAAL,IAAsBQ,IAAzB,EAA8B;AAC5B,mBAAO,KAAKP,SAAL,GAAiB,KAAjB,GAAyB,MAAhC;AACD,WAFD,MAGK,OAAO,EAAP;AACN;AArD6B;AAAA;AAAA,uCAuDf;AACb,iBAAOQ,MAAM,CAACC,UAAP,IAAqB,GAArB,GAA2B,kBAA3B,GAAgD,EAAvD;AACD;AAzD6B;AAAA;AAAA,yCA2DbrF,KA3Da,EA2DN;AACtB,eAAKgJ,YAAL,CAAkBQ,gBAAlB,CAAmCxJ,KAAnC;AACD;AA7D6B;AAAA;AAAA,0CA+DZyM,QA/DY,EA+DF;AAE1B,eAAKD,mBAAL,GAA2B,IAA3B;AACA,eAAKjB,aAAL,GAAqBkB,QAAQ,CAAC/Q,eAA9B;AACA,eAAKN,eAAL,GAAuBqR,QAAQ,CAAChR,aAAhC;AAGD;AAtE6B;AAAA;AAAA,wCAwEdK,IAxEc,EAwER;AAAA;;AAEpB,eAAKyQ,OAAL,GAAe,KAAf,CAFoB,CAKpB;;AACA,cAAG,KAAKF,SAAL,IAAkB,KAArB,EAA2B;AAEzB,iBAAK3B,WAAL,GAAmB,EAAnB;AAEA,gBAAIgC,iBAAiB,GAAG,gDAAQ,KAAKT,mBAAb,EAAkC,UAAArR,IAAI,EAAI;AAChE,qBAAOA,IAAI,CAACc,eAAL,KAAyB,OAAI,CAAC6P,aAArC;AACD,aAFuB,CAAxB;;AAIA,gBAAGmB,iBAAH,EAAsB;AACpB,mBAAKH,OAAL,GAAe,IAAf;AACA,mBAAK3P,YAAL,GAAoB,4BAApB;AACA,mBAAKwP,aAAL,GAAqB,IAArB;AACD,aAJD,MAKK;AAEH,mBAAKA,aAAL,GAAqB,KAArB;;AAEA,kBAAG,CAAC,KAAKI,mBAAT,EAA8B;AAE5B,oBAAIzQ,OAAO,GAAG;AAEZ,kCAAgB,KAAK2O,WAFT;AAGZ,qCAAmB,KAAKa,aAHZ;AAIZ,iCAAe,KAAKA,aAJR;AAKZ,8BAAY,IALA;AAMZ,gCAAcvP,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD,CANV;AAOZ,gCAAc,0BAPF;AAQZ,+BAAa,CARD;AASZ,+BAAa;AATD,iBAAd;AAaA,oBAAI8B,MAAM,GAAG;AACXqQ,6BAAW,EAAE5Q;AADF,iBAAb;AAIA,qBAAKlC,aAAL,CAAmB+S,cAAnB,CAAkCtQ,MAAlC,EAA0CrB,SAA1C,CAAoD,UAACC,GAAD,EAAa;AAG7D,yBAAI,CAACkR,aAAL,GAAqB,IAArB;AACA,yBAAI,CAACD,oBAAL,GAA4B,KAA5B;AAEA,sBAAI7P,MAAM,GAAG;AACX0B,gCAAY,EAAE,OAAI,CAAC0M;AADR,mBAAb;;AAIA,yBAAI,CAAC7Q,aAAL,CAAmBoE,4BAAnB,CAAgD3B,MAAhD,EAAwDrB,SAAxD,CAAkE,UAACC,GAAD,EAAa;AAE5E,wBAAI2R,uBAAuB,GAAG3R,GAAG,CAACP,MAAJ,CAAW,UAAAC,IAAI,EAAI;AAChD,6BAAOA,IAAI,CAAC6C,QAAZ;AACA,qBAF6B,CAA9B;AAIA,2BAAI,CAACoP,uBAAL,GAA+BA,uBAA/B;AACA,2BAAI,CAACV,oBAAL,GAA4B,IAA5B;AAGF,mBAVD,EAWA,UAAAtP,KAAK,EAAI,CAER,CAbD;AAgBL,iBA1BC,EA2BF,UAAAA,KAAK,EAAI,CAER,CA7BC;AAgCD,eAnDD,MAqDK;AAEH,oBAAId,SAAO,GAAG;AAEZ,mCAAiB,KAAKX,eAFV;AAGZ,kCAAgB,KAAKsP,WAHT;AAIZ,qCAAmB,KAAKa,aAJZ;AAKZ,iCAAe,KAAKA,aALR;AAMZ,8BAAY,IANA;AAOZ,gCAAc,CAPF;AAQZ,gCAAc,0BARF;AASZ,+BAAavP,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD,CATT;AAUZ,+BAAa;AAVD,iBAAd;AAcA,oBAAI8B,QAAM,GAAG;AACXqQ,6BAAW,EAAE5Q;AADF,iBAAb;AAIA,qBAAKlC,aAAL,CAAmBiT,iBAAnB,CAAqCxQ,QAArC,EAA6CrB,SAA7C,CAAuD,UAACC,GAAD,EAAa;AAGhE,yBAAI,CAACkR,aAAL,GAAqB,IAArB;AACA,yBAAI,CAACD,oBAAL,GAA4B,KAA5B;AACA,yBAAI,CAACK,mBAAL,GAA2B,KAA3B;AAEA,sBAAIlQ,MAAM,GAAG;AACX0B,gCAAY,EAAE,OAAI,CAAC0M;AADR,mBAAb;;AAIA,yBAAI,CAAC7Q,aAAL,CAAmBoE,4BAAnB,CAAgD3B,MAAhD,EAAwDrB,SAAxD,CAAkE,UAACC,GAAD,EAAa;AAE5E,wBAAI2R,uBAAuB,GAAG3R,GAAG,CAACP,MAAJ,CAAW,UAAAC,IAAI,EAAI;AAChD,6BAAOA,IAAI,CAAC6C,QAAZ;AACA,qBAF6B,CAA9B;AAIA,2BAAI,CAACoP,uBAAL,GAA+BA,uBAA/B;AACA,2BAAI,CAACV,oBAAL,GAA4B,IAA5B;AAGF,mBAVD,EAWA,UAAAtP,KAAK,EAAI,CAER,CAbD;AAgBH,iBA3BD,EA4BA,UAAAA,KAAK,EAAI,CAER,CA9BD;AAkCD;AAGF;AAGF,WAlID,MAmIK;AAEH,iBAAK6N,WAAL,GAAmB,EAAnB;AAEA,gBAAIgC,iBAAiB,GAAG,gDAAQ,KAAKR,oBAAb,EAAmC,UAAAtR,IAAI,EAAI;AACjE,qBAAOA,IAAI,CAACc,eAAL,KAAyB,OAAI,CAAC6P,aAArC;AACD,aAFuB,CAAxB;;AAIA,gBAAGmB,iBAAH,EAAsB;AACpB,mBAAKH,OAAL,GAAe,IAAf;AACA,mBAAK3P,YAAL,GAAoB,4BAApB;AACA,mBAAKwP,aAAL,GAAqB,IAArB;AACD,aAJD,MAMK;AAED,mBAAKA,aAAL,GAAqB,KAArB;;AAEC,kBAAG,CAAC,KAAKI,mBAAT,EAA8B;AAE3B,oBAAIzQ,SAAO,GAAG;AAEZ,kCAAgB,KAAK2O,WAFT;AAGZ,qCAAmB,KAAKa,aAHZ;AAIZ,iCAAe,KAAKA,aAJR;AAKZ,8BAAY,IALA;AAMZ,gCAAcvP,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD,CANV;AAOZ,gCAAc,0BAPF;AAQZ,+BAAa,CARD;AASZ,+BAAa;AATD,iBAAd;AAaA,oBAAI8B,QAAM,GAAG;AACXqQ,6BAAW,EAAE5Q;AADF,iBAAb;AAIA,qBAAKlC,aAAL,CAAmB+S,cAAnB,CAAkCtQ,QAAlC,EAA0CrB,SAA1C,CAAoD,UAACC,GAAD,EAAa;AAG7D,yBAAI,CAACkR,aAAL,GAAqB,IAArB;AACA,yBAAI,CAACD,oBAAL,GAA4B,KAA5B;AAEA,sBAAI7P,MAAM,GAAG;AACX0B,gCAAY,EAAE,OAAI,CAAC0M;AADR,mBAAb;;AAIA,yBAAI,CAAC7Q,aAAL,CAAmBoE,4BAAnB,CAAgD3B,MAAhD,EAAwDrB,SAAxD,CAAkE,UAACC,GAAD,EAAa;AAE5E,wBAAI6R,wBAAwB,GAAG7R,GAAG,CAACP,MAAJ,CAAW,UAAAC,IAAI,EAAI;AAChD,6BAAOA,IAAI,CAAC6C,QAAZ;AACD,qBAF8B,CAA/B;AAIA,2BAAI,CAACsP,wBAAL,GAAgCA,wBAAhC;AACA,2BAAI,CAACZ,oBAAL,GAA4B,IAA5B;AAGF,mBAVD,EAWA,UAAAtP,KAAK,EAAI,CAER,CAbD;AAgBH,iBA1BD,EA2BA,UAAAA,KAAK,EAAI,CAER,CA7BD;AAiCF,eApDD,MAsDK;AAEH,oBAAId,SAAO,GAAG;AAEb,mCAAiB,KAAKX,eAFT;AAGb,kCAAgB,KAAKsP,WAHR;AAIb,qCAAmB,KAAKa,aAJX;AAKb,iCAAe,KAAKA,aALP;AAMb,8BAAY,IANC;AAOb,gCAAc,CAPD;AAQb,gCAAc,0BARD;AASb,+BAAavP,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD,CATR;AAUb,+BAAa;AAVA,iBAAd;AAcD,oBAAI8B,QAAM,GAAG;AACXqQ,6BAAW,EAAE5Q;AADF,iBAAb;AAIA,qBAAKlC,aAAL,CAAmBiT,iBAAnB,CAAqCxQ,QAArC,EAA6CrB,SAA7C,CAAuD,UAACC,GAAD,EAAa;AAG9D,yBAAI,CAACkR,aAAL,GAAqB,IAArB;AACA,yBAAI,CAACD,oBAAL,GAA4B,KAA5B;AACA,yBAAI,CAACK,mBAAL,GAA2B,KAA3B;AAEA,sBAAIlQ,MAAM,GAAG;AACX0B,gCAAY,EAAE,OAAI,CAAC0M;AADR,mBAAb;;AAIA,yBAAI,CAAC7Q,aAAL,CAAmBoE,4BAAnB,CAAgD3B,MAAhD,EAAwDrB,SAAxD,CAAkE,UAACC,GAAD,EAAa;AAE5E,wBAAI6R,wBAAwB,GAAG7R,GAAG,CAACP,MAAJ,CAAW,UAAAC,IAAI,EAAI;AAChD,6BAAOA,IAAI,CAAC6C,QAAZ;AACD,qBAF8B,CAA/B;AAIA,2BAAI,CAACsP,wBAAL,GAAgCA,wBAAhC;AACA,2BAAI,CAACZ,oBAAL,GAA4B,IAA5B;AAGF,mBAVD,EAWA,UAAAtP,KAAK,EAAI,CAER,CAbD;AAgBL,iBA3BD,EA4BA,UAAAA,KAAK,EAAI,CAER,CA9BD;AAkCA;AAEH;AAEJ;AAIF;AAvV6B;AAAA;AAAA,mCAyVnB;AAAA;;AAET,cAAIP,MAAM,GAAG;AACX0B,wBAAY,EAAE;AADH,WAAb,CAFS,CAMT;;AACE,eAAKnE,aAAL,CAAmBoE,4BAAnB,CAAgD3B,MAAhD,EAAwDrB,SAAxD,CAAkE,UAACC,GAAD,EAAa;AAE7E,mBAAI,CAAC4F,iBAAL,GAAyB5F,GAAzB;AAEA,mBAAI,CAACkR,aAAL,GAAqB,IAArB;AAGD,WAPD,EAQA,UAAAvP,KAAK,EAAI,CAER,CAVD;AAaF,cAAIoH,cAAc,GAAG;AACnBjG,wBAAY,EAAE;AADK,WAArB,CApBS,CAwBV;;AACC,eAAKnE,aAAL,CAAmBoE,4BAAnB,CAAgDgG,cAAhD,EAAgEhJ,SAAhE,CAA0E,UAACC,GAAD,EAAa;AAErF,gBAAI2R,uBAAuB,GAAG3R,GAAG,CAACP,MAAJ,CAAW,UAAAC,IAAI,EAAI;AAC/C,qBAAOA,IAAI,CAAC6C,QAAZ;AACD,aAF6B,CAA9B;AAKA,mBAAI,CAACoP,uBAAL,GAA+BA,uBAA/B;AAEA,gBAAIG,sBAAsB,GAAG;AAC3BhP,0BAAY,EAAE;AADa,aAA7B,CATqF,CAarF;;AACA,mBAAI,CAACnE,aAAL,CAAmBoE,4BAAnB,CAAgD+O,sBAAhD,EAAwE/R,SAAxE,CAAkF,UAACC,GAAD,EAAa;AAE7F,kBAAI6R,wBAAwB,GAAG7R,GAAG,CAACP,MAAJ,CAAW,UAAAC,IAAI,EAAI;AAChD,uBAAOA,IAAI,CAAC6C,QAAZ;AACD,eAF8B,CAA/B;AAIA,qBAAI,CAACsP,wBAAL,GAAgCA,wBAAhC;AAEA,qBAAI,CAACZ,oBAAL,GAA4B,IAA5B;AAGD,aAXD,EAYA,UAAAtP,KAAK,EAAI,CAER,CAdD;AAkBD,WAhCD,EAiCA,UAAAA,KAAK,EAAI,CAER,CAnCD,EAzBS,CAgET;;AACA,eAAK/C,aAAL,CAAmBqQ,uBAAnB,CAA2ClP,SAA3C,CAAsD,UAAA+E,KAAK,EAAI;AAE7D,gBAAGA,KAAK,IAAI,IAAZ,EAAiB;AAEf,kBAAG,OAAI,CAACsM,iBAAL,IAA0B,KAA7B,EAAmC;AAEjC,oBAAIhQ,MAAM,GAAG;AACXb,+BAAa,EAAE,OAAI,CAACoR,uBAAL,CAA6B7M,KAA7B,EAAoCvE,aADxC;AAEXwR,8BAAY,EAAEjR,QAAQ,CAAC,OAAI,CAACjC,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD;AAFX,iBAAb;AAKD,eAPD,MAQK;AAEH,oBAAI8B,MAAM,GAAG;AACXb,+BAAa,EAAE,OAAI,CAACsR,wBAAL,CAA8B/M,KAA9B,EAAqCvE,aADzC;AAEXwR,8BAAY,EAAEjR,QAAQ,CAAC,OAAI,CAACjC,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD;AAFX,iBAAb;AAKD;;AAGD,qBAAI,CAAC2R,oBAAL,GAA4B,KAA5B;;AAEA,qBAAI,CAACtS,aAAL,CAAmBqT,iBAAnB,CAAqC5Q,MAArC,EAA6CrB,SAA7C,CAAuD,UAACC,GAAD,EAAa;AAElE,oBAAG,OAAI,CAACoR,iBAAL,IAA0B,KAA7B,EAAmC;AACjC,yBAAI,CAACO,uBAAL,CAA6B9M,MAA7B,CAAoCC,KAApC,EAA2C,CAA3C;AACD,iBAFD,MAGK;AACH,yBAAI,CAAC+M,wBAAL,CAA8BhN,MAA9B,CAAqCC,KAArC,EAA4C,CAA5C;AACD;;AACD,uBAAI,CAACmM,oBAAL,GAA4B,IAA5B;;AACA,uBAAI,CAACrS,aAAL,CAAmBwQ,sBAAnB,CAA0C,IAA1C;AAED,eAXD,EAWG,UAAAzN,KAAK,EAAI;AACV0G,uBAAO,CAACC,GAAR,CAAY3G,KAAZ;AACD,eAbD;AAgBD;AAEF,WA1CD;AA4CD;AAtc6B;;AAAA;AAAA,OAAhC;;;;cAkCsB;;cACH;;cACO;;cACA;;cACA;;;;AAtCbmP,uBAAmB,6DAL/B,gEAAU;AACT3N,cAAQ,EAAE,iBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,wIAFS;;;;AAAA,KAAV,CAK+B,E,+EAkCV,sD,EACH,kE,EACO,4E,EACA,6E,EACA,gE,EAtCM,GAAnB0N,mBAAmB,CAAnB;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACkBf,QAAamB,oBAAoB;AAAA;AAAA;AAiC/B,oCACUzE,QADV,EAESC,MAFT,EAGU/O,YAHV,EAISC,aAJT,EAKUC,aALV,EAMUC,aANV,EAMqC;AAAA;;AAL3B,aAAA2O,QAAA,GAAAA,QAAA;AACD,aAAAC,MAAA,GAAAA,MAAA;AACC,aAAA/O,YAAA,GAAAA,YAAA;AACD,aAAAC,aAAA,GAAAA,aAAA;AACC,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AArCV,aAAAqT,cAAA,GAAyB,IAAzB;AAEA,aAAAC,kBAAA,GAA6B,KAA7B;AAMA,aAAAxS,WAAA,GAAqB,EAArB;AACA,aAAAyS,cAAA,GAAqB,EAArB;AACA,aAAAC,aAAA,GAAuB,CAAvB;AAGA,aAAAC,SAAA,GAAmB,EAAnB;AAEA,aAAAnT,SAAA,GAAmB,EAAnB;AAEA,aAAAoT,WAAA,GAAsB,KAAtB;AAEA,aAAA9I,aAAA,GAAuB,QAAvB;AACA,aAAAC,SAAA,GAAoB,IAApB;AAEA,aAAAC,cAAA,GAAqB,CAArB;AAGA,aAAAC,SAAA,GAAgB,EAAhB;AAEA,aAAA4I,gBAAA,GAA2B,KAA3B;AAYE,aAAK1E,YAAL,GAAoB,KAAKN,QAAL,CAAclO,GAAd,CAAkB,2EAAlB,CAApB;AACD;;AA1C8B;AAAA;AAAA,uCA4ChB;AACb,iBAAO4K,MAAM,CAACC,UAAP,IAAqB,GAArB,GAA2B,kBAA3B,GAAgD,EAAvD;AACD;AA9C8B;AAAA;AAAA,qCAgDlBvI,EAhDkB,EAgDd;AAEf,cAAIvB,IAAI,GAAG,kDAAU,KAAK2C,aAAf,EAA8B,UAAUtD,IAAV,EAAc;AACrD,gBAAGA,IAAI,CAACa,aAAL,KAAuBqB,EAA1B,EACE,OAAOlC,IAAP;AACH,WAHU,CAAX;;AAKA,cAAGW,IAAI,KAAKI,SAAT,IAAsBJ,IAAI,CAACK,MAAL,IAAe,CAAxC,EAA0C;AACxC,mBAAO,EAAP;AACD,WAFD,MAGK;AACH,iBAAKvB,SAAL,GAAiBkB,IAAI,CAAC,CAAD,CAAJ,CAAQG,eAAzB;AACA,mBAAOH,IAAI,CAAC,CAAD,CAAJ,CAAQG,eAAR,CAAwBiP,WAAxB,EAAP;AACD;AAEF;AA/D8B;AAAA;AAAA,uCAiEhBzK,KAjEgB,EAiEX;AAClB,eAAK2E,cAAL,GAAsB3E,KAAK,CAAC2E,cAA5B;AACA,eAAKK,YAAL,GAAoBhF,KAAK,CAACgF,YAA1B;AACA,eAAKJ,SAAL,GAAiB5E,KAAK,CAAC4E,SAAvB;AACD;AArE8B;AAAA;AAAA,qCAuElBK,IAvEkB,EAuEd;AACf,eAAKR,aAAL,GAAqBQ,IAArB;AACA,eAAKP,SAAL,GAAiB,CAAC,KAAKA,SAAvB;AACD;AA1E8B;AAAA;AAAA,wCA4EfO,IA5Ee,EA4ET;AACpB,cAAG,KAAKR,aAAL,IAAsBQ,IAAzB,EAA8B;AAC5B,mBAAO,KAAKP,SAAL,GAAiB,KAAjB,GAAyB,MAAhC;AACD,WAFD,MAGK,OAAO,EAAP;AACN;AAjF8B;AAAA;AAAA,yCAmFd9I,IAnFc,EAmFR;AAAA;;AAErB,eAAKsR,cAAL,GAAsB,KAAtB;;AAEA,cAAG,CAAC,KAAKK,WAAT,EAAsB;AAEpB,gBAAI1R,OAAO,GAAG;AAEZ,6BAAeC,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD,CAFX;AAGZ,6BAAewB,QAAQ,CAAC,KAAKnB,WAAN,CAHX;AAIZ,2BAAa,mCAAM,CAAC,KAAKyS,cAAN,CAAN,CAA4B/F,MAA5B,CAAmC,OAAnC,CAJD;AAKZ,4BAAc,KAAKgG,aALP;AAMZ,0BAAY,IANA;AAOZ,4BAAcvR,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD,CAPV;AAQZ,4BAAc,IAAI0O,IAAJ,GAAWC,WAAX,EARF;AASZ,2BAAa,CATD;AAUZ,2BAAa;AAVD,aAAd;AAcA,gBAAI7M,MAAM,GAAG;AACXqR,mBAAK,EAAE5R;AADI,aAAb;AAIA,iBAAKnC,YAAL,CAAkBgU,QAAlB,CAA2BtR,MAA3B,EAAmCrB,SAAnC,CAA6C,UAACC,GAAD,EAAa;AAExD,kBAAGA,GAAG,CAACuB,OAAP,EAAgB;AAEd,uBAAI,CAAC2Q,cAAL,GAAsB,IAAtB;;AACA,uBAAI,CAACtT,aAAL,CAAmB4C,eAAnB,CAAmC,2BAAnC;;AAEA,uBAAI,CAACmR,YAAL;AACD;AAEF,aAVD,EAWA,UAAAhR,KAAK,EAAI,CAER,CAbD;AAgBF,WApCA,MAqCI;AAEH,gBAAId,SAAO,GAAG;AACX,yBAAW,KAAKM,OADL;AAEX,6BAAeL,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD,CAFZ;AAGX,6BAAewB,QAAQ,CAAC,KAAKnB,WAAN,CAHZ;AAIX,2BAAa,mCAAM,CAAC,KAAKyS,cAAN,CAAN,CAA4B/F,MAA5B,CAAmC,OAAnC,CAJF;AAKX,4BAAc,KAAKgG,aALR;AAMX,0BAAY,IAND;AAOX,4BAAc,CAPH;AAQX,4BAAc,IAAIrE,IAAJ,GAAWC,WAAX,EARH;AASX,2BAAanN,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD,CATV;AAUX,2BAAa,IAAI0O,IAAJ,GAAWC,WAAX;AAVF,aAAd;AAcC,gBAAI7M,QAAM,GAAG;AACXqR,mBAAK,EAAE5R;AADI,aAAb;AAIA,iBAAKnC,YAAL,CAAkBkU,WAAlB,CAA8BxR,QAA9B,EAAsCrB,SAAtC,CAAgD,UAACC,GAAD,EAAa;AAE3D,kBAAGA,GAAG,CAACuB,OAAP,EAAgB;AACd,uBAAI,CAAC2Q,cAAL,GAAsB,IAAtB;;AACA,uBAAI,CAACtT,aAAL,CAAmB4C,eAAnB,CAAmC,6BAAnC;;AAEA,uBAAI,CAACmR,YAAL;AACD;AAEF,aATD,EAUA,UAAAhR,KAAK,EAAI,CAER,CAZD;AAeF;AAGD;AAlK8B;AAAA;AAAA,mCAoKvB;AAAA;;AAEN,eAAK4Q,WAAL,GAAmB,KAAnB;AACA,eAAKC,gBAAL,GAAwB,KAAxB;AAEAjE,oBAAU,CAAC,YAAM;AAEf,mBAAI,CAACiE,gBAAL,GAAwB,IAAxB;AAED,WAJS,EAIP,EAJO,CAAV;AAMAjE,oBAAU,CAAC,YAAM;AAEf,gBAAIC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,CAAX;AACA,gBAAIC,QAAQ,GAAGH,IAAI,CAACI,qBAAL,GAA6BC,GAA5C;AAEA3E,kBAAM,CAAC4E,MAAP,CAAc;AACZD,iBAAG,EAAEF,QADO;AAEZI,sBAAQ,EAAE;AAFE,aAAd;AAKD,WAVS,EAUP,EAVO,CAAV;AAYD;AA3L8B;AAAA;AAAA,kCA6LrB0D,KA7LqB,EA6LhB;AAAA;;AAEb,eAAKD,gBAAL,GAAwB,KAAxB;AAEAjE,oBAAU,CAAC,YAAM;AACf,mBAAI,CAACiE,gBAAL,GAAwB,IAAxB;AACD,WAFS,EAEP,EAFO,CAAV;AAIA,eAAKD,WAAL,GAAmB,IAAnB;AACA,eAAK5S,WAAL,GAAmB8S,KAAK,CAAC9S,WAAzB;AACA,eAAKyS,cAAL,GAAsB,mCAAM,CAACK,KAAK,CAACI,SAAP,EAAkB,OAAlB,CAAN,CAAiCC,MAAjC,EAAtB;AACA,eAAKT,aAAL,GAAqBI,KAAK,CAACM,UAA3B;AACA,eAAK5R,OAAL,GAAesR,KAAK,CAACtR,OAArB;AAEAoN,oBAAU,CAAC,YAAM;AAEf,gBAAIC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,CAAX;AACA,gBAAIC,QAAQ,GAAGH,IAAI,CAACI,qBAAL,GAA6BC,GAA7B,GAAmC,GAAlD;AAEA3E,kBAAM,CAAC4E,MAAP,CAAc;AACZD,iBAAG,EAAEF,QADO;AAEZI,sBAAQ,EAAE;AAFE,aAAd;AAKD,WAVS,EAUP,GAVO,CAAV;AAYD;AAvN8B;AAAA;AAAA,qCAyNrB;AACR,eAAKyD,gBAAL,GAAwB,KAAxB;AACD;AA3N8B;AAAA;AAAA,yCA6Nd9S,IA7Nc,EA6NR;AACrB,eAAKoO,YAAL,CAAkBQ,gBAAlB,CAAmC5O,IAAnC;AACD;AA/N8B;AAAA;AAAA,uCAiOnB;AAAA;;AAEV,eAAKyS,kBAAL,GAA0B,KAA1B;AAEA,cAAI/Q,MAAM,GAAG;AACXgB,uBAAW,EAAEtB,QAAQ,CAAC,KAAKjC,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADV,WAAb;AAIA,eAAKZ,YAAL,CAAkBkE,yBAAlB,CAA4CxB,MAA5C,EAAoDrB,SAApD,CAA8D,UAACC,GAAD,EAAa;AAEzE,mBAAI,CAACgT,cAAL,GAAsBhT,GAAG,CAACP,MAAJ,CAAW,UAAAC,IAAI,EAAI;AACvC,qBAAOA,IAAI,CAAC6C,QAAZ;AACD,aAFqB,CAAtB;AAKA,mBAAI,CAAC4K,UAAL,GAAkB,OAAI,CAAC6F,cAAL,CAAoBtS,MAAtC;;AAEA,gBAAG,OAAI,CAACyM,UAAL,GAAgB,OAAI,CAACvD,SAAxB,EAAkC;AAChC,qBAAI,CAACI,YAAL,GAAoB,OAAI,CAACJ,SAAzB;AACD,aAFD,MAIK;AACH,qBAAI,CAACI,YAAL,GAAoB,OAAI,CAACmD,UAAzB;AACD;;AAED,mBAAI,CAACgF,kBAAL,GAA0B,IAA1B;AAED,WAnBD,EAoBA,UAAAxQ,KAAK,EAAI,CAER,CAtBD;AAyBD;AAlQ8B;AAAA;AAAA,mCAoQpB;AAAA;;AAEV,eAAK8Q,KAAL,GAAa,EAAb;AAEC,eAAKE,YAAL;AAEA,cAAIvR,MAAM,GAAG;AACX0B,wBAAY,EAAE;AADH,WAAb,CANS,CAUV;;AACC,eAAKnE,aAAL,CAAmBoE,4BAAnB,CAAgD3B,MAAhD,EAAwDrB,SAAxD,CAAkE,UAACC,GAAD,EAAa;AAG5E,mBAAI,CAACgD,aAAL,GAAqBhD,GAAG,CAACP,MAAJ,CAAY,UAAAC,IAAI,EAAI;AACtC,qBAAOA,IAAI,CAAC6C,QAAZ;AACD,aAFmB,CAArB;AAIF,WAPD,EAQA,UAAAZ,KAAK,EAAI,CAER,CAVD,EAXS,CAwBT;;AACA,eAAK/C,aAAL,CAAmBqQ,uBAAnB,CAA2ClP,SAA3C,CAAsD,UAAAL,IAAI,EAAI;AAE5D,gBAAGA,IAAI,IAAI,IAAX,EAAgB;AAEd,kBAAI0B,MAAM,GAAG;AACXD,uBAAO,EAAEzB,IAAI,CAACyB,OADH;AAEX+N,wBAAQ,EAAEpO,QAAQ,CAAC,OAAI,CAACjC,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD;AAFP,eAAb;AAKA,qBAAI,CAAC6S,kBAAL,GAA0B,KAA1B;;AAEA,qBAAI,CAACzT,YAAL,CAAkBuU,WAAlB,CAA8B7R,MAA9B,EAAsCrB,SAAtC,CAAgD,UAACC,GAAD,EAAa;AAE3D,uBAAI,CAACgT,cAAL,GAAsB,OAAI,CAACA,cAAL,CAAoBvT,MAApB,CAA2B,UAACwK,IAAD;AAAA,yBAAUA,IAAI,CAAC9I,OAAL,KAAiBzB,IAAI,CAACyB,OAAhC;AAAA,iBAA3B,CAAtB;;AACA,uBAAI,CAACvC,aAAL,CAAmBwQ,sBAAnB,CAA0C,IAA1C;;AACA,uBAAI,CAAC+C,kBAAL,GAA0B,IAA1B;AAGD,eAPD,EAOG,UAAAxQ,KAAK,EAAI;AACV0G,uBAAO,CAACC,GAAR,CAAY3G,KAAZ;AACD,eATD;AAYD;AAEF,WAzBD;AA2BD;AAxT8B;;AAAA;AAAA,OAAjC;;;;cAkCsB;;cACH;;cACM;;cACA;;cACC;;cACA;;;;AAvCbsQ,wBAAoB,6DALhC,gEAAU;AACT9O,cAAQ,EAAE,kBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,0IAFS;;;;AAAA,KAAV,CAKgC,E,+EAkCX,sD,EACH,kE,EACM,0E,EACA,4E,EACC,6E,EACA,gE,EAvCO,GAApB6O,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb,QAAMiB,MAAM,GAAW,CACtB;AAAEC,UAAI,EAAE,EAAR;AAAYC,gBAAU,EAAE,UAAxB;AAAoCC,eAAS,EAAE;AAA/C,KADsB,EAEtB;AAAEF,UAAI,EAAE,UAAR;AAAoBG,eAAS,EAAE;AAA/B,KAFsB,EAGtB;AAAEH,UAAI,EAAE,gBAAR;AAA0BG,eAAS,EAAE;AAArC,KAHsB,EAItB;AAAEH,UAAI,EAAE,WAAR;AAAqBG,eAAS,EAAE;AAAhC,KAJsB,EAKtB;AAAEH,UAAI,EAAE,gBAAR;AAA0BG,eAAS,EAAE;AAArC,KALsB,EAMtB;AAAEH,UAAI,EAAE,gBAAR;AAA0BG,eAAS,EAAE;AAArC,KANsB,EAOtB;AAAEH,UAAI,EAAE,UAAR;AAAoBG,eAAS,EAAE;AAA/B,KAPsB,EAQtB;AAAEH,UAAI,EAAE,YAAR;AAAsBG,eAAS,EAAE;AAAjC,KARsB,EAStB;AAAEH,UAAI,EAAE,WAAR;AAAqBG,eAAS,EAAE;AAAhC,KATsB,EAUtB;AAAEH,UAAI,EAAE,gBAAR;AAA0BG,eAAS,EAAE;AAArC,KAVsB,EAWtB;AAAEH,UAAI,EAAE,SAAR;AAAmBG,eAAS,EAAE;AAA9B,KAXsB,EAYtB;AAAEH,UAAI,EAAE,SAAR;AAAmBG,eAAS,EAAE;AAA9B,KAZsB,EAatB;AAAEH,UAAI,EAAE,IAAR;AAAcC,gBAAU,EAAE,UAA1B;AAAsCC,eAAS,EAAE;AAAjD,KAbsB,CAAvB;;AAoBA,QAAaE,yBAAyB;AAAA;AAAA,KAAtC;;AAAaA,6BAAyB,6DAJrC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBP,MAAtB,CAAD,CADD;AAERQ,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAIqC,GAAzBH,yBAAyB,CAAzB;;;;;;;;;;;;;;;;ACtCb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOf,QAAaI,qBAAqB;AAAA;AAAA;AAEhC,uCAAc;AAAA;AAAG;;AAFe;AAAA;AAAA,mCAIrB,CACV;AAL+B;;AAAA;AAAA,OAAlC;;AAAaA,yBAAqB,6DALjC,gEAAU;AACTxQ,cAAQ,EAAE,mBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,mHAFS;;;;AAAA,KAAV,CAKiC,E,iFAAA,GAArBuQ,qBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACmCb,QAAaC,kBAAkB;AAAA;AAAA,KAA/B;;AAAaA,sBAAkB,6DAtB9B,+DAAS;AACRC,kBAAY,EAAE,CACf,8EADe,EAEf,iGAFe,EAGf,2HAHe,EAIf,2HAJe,EAKf,gHALe,EAMf,wGANe,EAOf,2GAPe,EAQf,wGARe,EASf,4FATe,EAUf,kGAVe,EAWf,qGAXe,EAYf,4FAZe,CADN;AAeRL,aAAO,EAAE,CACP,4DADO,EAEP,kEAFO,EAGP,uFAHO,CAfD;AAoBRM,eAAS,EAAE,CAAE,8EAAF;AApBH,KAAT,CAsB8B,GAAlBF,kBAAkB,CAAlB","file":"staff-manager-staff-manager-module-es5.js","sourcesContent":["export default \"<div class=\\\"staff-add-entry-wrapper\\\">\\n\\t\\n\\t<div class=\\\"card mb-30\\\">\\n\\t\\t\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>\\n    \\t\\t\\t\\t<span *ngIf=\\\"!isEditEntry\\\">Add Entry</span>\\n    \\t\\t\\t\\t<span *ngIf=\\\"isEditEntry\\\">Edit Entry</span>\\n    \\t\\t\\t</h5>\\n    \\t\\t</div>\\n    \\t\\t<div class=\\\"float-right\\\">\\n    \\t\\t\\t<a href=\\\"javascript:void(0)\\\" routerLink=\\\"/ams/staff/attendance\\\" \\n\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t<i-feather class=\\\"icon back\\\" name=\\\"chevron-left\\\"></i-feather>\\n\\t\\t\\t\\t</a>\\n    \\t\\t</div>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<form #addEntryForm = \\\"ngForm\\\" name=\\\"addEntryForm\\\" (ngSubmit)=\\\"submitEntryForm(addEntryForm)\\\"  novalidate>\\n\\n\\t\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<app-alert-message [message]=\\\"alertEntryMessage\\\" [isError]=\\\"isEntryError\\\"></app-alert-message>\\n\\n\\t\\t\\t\\t<app-loader *ngIf=\\\"!isEntrySubmitted\\\"></app-loader>\\n\\n\\t\\t\\t\\t<ng-container *ngIf=\\\"isEntrySubmitted\\\">\\n\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t                    <label>Name*</label>\\n\\t\\t\\t\\t                    <select \\n\\t\\t\\t\\t\\t\\t\\t\\t        name=\\\"staffId\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t        id=\\\"staffId\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"entry.staffId\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t        (ngModelChange)=\\\"getStaffJobTitle()\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of staffDataList\\\" [value]=\\\"item.staffId\\\">{{ item.firstName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t                    <label>Job title*</label>\\n\\t\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter text\\\" name=\\\"ticketSubject\\\" [(ngModel)]=\\\"entry.jobTitle\\\" required>\\n\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t                    <label>In-time*</label>\\n\\t\\t\\t\\t                    <input class=\\\"form-control\\\" name=\\\"staffInTime\\\" [owlDateTime]=\\\"staffInTime\\\" [owlDateTimeTrigger]=\\\"staffInTime\\\" placeholder=\\\"Date Time\\\" [(ngModel)]=\\\"entry.inTime\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #staffInTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"staffInTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon del-c float-left mr-1\\\" name=\\\"x-circle\\\" width=\\\"18\\\" *ngIf=\\\"entry.inTime != '' && entry.inTime != undefined\\\" (click)=\\\"entry.inTime=''\\\"></i-feather>\\n\\t  \\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n\\t  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t                    <label>Out-time</label>\\n\\t\\t\\t\\t                    <input class=\\\"form-control\\\" name=\\\"staffOutTime\\\" [owlDateTime]=\\\"staffOutTime\\\" [owlDateTimeTrigger]=\\\"staffOutTime\\\" placeholder=\\\"Date Time\\\" [(ngModel)]=\\\"entry.outTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #staffOutTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"staffOutTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon del-c float-left mr-1\\\" name=\\\"x-circle\\\" width=\\\"18\\\" *ngIf=\\\"entry.outTime != '' && entry.outTime != undefined\\\" (click)=\\\"entry.outTime=''\\\"></i-feather>\\n\\t  \\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n\\t  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t                    <label>In Gate*</label>\\n\\t\\t\\t\\t                    <select \\n\\t\\t\\t\\t\\t\\t\\t\\t        name=\\\"inGateId\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t        id=\\\"inGateId\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"entry.inGateId\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of gatesDataList\\\" [value]=\\\"item.gateId\\\">{{ item.gateName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t                    <label>Out Gate*</label>\\n\\t\\t\\t\\t                    <select \\n\\t\\t\\t\\t\\t\\t\\t\\t        name=\\\"outGateId\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t        id=\\\"outGateId\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"entry.outGateId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of gatesDataList\\\" [value]=\\\"item.gateId\\\">{{ item.gateName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>shift Type*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t                            <input name=\\\"shiftType\\\" id=\\\"Morning\\\" [(ngModel)]=\\\"shiftType\\\" (ngModelChange)=\\\"getShifts()\\\" value=\\\"127\\\" type=\\\"radio\\\" required>\\n\\t\\t\\t                            <label class=\\\"radio-inline\\\" for=\\\"Morning\\\">Morning</label>\\n\\t\\t                     \\t\\t</div>\\n\\t\\t\\t                    \\t<div class=\\\"form-group\\\">\\n\\t\\t\\t                            <input name=\\\"shiftType\\\" id=\\\"Night\\\" [(ngModel)]=\\\"shiftType\\\" (ngModelChange)=\\\"getShifts()\\\" value=\\\"128\\\" type=\\\"radio\\\" required>\\n\\t\\t\\t                            <label class=\\\"radio-inline\\\" for=\\\"Night\\\">Night</label>\\n\\t\\t\\t                         </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"isShiftSelected()\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t                    <label>Start Time*</label>\\n\\t\\t\\t\\t                    <select \\n\\t\\t\\t\\t\\t\\t\\t\\t        name=\\\"startTime\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t        id=\\\"startTime\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"entry.shiftId\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of shiftsFilteredDataList\\\" [value]=\\\"item.shiftId\\\">{{ item.startTime }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t                    <label>Comments</label>\\n\\t\\t\\t\\t                    <textarea placeholder=\\\"some text here\\\" name=\\\"comments\\\" [(ngModel)]=\\\"entryComments\\\"></textarea>\\n\\t\\t\\t\\t                </div>\\n\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline float-right mt-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addEntryForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\n\\t\\t\\t</div>\\n\\n\\t\\t</form>\\n\\n\\t</div>\\n\\n\\t\\n\\n</div>\"","export default \"<div class=\\\"staff-add-staff-wrapper\\\">\\n\\n\\t<form #addStaffForm=\\\"ngForm\\\" name=\\\"addStaffForm\\\" (ngSubmit)=\\\"submitAddStaffForm(addStaffForm)\\\" novalidate>\\n\\n\\t\\t<div class=\\\"card mb-30\\\">\\n\\n\\t\\t\\t<div class=\\\"card-header d-flex justify-content-between align-items-center\\\">\\n\\t\\t\\t\\t<div class=\\\"float-left\\\">\\n\\t\\t\\t\\t\\t<h5>\\n\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"!isEditStaff\\\">Add Staff</span>\\n\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"isEditStaff\\\">Edit Staff</span>\\n\\t\\t\\t\\t\\t</h5>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<!-- <div class=\\\"float-right\\\">\\n\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" routerLink=\\\"/ams/staff/maintain-staff\\\" routerLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon back\\\" name=\\\"chevron-left\\\"></i-feather>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</div> -->\\n\\t\\t\\t\\t<ul class=\\\"list-inline float-right\\\" *ngIf=\\\"!isStaffSubmitted\\\">\\n\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addStaffForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t</ul>\\n\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t<div class=\\\"card-body p-0\\\" id=\\\"accordion\\\">\\n\\n\\t\\t\\t\\t<app-alert-message [message]=\\\"alertStaffMessage\\\" [isError]=\\\"isStaffError\\\" [isSuccess]=\\\"isStaffSuccess\\\">\\n\\t\\t\\t\\t</app-alert-message>\\n\\n\\t\\t\\t\\t<app-loader *ngIf=\\\"isStaffSubmitted\\\"></app-loader>\\n\\n\\t\\t\\t\\t<ng-container *ngIf=\\\"!isStaffSubmitted\\\">\\n\\n\\t\\t\\t\\t\\t<ul class=\\\"list-group tabs clear\\\">\\n\\t\\t\\t\\t\\t\\t<li class=\\\"list-group-item\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#staffCollapseOne\\\"\\n\\t\\t\\t\\t\\t\\t\\taria-expanded=\\\"true\\\" aria-controls=\\\"CollapseOne\\\">Personal Info</li>\\n\\t\\t\\t\\t\\t\\t<div id=\\\"staffCollapseOne\\\" class=\\\"collapse show\\\" aria-labelledby=\\\"CollapseOne\\\"\\n\\t\\t\\t\\t\\t\\t\\tdata-parent=\\\"#accordion\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"details\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>User Type*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\" *ngFor=\\\"let user of userTypeList\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[hidden]=\\\"user.value == 2 || user.value == 4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input name=\\\"userType\\\" (change)=\\\"changeUserType($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"{{user.name}}\\\" [(ngModel)]=\\\"userType\\\" value=\\\"{{user.value}}\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"radio\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"{{user.name}}\\\">{{user.name}}</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>First Name*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"firstName\\\" [(ngModel)]=\\\"staff.firstName\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Last Name*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"lastName\\\" [(ngModel)]=\\\"staff.lastName\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"!isEditStaff\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Password*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"password\\\" [(ngModel)]=\\\"staff.password\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Date Of Birth</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"staffDOB\\\" [owlDateTime]=\\\"staffDOB\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[owlDateTimeTrigger]=\\\"staffDOB\\\" placeholder=\\\"Date\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"staff.dob\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #staffDOB [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"staffDOB\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</i-feather>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Address</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"address\\\" [(ngModel)]=\\\"staff.address\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Email*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"staffEmail\\\" [(ngModel)]=\\\"staff.emailId\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Contact Number</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Enter value\\\" name=\\\"contactNumber\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"staff.contactNumber\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Alternate Contact Number</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Enter value\\\" name=\\\"alternateContact\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"staff.alternateContact\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Blood Group</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select name=\\\"bloodGroup\\\" id=\\\"bloodGroup\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"staff.bloodGroup\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of bloodGroupData\\\">{{ item.lookupValueName }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Vehicle ID</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"staffVehicleId\\\" [(ngModel)]=\\\"staff.vehicleId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Gender*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input name=\\\"genderType\\\" id=\\\"male\\\" [(ngModel)]=\\\"genderType\\\" value=\\\"43\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"radio\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"male\\\">Male</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input name=\\\"genderType\\\" id=\\\"female\\\" [(ngModel)]=\\\"genderType\\\" value=\\\"44\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"radio\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"female\\\">Female</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Is Vendor*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input name=\\\"vendorType\\\" id=\\\"Yes\\\" [(ngModel)]=\\\"vendorType\\\" value=\\\"Yes\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"radio\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"Yes\\\">Yes</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input name=\\\"vendorType\\\" id=\\\"No\\\" [(ngModel)]=\\\"vendorType\\\" value=\\\"No\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"radio\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"No\\\">No</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"isVendor()\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Vendor Name*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select name=\\\"vendorName\\\" id=\\\"vendorName\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"staff.vendorId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of vendorNameList\\\">{{ item.lookupValueName }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Health Issue Notes ( 35 characters)</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea placeholder=\\\"some text here\\\" name=\\\"healthIssue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"staff.healthIssue\\\"></textarea>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Comments</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea placeholder=\\\"some text here\\\" name=\\\"staffComments\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"staff.comments\\\"></textarea>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-3 d-flex align-items-center\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"btn sf lime-green\\\" for=\\\"my-photo-selector\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"uploaderPhoto.click()\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" #uploaderPhoto type=\\\"file\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"staff.file\\\" (change)=\\\"uploadPhoto($event)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-paperclip mr-2\\\" aria-hidden=\\\"true\\\"></i> Upload\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tPhoto</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"file-desp\\\" *ngIf=\\\"isPhotoAdded\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let item of listOfPhotos; let i = index\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"name mr-3\\\">{{item.name}}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"size\\\">{{bytesToSize(item.size)}}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon del\\\" name=\\\"x\\\" (click)=\\\"deletePhoto(i)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</i-feather>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-3 d-flex align-items-center\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"btn sf lime-green\\\" for=\\\"my-file-selector\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"uploaderFile.click()\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" #uploaderFile type=\\\"file\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"staff.multifile\\\" (change)=\\\"uploadFile($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmultiple>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-paperclip mr-2\\\" aria-hidden=\\\"true\\\"></i> Upload ID Card\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tDocs</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"file-desp\\\" *ngIf=\\\"isFileAdded\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let item of listOfFiles; let i = index\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"name mr-3\\\">{{item.name}}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"size\\\">{{bytesToSize(item.size)}}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon del\\\" name=\\\"x\\\" (click)=\\\"deleteFile(i)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</i-feather>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t<li class=\\\"list-group-item collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#staffCollapseTwo\\\"\\n\\t\\t\\t\\t\\t\\t\\taria-expanded=\\\"true\\\" aria-controls=\\\"CollapseTwo\\\">Salary & Leave</li>\\n\\t\\t\\t\\t\\t\\t<div id=\\\"staffCollapseTwo\\\" class=\\\"collapse\\\" aria-labelledby=\\\"CollapseTwo\\\"\\n\\t\\t\\t\\t\\t\\t\\tdata-parent=\\\"#accordion\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"details\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Base Pay*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Enter value\\\" name=\\\"basePay\\\" [(ngModel)]=\\\"staff.basePay\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trequired>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Allowance 1</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Enter value\\\" name=\\\"allowance1\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"staff.allowance1\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Allowance 2</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Enter value\\\" name=\\\"allowance2\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"staff.allowance2\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Allowance 3</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Enter value\\\" name=\\\"allowance3\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"staff.allowance3\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Overtime Pay Per Hour</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Enter value\\\" name=\\\"overtimePayperhour\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"staff.overtimePayperhour\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Deduction 1</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Enter value\\\" name=\\\"deduction1\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"staff.deduction1\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Deduction 2</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Enter value\\\" name=\\\"deduction2\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"staff.deduction2\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Deduction 3</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Enter value\\\" name=\\\"deduction3\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"staff.deduction3\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Salary Per Day</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Enter value\\\" name=\\\"perDaySalary\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"staff.perDaySalary\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Vacation Leave Days</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Enter value\\\" name=\\\"vacationLeaveDays\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"staff.vacationLeaveDays\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Sick Leave Days</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Enter value\\\" name=\\\"sickLeaveDays\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"staff.sickLeaveDays\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t<li class=\\\"list-group-item collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#staffCollapseThree\\\"\\n\\t\\t\\t\\t\\t\\t\\taria-expanded=\\\"true\\\" aria-controls=\\\"CollapseThree\\\">Work Information</li>\\n\\t\\t\\t\\t\\t\\t<div id=\\\"staffCollapseThree\\\" class=\\\"collapse\\\" aria-labelledby=\\\"CollapseThree\\\"\\n\\t\\t\\t\\t\\t\\t\\tdata-parent=\\\"#accordion\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"details\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"isAdminRegister\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Admin Role</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select name=\\\"userRole\\\" id=\\\"userRole\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Select Role\\\" [(ngModel)]=\\\"userRoleId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of userRolesData\\\" [value]=\\\"item.roleId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ item.roleName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"!isAdminRegister\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Category*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select name=\\\"staffCategory\\\" id=\\\"staffCategory\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"staff.staffCategoryId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(ngModelChange)=\\\"getStaffType(staff.staffCategoryId)\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of staffTypeData\\\" [value]=\\\"item.lookupValueId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"isCategoryEnabled()\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Sub Category*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select name=\\\"staffSubCategory\\\" id=\\\"staffSubCategory\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"staff.staffSubCategoryId\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of staffCategoryData\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Job Start Date</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"jobStartDate\\\" [owlDateTime]=\\\"jobStartDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[owlDateTimeTrigger]=\\\"jobStartDate\\\" placeholder=\\\"Date\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"staff.jobStartDate\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #jobStartDate [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"jobStartDate\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</i-feather>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Job End Date</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"jobEndDate\\\" [owlDateTime]=\\\"jobEndDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[owlDateTimeTrigger]=\\\"jobEndDate\\\" placeholder=\\\"Date\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"staff.jobEndDate\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #jobEndDate [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"jobEndDate\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</i-feather>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Planned Entry Time</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"plannedEntryTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[owlDateTime]=\\\"plannedEntryTime\\\" [owlDateTimeTrigger]=\\\"plannedEntryTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Date Time\\\" [(ngModel)]=\\\"staff.plannedEntryTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #plannedEntryTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"plannedEntryTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</i-feather>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Planned Exit Time</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"plannedExitTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[owlDateTime]=\\\"plannedExitTime\\\" [owlDateTimeTrigger]=\\\"plannedExitTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Date Time\\\" [(ngModel)]=\\\"staff.plannedExitTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #plannedExitTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"plannedExitTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</i-feather>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t</ul>\\n\\n\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\n\\t\\t<!-- <div class=\\\"row\\\" *ngIf=\\\"!isStaffSubmitted\\\">\\n\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t<ul class=\\\"list-inline float-right\\\">\\n\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addStaffForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t</ul>\\n\\t\\t\\t</div>\\n\\t\\t</div> -->\\n\\n\\t</form>\\n\\n</div>\"","export default \"<div class=\\\"staff-attendance-wrapper\\\">\\n\\t\\n\\t<app-loader *ngIf=\\\"!isEntryDataLoaded\\\"></app-loader>\\n\\n\\t<div class=\\\"card table-card\\\" *ngIf=\\\"isEntryDataLoaded\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All Entries <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" \\n\\t\\t\\t\\t\\tplaceholder=\\\"Search...\\\" [(ngModel)]=\\\"entryData\\\" \\n\\t\\t\\t\\t\\t(ngModelChange)=\\\"onGlSearchFilter()\\\">\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n    \\t\\t\\t\\t<a class=\\\"btn l-blue mt_5\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Print</span>\\n    \\t\\t\\t\\t</a>\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\n    \\t\\t\\t\\t<a class=\\\"btn lime-green mt_5\\\"\\n    \\t\\t\\t\\trouterLink=\\\"/ams/staff/add-entry\\\" \\n\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon plus\\\" name=\\\"plus\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Add Attendance</span>\\n    \\t\\t\\t\\t</a>\\n\\n    \\t\\t\\t</li>\\n\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n\\n\\n  \\t\\t<div class=\\\"card-body p-0\\\">\\n\\t\\t\\t<jqxGrid \\n\\t\\t\\t[theme]=\\\"'material'\\\" \\n\\t\\t\\t[width]=\\\"'100%'\\\"\\n\\t\\t\\t[rowsheight]=\\\"48\\\"\\n\\t\\t\\t[autoheight]=\\\"true\\\"\\n\\t\\t\\t[pageable]=\\\"true\\\" \\n\\t\\t\\t[filterable]=\\\"true\\\"\\n\\t\\t\\t[sortable]=\\\"true\\\" \\n\\t\\t\\t[source]=\\\"entryListData\\\"\\n\\t\\t\\t[columns]=\\\"columnData\\\"\\n\\t\\t\\t[columnsresize]=\\\"true\\\"\\n\\t\\t\\t[enablehover]=\\\"false\\\"\\n\\t\\t#datagrid>\\n\\t\\t</jqxGrid> \\n  \\t\\t\\t<!-- <table class=\\\"table table-checker table-resizable\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">\\n\\t\\t\\t\\t      \\tName\\n\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('firstName')\\\" [ngClass]=\\\"getFieldOrderBy('firstName')\\\"></span>\\n\\t\\t\\t\\t      \\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Staff Name\\\" [(ngModel)]=\\\"columnField['firstName']\\\" (ngModelChange)=\\\"selectColInput('firstName')\\\" >\\n\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">\\n\\t\\t\\t\\t      \\tJob Title\\n\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('jobTitle')\\\" [ngClass]=\\\"getFieldOrderBy('jobTitle')\\\"></span>\\n\\t\\t\\t\\t      \\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Job Title\\\" [(ngModel)]=\\\"columnField['jobTitle']\\\" (ngModelChange)=\\\"selectColInput('jobTitle')\\\" >\\n\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">In Time <span (click)=\\\"sortUnitData('inTime')\\\" [ngClass]=\\\"getFieldOrderBy('inTime')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Out Time<span (click)=\\\"sortUnitData('outTime')\\\" [ngClass]=\\\"getFieldOrderBy('outTime')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">In Gate <span (click)=\\\"sortUnitData('inGateId')\\\" [ngClass]=\\\"getFieldOrderBy('inGateId')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Out Gate <span (click)=\\\"sortUnitData('outGateId')\\\" [ngClass]=\\\"getFieldOrderBy('outGateId')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">comments <span (click)=\\\"sortUnitData('notes')\\\" [ngClass]=\\\"getFieldOrderBy('notes')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" class=\\\"simple-actions\\\">Action</th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let entry of entryListData | simpleSearch: staffData | \\n\\t\\t\\t\\t    sort : unitFieldType: unitOrder | slice:ItemUserStartIndex:ItemUserEndIndex ; let i = index\\\">\\n\\t\\t\\t\\t      <td class=\\\"name\\\">{{getStaffName(entry.staffId)}}</td>\\n\\t\\t\\t\\t      <td class=\\\"name\\\">{{getJobTitle(entry.staffId)}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{entry.inTime}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{entry.outTime}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{getInGateName(entry.inGateId)}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{getOutGateName(entry.outGateId)}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{entry.notes}}</td>\\n\\t\\t\\t\\t      <td class=\\\"simple-actions\\\">\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t      \\tclass=\\\"mr-2\\\" \\n\\t\\t\\t\\t      \\tplacement=\\\"top\\\" [ngbPopover]=\\\"popAddCheckInContent\\\" triggers=\\\"mouseenter:mouseleave\\\"\\n\\t\\t\\t\\t      \\trouterLink=\\\"/ams/staff/edit-entry/{{entry.attendanceId}}\\\" \\n\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon edit\\\" name=\\\"edit\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\t\\t\\t\\n\\t\\t\\t<app-pagination \\n\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t\\t</app-pagination> -->\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n</div>\"","export default \"<div class=\\\"staff-gates-wrapper\\\">\\n\\n\\t<div class=\\\"card mb-30\\\">\\n\\t\\t\\n\\t\\t<div class=\\\"card-header no-border\\\">\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n\\t\\t\\t\\t<h5 class=\\\"lh-38\\\">Gates List <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n\\t\\t\\t</div>\\n\\n    \\t\\t<div class=\\\"float-right\\\">\\n    \\t\\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\n\\t\\t    \\t\\t\\t<a class=\\\"btn lime-green mt_5\\\" (click)=\\\"addGate()\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon plus\\\" name=\\\"plus\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t\\t<span>Add Gate</span>\\n\\t\\t    \\t\\t\\t</a>\\n\\t\\t    \\t\\t\\t\\n\\t    \\t\\t\\t</li>\\n    \\t\\t\\t</ul>\\n    \\t\\t</div>\\n\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div class=\\\"card-body p-0\\\">\\n\\t\\t\\t\\n\\t\\t\\t<app-loader *ngIf=\\\"!isGateTableLoaded\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"isGateTableLoaded\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"simple-lists\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<ng-container *ngFor=\\\"let gate of gateListData; let i = index\\\">\\n\\t\\t\\t\\t\\t\\t<li class=\\\"list-group-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"float-left\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<h5>{{gate.gateName}}</h5>\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>{{gate.comments}}</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"float-right\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"icon-link mr-2\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"editGate(gate.gateId)\\\"><i-feather class=\\\"icon edit\\\" name=\\\"edit\\\"></i-feather></a>\\n\\t\\t\\t\\t      \\t\\t\\t<a class=\\\"icon-link\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"showConfirmModal(gate)\\\"><i-feather class=\\\"icon delete\\\" name=\\\"trash\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t</div>\\n\\t\\t<app-pagination \\n\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t</app-pagination>\\n\\t</div>\\n\\n\\t\\n\\t<div class=\\\"add-gate-card\\\" *ngIf=\\\"isAddGateLoaded\\\">\\n\\n\\t\\t<div class=\\\"card mb-30\\\">\\n\\n\\t\\t\\t<div class=\\\"card-header\\\">\\n\\t    \\t\\t<div class=\\\"float-left\\\">\\n\\t    \\t\\t\\t<h5>\\n\\t    \\t\\t\\t\\t<span *ngIf=\\\"!isEditGate\\\">Add Gate</span>\\n\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"isEditGate\\\">Edit Gate</span>\\n\\t\\t\\t\\t\\t</h5>\\n\\t    \\t\\t</div>\\n\\t    \\t\\t<div class=\\\"float-right\\\" (click)=\\\"closeGate()\\\">\\n\\t\\t\\t\\t\\t<i-feather class=\\\"icon del\\\" name=\\\"x\\\" width=\\\"20\\\"></i-feather>\\n\\t\\t\\t\\t</div>\\n    \\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"card-body\\\">\\n\\n\\t\\t\\t\\t<app-loader *ngIf=\\\"!isGateLoaded\\\"></app-loader>\\n\\n\\t\\t\\t\\t<ng-container *ngIf=\\\"isGateLoaded\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<form #addGateForm = \\\"ngForm\\\" name=\\\"addGateForm\\\" (ngSubmit)=\\\"submitGateForm(addGateForm)\\\"  novalidate>\\n\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t                    <label>Gate Name*</label>\\n\\t\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter text\\\" name=\\\"gateName\\\" [(ngModel)]=\\\"gate.gateName\\\" required>\\n\\t\\t\\t\\t        \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t                    <label>Comments</label>\\n\\t\\t\\t\\t                    <textarea placeholder=\\\"some text here\\\" name=\\\"healthIssue\\\" [(ngModel)]=\\\"gate.comments\\\" required></textarea>\\n\\t\\t\\t\\t                </div>\\n\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline float-right\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addGateForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n</div>\"","export default \"<div class=\\\"staff-manager-inactive-staff-wrapper\\\">\\n\\t\\n\\t<app-loader *ngIf=\\\"!isStaffDataLoaded\\\"></app-loader>\\n\\n\\t\\n\\n\\t<div class=\\\"card table-card\\\" *ngIf=\\\"isStaffDataLoaded\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All Inactive Staffs <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" \\n\\t\\t\\t\\t\\t[(ngModel)]=\\\"staffData\\\" (ngModelChange)=\\\"onGlSearchFilter()\\\">\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n    \\t\\t\\t\\t<a class=\\\"btn trans-white mt_5\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Print</span>\\n    \\t\\t\\t\\t</a>\\n    \\t\\t\\t</li>\\n\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n\\n\\n  \\t\\t<div class=\\\"card-body p-0\\\">\\n\\t\\t\\t\\t<jqxGrid \\n\\t\\t\\t\\t[theme]=\\\"'material'\\\" \\n\\t\\t\\t\\t[width]=\\\"'100%'\\\"\\n\\t\\t\\t\\t[rowsheight]=\\\"48\\\"\\n\\t\\t\\t\\t[autoheight]=\\\"true\\\"\\n\\t\\t\\t\\t[pageable]=\\\"true\\\" \\n\\t\\t\\t\\t[filterable]=\\\"true\\\" \\n\\t\\t\\t\\t[sortable]=\\\"true\\\" \\n\\t\\t\\t\\t[source]=\\\"staffListData\\\"\\n\\t\\t\\t\\t[columns]=\\\"columnData\\\"\\n\\t\\t\\t\\t[columnsresize]=\\\"true\\\"\\n\\t\\t\\t\\t[enablehover]=\\\"false\\\"\\n\\t\\t\\t#datagrid>\\n\\t\\t\\t</jqxGrid> \\n\\t\\t\\t\\n  \\t\\t\\t<!-- <table class=\\\"table table-checker table-resizable\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Staff Name \\n\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('firstName')\\\" [ngClass]=\\\"getFieldOrderBy('firstName')\\\"></span>\\n\\t\\t\\t\\t      \\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Staff Name\\\" [(ngModel)]=\\\"columnField['firstName']\\\" (ngModelChange)=\\\"selectColInput('firstName')\\\" >\\n\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Email ID\\n\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('emailId')\\\" [ngClass]=\\\"getFieldOrderBy('emailId')\\\"></span>\\n\\t\\t\\t\\t      \\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Email ID\\\" [(ngModel)]=\\\"columnField['emailId']\\\" (ngModelChange)=\\\"selectColInput('emailId')\\\" >\\n\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Category \\n\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('staffCategory')\\\" [ngClass]=\\\"getFieldOrderBy('staffCategory')\\\"></span>\\n\\t\\t\\t\\t      \\t<app-simple-select-box\\n\\t\\t\\t\\t\\t\\t\\tfieldName = \\\"staffCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\tfieldText = \\\"\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldItemName=\\\"lookupValueName\\\"\\n\\t\\t\\t\\t\\t\\t\\tisLabel = \\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldModel] = \\\"staffCategoryId\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldPlaceholder = \\\"Select\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldRequired] = \\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldList] = \\\"staffTypeData\\\"\\n\\t\\t\\t\\t\\t\\t\\t(inputChange) = \\\"onSelectChange($event, 'staffCategory', 'lookupValueName')\\\">\\t\\t\\n\\t\\t\\t\\t\\t\\t</app-simple-select-box>\\n\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t       <th scope=\\\"col\\\">Sub Category\\n\\t\\t\\t\\t       \\t<span (click)=\\\"sortUnitData('staffSubCategory')\\\" [ngClass]=\\\"getFieldOrderBy('staffSubCategory')\\\"></span>\\n\\t\\t\\t\\t       \\t<app-simple-select-box\\n\\t\\t\\t\\t\\t\\t\\tfieldName = \\\"staffSubCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\tfieldText = \\\"\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldItemName=\\\"lookupValueName\\\"\\n\\t\\t\\t\\t\\t\\t\\tisLabel = \\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldModel] = \\\"staffSubCategoryId\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldPlaceholder = \\\"Select\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldRequired] = \\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldList] = \\\"staffOfficalCategoryData\\\"\\n\\t\\t\\t\\t\\t\\t\\t(inputChange) = \\\"onSelectChange($event, 'staffSubCategory', 'lookupValueName')\\\">\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</app-simple-select-box>\\n\\t\\t\\t\\t       </th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Phone Number \\n\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('contactNumber')\\\" [ngClass]=\\\"getFieldOrderBy('contactNumber')\\\"></span>\\n\\t\\t\\t\\t      \\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Phone Number\\\" [(ngModel)]=\\\"columnField['contactNumber']\\\" (ngModelChange)=\\\"selectColInput('contactNumber')\\\" >\\n\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" class=\\\"simple-actions\\\">\\n\\t\\t\\t\\t      Actions\\n\\t\\t\\t\\t      <input type=\\\"text\\\" class=\\\"form-control vis-h\\\" placeholder=\\\"Action\\\" [(ngModel)]=\\\"columnField['action']\\\" (ngModelChange)=\\\"selectColInput('action')\\\" >\\n\\t\\t\\t\\t  \\t </th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let staff of staffListData | simpleSearch: staffData | columnSearch: columnField:selectedInput | sort : unitFieldType: unitOrder | slice:ItemUserStartIndex:ItemUserEndIndex; let i = index\\\">\\n\\t\\t\\t\\t      <td class=\\\"name\\\">{{staff.firstName}}</td>\\n\\t\\t\\t\\t      <td class=\\\"name\\\">{{staff.emailId}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{getStaffCategory(staff, staff.staffCategoryId)}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{getStaffSubCategory(staff, staff.staffSubCategoryId)}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{staff.contactNumber}}</td>\\n\\t\\t\\t\\t      <td class=\\\"simple-actions\\\">\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t      \\tclass=\\\"mr-2\\\" \\n\\t\\t\\t\\t      \\tplacement=\\\"top\\\" [ngbPopover]=\\\"popAddCheckInContent\\\" triggers=\\\"mouseenter:mouseleave\\\"\\n\\t\\t\\t\\t      \\trouterLink=\\\"/ams/staff/edit-staff/{{staff.staffId}}\\\" \\n\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon edit\\\" name=\\\"edit\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t  </td>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\t\\t\\t\\n\\t\\t\\t<app-pagination \\n\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t\\t</app-pagination> -->\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n</div>\"","export default \"<div class=\\\"staff-manager-maintain-staff-wrapper\\\">\\n\\t\\n\\t<app-loader *ngIf=\\\"!isStaffDataLoaded\\\"></app-loader>\\n\\n\\t\\n\\n\\t<div class=\\\"card table-card\\\" *ngIf=\\\"isStaffDataLoaded\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All Staffs <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\"\\n\\t\\t\\t\\t\\t [(ngModel)]=\\\"staffData\\\" (ngModelChange)=\\\"onGlSearchFilter()\\\">\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n    \\t\\t\\t\\t<a class=\\\"btn trans-white mt_5\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Print</span>\\n    \\t\\t\\t\\t</a>\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\n    \\t\\t\\t\\t<a class=\\\"btn lime-green mt_5\\\"\\n    \\t\\t\\t\\trouterLink=\\\"/ams/staff/add-staff\\\" \\n\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon plus\\\" name=\\\"plus\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Add Staff</span>\\n    \\t\\t\\t\\t</a>\\n\\n    \\t\\t\\t</li>\\n\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n\\n\\n  \\t\\t<div class=\\\"card-body p-0\\\">\\n  \\t\\t\\t\\n  \\t\\t\\t  <jqxGrid \\n\\t\\t\\t\\t[theme]=\\\"'material'\\\" \\n\\t\\t\\t\\t[width]=\\\"'100%'\\\"\\n\\t\\t\\t\\t[rowsheight]=\\\"48\\\"\\n\\t\\t\\t\\t[autoheight]=\\\"true\\\"\\n\\t\\t\\t\\t[pageable]=\\\"true\\\" \\n\\t\\t\\t\\t[filterable]=\\\"true\\\" \\n\\t\\t\\t\\t[sortable]=\\\"true\\\" \\n\\t\\t\\t\\t[source]=\\\"staffListData\\\"\\n\\t\\t\\t\\t[columns]=\\\"columnData\\\"\\n\\t\\t\\t\\t[columnsresize]=\\\"true\\\"\\n\\t\\t\\t\\t[enablehover]=\\\"false\\\"\\n\\t\\t\\t#datagrid>\\n\\t\\t\\t</jqxGrid> \\n\\t\\t\\t   \\n\\t\\t\\t\\n  \\t\\t\\t<!-- <table class=\\\"table table-checker table-resizable\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Staff Name \\n\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('firstName')\\\" [ngClass]=\\\"getFieldOrderBy('firstName')\\\"></span>\\n\\t\\t\\t\\t      \\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Staff Name\\\" [(ngModel)]=\\\"columnField['firstName']\\\" (ngModelChange)=\\\"selectColInput('firstName')\\\" >\\n\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Email ID\\n\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('emailId')\\\" [ngClass]=\\\"getFieldOrderBy('emailId')\\\"></span>\\n\\t\\t\\t\\t      \\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Email ID\\\" [(ngModel)]=\\\"columnField['emailId']\\\" (ngModelChange)=\\\"selectColInput('emailId')\\\" >\\n\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Category \\n\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('staffCategory_Label')\\\" [ngClass]=\\\"getFieldOrderBy('staffCategory_Label')\\\"></span>\\n\\t\\t\\t\\t      \\t<app-simple-select-box\\n\\t\\t\\t\\t\\t\\t\\tfieldName = \\\"staffCategory_Label\\\" \\n\\t\\t\\t\\t\\t\\t\\tfieldText = \\\"\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldItemName=\\\"lookupValueName\\\"\\n\\t\\t\\t\\t\\t\\t\\tisLabel = \\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldModel] = \\\"staffCategoryId\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldPlaceholder = \\\"Select\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldRequired] = \\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldList] = \\\"staffTypeData\\\"\\n\\t\\t\\t\\t\\t\\t\\t(inputChange) = \\\"onSelectChange($event, 'staffCategory_Label', 'lookupValueName')\\\">\\t\\t\\n\\t\\t\\t\\t\\t\\t</app-simple-select-box>\\n\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t       <th scope=\\\"col\\\">Sub Category\\n\\t\\t\\t\\t       \\t<span (click)=\\\"sortUnitData('staffSubcategory_Label')\\\" [ngClass]=\\\"getFieldOrderBy('staffSubcategory_Label')\\\"></span>\\n\\t\\t\\t\\t       \\t<app-simple-select-box\\n\\t\\t\\t\\t\\t\\t\\tfieldName = \\\"staffSubcategory_Label\\\" \\n\\t\\t\\t\\t\\t\\t\\tfieldText = \\\"\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldItemName=\\\"lookupValueName\\\"\\n\\t\\t\\t\\t\\t\\t\\tisLabel = \\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldModel] = \\\"staffSubCategoryId\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldPlaceholder = \\\"Select\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldRequired] = \\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldList] = \\\"staffOfficalCategoryData\\\"\\n\\t\\t\\t\\t\\t\\t\\t(inputChange) = \\\"onSelectChange($event, 'staffSubcategory_Label', 'lookupValueName')\\\">\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</app-simple-select-box>\\n\\t\\t\\t\\t       </th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Phone Number \\n\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('contactNumber')\\\" [ngClass]=\\\"getFieldOrderBy('contactNumber')\\\"></span>\\n\\t\\t\\t\\t      \\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Phone Number\\\" [(ngModel)]=\\\"columnField['contactNumber']\\\" (ngModelChange)=\\\"selectColInput('contactNumber')\\\" >\\n\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" class=\\\"simple-actions\\\">\\n\\t\\t\\t\\t      Actions\\n\\t\\t\\t\\t      <input type=\\\"text\\\" class=\\\"form-control vis-h\\\" placeholder=\\\"Action\\\" [(ngModel)]=\\\"columnField['action']\\\" (ngModelChange)=\\\"selectColInput('action')\\\" >\\n\\t\\t\\t\\t  \\t </th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let staff of staffListData | simpleSearch: staffData | columnSearch: columnField:selectedInput | sort : unitFieldType: unitOrder | slice:ItemUserStartIndex:ItemUserEndIndex; let i = index\\\" [ngClass]=\\\"staff.isActive ? 'active' : 'notactive'\\\">\\n\\t\\t\\t\\t      <td class=\\\"name\\\">{{staff.firstName}}</td>\\n\\t\\t\\t\\t      <td class=\\\"name\\\">{{staff.emailId}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{staff.staffCategory_Label}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{staff.staffSubcategory_Label}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{staff.contactNumber}}</td>\\n\\t\\t\\t\\t      <td class=\\\"simple-actions\\\">\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t      \\tclass=\\\"mr-2\\\" \\n\\t\\t\\t\\t      \\tplacement=\\\"top\\\" [ngbPopover]=\\\"popAddCheckInContent\\\" triggers=\\\"mouseenter:mouseleave\\\"\\n\\t\\t\\t\\t      \\trouterLink=\\\"/ams/staff/edit-staff/{{staff.staffId}}\\\" \\n\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon edit\\\" name=\\\"edit\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" (click)=\\\"showConfirmModal(staff.staffId)\\\"><i-feather class=\\\"icon delete\\\" name=\\\"trash\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\t\\t\\t\\n\\t\\t\\t<app-pagination \\n\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t\\t</app-pagination> -->\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n</div>\\n\\n\\n\"","export default \"<p>\\n  staff-overtime works!\\n</p>\\n\"","export default \"<p>\\n  staff-payroll works!\\n</p>\\n\"","export default \"<p>\\n  staff-reports works!\\n</p>\\n\"","export default \"<div class=\\\"staff-setup-wrapper\\\">\\n\\n\\t<h5 class=\\\"mb-3\\\">\\n\\t\\t<span *ngIf=\\\"!isEditStaffCategory\\\">Add Staff Category</span>\\n\\t\\t<span *ngIf=\\\"isEditStaffCategory\\\">Edit Staff Category</span>\\n\\t</h5>\\n\\n\\t<div class=\\\"card mb-30\\\">\\n\\t\\t\\n\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t<app-alert-message [message]=\\\"errorMessage\\\" [isAlert]=\\\"isError\\\"></app-alert-message>\\n\\n\\t\\t\\t<app-loader *ngIf=\\\"!isStaffLoaded\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"isStaffLoaded\\\">\\n\\n\\t\\t\\t\\t<form #addStaffForm = \\\"ngForm\\\" name=\\\"addStaffForm\\\" (ngSubmit)=\\\"submitStaffForm(addStaffForm)\\\"  novalidate>\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t                    <label>Category*</label>\\n\\t\\t\\t                    <select \\n\\t\\t\\t\\t\\t\\t\\t        name=\\\"staffType\\\" \\n\\t\\t\\t\\t\\t\\t\\t        id=\\\"staffType\\\" \\n\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"staffType\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of staffCategoryData\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Sub Category*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter text\\\" name=\\\"staffCategory\\\" [(ngModel)]=\\\"staffCategory\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline mt-25\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addStaffForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n\\t<app-loader *ngIf=\\\"!isCategoryDataLoaded\\\"></app-loader>\\n\\n\\t<div class=\\\"card table-card mb-30\\\" *ngIf=\\\"isCategoryDataLoaded\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>Offical Staffs</h5>\\n    \\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\\"card-body p-0\\\">\\n\\t\\t\\n\\t\\t<table class=\\\"table\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('status')\\\">Category <span [ngClass]=\\\"getFieldOrderBy('status')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('subcategory')\\\">Supervisor <span [ngClass]=\\\"getFieldOrderBy('subcategory')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('level1')\\\">Level-1 <span [ngClass]=\\\"getFieldOrderBy('level1')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('level2')\\\">Level-2 <span [ngClass]=\\\"getFieldOrderBy('level2')\\\"></span></th>\\n\\t\\t\\t\\t      <!-- <th scope=\\\"col\\\" (click)=\\\"sortUnitData('l1day')\\\">L1 Escdays<span [ngClass]=\\\"getFieldOrderBy('l1day')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('l2day')\\\">L2 Escdays<span [ngClass]=\\\"getFieldOrderBy('l1day')\\\"></span></th> -->\\n\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Action</th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let category of categoryOffcialListData | sort : unitFieldType: unitOrder | slice:ItemUserStartIndex:ItemUserEndIndex | simpleSearch: categoryOffcialData ; let i = index\\\">\\n\\t\\t\\t\\t      <td>{{category.lookupValueName}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\"></td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\"></td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\"></td>\\n\\t\\t\\t\\t      <!-- <td class=\\\"grey\\\"></td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\"></td> -->\\n\\t\\t\\t\\t      <td>\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\" class=\\\"mr-2\\\" (click)=\\\"staffType=115;editStaffCategory(category)\\\">\\n\\t\\t\\t\\t      \\t\\t<i-feather class=\\\"icon edit\\\" name=\\\"edit\\\"></i-feather>\\n\\t\\t\\t\\t      \\t</a>\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\" (click)=\\\"staffDeleteTypeId=115;showConfirmModal(i);\\\"><i-feather class=\\\"icon delete\\\" name=\\\"trash\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n\\n\\t<div class=\\\"card table-card mb-30\\\" *ngIf=\\\"isCategoryDataLoaded\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>Personal Staffs</h5>\\n    \\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\\"card-body p-0\\\">\\n\\t\\t\\n\\t\\t<table class=\\\"table\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('status')\\\">Category <span [ngClass]=\\\"getFieldOrderBy('status')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('subcategory')\\\">Supervisor <span [ngClass]=\\\"getFieldOrderBy('subcategory')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('level1')\\\">Level-1 <span [ngClass]=\\\"getFieldOrderBy('level1')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('level2')\\\">Level-2 <span [ngClass]=\\\"getFieldOrderBy('level2')\\\"></span></th>\\n\\t\\t\\t\\t       <!-- <th scope=\\\"col\\\" (click)=\\\"sortUnitData('l1day')\\\">Escalation to L1 day<span [ngClass]=\\\"getFieldOrderBy('l1day')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('l2day')\\\">Escalation to L2day<span [ngClass]=\\\"getFieldOrderBy('l1day')\\\"></span></th> -->\\n\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Action</th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let category of categoryPersonalListData | simpleSearch: categoryPersonalData | sort : unitFieldType: unitOrder | slice:ItemUserStartIndex:ItemUserEndIndex ; let i = index\\\">\\n\\t\\t\\t\\t      <td>{{category.lookupValueName}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\"></td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\"></td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\"></td>\\n\\t\\t\\t\\t       <!-- <td class=\\\"grey\\\"></td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\"></td> -->\\n\\t\\t\\t\\t      <td>\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\" class=\\\"mr-2\\\" (click)=\\\"staffType=116;editStaffCategory(category)\\\">\\n\\t\\t\\t\\t      \\t\\t<i-feather class=\\\"icon edit\\\" name=\\\"edit\\\"></i-feather>\\n\\t\\t\\t\\t      \\t</a>\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\" (click)=\\\"staffDeleteTypeId=116;showConfirmModal(i)\\\"><i-feather class=\\\"icon delete\\\" name=\\\"trash\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n\\t<app-staff-gates></app-staff-gates>\\n\\n\\t<app-staff-shifts></app-staff-shifts>\\n\\n</div>\"","export default \"<div class=\\\"staff-shifts-wrapper\\\">\\n\\n\\t<div class=\\\"card mb-30 table-card\\\">\\n\\t\\t\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All Shifts <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<div class=\\\"float-right\\\">\\n    \\t\\t\\t\\n    \\t\\t\\t<ul class=\\\"list-inline\\\">\\n\\t    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n\\t    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n\\t    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"shiftData\\\" >\\n\\t    \\t\\t\\t</li>\\n\\t    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\n\\t    \\t\\t\\t\\t<a class=\\\"btn lime-green\\\" (click)=\\\"addShift()\\\">\\n\\t    \\t\\t\\t\\t\\t<i-feather class=\\\"icon plus\\\" name=\\\"plus\\\"></i-feather>\\n\\t    \\t\\t\\t\\t\\t<span>Add Shift</span>\\n\\t    \\t\\t\\t\\t</a>\\n\\n    \\t\\t\\t\\t</li>\\n    \\t\\t\\t</ul>\\n\\n    \\t\\t</div>\\n  \\t\\t</div>\\n\\n\\t\\t<div class=\\\"card-body p-0\\\" *ngIf=\\\"isShiftTableLoaded\\\">\\n  \\t\\t\\t\\n  \\t\\t\\t<table class=\\\"table\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('shiftType')\\\">Shift Type<span [ngClass]=\\\"getFieldOrderBy('shiftType')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('startTime')\\\">Shift Start Time<span [ngClass]=\\\"getFieldOrderBy('startTime')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('totalHours')\\\">Total (Hrs)<span [ngClass]=\\\"getFieldOrderBy('totalHours')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Action</th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let shift of shiftsListData | sort : unitFieldType: unitOrder | slice:ItemUserStartIndex:ItemUserEndIndex | simpleSearch: shiftData ; let i = index\\\">\\n\\t\\t\\t\\t      <td class=\\\"name text-capitalize\\\">{{getShiftType(shift.shiftTypeId)}}</td>\\n\\t\\t\\t\\t      <td class=\\\"name\\\">{{shift.startTime}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{shift.totalHours}}</td>\\n\\t\\t\\t\\t      <td>\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t      \\tclass=\\\"mr-2\\\" \\n\\t\\t\\t\\t      \\t(click)=\\\"editShift(shift)\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon edit\\\" name=\\\"edit\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" (click)=\\\"showConfirmModal(shift)\\\"><i-feather class=\\\"icon delete\\\" name=\\\"trash\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\t\\t\\t\\n\\t\\t\\t<app-pagination \\n\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t\\t</app-pagination>\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n\\n\\t<div class=\\\"add-shift-card\\\" *ngIf=\\\"isAddShiftLoaded\\\">\\n\\n\\t\\t<div class=\\\"card mb-30\\\">\\n\\t\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t\\t<div class=\\\"float-left\\\">\\n\\t    \\t\\t\\t<h5 *ngIf=\\\"!isEditShift\\\">Add Staff Shifts</h5>\\n\\t    \\t\\t\\t<h5 *ngIf=\\\"isEditShift\\\">Edit Staff Shifts</h5>\\n\\t    \\t\\t</div>\\n\\t    \\t\\t<div class=\\\"float-right\\\" (click)=\\\"closeShift()\\\">\\n\\t\\t\\t\\t\\t<i-feather class=\\\"icon del\\\" name=\\\"x\\\" width=\\\"20\\\"></i-feather>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<app-loader *ngIf=\\\"!isShiftsLoaded\\\"></app-loader>\\n\\n\\t\\t\\t\\t<ng-container *ngIf=\\\"isShiftsLoaded\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<form #addShiftForm = \\\"ngForm\\\" name=\\\"addShiftForm\\\" (ngSubmit)=\\\"submitShiftsForm(addShiftForm)\\\"  novalidate>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t                   <label>Shift Type*</label>\\n\\t\\t\\t\\t                   <select \\n\\t\\t\\t\\t\\t\\t\\t\\t        name=\\\"shiftTypeId\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t        id=\\\"shiftTypeId\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"shiftTypeId\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of shiftTypeList\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t\\t\\t                </div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t                    <label>Shift Start Time</label>\\n\\t\\t\\t\\t                    <input class=\\\"form-control\\\" name=\\\"startTime\\\" [owlDateTime]=\\\"startTime\\\" [owlDateTimeTrigger]=\\\"startTime\\\" placeholder=\\\"Date Time\\\" [(ngModel)]=\\\"shiftStartTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time [pickerType]=\\\"'timer'\\\" #startTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"startTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t                    <label>Total hrs</label>\\n\\t\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"shiftTotalHrs\\\" [(ngModel)]=\\\"shiftTotalHrs\\\" required>\\n\\t\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline float-right\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addShiftForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n\\n</div>\"","export default \"<router-outlet></router-outlet>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9zdGFmZi1tYW5hZ2VyL2NvbXBvbmVudHMvYWRkLWVudHJ5L2FkZC1lbnRyeS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { StaffService } from 'src/app/api/controllers/Staff';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-add-entry',\n  templateUrl: './add-entry.component.html',\n  styleUrls: ['./add-entry.component.scss']\n})\nexport class AddEntryComponent implements OnInit {\n  \n  isEditEntry:boolean = false;\n\n  isEntrySubmitted:boolean = true;\n\n  isEntryError:boolean = false;\n  isEntrySuccess:boolean = false;\n  alertEntryMessage:string = \"\";\n\n\n  entry:any;\n\n  staffDataList:any;\n  gatesDataList:any;\n  shiftsDataList:any;\n  shiftsFilteredDataList:any;\n  shiftTypeList:any;\n\n  shiftType:string = \"\";\n\n  selectedStaffCateogryId:any;\n  selectedSubStaffCateogryId:any;\n  jobTitle:string = \"\";\n\n  officalStaffsDataList:any;\n  personalStaffsDataList:any;\n\n  attendanceId:any;\n\n  entryComments:string = \"\";\n\n  constructor(\n  \tprivate router: Router,\n    private route: ActivatedRoute,\n    private staffService:StaffService,\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n\n  ) { }\n\n  isAdmin(){\n    return ( this.cookieService.get('userRole') == 'Admin' || this.cookieService.get('userRole') == 'Staff') ? true : false;\n  }\n\n  isShiftSelected (){\n  \treturn this.shiftType != \"\" ? true : false;\n  }\n\n  getShifts(){\n  \tthis.shiftsFilteredDataList = this.shiftsDataList.filter(item => {\n  \t\treturn item.shiftTypeId == this.shiftType;\n  \t})\n  }\n\n  getStaffJobTitle(){\n\n  \tthis.staffService.getStaffByStaffId(this.entry.staffId).subscribe((res:any) => {\n\n  \t\tthis.selectedStaffCateogryId = res[0].staffCategoryId || null;\n  \t\tthis.selectedSubStaffCateogryId = res[0].staffSubCategoryId || null;\n\n  \t\t\n  \t\t\n  \t\tif(this.selectedStaffCateogryId != null) {\n  \t\t\t// offical staff\n  \t\t\tif(this.selectedStaffCateogryId == 115) {\n  \t\t\t\t\n  \t\t\t\tlet data = this.officalStaffsDataList.filter(item => {\n  \t\t\t\t\tif(item.lookupValueId == this.selectedSubStaffCateogryId){\n  \t\t\t\t\t\treturn item.lookupValueName;\n  \t\t\t\t\t}\n  \t\t\t\t})\n\n  \t\t\t\t if(data === undefined || data.length == 0){\n  \t\t\t\t \tthis.entry.jobTitle = \"\";\n  \t\t\t\t }\n  \t\t\t\t else {\n  \t\t\t\t \tthis.entry.jobTitle = data[0].lookupValueName;\n  \t\t\t\t }\n\n  \t\t\t\t\n\n  \t\t\t}\n  \t\t\telse {\n  \t\t\t\tlet data = this.personalStaffsDataList.filter(item => {\n  \t\t\t\t\tif(item.lookupValueId == this.selectedSubStaffCateogryId){\n  \t\t\t\t\t\treturn item.lookupValueName;\n  \t\t\t\t\t}\n  \t\t\t\t})\n  \t\t\t\tif(data === undefined || data.length == 0){\n  \t\t\t\t \tthis.entry.jobTitle = \"\";\n  \t\t\t\t }\n  \t\t\t\t else {\n  \t\t\t\t \tthis.entry.jobTitle = data[0].lookupValueName;\n  \t\t\t\t }\n  \t\t\t}\n  \t\t}\n  \t\telse {\n  \t\t\tthis.entry.jobTitle = \"\";\n  \t\t}\n\n\n  \t});\n\n  }\n\n \n\n  submitEntryForm(form) {\n\n  \tthis.isEntrySubmitted = false;\n\n    if(!this.isEditEntry) {\n\n      let details = {\n\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"staffId\": parseInt(this.entry.staffId),\n        \"inTime\": this.entry.inTime,\n        \"inGateId\": parseInt(this.entry.inGateId),\n        \"outTime\": this.entry.outTime,\n        \"outGateId\": parseInt(this.entry.outGateId),\n        \"shiftId\": parseInt(this.entry.shiftId),\n        \"notes\": this.entryComments,\n        \"isActive\": true,\n        \"insertedBy\": parseInt(this.cookieService.get('userId')),\n        \"insertedOn\": \"2019-12-04T05:43:41.299Z\",\n        \"updatedBy\": 0,\n        \"updatedOn\": \"2019-12-04T05:43:41.299Z\"\n\n      }\n\n      let params = {\n        attendance: details\n      }\n\n      this.staffService.addAttendance(params).subscribe((res:any) => {\n       \n       if(res.message){\n         this.isEntrySubmitted = true;\n         this.sharedService.setAlertMessage(\"Entry added successfully\");\n        this.router.navigate(['ams/staff/attendance']);\n       }\n       else {\n         this.isEntrySubmitted = true;\n         this.isEntryError = true;\n         this.alertEntryMessage = res.errorMessage;\n       }\n\n      },\n      error => {\n        this.isEntrySubmitted = true;\n      this.isEntryError = true;\n      this.alertEntryMessage = \"Some error occured\";\n      }\n      );\n\n    }\n\n  \telse {\n\n      let details = {\n        \"attendanceId\":parseInt(this.route.params['value'].id),\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"staffId\": parseInt(this.entry.staffId),\n        \"inTime\": this.entry.inTime,\n        \"inGateId\": parseInt(this.entry.inGateId),\n        \"outTime\": this.entry.outTime,\n        \"outGateId\": parseInt(this.entry.outGateId),\n        \"shiftId\": parseInt(this.entry.shiftId),\n        \"notes\": this.entryComments,\n        \"isActive\": true,\n        \"insertedBy\": 0,\n        \"insertedOn\": \"2019-12-04T05:43:41.299Z\",\n        \"updatedBy\": parseInt(this.cookieService.get('userId')),\n        \"updatedOn\": \"2019-12-04T05:43:41.299Z\"\n\n      }\n\n      let params = {\n        attendance: details\n      }\n\n      this.staffService.updateAttendance(params).subscribe((res:any) => {\n       \n       if(res.message){\n         this.isEntrySubmitted = true;\n         this.sharedService.setAlertMessage(\"Entry updated successfully\");\n        this.router.navigate(['ams/staff/attendance']);\n       }\n       else {\n         this.isEntrySubmitted = true;\n         this.isEntryError = true;\n         this.alertEntryMessage = res.errorMessage;\n       }\n\n      },\n      error => {\n        this.isEntrySubmitted = true;\n        this.isEntryError = true;\n        this.alertEntryMessage = \"Some error occured\";\n      }\n      );\n\n    }\n\n\t\n\n  }\n\n  ngOnInit() {\n\n  \tthis.entry = {};\n  \tthis.entry.staffId = \"\";\n  \tthis.entry.inGateId = \"\";\n  \tthis.entry.outGateId = \"\";\n  \tthis.entry.shiftId = \"\";\n\n\n    if(this.route.params['value'].id != undefined) {\n      \n      this.isEditEntry = true;\n\n      this.attendanceId = this.route.params['value'].id;\n      \n      this.staffService.getAttendanceByAttendanceId(this.route.params['value'].id).subscribe((res:any) => {\n          \n        this.entry = res[0];\n        this.getStaffJobTitle();\n\n        this.staffService.getShiftByShiftId(this.entry.shiftId).subscribe((res:any) => {\n           \n           this.shiftType = res[0].shiftTypeId.toString();\n           this.getShifts();\n\n        },\n        error => {\n          \n        });\n\n\n      },\n      error => {\n        \n      }\n      );\n\n    }\n\n    let params = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n\n  \tthis.staffService.getAllStaffsByApartmentId(params).subscribe((res:any) => {\n       \n \t\tthis.staffDataList = res.filter(item => {\n \t\t\treturn item.isActive;\n \t\t});\n\n \t\t\n\n\n    },\n    error => {\n      \n    }\n    );\n\n    let gatesParams = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n\n    this.staffService.getAllGatesByApartmentId(gatesParams).subscribe((res:any) => {\n       \n \t\tthis.gatesDataList = res.filter(item => {\n \t\t\treturn item.isActive;\n \t\t});\n\n\n    },\n    error => {\n      \n    }\n    );\n\n    let shiftParams = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n\n    this.staffService.getAllShiftsByApartmentId(shiftParams).subscribe((res:any) => {\n       \n \t\tthis.shiftsDataList = res.filter(item => {\n \t\t\treturn item.isActive;\n \t\t});\n\n \t\t\n\n    },\n    error => {\n      \n    }\n    );\n\n\n    //get all shift types\n\n    let shiftTypeParams = {\n      LookupTypeId: 28\n    }\n\n    this.lookupService.getLookupValueByLookupTypeId(shiftTypeParams).subscribe((res:any) => {\n       \n \t\tthis.shiftTypeList = res.filter(item => {\n \t\t\treturn item.isActive;\n \t\t});\n\n\n    },\n    error => {\n      \n    }\n    );\n\n    let officalListParams = {\n      LookupTypeId: 26\n    }\n\n    //get all offical staff \n    this.lookupService.getLookupValueByLookupTypeId(officalListParams).subscribe((res:any) => {\n       \n \t\tthis.officalStaffsDataList = res.filter(item => {\n \t\t\treturn item.isActive;\n \t\t});\n\n    },\n    error => {\n      \n    }\n    );\n\n    let personalListParams = {\n      LookupTypeId: 27\n    }\n\n    //get all personal staffs \n    this.lookupService.getLookupValueByLookupTypeId(personalListParams).subscribe((res:any) => {\n       \n \t\tthis.personalStaffsDataList = res.filter(item => {\n \t\t\treturn item.isActive;\n \t\t});\n\n\n    },\n    error => {\n      \n    }\n    );\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9zdGFmZi1tYW5hZ2VyL2NvbXBvbmVudHMvYWRkLXN0YWZmL2FkZC1zdGFmZi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { UserService } from 'src/app/api/controllers/User';\nimport { StaffService } from 'src/app/api/controllers/Staff';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-add-staff',\n  templateUrl: './add-staff.component.html',\n  styleUrls: ['./add-staff.component.scss']\n})\nexport class AddStaffComponent implements OnInit {\n  \n  isEditStaff:boolean = false;\n\n  isStaffSubmitted:boolean = false;\n  isStaffAdded:boolean = false;\n  isAdminRegister:boolean = false;\n  isStaffError:boolean = false;\n  isStaffSuccess:boolean = false;\n  alertStaffMessage:string = \"\";\n  userRoleId:string = \"\";\n  userType:any;\n  bloodGroupData:any;\n\n  staff:any;\n\n  vendorType:string = \"\";\n  vendorNameList:any;\n\n  isTypeSelected:boolean = false;\n\n  staffTypeData:any;\n  staffCategoryData:any;\n\n  isFileAdded:boolean = false;\n  selectedFile: File;\n  fileList: File[] = [];\n  listOfFiles: any[] = [];\n\n\n  isPhotoAdded:boolean = false;\n  selectedPhoto: File;\n  photoList: File[] = [];\n  listOfPhotos: any[] = [];\n\n  userId:any = null;\n  staffId:any = null;\n\n  genderType:string = null;\n  userRolesData:Array<any>=[];\n  userTypeList:Array<any>=[];\n\n  @Input ('index') index;\n  @Input ('array') staffArray;\n\n  @Output() public outputParams = new EventEmitter();\n\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private userService:UserService,\n    private staffService:StaffService,\n    private lookupService:LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) { }\n\n  isArrayOne(){\n    return this.staffArray.length > 1 ? true : false;\n  }\n\n  deleteStaff(){\n    this.staffArray.splice(this.index, 1);\n    this.outputParams.emit(this.staffArray);\n  }\n\n  uploadFile(event){\n    this.isFileAdded = true;\n\n    for (var i = 0; i <= event.target.files.length - 1; i++) {\n      var selectedFile = event.target.files[i];\n      this.fileList.push(selectedFile);\n      this.listOfFiles.push({'name':selectedFile.name, 'size':selectedFile.size})\n    }\n\n  }\n\n  deleteFile(index){\n    // Delete the item from fileNames list\n    this.listOfFiles.splice(index, 1);\n    // delete file from FileList\n    this.fileList.splice(index, 1);\n\n    this.selectedFile = null;\n\n    if(this.fileList.length == 0 && this.listOfFiles.length == 0){\n      this.isFileAdded = false;\n    }\n\n  }\n\n  uploadPhoto(event){\n    this.isPhotoAdded = true;\n\n    for (var i = 0; i <= event.target.files.length - 1; i++) {\n      var selectedPhoto = event.target.files[i];\n      this.photoList.push(selectedPhoto);\n      this.listOfPhotos.push({'name':selectedPhoto.name, 'size':selectedPhoto.size})\n    }\n\n  }\n\n  deletePhoto(index){\n    // Delete the item from fileNames list\n    this.listOfPhotos.splice(index, 1);\n    // delete file from FileList\n    this.photoList.splice(index, 1);\n\n    this.selectedPhoto = null;\n\n    if(this.photoList.length == 0 && this.listOfPhotos.length == 0){\n      this.isPhotoAdded = false;\n    }\n\n  }\n\n  bytesToSize(bytes) {\n   if(bytes < 1024) return bytes + \" Bytes\";\n    else if(bytes < 1048576) return(bytes / 1024).toFixed(3) + \" KB\";\n    else if(bytes < 1073741824) return(bytes / 1048576).toFixed(3) + \" MB\";\n    else return(bytes / 1073741824).toFixed(3) + \" GB\";\n  }\n\n  isCategoryEnabled(){\n    if(!this.isEditStaff){\n      if(this.isTypeSelected)\n        return true;\n      else\n        return false;\n    }\n    else{\n      return true;\n    }\n  }\n\n  getStaffType(typeId){\n\n    this.isTypeSelected = true;\n\n    if(typeId == \"115\"){\n\n      let params = {\n        LookupTypeId: 26\n      }\n\n      //staff offical category\n      this.lookupService.getLookupValueByLookupTypeId(params).subscribe((res:any) => {\n            \n        this.staffCategoryData = res.filter( item => {\n          return item.isActive;\n        });\n        \n      },\n      error => {\n        \n      }\n      );\n\n    }\n\n    else {\n\n      let params = {\n        LookupTypeId: 27\n      }\n\n      //staff personal category\n      this.lookupService.getLookupValueByLookupTypeId(params).subscribe((res:any) => {\n            \n        this.staffCategoryData = res.filter( item => {\n          return item.isActive;\n        });\n      },\n      error => {\n        \n      }\n      );\n\n    }\n\n  }\n\n  isVendor(){\n    return this.vendorType == 'Yes' ? true : false;\n  }\n\n  submitAddStaffForm(form) {\n\n    this.isStaffSubmitted = true;\n    this.isStaffError = false;\n\n    if(!this.isEditStaff) {\n\n      //add user\n      let userDetails = {\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"firstName\": this.staff.firstName,\n        \"middleName\": \"\",\n        \"lastName\": this.staff.lastName,\n        \"emailId\": this.staff.emailId,\n        \"password\": this.staff.password,\n        \"salt\": null,\n        \"address1\": this.staff.address || \"\",\n        \"address2\": \"\",\n        \"city\": \"\",\n        \"state\": \"\",\n        \"country\": \"\",\n        \"zipCode\": \"\",\n        \"genderId\": parseInt(this.genderType),\n        \"dob\": this.staff.dob,\n        \"joinedOn\": \"2019-11-10T09:58:08.934Z\",\n        \"bloodGroup\": this.staff.bloodGroup,\n        \"phoneNumber\": this.staff.contactNumber.toString(),\n        \"emergencyContactNumber\": \"\",\n        \"emergencyContactPerson\": \"\",\n        \"emergencyContactNumberSecondary\": \"\",\n        \"emergencyContactPersonSecondary\": \"\",\n        \"accessCardNumber\": \"\",\n        \"notes\": \"\",\n        \"profilePictureId\": null,\n        \"isLiving\": true,\n        \"isActive\": true,\n        \"isApproved\": true,\n        \"resetPassword\": true,\n        \"insertedBy\": parseInt(this.cookieService.get('userId')),\n        \"updatedBy\": 0\n      }\n\n      let userParams = {\n        user: userDetails\n      }\n\n      //add user \n      this.userService.addUser(userParams).subscribe((res:any) => {\n            \n            if(res.message) {\n\n              this.userId = res.message;\n              let roleId;\n              if(this.userType == 1){\n                roleId = this.userRoleId;\n              }else{\n                roleId = 5;\n              }\n                let userRole = {\n                  \"userId\": this.userId,\n                  \"roleId\": roleId,\n                  \"isActive\": true,\n                  \"insertedBy\": parseInt(this.cookieService.get('userId')),\n                  \"insertedOn\": \"2019-11-10T10:00:28.212Z\",\n                  \"updatedBy\": 0,\n                  \"updatedOn\": \"2019-11-10T10:00:28.212Z\"\n                } \n\n                let roleParams = {\n                  userRole: userRole\n                }\n\n                //add userrole\n                this.userService.addUserRole(roleParams).subscribe((res:any) => {\n\n                  if(res.message) {\n\n                    let staffDetails = {\n\n                      \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n                      \"userId\": this.userId,\n                      \"firstName\": this.staff.firstName,\n                      \"middleName\": \"\",\n                      \"lastName\": this.staff.lastName,\n                      \"emailId\": this.staff.emailId,\n                      \"contactNumber\": this.staff.contactNumber.toString(),\n                      \"alternateContact\": this.staff.alternateContact.toString(),\n                      \"staffNumber\": null,\n                      \"staffCategoryId\": parseInt(this.staff.staffCategoryId),\n                      \"staffSubCategoryId\": parseInt(this.staff.staffSubCategoryId),\n                      \"dob\": this.staff.dob,\n                      \"genderId\": parseInt(this.genderType),\n                      \"bloodGroup\": this.staff.bloodGroup,\n                      \"vendorId\": null,\n                      \"vehicleId\": null,\n                      \"healthIssue\": this.staff.healthIssue,\n                      \"comments\": this.staff.comments,\n                      \"plannedEntryTime\": this.staff.plannedEntryTime,\n                      \"plannedExitTime\": this.staff.plannedExitTime,\n                      \"jobStartDate\": this.staff.jobStartDate,\n                      \"jobEndDate\": this.staff.jobEndDate,\n                      \"mtwtfss\": \"\",\n                      \"photoId\": 4,\n                      \"idcardImg1\": null,\n                      \"idcardImg2\": null,\n                      \"vacationLeaveDays\": parseInt(this.staff.vacationLeaveDays),\n                      \"sickLeaveDays\": parseInt(this.staff.sickLeaveDays),\n                      \"basePay\": this.staff.basePay,\n                      \"overtimePayperhour\": this.staff.overtimePayperhour,\n                      \"allowance1\": this.staff.allowance1,\n                      \"allowance2\": this.staff.allowance2,\n                      \"allowance3\": this.staff.allowance3,\n                      \"deduction1\": this.staff.deduction1,\n                      \"deduction2\": this.staff.deduction2,\n                      \"deduction3\": this.staff.deduction3,\n                      \"perDaySalary\": this.staff.perDaySalary,\n                      \"shiftId\": null,\n                      \"jobTitleId\": parseInt(this.staff.staffSubCategoryId),\n                      \"isActive\": true,\n                      \"insertedBy\": parseInt(this.cookieService.get('userId')),\n                      \"insertedOn\": \"2019-11-30T12:41:45.620Z\",\n                      \"updatedBy\": parseInt(this.cookieService.get('userId')),\n                      \"updatedOn\": \"2019-11-30T12:41:45.620Z\"\n                    }\n\n                    let staffParams = {\n                      staff: staffDetails\n                    }\n\n\n                    this.staffService.addStaff(staffParams).subscribe((res:any) => {\n\n                      this.isStaffSubmitted = false;\n           \n                      if(res.message) {\n                        this.sharedService.setAlertMessage(\"Staff added successfully\");\n                        this.router.navigate(['ams/staff/maintain-staff']);\n                      }\n                      else {\n                        this.isStaffError = true;\n                        this.alertStaffMessage = res.alertTicketMessage;\n                      }\n\n                    }, error => {\n\n                      this.isStaffSubmitted = false;\n                      this.isStaffError = true;\n                      this.alertStaffMessage = res.errorMessage;\n\n                    });\n\n\n                  }\n\n                },\n                error => {\n                  console.log(error);\n                }\n                );\n\n            }\n            else {\n\n              this.isStaffSubmitted = false;\n              this.isStaffError = true;\n              this.alertStaffMessage = res.errorMessage;\n\n            }\n\n      },\n      error => {\n        \n      }\n      );\n\n\n    }\n    else {\n\n      this.isStaffSubmitted = true;\n      this.isStaffError = false;\n\n      //edit user\n      let userDetails = {\n        \"userId\": this.userId,\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"firstName\": this.staff.firstName,\n        \"middleName\": \"string\",\n        \"lastName\": this.staff.lastName,\n        \"emailId\": this.staff.emailId,\n        \"password\": this.staff.password,\n        \"salt\": null,\n        \"address1\": this.staff.address || \"\",\n        \"address2\": \"string\",\n        \"city\": \"string\",\n        \"state\": \"string\",\n        \"country\": \"string\",\n        \"zipCode\": \"string\",\n        \"genderId\": parseInt(this.genderType),\n        \"dob\": this.staff.dob,\n        \"joinedOn\": \"2019-11-10T09:58:08.934Z\",\n        \"bloodGroup\": this.staff.bloodGroup,\n        \"phoneNumber\": this.staff.contactNumber.toString(),\n        \"emergencyContactNumber\": \"string\",\n        \"emergencyContactPerson\": \"string\",\n        \"emergencyContactNumberSecondary\": \"string\",\n        \"emergencyContactPersonSecondary\": \"string\",\n        \"accessCardNumber\": \"string\",\n        \"notes\": \"string\",\n        \"profilePictureId\": null,\n        \"isLiving\": true,\n        \"isActive\": true,\n        \"isApproved\": true,\n        \"resetPassword\": true,\n        \"insertedBy\": 0,\n        \"updatedBy\": parseInt(this.cookieService.get('userId'))\n      }\n\n      let userParams = {\n        user: userDetails\n      }\n\n       //edit user \n      this.userService.updateUser(userParams).subscribe((res:any) => {\n            \n            if(res.message) {\n\n              let staffDetails = {\n                  \"staffId\": this.route.params['value'].id,\n                  \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n                  \"userId\": this.userId,\n                  \"firstName\": this.staff.firstName,\n                  \"middleName\": \"string\",\n                  \"lastName\": this.staff.lastName,\n                  \"emailId\": this.staff.emailId,\n                  \"contactNumber\": this.staff.contactNumber.toString(),\n                  \"alternateContact\": this.staff.alternateContact.toString(),\n                  \"staffNumber\": null,\n                  \"staffCategoryId\": parseInt(this.staff.staffCategoryId),\n                  \"staffSubCategoryId\": parseInt(this.staff.staffSubCategoryId),\n                  \"dob\": this.staff.dob,\n                  \"genderId\": parseInt(this.genderType),\n                  \"bloodGroup\": this.staff.bloodGroup,\n                  \"vendorId\": null,\n                  \"vehicleId\": null,\n                  \"healthIssue\": this.staff.healthIssue,\n                  \"comments\": this.staff.comments,\n                  \"plannedEntryTime\": this.staff.plannedEntryTime,\n                  \"plannedExitTime\": this.staff.plannedExitTime,\n                  \"jobStartDate\": this.staff.jobStartDate,\n                  \"jobEndDate\": this.staff.jobEndDate,\n                  \"mtwtfss\": \"string\",\n                  \"photoId\": 4,\n                  \"idcardImg1\": null,\n                  \"idcardImg2\": null,\n                  \"vacationLeaveDays\": parseInt(this.staff.vacationLeaveDays),\n                  \"sickLeaveDays\": parseInt(this.staff.sickLeaveDays),\n                  \"basePay\": this.staff.basePay,\n                  \"overtimePayperhour\": this.staff.overtimePayperhour,\n                  \"allowance1\": this.staff.allowance1,\n                  \"allowance2\": this.staff.allowance2,\n                  \"allowance3\": this.staff.allowance3,\n                  \"deduction1\": this.staff.deduction1,\n                  \"deduction2\": this.staff.deduction2,\n                  \"deduction3\": this.staff.deduction3,\n                  \"perDaySalary\": this.staff.perDaySalary,\n                  \"shiftId\": null,\n                  \"jobTitleId\": parseInt(this.staff.staffSubCategoryId),\n                  \"isActive\": true,\n                  \"insertedBy\": 0,\n                  \"insertedOn\": \"2019-11-30T12:41:45.620Z\",\n                  \"updatedBy\": parseInt(this.cookieService.get('userId')),\n                  \"updatedOn\": \"2019-11-30T12:41:45.620Z\"\n               }\n\n               let staffParams = {\n                staff: staffDetails\n              }\n\n               //edit staff\n               this.staffService.updateStaff(staffParams).subscribe((res:any) => {\n\n                  this.isStaffSubmitted = false;\n       \n                  if(res.message) {\n                    //this.isStaffSuccess = true;\n                    //this.alertStaffMessage = \"Staff updated successfully\";\n                    //this.staffId = res.message;\n                    this.sharedService.setAlertMessage(\"Staff updated successfully\");\n                    this.router.navigate(['ams/staff/maintain-staff']);\n\n                  }\n                  else {\n                    this.isStaffError = true;\n                    this.alertStaffMessage = res.alertTicketMessage;\n                  }\n\n                }, error => {\n\n                  this.isStaffSubmitted = false;\n                  this.isStaffError = true;\n                  this.alertStaffMessage = res.errorMessage;\n\n              });\n\n\n            }\n            else {\n\n              this.isStaffSubmitted = false;\n              this.isStaffError = true;\n              this.alertStaffMessage = res.errorMessage;\n\n            }\n\n      });\n\n    }\n\n  }\n\n  changeUserType(evt){\n    this.isAdminRegister = false;\n    if(this.userType == 1){\n      this.isAdminRegister = true;\n    }else if(this.userType == 3){\n      this.isAdminRegister = false;\n    }\n}\n\n  ngOnInit() {\n\n  \tthis.staff = {};\n    this.staff.bloodGroup = \"\";\n    this.staff.staffCategoryId = \"\";\n    this.staff.staffSubCategoryId = \"\";\n    this.staff.contactNumber = \"\";\n    this.staff.alternateContact = \"\";\n\n    if(this.route.params['value'].id != undefined) {\n      \n      this.isEditStaff = true;\n      this.isStaffAdded = true;\n\n      this.staffId = this.route.params['value'].id;\n      \n      this.staffService.getStaffByStaffId(this.route.params['value'].id).subscribe((res:any) => {\n          \n        this.staff = res[0];\n        this.userId = this.staff.userId;\n        this.genderType = this.staff.genderId.toString();\n        this.getStaffType(this.staff.staffCategoryId);\n\n      },\n      error => {\n        \n      }\n      );\n\n    }\n\n    let groupParams = {\n      LookupTypeId: 24\n    }\n\n    this.lookupService.getLookupValueByLookupTypeId(groupParams).subscribe((res:any) => {\n      this.bloodGroupData = res;\n    });\n\n    let staffParams = {\n      LookupTypeId: 25\n    }\n\n    //staff type\n    this.lookupService.getLookupValueByLookupTypeId(staffParams).subscribe((res:any) => {\n          \n       this.staffTypeData = res.filter( item => {\n          return item.isActive;\n       });\n\n    },\n    error => {\n      \n    }\n    );\n\n    let categoryParams = {\n      LookupTypeId: 26\n    }\n\n    //category type\n    this.lookupService.getLookupValueByLookupTypeId(categoryParams).subscribe((res:any) => {\n          \n       this.staffCategoryData = res.filter( item => {\n          return item.isActive;\n        });\n\n    },\n    error => {\n      \n    }\n    );\n\n    //user Type List\n\n    this.userService.getAllRoleTypes().subscribe(\n      (resp:any) =>{\n        this.userTypeList = resp;\n      }\n    )\n    //Admin Role Type\n    var paramsRoles ={\n      RoleTypeId : 1,\n      ApartmentId : parseInt(this.cookieService.get('apartmentId'))\n    }\n\n    this.userService.getAllRolesByRoleTypeIdByApartmentId(paramsRoles).subscribe((res:any) => {\n      console.log(res);\n      this.userRolesData = res;\n      \n    });\n\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9zdGFmZi1tYW5hZ2VyL2NvbXBvbmVudHMvc3RhZmYtYXR0ZW5kYW5jZS9zdGFmZi1hdHRlbmRhbmNlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\n\nimport { StaffService } from 'src/app/api/controllers/Staff';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport{Router} from '@angular/router'\nimport * as _ from 'underscore';\nimport * as moment from 'moment'\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\nimport { ConstantsService } from 'src/app/shared/services/constants.service';\n@Component({\n  selector: 'app-staff-attendance',\n  templateUrl: './staff-attendance.component.html',\n  styleUrls: ['./staff-attendance.component.scss']\n})\nexport class StaffAttendanceComponent implements OnInit {\n  \n  entryListData:any;\n\n  isEntryDataLoaded:boolean = false;\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n\n  entry:any;\n  entryData:string = \"\";\n\n  staffDetails:any;\n  gateDataList:any;\n\n  officalStaffsDataList:any;\n  personalStaffsDataList:any;\n\n  selectedInput:string = \"\";\n  columnField: any = {}\n\n  columnData:any ;\n  gridSourceData:any;\n\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n  constructor(\n    private staffService:StaffService,\n    private lookupService: LookupService,\n\tprivate cookieService: CookieService,\n\tprivate constantsService:ConstantsService,\n\tprivate router:Router\n  ) { }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  selectColInput(value){\n    this.selectedInput = value;\n  }\n\n  onSelectChange(event, type, name){\n\n    if(!_.isEmpty(event)){\n      this.selectedInput = type;\n      this.columnField[type] = event[name];\n    }\n    else {\n       this.columnField = {};\n    }\n    \n  }\n\n  getInGateName(id) {\n  \t\n  \tvar data = this.gateDataList.filter( item => {\n  \t\treturn item.gateId == id;\n  \t});\n\n  \tif(data === undefined || data.length === 0) {\n  \t\tthis.entry.inGateId = \"\";\n  \t\treturn \"\"\n  \t}\n  \telse {\n  \t\tthis.entry.inGateId = data[0].gateName;\n  \t\treturn data[0].gateName;\n  \t}\n\n  }\n\n  getOutGateName(id) {\n  \t\n  \tvar data = this.gateDataList.filter( item => {\n  \t\treturn item.gateId == id;\n  \t});\n\n  \tif(data === undefined || data.length === 0) {\n  \t\tthis.entry.outGateId = \"\";\n  \t\treturn \"\"\n  \t}\n  \telse {\n  \t\tthis.entry.outGateId = data[0].gateName;\n  \t\treturn data[0].gateName;\n  \t}\n\n  }\n\n  getStaffName(id) {\n\n  \tvar data = this.staffDetails.filter( item => {\n  \t\treturn item.staffId == id;\n  \t});\n\n  \tif(data === undefined || data.length === 0) {\n  \t\tthis.entry.firstName = \"\";\n  \t\treturn \"\"\n  \t}\n  \telse {\n  \t\tthis.entry.firstName = data[0].firstName;\n  \t\treturn data[0].firstName;\n  \t}\n  \t\n\n  }\n\n\n  getJobTitle(id){\n\n  \tvar data = this.staffDetails.filter( item => {\n  \t\treturn item.staffId == id;\n  \t});\n\n  \tif(data === undefined || data.length === 0) {\n  \t\tthis.entry.jobTitle = \"\";\n  \t\treturn \"\"\n  \t}\n  \telse {\n  \t\tvar selectedStaffCateogryId = data[0].staffCategoryId;\n  \t\tvar selectedSubStaffCateogryId = data[0].staffSubCategoryId;\n\n  \t\t// offical staff\n  \t\t\tif(selectedStaffCateogryId == 115) {\n  \t\t\t\t\n  \t\t\t\tlet name = this.officalStaffsDataList.filter(item => {\n  \t\t\t\t\tif(item.lookupValueId == selectedSubStaffCateogryId){\n  \t\t\t\t\t\treturn item.lookupValueName;\n  \t\t\t\t\t}\n  \t\t\t\t})\n\n\n  \t\t\t\t if(name === undefined || name.length == 0){\n  \t\t\t\t \tthis.entry.jobTitle = \"\";\n  \t\t\t\t \treturn \"\"\n  \t\t\t\t }\n  \t\t\t\t else {\n  \t\t\t\t \tthis.entry.jobTitle = name[0].lookupValueName;\n  \t\t\t\t \treturn name[0].lookupValueName;\n  \t\t\t\t }\n\n  \t\t\t\t\n\n  \t\t\t}\n  \t\t\telse {\n  \t\t\t\tlet name = this.personalStaffsDataList.filter(item => {\n  \t\t\t\t\tif(item.lookupValueId == selectedSubStaffCateogryId){\n  \t\t\t\t\t\treturn item.lookupValueName;\n  \t\t\t\t\t}\n  \t\t\t\t})\n  \t\t\t\tif(name === undefined || name.length == 0){\n  \t\t\t\t \tthis.entry.jobTitle = \"\";\n  \t\t\t\t \treturn \"\"\n  \t\t\t\t }\n  \t\t\t\t else {\n  \t\t\t\t \tthis.entry.jobTitle = name[0].lookupValueName;\n  \t\t\t\t \treturn name[0].lookupValueName;\n  \t\t\t\t }\n  \t\t\t}\n\n\n\n  \t}\n\n  }\n\n  onGlSearchFilter() {\n\n    if(this.entryData != \"\"){\n\n      let filtergroup = new jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = this.entryData;\n      let filtercondition = 'contains';\n      let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n      filtergroup.operator = 'or';\n      filtergroup.addfilter(filter_or_operator, filterData);\n\n      this.datagrid.showfiltercolumnbackground(false);\n\n      this.columnData.forEach(item => {\n        if(item.datafield != 'Actions') {\n          this.datagrid.addfilter(item.datafield, filtergroup, true);\n        }\n      })\n\n      this.datagrid.applyfilters();\n      \n    }\n    else {\n      this.datagrid.clearfilters();\n    }\n\n  }\n  \n  @HostListener('window:onEditAttendenceStaff', ['$event.detail'])\n  onEditAttendenceStaff(detail) {\n    let dataRecord = this.datagrid.getrowdata(detail.rowId)\n    let attendanceId = dataRecord.attendanceId\n    this.router.navigateByUrl('/ams/staff/edit-entry/' + attendanceId);\n  }\n\n  ngOnInit() {\n\n\tvar cellsrenderer = (row, column, value) => {\n        return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n      }\n  \n      var columnrenderer = (value) => {\n        return '<div style=\"padding: 14px\">' + value + '</div>';\n      }\n\n      this.columnData = [{\n        text: 'Name',\n        datafield: 'apartmentId',\n        width: 120,\n        cellsrenderer: cellsrenderer,\n        renderer: columnrenderer\n      },{\n        text: 'Job itle',\n        datafield: 'attendanceId',\n        width: 120,\n        cellsrenderer: cellsrenderer,\n        renderer: columnrenderer\n      },\n      {\n          text: 'Intime',\n          datafield: 'inTime',\n          minwidth: 120,\n          cellsrenderer: (row, column, value): string => {\n            return '<div class=\"jqx-custom-inner-cell\">' + moment(value).format(this.constantsService.dateFormat) + '</div>'\n          },\n          renderer: columnrenderer\n      },\n      {\n          text: 'Outtime',\n          datafield: 'outTime',\n          minwidth: 120,\n          cellsrenderer: (row, column, value): string => {\n            return '<div class=\"jqx-custom-inner-cell\">' + moment(value).format(this.constantsService.dateFormat) + '</div>'\n          },\n          renderer: columnrenderer\n      },\n      {\n          text: 'Ingate',\n          datafield: 'inGateId',\n          minwidth: 120,\n          cellsrenderer: cellsrenderer,\n          renderer: columnrenderer\n      },\n      {\n          text: 'Outgate',\n          datafield: 'outGateId',\n          minwidth: 150,\n          cellsrenderer: cellsrenderer,\n          renderer: columnrenderer\n      },\n      {\n        text: 'Comments',\n        datafield: 'insertedBy',\n        minwidth: 120,\n        cellsrenderer: cellsrenderer,\n        renderer: columnrenderer\n    },\n      {\n          text: 'Actions',\n          cellsalign: 'center', \n          align: 'center',\n          minwidth: 120,\n          \n          cellsrenderer: (row,coloumn,value): any => {\n\t\t\treturn '<div class=\"simple-actions\">'\n\t\t\t\t\t+\t'<a href=\"javascript:void(0)\" class=\"mr-2\" onClick=\"editAttendenceStaff('+ row +')\">'\n\t\t\t\t\t+\t'<i class=\"icon fa fa-pencil edit\" aria-hidden=\"true\"></i>'\n\t\t\t\t\t+\t'</a>'\n\t\t\t\t\t+'</div>'\n          },\n          renderer: columnrenderer\n      }];\n  \tthis.entry = {};\n\n\n  \tthis.staffDetails = [];\n  \tthis.gateDataList = [];\n\n  \tthis.officalStaffsDataList = [];\n  \tthis.personalStaffsDataList = [];\n\n\tlet params = {\n\t\tapartmentId: parseInt(this.cookieService.get('apartmentId'))\n\t}\n\n  \tthis.staffService.getAllAttendancesByApartmentId(params).subscribe((res:any) => {\n\n    //filter active true items\n    this.entryListData = res.filter(data => {\n      return data.isActive\n    });\n\n    _.each(this.entryListData, item => {\n    \t\n    \tthis.staffService.getStaffByStaffId(item.staffId).subscribe((staff:any) => {\n\n    \t\tthis.staffDetails.push(staff[0]);\n\n    \t});\n\n\t});\n\tconsole.log('entryListData',this.entryListData)\n\tthis.gridSourceData = {\n\t\tlocaldata: this.entryListData,\n\t\tdatatype: \"array\"\n\t  }\n\t  this.entryListData = new jqx.dataAdapter(this.gridSourceData);\n\tlet dataListparams = {\n\t\tapartmentId: parseInt(this.cookieService.get('apartmentId'))\n\t}\n\n    //get all gates\n\tthis.staffService.getAllGatesByApartmentId(dataListparams).subscribe((res:any) => {\n\t\tthis.gateDataList = res;\n\t});\n\n\tlet officialListparams = {\n\t\tLookupTypeId: 26\n\t}\n\n\t//get all offical staff \n    this.lookupService.getLookupValueByLookupTypeId(officialListparams).subscribe((res:any) => {\n       \n \t\tthis.officalStaffsDataList = res.filter(item => {\n \t\t\treturn item.isActive;\n \t\t});\n\n    },\n    error => {\n      \n    }\n\t);\n\t\n\tlet personalListparams = {\n\t\tLookupTypeId: 27\n\t}\n\n\n    //get all personal staffs \n    this.lookupService.getLookupValueByLookupTypeId(personalListparams).subscribe((res:any) => {\n       \n \t\tthis.personalStaffsDataList = res.filter(item => {\n \t\t\treturn item.isActive;\n \t\t});\n\n\n    },\n    error => {\n      \n    }\n    );\n\n\n    this.totalItems = this.entryListData.length;\n\n    if(this.totalItems>this.itemLimit){\n      this.ItemEndIndex = this.itemLimit;\n    }\n\n    else {\n      this.ItemEndIndex = this.totalItems;\n    }\n\n    this.isEntryDataLoaded = true;\n\n  });\n  }\n\n}\n\n\nfunction editAttendenceStaff(row){\n\tvar event = new CustomEvent('onEditAttendenceStaff', {\n\t  detail: {\n\t\t  rowId: row\n\t  }\n\t})\n\twindow.dispatchEvent(event);\n  }\n  (window as any).editAttendenceStaff = editAttendenceStaff;","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9zdGFmZi1tYW5hZ2VyL2NvbXBvbmVudHMvc3RhZmYtZ2F0ZXMvc3RhZmYtZ2F0ZXMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Injector } from '@angular/core';\n\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { StaffService } from 'src/app/api/controllers/Staff';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-staff-gates',\n  templateUrl: './staff-gates.component.html',\n  styleUrls: ['./staff-gates.component.scss']\n})\nexport class StaffGatesComponent implements OnInit {\n  \n  gate:any;\n\n  isGateLoaded:boolean = true;\n\n  isGateTableLoaded:boolean = false;\n\n  modalService:any;\n\n  gateListData:any;\n\n  isAddGateLoaded:boolean = false;\n\n  isEditGate:boolean = false;\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n\n  constructor(\n  \tprivate injector: Injector,\n  \tpublic dialog: MatDialog,\n    private staffService:StaffService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) { \n  \tthis.modalService = this.injector.get(ModalService);\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  submitGateForm(form) {\n\n  \tthis.isGateLoaded = false;\n\n    if(!this.isEditGate) {\n\n      let details = {\n\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"gateName\": this.gate.gateName,\n        \"comments\": this.gate.comments,\n        \"isActive\": true,\n        \"insertedBy\": parseInt(this.cookieService.get('userId')),\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": 0,\n        \"updatedOn\": new Date().toISOString()\n\n      }\n\n      let params = {\n        gate: details\n      }\n\n      this.staffService.addGate(params).subscribe((res:any) => {\n\n        if(res.message) {\n\n          this.isGateLoaded = true;\n          this.sharedService.setAlertMessage(\"Gate added Successfully!\");\n\n          this.getAllGates();\n        }\n\n      }, error => {\n\n      })\n\n    }\n\n  \telse {\n\n      let details = {\n\n        \"gateId\": parseInt(this.gate.gateId),\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"gateName\": this.gate.gateName,\n        \"comments\": this.gate.comments,\n        \"isActive\": this.gate.isActive,\n        \"insertedBy\": parseInt(this.cookieService.get('userId')),\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": parseInt(this.cookieService.get('userId')),\n        \"updatedOn\": new Date().toISOString()\n\n      }\n\n      let params = {\n        gate: details\n      }\n\n      this.staffService.updateGate(params).subscribe((res:any) => {\n\n        if(res.message) {\n\n          this.isGateLoaded = true;\n          this.sharedService.setAlertMessage(\"Gate updated Successfully!\");\n\n          this.getAllGates();\n        }\n\n      }, error => {\n\n      })\n\n    }\n\n\t\n\n  }\n\n  getAllGates(){\n    \n    let params = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n\n  \tthis.staffService.getAllGatesByApartmentId(params).subscribe((res:any) => {\n\n  \t\tthis.isGateTableLoaded = true;\n  \t\t\n      this.gateListData = res.filter(item => {\n  \t\t\treturn item.isActive;\n  \t\t});\n\n      this.totalItems = this.gateListData.length;\n\n      if(this.totalItems>this.itemLimit){\n        this.ItemEndIndex = this.itemLimit;\n      }\n\n      else {\n        this.ItemEndIndex = this.totalItems;\n      }\n\n\n  \t}, error => {\n\n\t});\n\n  }\n\n  showConfirmModal(item) {\n    this.modalService.showConfirmModal(item);\n  }\n\n  addGate(){\n\n    this.isEditGate = false;\n    this.isAddGateLoaded = false;\n\n    setTimeout(() => {\n\n      this.isAddGateLoaded = true;\n\n    }, 10);\n\n    setTimeout(() => {\n\n      var elem = document.querySelector('.add-gate-card');\n      var scrollTo = elem.getBoundingClientRect().top - 100;\n\n      window.scroll({\n        top: scrollTo,\n        behavior: 'smooth'\n      });\n\n    }, 100);\n\n  }\n\n  editGate(id){\n\n    this.isEditGate = true;\n    this.isGateLoaded = false;\n\n    this.staffService.getGateByGateId(id).subscribe((res:any) => {\n\n      this.isGateLoaded = true;\n      this.gate = res[0];\n\n      this.isAddGateLoaded = false;\n\n      setTimeout(() => {\n\n        this.isAddGateLoaded = true;\n\n      }, 10);\n\n      setTimeout(() => {\n\n        var elem = document.querySelector('.add-gate-card');\n        var scrollTo = elem.getBoundingClientRect().top - 100;\n\n        window.scroll({\n          top: scrollTo,\n          behavior: 'smooth'\n        });\n\n      }, 100);\n\n\n    }, error => {\n\n    });\n\n\n  }\n\n  closeGate(){\n    this.isAddGateLoaded = false;\n  }\n\n  ngOnInit() {\n\n  \tthis.gate = {};\n\n  \tthis.getAllGates();\n\n\n    // delete gate\n    this.sharedService.unitlistdeleteindexcast.subscribe( item => {\n\n      if(item != null){\n\n        this.isGateTableLoaded = false;\n\n        var params = {\n          gateId: item.gateId,\n          deleteBy: parseInt(this.cookieService.get('userId'))\n        }\n\n        this.staffService.deleteGate(params).subscribe((res:any) => {\n\n          this.gateListData = this.gateListData.filter((type) => type.gateId !== item.gateId);\n          this.sharedService.setUnitListDeleteIndex(null);\n          this.isGateTableLoaded = true;\n\n        });\n\n        \n      }\n\n    });\n\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9zdGFmZi1tYW5hZ2VyL2NvbXBvbmVudHMvc3RhZmYtaW5hY3RpdmUtc3RhZmYvc3RhZmYtaW5hY3RpdmUtc3RhZmYuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Injector, HostListener, ViewChild } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\n\nimport { StaffService } from 'src/app/api/controllers/Staff';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-staff-inactive-staff',\n  templateUrl: './staff-inactive-staff.component.html',\n  styleUrls: ['./staff-inactive-staff.component.scss']\n})\nexport class StaffInactiveStaffComponent implements OnInit {\n\n  staffListData:any;\n\n  isStaffDataLoaded:boolean = false;\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n\n  staffData:string = \"\";\n\n  totalFilterItems:any;\n\n  staffTypeData:any;\n  staffOfficalCategoryData:any;\n  staffPersonalCategoryData:any;\n  staffTypeId:any;\n\n  selectedInput:string = \"\";\n  columnField: any = {}\n\n  columnData:any;\n  gridSourceData:any;\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n\n  public params = {\n    apartmentId: parseInt(this.cookieService.get('apartmentId'))\n  }\n  constructor(\n  \tprivate staffService:StaffService,\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService: CookieService,\n    private router:Router\n  ) { }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  selectColInput(value){\n    this.selectedInput = value;\n  }\n\n  onSelectChange(event, type, name){\n\n    if(!_.isEmpty(event)){\n      this.selectedInput = type;\n      this.columnField[type] = event[name];\n    }\n    else {\n       this.columnField = {};\n    }\n    \n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  getStaffCategory(id){\n     \n    var data = _.filter( this.staffTypeData, function( item ) {\n      if(item.lookupValueId === id)\n        return item;\n    });\n\n    if(data === undefined || data.length == 0){\n      return '';\n    }\n    else {\n      this.staffTypeId = data[0].lookupValueId;\n      return data[0].lookupValueName.toLowerCase();\n    }\n\n  }\n\n  getStaffSubCategory(id) {\n    if(this.staffTypeId == 115){\n\n      var data = _.filter( this.staffOfficalCategoryData, function( item ) {\n      if(item.lookupValueId === id)\n        return item;\n      } );\n      if(data === undefined || data.length == 0){\n        return '';\n      }\n      else {\n        return data[0].lookupValueName;\n      }\n\n    }\n    else {\n\n      var data = _.filter( this.staffPersonalCategoryData, function( item ) {\n      if(item.lookupValueId === id)\n        return item;\n      } );\n\n      if(data === undefined || data.length == 0){\n        return '';\n      }\n      else {\n        return data[0].lookupValueName;\n      }\n\n    }\n    \n\n  }\n  onGlSearchFilter() {\n\n    if(this.staffData != \"\"){\n\n      let filtergroup = new jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = this.staffData;\n      let filtercondition = 'contains';\n      let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n      filtergroup.operator = 'or';\n      filtergroup.addfilter(filter_or_operator, filterData);\n\n      this.datagrid.showfiltercolumnbackground(false);\n\n      this.columnData.forEach(item => {\n        if(item.datafield != 'Actions') {\n          this.datagrid.addfilter(item.datafield, filtergroup, true);\n        }\n      })\n\n      this.datagrid.applyfilters();\n      \n    }\n    else {\n      this.datagrid.clearfilters();\n    }\n\n  }\n  @HostListener('window:onEditMainstaff', ['$event.detail'])\n  onEditMainstaff(detail) {\n    let dataRecord = this.datagrid.getrowdata(detail.rowId)\n    let staffId = dataRecord.staffId\n    this.router.navigateByUrl('/ams/staff/edit-staff/' + staffId);\n  }\n  \n  ngOnInit() {\n\n    var cellsrenderer = (row, column, value) => {\n      return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n    }\n\n    var columnrenderer = (value) => {\n      return '<div style=\"padding: 14px\">' + value + '</div>';\n    }\n\n\n    this.columnData = [{\n         text: 'Staff Name',\n         datafield: 'ticketId',\n         width: 100,\n         pinned: true,\n         cellsrenderer: cellsrenderer,\n         renderer: columnrenderer\n     }, {\n         text: 'Email ID',\n         datafield: 'ticketTypeId_Label',\n         cellsrenderer: cellsrenderer,\n         minwidth: 80,\n         renderer: columnrenderer\n     }, {\n         text: 'Category',\n         datafield: 'ticketStatusId_Label',\n         cellsrenderer: cellsrenderer,\n         minwidth: 170,\n         renderer: columnrenderer\n     }, {\n         text: 'Sub Category',\n         datafield: 'ticketCategoryId_Label',\n         cellsrenderer: cellsrenderer,\n         minwidth: 170,\n         renderer: columnrenderer\n     }, {\n         text: 'Phone Number',\n         datafield: 'ticketPriorityId_Label',\n         cellsrenderer: cellsrenderer,\n         minwidth: 80,\n         renderer: columnrenderer\n     }, {\n         text: 'Actions',\n         cellsalign: 'center', \n         align: 'center',\n         width: 120,\n         cellsrenderer: (row: number): string => {\n           return '<div class=\"simple-actions\"> <a href=\"javascript:void(0)\" class=\"mr-2\" onClick=\"editMainstaff('+ row +')\"><i class=\"icon fa fa-pencil edit\" aria-hidden=\"true\"></i></a></div>'\n         },\n         renderer: columnrenderer\n     }];\n     \n\n  \tthis.staffService.getAllStaffsByApartmentId(this.params).subscribe((res:any) => {\n\n    //filter inactive true items\n    this.staffListData = res.filter(data => {\n      return !data.isActive\n    });\n\n    this.gridSourceData = {\n      localdata: this.staffListData,\n      datatype: \"array\"\n    }\n    this.staffListData = new jqx.dataAdapter(this.gridSourceData);\n    console.log(\"staffListData Inactive\",this.staffListData)\n    this.totalItems = this.staffListData.length;\n\n    if(this.totalItems>this.itemLimit){\n      this.ItemEndIndex = this.itemLimit;\n    }\n\n    else {\n      this.ItemEndIndex = this.totalItems;\n    }\n\n    this.isStaffDataLoaded = true;\n\n  });\n\n  let staffParams = {\n    LookupTypeId: 25\n  }\n\n    //staff type\n    this.lookupService.getLookupValueByLookupTypeId(staffParams).subscribe((res:any) => {\n          \n       this.staffTypeData = res.filter( item => {\n          return item.isActive;\n       });\n\n    },\n    error => {\n      \n    }\n    );\n\n    let staffOfficialParams = {\n      LookupTypeId: 26\n    }\n\n    //offical category type\n    this.lookupService.getLookupValueByLookupTypeId(staffOfficialParams).subscribe((res:any) => {\n          \n       this.staffOfficalCategoryData = res.filter( item => {\n          return item.isActive;\n       });\n\n       console.log(this.staffOfficalCategoryData);\n\n    },\n    error => {\n      \n    }\n    );\n\n    let staffPersonalParams = {\n      LookupTypeId: 27\n    }\n\n    //personal category type\n    this.lookupService.getLookupValueByLookupTypeId(staffPersonalParams).subscribe((res:any) => {\n          \n       this.staffPersonalCategoryData = res.filter( item => {\n          return item.isActive;\n        });\n\n    },\n    error => {\n      \n    }\n    );\n\n  }\n\n}\n\nfunction editMainstaff(row){\n  var event = new CustomEvent('onEditMainstaff', {\n    detail: {\n        rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).editMainstaff = editMainstaff;\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9zdGFmZi1tYW5hZ2VyL2NvbXBvbmVudHMvc3RhZmYtbWFpbnRhaW4tc3RhZmYvc3RhZmYtbWFpbnRhaW4tc3RhZmYuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Injector, HostListener, ViewChild } from '@angular/core';\nimport { Router} from '@angular/router';\n\nimport { StaffService } from 'src/app/api/controllers/Staff';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\n\nimport * as moment from 'moment';\n\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\n\n@Component({\n  selector: 'app-staff-maintain-staff',\n  templateUrl: './staff-maintain-staff.component.html',\n  styleUrls: ['./staff-maintain-staff.component.scss']\n})\nexport class StaffMaintainStaffComponent implements OnInit {\n\n  staffListData:any;\n\n  isStaffDataLoaded:boolean = false;\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n\n  staff:any;\n  staffData:string = \"\";\n\n  modalService:any;\n\n  totalFilterItems:any;\n  visitTypeData:any;\n\n  staffTypeData:any;\n  staffOfficalCategoryData:any;\n  staffPersonalCategoryData:any;\n  staffTypeId:any;\n\n  selectedInput:string = \"\";\n  columnField: any = {}\n  \n  columnData:any\n  gridSourceData:any\n\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n  \n  public params = {\n\t\tapartmentId: parseInt(this.cookieService.get('apartmentId'))\n\t  }\n  constructor(\n    private injector: Injector,\n    private staffService:StaffService,\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService: CookieService,\n    private router:Router\n  ) {\n    this.modalService = this.injector.get(ModalService);\n   }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  selectColInput(value){\n    this.selectedInput = value;\n  }\n\n  onSelectChange(event, type, name){\n\n    if(!_.isEmpty(event)){\n      this.selectedInput = type;\n      this.columnField[type] = event[name];\n    }\n    else {\n       this.columnField = {};\n    }\n    \n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  showConfirmModal(id) {\n    this.modalService.showConfirmModal(id);\n  }\n\n  getTimeFormat(dateTime){\n    return moment(dateTime).format(\"YYYY-MM-DD HH:mm\");\n  }\n\n  getStaffCategory(staff, id){\n     \n    var data = _.filter( this.staffTypeData, function( item ) {\n      if(item.lookupValueId === id)\n        return item;\n    });\n\n    if(data === undefined || data.length == 0){\n      return '';\n    }\n    else {\n\n      this.staffListData.map(obj=> {\n        if(obj.staffId == staff.staffId){\n          obj.staffCategory = data[0].lookupValueName;\n        }\n      });\n\n      return data[0].lookupValueName.toLowerCase();\n    }\n\n  }\n\n  getStaffSubCategory(staff, id) {\n    if(this.staffTypeId == 115){\n\n      var data = _.filter( this.staffOfficalCategoryData, function( item ) {\n      if(item.lookupValueId === id)\n        return item;\n      } );\n      if(data === undefined || data.length == 0){\n        return '';\n      }\n      else {\n\n        this.staffListData.map(obj=> {\n          if(obj.staffId == staff.staffId){\n            obj.staffSubCategory = data[0].lookupValueName;\n          }\n        });\n\n        return data[0].lookupValueName;\n      }\n\n    }\n    else {\n\n      var data = _.filter( this.staffPersonalCategoryData, function( item ) {\n      if(item.lookupValueId === id)\n        return item;\n      } );\n\n      if(data === undefined || data.length == 0){\n        return '';\n      }\n      else {\n\n        this.staffListData.map(obj=> {\n          if(obj.staffId == staff.staffId){\n            obj.staffSubCategory = data[0].lookupValueName;\n          }\n        });\n\n        return data[0].lookupValueName;\n      }\n\n    }\n    \n\n  }\n\n  onGlSearchFilter() {\n\n    if(this.staffData != \"\"){\n\n      let filtergroup = new jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = this.staffData;\n      let filtercondition = 'contains';\n      let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n      filtergroup.operator = 'or';\n      filtergroup.addfilter(filter_or_operator, filterData);\n\n      this.datagrid.showfiltercolumnbackground(false);\n\n      this.columnData.forEach(item => {\n        if(item.datafield != 'Actions') {\n          this.datagrid.addfilter(item.datafield, filtergroup, true);\n        }\n      })\n\n      this.datagrid.applyfilters();\n      \n    }\n    else {\n      this.datagrid.clearfilters();\n    }\n\n  }\n\n  \n  @HostListener('window:onEditMainstaff', ['$event.detail'])\n  onEditMainstaff(detail) {\n    let dataRecord = this.datagrid.getrowdata(detail.rowId)\n    let staffId = dataRecord.staffId\n    this.router.navigateByUrl('/ams/staff/edit-staff/' + staffId);\n  }\n  \n  @HostListener('window:onAllStaffDelete', ['$event.detail'])\n  onAllStaffDelete(detail) {\n    let dataRecord = this.datagrid.getrowdata(detail.rowId)\n    let staffId = dataRecord.staffId\n    this.modalService.showConfirmModal(staffId);\n  }\n  ngOnInit() {\n\n    \n    var cellsrenderer = (row, column, value) => {\n      return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n    }\n\n    var columnrenderer = (value) => {\n      return '<div style=\"padding: 14px\">' + value + '</div>';\n    }\n\n\n    this.columnData = [{\n         text: 'Staff Name',\n         datafield: 'firstName',\n         width: 100,\n         pinned: true,\n         cellsrenderer: cellsrenderer,\n         renderer: columnrenderer\n     }, {\n         text: 'Email Id',\n         datafield: 'emailId',\n         cellsrenderer: cellsrenderer,\n         minwidth: 80,\n         renderer: columnrenderer\n     }, {\n         text: 'Category',\n         datafield: 'staffCategory_Label',\n         cellsrenderer: cellsrenderer,\n         minwidth: 170,\n         renderer: columnrenderer\n     }, {\n         text: 'Phone Number',\n         datafield: 'phoneNumber_Label',\n         cellsrenderer: cellsrenderer,\n         minwidth: 170,\n         renderer: columnrenderer\n     }, {\n         text: 'Actions',\n         cellsalign: 'center', \n         align: 'center',\n         width: 120,\n         cellsrenderer: (row: number): string => {\n           return '<div class=\"simple-actions\"> <a href=\"javascript:void(0)\" class=\"mr-2\" onClick=\"editMainstaff('+ row +')\"><i class=\"icon fa fa-pencil edit\" aria-hidden=\"true\"></i> </a> <a href=\"javascript:void(0)\" onClick=\"showConfirmDeleteEvent('+ row +')\"><i class=\"fa fa-trash icon delete\" aria-hidden=\"true\"></i> </a></div>'\n         },\n         renderer: columnrenderer\n     }];\n     \n\n    this.staffService.getAllStaffsByApartmentId(this.params).subscribe((res:any) => {\n\n    //filter active true items\n    this.staffListData = res.filter(data => {\n      return data.isActive\n    });\n\n    this.gridSourceData = {\n      localdata: this.staffListData,\n      datatype: \"array\"\n    }\n    this.staffListData = new jqx.dataAdapter(this.gridSourceData);\n    console.log(\"staffListData\",this.staffListData)\n\n    this.totalItems = this.staffListData.length;\n\n    if(this.totalItems>this.itemLimit){\n      this.ItemEndIndex = this.itemLimit;\n    }\n\n    else {\n      this.ItemEndIndex = this.totalItems;\n    }\n\n    this.isStaffDataLoaded = true;\n\n  });\n\n    let staffParams = {\n      LookupTypeId: 25\n    }\n\n    //staff type\n    this.lookupService.getLookupValueByLookupTypeId(staffParams).subscribe((res:any) => {\n          \n       this.staffTypeData = res.filter( item => {\n          return item.isActive;\n       });\n\n    },\n    error => {\n      \n    }\n    );\n\n    let officialParams = {\n      LookupTypeId: 26\n    }\n\n    //offical category type\n    this.lookupService.getLookupValueByLookupTypeId(officialParams).subscribe((res:any) => {\n          \n       this.staffOfficalCategoryData = res.filter( item => {\n          return item.isActive;\n       });\n\n       console.log(this.staffOfficalCategoryData);\n\n    },\n    error => {\n      \n    }\n    );\n\n    let officialCategoryParams = {\n      LookupTypeId: 27\n    }\n\n    //personal category type\n    this.lookupService.getLookupValueByLookupTypeId(officialCategoryParams).subscribe((res:any) => {\n          \n       this.staffPersonalCategoryData = res.filter( item => {\n          return item.isActive;\n        });\n\n    },\n    error => {\n      \n    }\n    );\n\n\n    // delete item\n    this.sharedService.unitlistdeleteindexcast.subscribe( id => {\n\n      if(id != null){\n\n        var params = {\n          staffId: id,\n          deleteBy: parseInt(this.cookieService.get('userId'))\n        }\n\n        this.staffService.deleteStaff(params).subscribe((res:any) => {\n\n          _.each(this.staffListData, (type)=>{\n            if(type.staffId == id){\n              type.isActive = false;\n            }\n          })\n\n          setTimeout(() => {\n\n            this.staffListData = this.staffListData.filter((type) => type.staffId !== id);\n            this.totalItems = this.staffListData.length;\n            this.sharedService.setAlertMessage(\"Staff deleted\");\n            this.sharedService.setUnitListDeleteIndex(null);\n\n          }, 500)\n\n\n        }, error => {\n          console.log(error);\n        });\n\n        \n      }\n\n    } )\n\n\n  }\n\n}\n\n\nfunction editMainstaff(row){\n  var event = new CustomEvent('onEditMainstaff', {\n    detail: {\n        rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).editMainstaff = editMainstaff;\n\nfunction showConfirmDeleteEvent(row){\n  var event = new CustomEvent('onAllStaffDelete', {\n    detail: {\n        rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).showConfirmDeleteEvent = showConfirmDeleteEvent;","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9zdGFmZi1tYW5hZ2VyL2NvbXBvbmVudHMvc3RhZmYtb3ZlcnRpbWUvc3RhZmYtb3ZlcnRpbWUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-staff-overtime',\n  templateUrl: './staff-overtime.component.html',\n  styleUrls: ['./staff-overtime.component.scss']\n})\nexport class StaffOvertimeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9zdGFmZi1tYW5hZ2VyL2NvbXBvbmVudHMvc3RhZmYtcGF5cm9sbC9zdGFmZi1wYXlyb2xsLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-staff-payroll',\n  templateUrl: './staff-payroll.component.html',\n  styleUrls: ['./staff-payroll.component.scss']\n})\nexport class StaffPayrollComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9zdGFmZi1tYW5hZ2VyL2NvbXBvbmVudHMvc3RhZmYtcmVwb3J0cy9zdGFmZi1yZXBvcnRzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-staff-reports',\n  templateUrl: './staff-reports.component.html',\n  styleUrls: ['./staff-reports.component.scss']\n})\nexport class StaffReportsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9zdGFmZi1tYW5hZ2VyL2NvbXBvbmVudHMvc3RhZmYtc2V0dXAvc3RhZmYtc2V0dXAuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Injector } from '@angular/core';\n\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-staff-setup',\n  templateUrl: './staff-setup.component.html',\n  styleUrls: ['./staff-setup.component.scss']\n})\nexport class StaffSetupComponent implements OnInit {\n\n  categoryOffcialData:string = \"\";\n  categoryOffcialListData:any;\n\n  categoryPersonalData:string = \"\";\n  categoryPersonalListData:any;\n\n  isCategoryDataLoaded:boolean = false;\n\n  staffCategoryData:any;\n\n  modalService:any;\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  isStaffLoaded:boolean = false;\n\n  staffType:string = \"\";\n  staffTypeId:number;\n  staffCategory:string = \"\";\n  staffCategoryId:number;\n\n  staffDeleteTypeId:string = \"\"\n\n  errorMessage:string = \"\";\n  isError:boolean = false; \n\n\n  isEditStaffCategory:boolean = false;\n\n\n  constructor(\n    private injector: Injector,\n    public dialog: MatDialog,\n  \tprivate lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) { \n    this.modalService = this.injector.get(ModalService);\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  showConfirmModal(index) {\n    this.modalService.showConfirmModal(index);\n  }\n\n  editStaffCategory(category) {\n\n    this.isEditStaffCategory = true;\n    this.staffCategory = category.lookupValueName;\n    this.staffCategoryId = category.lookupValueId;\n    \n\n  }\n\n  submitStaffForm(form) {\n    \n    this.isError = false;\n\n\n    //offical category\n    if(this.staffType == \"115\"){\n\n      this.staffTypeId = 26;\n\n      var categoryAvailable = _.some( this.categoryOffcialData, item => {\n        return item.lookupValueName === this.staffCategory;\n      });\n\n      if(categoryAvailable) {\n        this.isError = true;\n        this.errorMessage = 'Category already available';\n        this.isStaffLoaded = true;\n      }\n      else {\n\n        this.isStaffLoaded = false;\n\n        if(!this.isEditStaffCategory) {\n\n          let details = {\n  \n            \"lookupTypeId\": this.staffTypeId,\n            \"lookupValueName\": this.staffCategory,\n            \"description\": this.staffCategory,\n            \"isActive\": true,\n            \"insertedBy\": parseInt(this.cookieService.get('userId')),\n            \"insertedOn\": \"2019-11-16T14:50:08.217Z\",\n            \"updatedBy\": 0,\n            \"updatedOn\": \"2019-11-16T14:50:08.217Z\"\n\n          }\n\n          let params = {\n            lookupvalue: details\n          }\n\n          this.lookupService.addLookupValue(params).subscribe((res:any) => {\n\n\n              this.isStaffLoaded = true;\n              this.isCategoryDataLoaded = false;\n\n              let params = {\n                LookupTypeId: this.staffTypeId\n              }\n\n              this.lookupService.getLookupValueByLookupTypeId(params).subscribe((res:any) => {\n\n                 var categoryOffcialListData = res.filter(item => {\n                  return item.isActive;\n                 });\n\n                 this.categoryOffcialListData = categoryOffcialListData;\n                 this.isCategoryDataLoaded = true;\n\n\n              },\n              error => {\n\n              }\n              );\n\n        },\n        error => {\n\n        }\n        );\n\n        }\n\n        else {\n\n          let details = {\n\n            \"lookupValueId\": this.staffCategoryId,\n            \"lookupTypeId\": this.staffTypeId,\n            \"lookupValueName\": this.staffCategory,\n            \"description\": this.staffCategory,\n            \"isActive\": true,\n            \"insertedBy\": 0,\n            \"insertedOn\": \"2019-11-16T14:50:08.217Z\",\n            \"updatedBy\": parseInt(this.cookieService.get('userId')),\n            \"updatedOn\": \"2019-11-16T14:50:08.217Z\"\n\n          }\n\n          let params = {\n            lookupvalue: details\n          }\n\n          this.lookupService.updateLookupValue(params).subscribe((res:any) => {\n\n\n              this.isStaffLoaded = true;\n              this.isCategoryDataLoaded = false;\n              this.isEditStaffCategory = false;\n\n              let params = {\n                LookupTypeId: this.staffTypeId\n              }\n\n              this.lookupService.getLookupValueByLookupTypeId(params).subscribe((res:any) => {\n\n                 var categoryOffcialListData = res.filter(item => {\n                  return item.isActive;\n                 });\n\n                 this.categoryOffcialListData = categoryOffcialListData;\n                 this.isCategoryDataLoaded = true;\n\n\n              },\n              error => {\n\n              }\n              );\n\n          },\n          error => {\n\n          }\n          );\n\n\n        }\n\n\n      }\n      \n\n    }\n    else {\n\n      this.staffTypeId = 27;\n\n      var categoryAvailable = _.some( this.categoryPersonalData, item => {\n        return item.lookupValueName === this.staffCategory;\n      });\n\n      if(categoryAvailable) {\n        this.isError = true;\n        this.errorMessage = 'Category already available';\n        this.isStaffLoaded = true;\n      }\n\n      else {\n\n          this.isStaffLoaded = false;\n\n           if(!this.isEditStaffCategory) {\n\n              let details = {\n        \n                \"lookupTypeId\": this.staffTypeId,\n                \"lookupValueName\": this.staffCategory,\n                \"description\": this.staffCategory,\n                \"isActive\": true,\n                \"insertedBy\": parseInt(this.cookieService.get('userId')),\n                \"insertedOn\": \"2019-11-16T14:50:08.217Z\",\n                \"updatedBy\": 0,\n                \"updatedOn\": \"2019-11-16T14:50:08.217Z\"\n\n              }\n\n              let params = {\n                lookupvalue: details\n              }\n\n              this.lookupService.addLookupValue(params).subscribe((res:any) => {\n\n\n                  this.isStaffLoaded = true;\n                  this.isCategoryDataLoaded = false;\n\n                  let params = {\n                    LookupTypeId: this.staffTypeId\n                  }\n\n                  this.lookupService.getLookupValueByLookupTypeId(params).subscribe((res:any) => {\n\n                     var categoryPersonalListData = res.filter(item => {\n                       return item.isActive;\n                     });\n\n                     this.categoryPersonalListData = categoryPersonalListData;\n                     this.isCategoryDataLoaded = true;\n\n\n                  },\n                  error => {\n\n                  }\n                  );\n\n              },\n              error => {\n\n              }\n              ); \n\n\n           }\n\n           else {\n\n             let details = {\n\n              \"lookupValueId\": this.staffCategoryId,\n              \"lookupTypeId\": this.staffTypeId,\n              \"lookupValueName\": this.staffCategory,\n              \"description\": this.staffCategory,\n              \"isActive\": true,\n              \"insertedBy\": 0,\n              \"insertedOn\": \"2019-11-16T14:50:08.217Z\",\n              \"updatedBy\": parseInt(this.cookieService.get('userId')),\n              \"updatedOn\": \"2019-11-16T14:50:08.217Z\"\n\n            }\n\n            let params = {\n              lookupvalue: details\n            }\n\n            this.lookupService.updateLookupValue(params).subscribe((res:any) => {\n\n\n                  this.isStaffLoaded = true;\n                  this.isCategoryDataLoaded = false;\n                  this.isEditStaffCategory = false;\n\n                  let params = {\n                    LookupTypeId: this.staffTypeId\n                  }\n\n                  this.lookupService.getLookupValueByLookupTypeId(params).subscribe((res:any) => {\n\n                     var categoryPersonalListData = res.filter(item => {\n                       return item.isActive;\n                     });\n\n                     this.categoryPersonalListData = categoryPersonalListData;\n                     this.isCategoryDataLoaded = true;\n\n\n                  },\n                  error => {\n\n                  }\n                  );\n\n            },\n            error => {\n\n            }\n            ); \n\n\n           }\n\n        }\n\n    }\n\n\n\n  }\n\n  ngOnInit() {\n\n    let params = {\n      LookupTypeId: 25\n    }\n\n    //get all staff type\n      this.lookupService.getLookupValueByLookupTypeId(params).subscribe((res:any) => {\n\n        this.staffCategoryData = res;\n\n        this.isStaffLoaded = true;\n\n\n      },\n      error => {\n\n      }\n      );\n\n    let categoryParams = {\n      LookupTypeId: 26\n    }\n\n  \t//get all offical category\n    this.lookupService.getLookupValueByLookupTypeId(categoryParams).subscribe((res:any) => {\n\n      var categoryOffcialListData = res.filter(item => {\n        return item.isActive;\n      });\n\n\n      this.categoryOffcialListData = categoryOffcialListData;\n\n      let categoryPersonalParams = {\n        LookupTypeId: 27\n      }\n\n      //get all personal category\n      this.lookupService.getLookupValueByLookupTypeId(categoryPersonalParams).subscribe((res:any) => {\n\n        var categoryPersonalListData = res.filter(item => {\n          return item.isActive;\n        });\n\n        this.categoryPersonalListData = categoryPersonalListData;\n\n        this.isCategoryDataLoaded = true;\n\n\n      },\n      error => {\n\n      }\n      );\n\n\n    },\n    error => {\n      \n    }\n    );\n\n\n    // delete lookupvalue\n    this.sharedService.unitlistdeleteindexcast.subscribe( index => {\n\n      if(index != null){\n\n        if(this.staffDeleteTypeId == \"115\"){\n\n          var params = {\n            lookupValueId: this.categoryOffcialListData[index].lookupValueId,\n            updateUserId: parseInt(this.cookieService.get('userId'))\n          }\n\n        }\n        else {\n\n          var params = {\n            lookupValueId: this.categoryPersonalListData[index].lookupValueId,\n            updateUserId: parseInt(this.cookieService.get('userId'))\n          }\n\n        }\n        \n\n        this.isCategoryDataLoaded = false;\n\n        this.lookupService.deleteLookupvalue(params).subscribe((res:any) => {\n\n          if(this.staffDeleteTypeId == \"115\"){\n            this.categoryOffcialListData.splice(index, 1);\n          }\n          else {\n            this.categoryPersonalListData.splice(index, 1);\n          }\n          this.isCategoryDataLoaded = true;\n          this.sharedService.setUnitListDeleteIndex(null);\n\n        }, error => {\n          console.log(error);\n        });\n\n        \n      }\n\n    } )\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9zdGFmZi1tYW5hZ2VyL2NvbXBvbmVudHMvc3RhZmYtc2hpZnRzL3N0YWZmLXNoaWZ0cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Injector } from '@angular/core';\n\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { StaffService } from 'src/app/api/controllers/Staff';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as moment from 'moment';\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-staff-shifts',\n  templateUrl: './staff-shifts.component.html',\n  styleUrls: ['./staff-shifts.component.scss']\n})\nexport class StaffShiftsComponent implements OnInit {\n  \n  isShiftsLoaded:boolean = true;\n\n  isShiftTableLoaded:boolean = false;\n\n  shiftTypeList:any;\n\n  shift:any;\n  shiftId:any;\n  shiftTypeId:string = \"\";\n  shiftStartTime:any = \"\";\n  shiftTotalHrs:number = 0;\n\n  shiftsListData:any;\n  shiftData:string = \"\";\n\n  shiftType:string = \"\";\n\n  isEditShift:boolean = false;\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n\n  isAddShiftLoaded:boolean = false;\n\n  modalService:any;\n\n  constructor(\n    private injector: Injector,\n    public dialog: MatDialog,\n    private staffService:StaffService,\n  \tprivate lookupService:LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) { \n    this.modalService = this.injector.get(ModalService);\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  getShiftType(id) {\n    \n    var data = _.filter( this.shiftTypeList, function( item ) {\n      if(item.lookupValueId === id)\n        return item;\n    });\n\n    if(data === undefined || data.length == 0){\n      return '';\n    }\n    else {\n      this.shiftType = data[0].lookupValueName;\n      return data[0].lookupValueName.toLowerCase();\n    }\n\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  submitShiftsForm(form) {\n\n    this.isShiftsLoaded = false;\n\n    if(!this.isEditShift) {\n\n      let details = {\n\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"shiftTypeId\": parseInt(this.shiftTypeId),\n        \"startTime\": moment(this.shiftStartTime).format('HH:mm'),\n        \"totalHours\": this.shiftTotalHrs,\n        \"isActive\": true,\n        \"insertedBy\": parseInt(this.cookieService.get('userId')),\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": 0,\n        \"updatedOn\": \"2019-12-03T06:11:51.972Z\"\n\n      }\n\n      let params = {\n        shift: details\n      }\n\n      this.staffService.addShift(params).subscribe((res:any) => {\n\n        if(res.message) {\n\n          this.isShiftsLoaded = true;\n          this.sharedService.setAlertMessage(\"Shift added Successfully!\");\n\n          this.getAllShifts();\n        }\n\n      },\n      error => {\n        \n      }\n      );\n\n   }\n   else {\n\n     let details = {\n        \"shiftId\": this.shiftId,\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"shiftTypeId\": parseInt(this.shiftTypeId),\n        \"startTime\": moment(this.shiftStartTime).format('HH:mm'),\n        \"totalHours\": this.shiftTotalHrs,\n        \"isActive\": true,\n        \"insertedBy\": 0,\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": parseInt(this.cookieService.get('userId')),\n        \"updatedOn\": new Date().toISOString()\n\n      }\n\n      let params = {\n        shift: details\n      }\n\n      this.staffService.updateShift(params).subscribe((res:any) => {\n\n        if(res.message) {\n          this.isShiftsLoaded = true;\n          this.sharedService.setAlertMessage(\"Shift updated Successfully!\");\n\n          this.getAllShifts();\n        }\n\n      },\n      error => {\n        \n      }\n      );\n\n   }\n    \n\n  }\n\n  addShift(){\n\n    this.isEditShift = false;\n    this.isAddShiftLoaded = false;\n\n    setTimeout(() => {\n\n      this.isAddShiftLoaded = true;\n\n    }, 10);\n\n    setTimeout(() => {\n\n      var elem = document.querySelector('.add-shift-card');\n      var scrollTo = elem.getBoundingClientRect().top;\n\n      window.scroll({\n        top: scrollTo,\n        behavior: 'smooth'\n      });\n\n    }, 10);\n\n  }\n\n  editShift(shift){\n\n    this.isAddShiftLoaded = false;\n\n    setTimeout(() => {\n      this.isAddShiftLoaded = true;\n    }, 10);\n\n    this.isEditShift = true;\n    this.shiftTypeId = shift.shiftTypeId;\n    this.shiftStartTime = moment(shift.startTime, 'HH:mm').toDate();\n    this.shiftTotalHrs = shift.totalHours;\n    this.shiftId = shift.shiftId;\n\n    setTimeout(() => {\n\n      var elem = document.querySelector('.add-shift-card');\n      var scrollTo = elem.getBoundingClientRect().top - 100;\n\n      window.scroll({\n        top: scrollTo,\n        behavior: 'smooth'\n      });\n\n    }, 100);\n\n  }\n\n  closeShift(){\n    this.isAddShiftLoaded = false;\n  }\n\n  showConfirmModal(item) {\n    this.modalService.showConfirmModal(item);\n  }\n\n  getAllShifts(){\n\n    this.isShiftTableLoaded = false;\n\n    let params = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n\n    this.staffService.getAllShiftsByApartmentId(params).subscribe((res:any) => {\n\n      this.shiftsListData = res.filter(item => {\n        return item.isActive;\n      });\n\n\n      this.totalItems = this.shiftsListData.length;\n\n      if(this.totalItems>this.itemLimit){\n        this.ItemEndIndex = this.itemLimit;\n      }\n\n      else {\n        this.ItemEndIndex = this.totalItems;\n      }\n\n      this.isShiftTableLoaded = true;\n\n    },\n    error => {\n      \n    }\n    );\n\n  }\n\n  ngOnInit() {\n\n  \tthis.shift = {};\n\n    this.getAllShifts();\n\n    let params = {\n      LookupTypeId: 28\n    }\n\n  \t//shift type\n    this.lookupService.getLookupValueByLookupTypeId(params).subscribe((res:any) => {\n          \t\n\n       this.shiftTypeList = res.filter( item => {\n          return item.isActive;\n        });\n\n    },\n    error => {\n      \n    }\n    );\n\n    // delete item\n    this.sharedService.unitlistdeleteindexcast.subscribe( item => {\n\n      if(item != null){\n\n        var params = {\n          shiftId: item.shiftId,\n          deleteBy: parseInt(this.cookieService.get('userId'))\n        }\n\n        this.isShiftTableLoaded = false;\n\n        this.staffService.deleteShift(params).subscribe((res:any) => {\n\n          this.shiftsListData = this.shiftsListData.filter((type) => type.shiftId !== item.shiftId);\n          this.sharedService.setUnitListDeleteIndex(null);\n          this.isShiftTableLoaded = true;\n\n\n        }, error => {\n          console.log(error);\n        });\n\n        \n      }\n\n    } )\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from '../.././auth.guard';\n\nimport { StaffManagerComponent } from './staff-manager.component';\nimport { StaffSetupComponent } from './components/staff-setup/staff-setup.component';\nimport { StaffMaintainStaffComponent } from './components/staff-maintain-staff/staff-maintain-staff.component';\nimport { StaffInactiveStaffComponent } from './components/staff-inactive-staff/staff-inactive-staff.component';\nimport { StaffAttendanceComponent } from './components/staff-attendance/staff-attendance.component';\nimport { StaffPayrollComponent } from './components/staff-payroll/staff-payroll.component';\nimport { StaffOvertimeComponent } from './components/staff-overtime/staff-overtime.component';\nimport { StaffReportsComponent } from './components/staff-reports/staff-reports.component';\nimport { AddStaffComponent } from './components/add-staff/add-staff.component';\nimport { StaffGatesComponent } from './components/staff-gates/staff-gates.component';\nimport { StaffShiftsComponent } from './components/staff-shifts/staff-shifts.component';\nimport { AddEntryComponent } from './components/add-entry/add-entry.component';\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: 'settings', pathMatch: 'full'},\n\t{ path: 'settings', component: StaffSetupComponent},\n\t{ path: 'maintain-staff', component: StaffMaintainStaffComponent},\n\t{ path: 'add-staff', component: AddStaffComponent},\n\t{ path: 'edit-staff/:id', component: AddStaffComponent},\n\t{ path: 'inactive-staff', component: StaffInactiveStaffComponent},\n\t{ path: 'overtime', component: StaffOvertimeComponent},\n\t{ path: 'attendance', component: StaffAttendanceComponent},\n\t{ path: 'add-entry', component: AddEntryComponent},\n\t{ path: 'edit-entry/:id', component: AddEntryComponent},\n\t{ path: 'payroll', component: StaffPayrollComponent},\n\t{ path: 'reports', component: StaffReportsComponent },\n\t{ path: '**', redirectTo: 'settings', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class StaffManagerRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9zdGFmZi1tYW5hZ2VyL3N0YWZmLW1hbmFnZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-staff-manager',\n  templateUrl: './staff-manager.component.html',\n  styleUrls: ['./staff-manager.component.scss']\n})\nexport class StaffManagerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StaffManagerRoutingModule } from './staff-manager-routing.module';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { StaffManagerComponent } from './staff-manager.component';\nimport { StaffSetupComponent } from './components/staff-setup/staff-setup.component';\nimport { StaffMaintainStaffComponent } from './components/staff-maintain-staff/staff-maintain-staff.component';\nimport { StaffInactiveStaffComponent } from './components/staff-inactive-staff/staff-inactive-staff.component';\nimport { StaffAttendanceComponent } from './components/staff-attendance/staff-attendance.component';\nimport { StaffPayrollComponent } from './components/staff-payroll/staff-payroll.component';\nimport { StaffOvertimeComponent } from './components/staff-overtime/staff-overtime.component';\nimport { StaffReportsComponent } from './components/staff-reports/staff-reports.component';\nimport { AddStaffComponent } from './components/add-staff/add-staff.component';\nimport { StaffGatesComponent } from './components/staff-gates/staff-gates.component';\nimport { StaffShiftsComponent } from './components/staff-shifts/staff-shifts.component';\nimport { AddEntryComponent } from './components/add-entry/add-entry.component';\n\n@NgModule({\n  declarations: [\n\tStaffManagerComponent,\n\tStaffSetupComponent,\n\tStaffMaintainStaffComponent,\n\tStaffInactiveStaffComponent,\n\tStaffAttendanceComponent,\n\tStaffPayrollComponent,\n\tStaffOvertimeComponent,\n\tStaffReportsComponent,\n\tAddStaffComponent,\n\tStaffGatesComponent,\n\tStaffShiftsComponent,\n\tAddEntryComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    StaffManagerRoutingModule\n  ],\n  bootstrap: [ StaffManagerComponent ]\n})\nexport class StaffManagerModule { }\n"]}