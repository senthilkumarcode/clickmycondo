{"version":3,"sources":["webpack:///src/app/modules/ams/roles-and-permissions/roles-and-permissions-list/roles-and-permissions-list.component.html","webpack:///src/app/modules/ams/roles-and-permissions/set-permissions/set-permissions.component.html","webpack:///src/app/modules/ams/roles-and-permissions/roles-and-permissions-list/roles-and-permissions-list.component.scss","webpack:///src/app/modules/ams/roles-and-permissions/roles-and-permissions-list/roles-and-permissions-list.component.ts","webpack:///src/app/modules/ams/roles-and-permissions/roles-and-permissions-routing.module.ts","webpack:///src/app/modules/ams/roles-and-permissions/roles-and-permissions.module.ts","webpack:///src/app/modules/ams/roles-and-permissions/set-permissions/set-permissions.component.scss","webpack:///src/app/modules/ams/roles-and-permissions/set-permissions/set-permissions.component.ts"],"names":["RolesAndPermissionsListComponent","router","screenService","sharedService","sessionService","injector","roleHeader","isEnableCreate","isShowRoleList","modalService","get","detail","dataRecord","datagrid","getrowdata","rowId","navigate","queryParams","secLevelId","roleId","menuRoleSecLevelId","navigateByUrl","showConfirmModal","cellsrenderer","row","column","value","columnrenderer","text","datafield","renderer","cellsalign","align","width","unitlistdeleteindexcast","subscribe","id","params","deleteBy","parseInt","userId","deleteMenuRoleSecLevel","res","getRolePermissionList","error","console","log","param","apartmentId","getAllDefaultMenuRoleSecLevelbyApartmentId","resp","refMenuData","filter","data","isActive","gridSourceData","localdata","datatype","roleList","jqx","dataAdapter","selector","template","navigateToPermission","event","CustomEvent","window","dispatchEvent","onEditRole","onDeleteRole","routes","path","redirectTo","pathMatch","component","RolesAndPermissionsRouting","imports","forChild","exports","RolesAndPermissionsModule","declarations","SetPermissionsComponent","activatedRoute","menuList","getScreenList","actionList","name","functionId","checked","queryParamBase","ApartmentId","RoleId","getMenuFunctionByRoleIdMultiFilter","length","selectedMenuName","menuName","changeMenu","option","key","subMenuList","subMenuNames","selectedSubMenuName","subMenuName","changeSubMenu","actions","mapActions","add_FunctionId","edit_FunctionId","display_FunctionId","delete_FunctionId","add","edit","display","menuSecLevelFunctionId","updatedBy","updateMenuSecLevelFunctionMapping"],"mappings":"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","file":"modules-ams-roles-and-permissions-roles-and-permissions-module-es5.js","sourcesContent":["export default \"<div class=\\\"parking-aa-unit-to-unit-allocation-wrapper\\\">\\n\\t<div class=\\\"main\\\">\\n\\t\\t<condo-card>\\n\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"d-flex align-items-center\\\" >\\n\\t\\t\\t\\t\\t\\t<h4>Roles And Permissions</h4>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"ml-auto d-none d-md-block mr-3\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\">\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"mr-3\\\">\\n\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t\\t\\t\\trouterLink=\\\"/ams/roles-permissions/add-roles-permissions\\\" routerLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions]=\\\"{exact:true}\\\">Create Roles</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div CondoCardBody *ngIf=\\\"isShowRoleList\\\" >\\n\\t\\t\\t\\t<jqxGrid [theme]=\\\"'material'\\\" [width]=\\\"'100%'\\\" [rowsheight]=\\\"48\\\" [autoheight]=\\\"true\\\" [pageable]=\\\"true\\\"\\n\\t\\t\\t\\t\\t[filterable]=\\\"true\\\" [sortable]=\\\"true\\\" [source]=\\\"roleList\\\" [columns]=\\\"roleHeader\\\"\\n\\t\\t\\t\\t\\t[columnsresize]=\\\"true\\\" [enablehover]=\\\"false\\\" #datagrid>\\n\\t\\t\\t\\t</jqxGrid>\\n\\t\\t\\t</div>\\n\\t\\t</condo-card>\\n\\t</div>\\n</div>\";","export default \"<div class=\\\"parking-create-parking-slot-wrapper\\\">\\n    <div class=\\\"main\\\">\\n        <condo-card>\\n            <div CondoCardHeader>\\n                <div class=\\\"d-flex\\\">\\n                    <div>\\n                        <h4>Set Permissions</h4>\\n                    </div>\\n                    <div class=\\\"ml-auto d-none d-md-block mr-3\\\">\\n                        <button mat-flat-button \\n                        routerLink=\\\"/ams/roles-permissions/role-permissions-list\\\" \\n\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">Cancel</button>\\n                    </div>\\n                </div>\\n            </div>\\n            <div CondoCardBody>\\n                <div class=\\\"p-5\\\"> \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-4 col-lg-4 col-sm-6 col-xs-6\\\">\\n                            <mat-selection-list #menu [multiple]=\\\"false\\\" (selectionChange)=\\\"changeMenu($event)\\\">\\n                                <mat-list-option *ngFor=\\\"let item of menuList;let i=index\\\" [value]=\\\"item\\\"\\n                                    [selected]=\\\"item.menuName === selectedMenuName\\\">\\n                                    <!-- <div class=\\\"form-check recur-check float-left\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"{{item}}\\\" name=\\\"{{item}}\\\" checked>\\n                                        <label class=\\\"form-check-label tiny\\\" for=\\\"{{item}}\\\">{{item}}</label>\\n                                    </div> -->\\n                                    {{item?.menuName}}\\n                                </mat-list-option>\\n                            </mat-selection-list>\\n                        </div>\\n                        <div class=\\\"col-md-4 col-lg-4 col-sm-6 col-xs-6\\\">\\n                            <mat-selection-list #submenu [multiple]=\\\"false\\\" (selectionChange)=\\\"changeSubMenu($event)\\\">\\n                                <mat-list-option *ngFor=\\\"let item of subMenuList\\\" [value]=\\\"item\\\"\\n                                    [selected]=\\\"item.subMenuName === selectedSubMenuName\\\">\\n                                    <!-- <div class=\\\"form-check recur-check float-left\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"{{item}}\\\" name=\\\"{{item}}\\\">\\n                                        <label class=\\\"form-check-label tiny\\\" for=\\\"{{item}}\\\">{{item}}</label>\\n                                    </div> -->\\n                                    {{item?.subMenuName}}\\n                                </mat-list-option>\\n                            </mat-selection-list>\\n                        </div>\\n                        <div class=\\\"col-md-4 col-lg-4 col-sm-6 col-xs-6\\\" *ngIf=\\\"actionList && actionList.length\\\">\\n                            <mat-selection-list #menuActions (selectionChange)=\\\"changeActions($event)\\\">\\n                                <mat-list-option *ngFor=\\\"let item of actionList\\\" [selected]=\\\"item.checked\\\"\\n                                    [value]=\\\"item\\\">\\n                                    {{item?.name | uppercase}}\\n                                </mat-list-option>\\n                            </mat-selection-list>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </condo-card>\\n    </div>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3JvbGVzLWFuZC1wZXJtaXNzaW9ucy9yb2xlcy1hbmQtcGVybWlzc2lvbnMtbGlzdC9yb2xlcy1hbmQtcGVybWlzc2lvbnMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild, HostListener, Injector } from '@angular/core';\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ScreenService } from 'src/app/api/controllers/Screen';\nimport { ModalService } from 'src/app/shared/services/modal.service';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\n\n@Component({\n  selector: 'app-roles-and-permissions-list',\n  templateUrl: './roles-and-permissions-list.component.html',\n  styleUrls: ['./roles-and-permissions-list.component.scss']\n})\nexport class RolesAndPermissionsListComponent implements OnInit {\n\n  public roleHeader: Array<any> = [];\n  public roleList: any;\n  public isEnableCreate: boolean = true;\n  modalService: any;\n  isShowRoleList:boolean=false;\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n\n  @HostListener('window:navigateToPermission',['$event.detail'])\n  navigateToPermission(detail) {\n    let dataRecord = this.datagrid.getrowdata(detail.rowId)\n    this.router.navigate(['/ams/roles-permissions/set-permission'],{queryParams:{ secLevelId: dataRecord.secLevelId, roleId: dataRecord.roleId}});\n  }\n  @HostListener('window:onEditRole', ['$event.detail'])\n  onEditRole(detail) {\n    let dataRecord = this.datagrid.getrowdata(detail.rowId);\n    let menuRoleSecLevelId = dataRecord.menuRoleSecLevelId;\n    this.router.navigateByUrl('/ams/roles-permissions/edit-roles-permissions/' + menuRoleSecLevelId);\n  }\n  @HostListener('window:onDeleteRole', ['$event.detail'])\n  onDeleteRole(detail) {\n    let dataRecord = this.datagrid.getrowdata(detail.rowId)\n    let menuRoleSecLevelId = dataRecord.menuRoleSecLevelId\n    this.modalService.showConfirmModal(menuRoleSecLevelId);\n  }\n  constructor(private router: Router,\n    private screenService: ScreenService,\n    private sharedService: SharedService,\n    private sessionService: SessionService,\n    private injector: Injector) {\n    this.modalService = this.injector.get(ModalService);\n  }\n\n  ngOnInit(): void {\n    var cellsrenderer = (row, column, value) => {\n      return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n    }\n    var columnrenderer = (value) => {\n      return '<div style=\"padding: 14px\">' + value + '</div>';\n    }\n    this.roleHeader = [{\n      text: 'role name',\n      datafield: 'roleName',\n      cellsrenderer: cellsrenderer,\n      renderer: columnrenderer\n    }, {\n      text: 'menu security name',\n      datafield: 'secLevelName',\n      cellsrenderer: cellsrenderer,\n      renderer: columnrenderer\n    }, {\n      text: 'set permission',\n      cellsalign: 'center',\n      align: 'center',\n      width: 200,\n      cellsrenderer: (row): string => {\n        return '<div class=\"simple-actions\"><a href=\"javascript:void(0)\" onClick=\"navigateToPermission(' + row + ')\" class=\"btn mat-primary\">Set Permissions</a></div>'\n      },\n      renderer: columnrenderer\n    },\n    {\n      text: 'action',\n      cellsalign: 'center',\n      align: 'center',\n      width: 120,\n      cellsrenderer: (row): string => {\n        return '<div class=\"simple-actions\"><a href=\"javascript:void(0)\" class=\"mr-2\" onClick=\"onEditRole(' + row + ')\"><i class=\"fa fa-pencil icon edit\" aria-hidden=\"true\"></i></a><a href=\"javascript:void(0)\" class=\"mr-2\" onClick=\"onDeleteRole(' + row + ')\"><i class=\"fa fa-trash icon delete\" aria-hidden=\"true\"></i></a></div>'\n      },\n      renderer: columnrenderer\n    }];\n    // delete item\n    this.sharedService.unitlistdeleteindexcast.subscribe(id => {\n\n      if (id != null) {\n\n        var params = {\n          menuRoleSecLevelId: id,\n          deleteBy: parseInt(this.sessionService.userId)\n        }\n\n        this.screenService.deleteMenuRoleSecLevel(params).subscribe((res: any) => {\n          this.getRolePermissionList();\n        }, error => {\n          console.log(error);\n        });\n\n\n      }\n\n    })\n    this.getRolePermissionList();\n  }\n  getRolePermissionList() {\n    this.isShowRoleList = false;\n    let param = {\n      apartmentId: this.sessionService.apartmentId\n    }\n    this.screenService.getAllDefaultMenuRoleSecLevelbyApartmentId(param).subscribe(\n      (resp: any) => {\n        let refMenuData = resp.filter(data => {\n          return data.isActive\n        });\n        let gridSourceData = {\n          localdata: refMenuData,\n          datatype: \"array\"\n\n        }\n        this.roleList = new jqx.dataAdapter(gridSourceData);\n        this.isShowRoleList = true;\n        this.isEnableCreate = true;\n      }\n    )\n  }\n\n}\n\nfunction navigateToPermission(row) {\n  var event = new CustomEvent('navigateToPermission', {\n    detail: {\n      rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).navigateToPermission = navigateToPermission;\n\nfunction onEditRole(row) {\n  var event = new CustomEvent('onEditRole', {\n    detail: {\n      rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).onEditRole = onEditRole;\n\nfunction onDeleteRole(row) {\n  var event = new CustomEvent('onDeleteRole', {\n    detail: {\n      rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).onDeleteRole = onDeleteRole;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RolesAndPermissionsListComponent } from './roles-and-permissions-list/roles-and-permissions-list.component';\nimport { SetPermissionsComponent } from './set-permissions/set-permissions.component';\n\n\n\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: 'roles-permissions-list', pathMatch: 'full'},\n\t{ path: 'roles-permissions-list', component: RolesAndPermissionsListComponent},\n\t{ path: 'set-permission', component: SetPermissionsComponent},\n\t{ path: '**', redirectTo: 'roles-permissions-list', pathMatch: 'full'}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RolesAndPermissionsRouting { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RolesAndPermissionsListComponent } from './roles-and-permissions-list/roles-and-permissions-list.component';\nimport { SetPermissionsComponent } from './set-permissions/set-permissions.component';\nimport { RolesAndPermissionsRouting } from './roles-and-permissions-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport {MatListModule} from '@angular/material/list';\nimport { CondoCardModule } from 'src/app/modules/ui/card/card.module';\n\n\n\n\n@NgModule({\n  declarations: [RolesAndPermissionsListComponent, SetPermissionsComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MatListModule,\n    CondoCardModule,\n    RolesAndPermissionsRouting\n  ]\n})\nexport class RolesAndPermissionsModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3JvbGVzLWFuZC1wZXJtaXNzaW9ucy9zZXQtcGVybWlzc2lvbnMvc2V0LXBlcm1pc3Npb25zLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ScreenService } from 'src/app/api/controllers/Screen';\nimport { ActivatedRoute } from '@angular/router';\nimport { SessionService } from 'src/app/core/session/session.service';\n\n@Component({\n  selector: 'app-set-permissions',\n  templateUrl: './set-permissions.component.html',\n  styleUrls: ['./set-permissions.component.scss']\n})\nexport class SetPermissionsComponent implements OnInit {\n\n  public menuList: Array<any> = [];\n  public subMenuList: any;\n  public actionList: any;\n  public selectedMenuName: any;\n  public selectedSubMenuName: any;\n  public actions: any;\n  public secLevelId:any;\n  public roleId:any;\n  is\n  constructor(private screenService: ScreenService,private activatedRoute: ActivatedRoute,private sessionService : SessionService) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe(params => {\n      this.secLevelId = params['secLevelId'];\n      this.roleId = params['roleId'];\n      this.getScreenList();\n    });\n    this.actionList = [\n      {\n        name: 'add',\n        functionId: 0,\n        checked: false\n      },\n      {\n        name: 'edit',\n        functionId: 0,\n        checked: false\n      },\n      {\n        name: 'display',\n        functionId: 0,\n        checked: false\n      },\n      {\n        name: 'delete',\n        functionId: 0,\n        checked: false\n      }\n    ]\n  }\n\n  getScreenList() {\n    let queryParamBase = {\n      ApartmentId: this.sessionService.apartmentId,\n      RoleId: parseInt(this.roleId),\n      secLevelId: parseInt(this.secLevelId)\n    };\n    this.screenService.getMenuFunctionByRoleIdMultiFilter(queryParamBase).subscribe(\n      (resp: any) => {\n        this.menuList = resp;\n        if (this.menuList && this.menuList.length) {\n          this.selectedMenuName = this.menuList[0].menuName;\n          this.changeMenu('');\n        }\n      }\n    )\n  }\n\n  changeMenu(event) {\n    if (event) {\n      this.selectedMenuName = event.option.value ? event.option.value.menuName : '';\n    }\n    if (this.selectedMenuName) {\n      this.menuList.filter(key => {\n        if (key.menuName == this.selectedMenuName) {\n          this.subMenuList = key.subMenuNames;\n          this.selectedSubMenuName = this.subMenuList.length ? this.subMenuList[0].subMenuName : '';\n          this.changeSubMenu('')\n        }\n      })\n    }\n  }\n  changeSubMenu(event) {\n    if (event) {\n      this.actions = event.option.value ? event.option.value.actions : {};\n      this.mapActions();\n    } else {\n      this.subMenuList.filter(key => {\n        if (this.selectedSubMenuName == key.subMenuName) {\n          this.actions = key.actions;\n          this.mapActions();\n        }\n      })\n    }\n  }\n\n  mapActions() {\n    this.actionList[0].functionId = this.actions.add_FunctionId;\n    this.actionList[1].functionId = this.actions.edit_FunctionId;\n    this.actionList[2].functionId = this.actions.display_FunctionId;\n    this.actionList[3].functionId = this.actions.delete_FunctionId;\n    this.actionList[0].checked = this.actions.add;\n    this.actionList[1].checked = this.actions.edit;\n    this.actionList[2].checked = this.actions.display;\n    this.actionList[3].checked = this.actions.delete;\n  }\n\n  changeActions(event) {\n    if (event.option.value) {\n      let queryParamBase = {\n        apartmentId: this.sessionService.apartmentId,\n        menuSecLevelFunctionId: event.option.value.functionId,\n        isActive: !event.option.value.checked,\n        updatedBy: this.sessionService.roleId,\n      };\n      this.screenService.updateMenuSecLevelFunctionMapping(queryParamBase).subscribe(\n        (resp: any) => {\n        });\n    }\n  }\n\n\n}\n"]}