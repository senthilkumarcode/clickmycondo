{"version":3,"sources":["webpack:///src/app/modules/ams/roles-and-permissions/add-role/add-role.component.html","webpack:///src/app/modules/ams/roles-and-permissions/roles-and-permissions-list/roles-and-permissions-list.component.html","webpack:///src/app/modules/ams/roles-and-permissions/set-permissions/set-permissions.component.html","webpack:///src/app/modules/ams/roles-and-permissions/add-role/add-role.component.scss","webpack:///src/app/modules/ams/roles-and-permissions/add-role/add-role.component.ts","webpack:///src/app/modules/ams/roles-and-permissions/roles-and-permissions-list/roles-and-permissions-list.component.scss","webpack:///src/app/modules/ams/roles-and-permissions/roles-and-permissions-list/roles-and-permissions-list.component.ts","webpack:///src/app/modules/ams/roles-and-permissions/roles-and-permissions-routing.modiule.ts","webpack:///src/app/modules/ams/roles-and-permissions/roles-and-permissions.module.ts","webpack:///src/app/modules/ams/roles-and-permissions/set-permissions/set-permissions.component.scss","webpack:///src/app/modules/ams/roles-and-permissions/set-permissions/set-permissions.component.ts"],"names":["AddRoleComponent","userService","router","activatedRoute","sessionService","screenService","allRoles","isCreate","params","id","undefined","menuRoleSecLevelId","getRole","getAllRoles","queryParamBase","apartmentId","getMenuRoleSecLevelbyRoleSecLevelId","subscribe","resp","menuRole","roleTypeId","roleId","roleName","getAllRoleTypes","length","filter","key","value","splice","indexOf","addMenuLevelParam","userId","Date","toISOString","secLevelParam","seclevel","addMenuSecLevel","message","addMenuRoleSecLevel","parseInt","roleSecLevelParam","roleseclevel","navigate","updataParam","updateRoleParam","menuSecLevel","updateMenuSecLevel","selector","template","RolesAndPermissionsListComponent","sharedService","injector","roleHeader","isEnableCreate","isShowRoleList","modalService","get","detail","dataRecord","datagrid","getrowdata","rowId","queryParams","secLevelId","navigateByUrl","showConfirmModal","cellsrenderer","row","column","columnrenderer","text","datafield","renderer","cellsalign","align","width","unitlistdeleteindexcast","deleteBy","deleteMenuRoleSecLevel","res","getRolePermissionList","error","console","log","param","getAllDefaultMenuRoleSecLevelbyApartmentId","refMenuData","data","isActive","gridSourceData","localdata","datatype","roleList","jqx","dataAdapter","navigateToPermission","event","CustomEvent","window","dispatchEvent","onEditRole","onDeleteRole","routes","path","redirectTo","pathMatch","component","RolesAndPermissionsRouting","imports","forChild","exports","RolesAndPermissionsModule","declarations","SetPermissionsComponent","menuList","getScreenList","actionList","name","functionId","checked","ApartmentId","RoleId","getMenuFunctionByRoleIdMultiFilter","selectedMenuName","menuName","changeMenu","option","subMenuList","subMenuNames","selectedSubMenuName","subMenuName","changeSubMenu","actions","mapActions","add_FunctionId","edit_FunctionId","display_FunctionId","delete_FunctionId","add","edit","display","menuSecLevelFunctionId","updatedBy","updateMenuSecLevelFunctionMapping"],"mappings":"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","file":"modules-ams-roles-and-permissions-roles-and-permissions-module-es5.js","sourcesContent":["export default \"<div class=\\\"parking-create-parking-slot-wrapper\\\">\\n\\t<div class=\\\"main\\\">\\n\\t\\t<form #createParkingSlotForm=\\\"ngForm\\\" name=\\\"addSlotForm\\\" novalidate>\\n\\t\\t\\t<condo-card>\\n\\t\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h4>Create Roles</h4>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div CondoCardBody>\\n\\t\\t\\t\\t\\t<div class=\\\"p-5\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Roles Type</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select name=\\\"roleTypeId\\\" [(ngModel)]=\\\"roleTypeId\\\" class=\\\"form-control\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of allRoles\\\" value=\\\"{{item.value}}\\\">{{item?.name}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Roles Name</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"roleName\\\" [(ngModel)]=\\\"roleName\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Description</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea name=\\\"description\\\" [(ngModel)]=\\\"description\\\" cols=\\\"10\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trows=\\\"3\\\"></textarea>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12 d-flex justify-content-end\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"mr-3\\\" mat-flat-button\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trouterLink=\\\"/ams/roles-permissions/role-permissions-list\\\" routerLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions]=\\\"{exact:true}\\\">Cancel</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" *ngIf=\\\"isCreate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"addRole()\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" *ngIf=\\\"!isCreate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"updateRole()\\\">Update</button>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</condo-card>\\n\\t\\t</form>\\n\\t</div>\\n</div>\";","export default \"<div class=\\\"parking-aa-unit-to-unit-allocation-wrapper\\\">\\n\\t<div class=\\\"main\\\">\\n\\t\\t<condo-card>\\n\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"d-flex align-items-center\\\" >\\n\\t\\t\\t\\t\\t\\t<h4>Roles And Permissions</h4>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"ml-auto d-none d-md-block mr-3\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\">\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"mr-3\\\">\\n\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t\\t\\t\\trouterLink=\\\"/ams/roles-permissions/add-roles-permissions\\\" routerLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions]=\\\"{exact:true}\\\">Create Roles</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div CondoCardBody *ngIf=\\\"isShowRoleList\\\" >\\n\\t\\t\\t\\t<jqxGrid [theme]=\\\"'material'\\\" [width]=\\\"'100%'\\\" [rowsheight]=\\\"48\\\" [autoheight]=\\\"true\\\" [pageable]=\\\"true\\\"\\n\\t\\t\\t\\t\\t[filterable]=\\\"true\\\" [sortable]=\\\"true\\\" [source]=\\\"roleList\\\" [columns]=\\\"roleHeader\\\"\\n\\t\\t\\t\\t\\t[columnsresize]=\\\"true\\\" [enablehover]=\\\"false\\\" #datagrid>\\n\\t\\t\\t\\t</jqxGrid>\\n\\t\\t\\t</div>\\n\\t\\t</condo-card>\\n\\t</div>\\n</div>\";","export default \"<div class=\\\"parking-create-parking-slot-wrapper\\\">\\n    <div class=\\\"main\\\">\\n        <condo-card>\\n            <div CondoCardHeader>\\n                <div class=\\\"d-flex\\\">\\n                    <div>\\n                        <h4>Set Permissions</h4>\\n                    </div>\\n                    <div class=\\\"ml-auto d-none d-md-block mr-3\\\">\\n                        <button mat-flat-button \\n                        routerLink=\\\"/ams/roles-permissions/role-permissions-list\\\" \\n\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">Cancel</button>\\n                    </div>\\n                </div>\\n            </div>\\n            <div CondoCardBody>\\n                <div class=\\\"p-5\\\"> \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-4 col-lg-4 col-sm-6 col-xs-6\\\">\\n                            <mat-selection-list #menu [multiple]=\\\"false\\\" (selectionChange)=\\\"changeMenu($event)\\\">\\n                                <mat-list-option *ngFor=\\\"let item of menuList;let i=index\\\" [value]=\\\"item\\\"\\n                                    [selected]=\\\"item.menuName === selectedMenuName\\\">\\n                                    <!-- <div class=\\\"form-check recur-check float-left\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"{{item}}\\\" name=\\\"{{item}}\\\" checked>\\n                                        <label class=\\\"form-check-label tiny\\\" for=\\\"{{item}}\\\">{{item}}</label>\\n                                    </div> -->\\n                                    {{item?.menuName}}\\n                                </mat-list-option>\\n                            </mat-selection-list>\\n                        </div>\\n                        <div class=\\\"col-md-4 col-lg-4 col-sm-6 col-xs-6\\\">\\n                            <mat-selection-list #submenu [multiple]=\\\"false\\\" (selectionChange)=\\\"changeSubMenu($event)\\\">\\n                                <mat-list-option *ngFor=\\\"let item of subMenuList\\\" [value]=\\\"item\\\"\\n                                    [selected]=\\\"item.subMenuName === selectedSubMenuName\\\">\\n                                    <!-- <div class=\\\"form-check recur-check float-left\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"{{item}}\\\" name=\\\"{{item}}\\\">\\n                                        <label class=\\\"form-check-label tiny\\\" for=\\\"{{item}}\\\">{{item}}</label>\\n                                    </div> -->\\n                                    {{item?.subMenuName}}\\n                                </mat-list-option>\\n                            </mat-selection-list>\\n                        </div>\\n                        <div class=\\\"col-md-4 col-lg-4 col-sm-6 col-xs-6\\\" *ngIf=\\\"actionList && actionList.length\\\">\\n                            <mat-selection-list #menuActions (selectionChange)=\\\"changeActions($event)\\\">\\n                                <mat-list-option *ngFor=\\\"let item of actionList\\\" [selected]=\\\"item.checked\\\"\\n                                    [value]=\\\"item\\\">\\n                                    {{item?.name | uppercase}}\\n                                </mat-list-option>\\n                            </mat-selection-list>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </condo-card>\\n    </div>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3JvbGVzLWFuZC1wZXJtaXNzaW9ucy9hZGQtcm9sZS9hZGQtcm9sZS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/api/controllers/User';\nimport { ScreenService } from 'src/app/api/controllers/Screen';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SessionService } from 'src/app/core/session/session.service';\n\n@Component({\n  selector: 'app-add-role',\n  templateUrl: './add-role.component.html',\n  styleUrls: ['./add-role.component.scss']\n})\nexport class AddRoleComponent implements OnInit {\n\n  allRoles: Array<any> = [];\n  roleTypeId: any;\n  roleName: any;\n  description: any;\n  menuRoleSecLevelId:any;\n  isCreate:boolean=true;\n  menuRole:any;\n  constructor(private userService: UserService,\n    private router: Router,\n    private activatedRoute : ActivatedRoute,\n    private sessionService : SessionService,\n    private screenService: ScreenService) { }\n\n  ngOnInit(): void {\n    if (this.activatedRoute.params['value'].id != undefined) {\n      this.menuRoleSecLevelId = this.activatedRoute.params['value'].id;\n      this.isCreate = false;\n      this.getRole();\n    }\n    this.getAllRoles();\n  }\n\n  getRole(){\n      let queryParamBase = {\n      apartmentId: this.sessionService.apartmentId,\n      menuRoleSecLevelId: this.menuRoleSecLevelId,\n    };\n    this.screenService.getMenuRoleSecLevelbyRoleSecLevelId(queryParamBase).subscribe(\n      resp =>{\n        this.menuRole = resp[0];\n        this.roleTypeId = this.menuRole.roleId;\n        this.roleName = this.menuRole.roleName;\n      }\n    )\n  }\n\n  getAllRoles() {\n    this.userService.getAllRoleTypes().subscribe(\n      (resp: any) => {\n        this.allRoles = resp;\n        if (this.allRoles && this.allRoles.length) {\n          this.allRoles.filter(key => {\n            if (key.value == 2 || key.value == 4 || key.value == 5) {\n              this.allRoles.splice(this.allRoles.indexOf(key), 1);\n            }\n          })\n        }\n      }\n    )\n  }\n\n  addRole() {\n    let addMenuLevelParam = {\n      \"menuSecLevelId\": 0,\n      \"apartmentId\": this.sessionService.apartmentId,\n      \"name\": this.roleName,\n      \"isActive\": true,\n      \"insertedBy\": this.sessionService.userId,\n      \"insertedOn\": new Date().toISOString(),\n      \"updatedBy\": this.sessionService.userId,\n      \"updatedOn\": \"2020-08-09T06:22:21.539Z\"\n    }\n    let secLevelParam = {\n      seclevel: addMenuLevelParam\n    }\n    this.screenService.addMenuSecLevel(secLevelParam).subscribe(\n      (resp:any) => {\n        if (resp && resp.message) {\n          let addMenuRoleSecLevel = {\n            \"menuRoleSecLevelId\": 0,\n            \"apartmentId\": this.sessionService.apartmentId,\n            \"roleId\": parseInt(this.roleTypeId),\n            \"secLevelId\": resp.message,\n            \"isActive\": true,\n            \"insertedBy\": this.sessionService.userId,\n            \"insertedOn\": new Date().toISOString(),\n            \"updatedBy\": this.sessionService.userId,\n            \"updatedOn\": \"2020-08-09T06:22:21.539Z\"\n          }\n          let roleSecLevelParam = {\n            roleseclevel: addMenuRoleSecLevel\n          }\n          this.screenService.addMenuRoleSecLevel(roleSecLevelParam).subscribe(\n            resp => {\n              this.router.navigate(['/ams/roles-permissions/role-permissions-list']);\n            }\n          )\n        }\n      }\n    )\n  }\n\n  updateRole(){\n    let updataParam = {\n      \"menuSecLevelId\": this.menuRole.menuRoleSecLevelId,\n      \"apartmentId\":  this.sessionService.apartmentId,\n      \"name\": this.roleName,\n      \"isActive\": true,\n      \"insertedBy\": 0,\n      \"insertedOn\": new Date().toISOString(),\n      \"updatedBy\": this.sessionService.userId,\n      \"updatedOn\": new Date().toISOString()\n    }\n    let updateRoleParam = {\n      menuSecLevel : updataParam\n    }\n    this.screenService.updateMenuSecLevel(updateRoleParam).subscribe(\n      resp =>{\n        this.router.navigate(['/ams/roles-permissions/role-permissions-list']);\n      }\n    )\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3JvbGVzLWFuZC1wZXJtaXNzaW9ucy9yb2xlcy1hbmQtcGVybWlzc2lvbnMtbGlzdC9yb2xlcy1hbmQtcGVybWlzc2lvbnMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild, HostListener, Injector } from '@angular/core';\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ScreenService } from 'src/app/api/controllers/Screen';\nimport { ModalService } from 'src/app/shared/services/modal.service';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\n\n@Component({\n  selector: 'app-roles-and-permissions-list',\n  templateUrl: './roles-and-permissions-list.component.html',\n  styleUrls: ['./roles-and-permissions-list.component.scss']\n})\nexport class RolesAndPermissionsListComponent implements OnInit {\n\n  public roleHeader: Array<any> = [];\n  public roleList: any;\n  public isEnableCreate: boolean = true;\n  modalService: any;\n  isShowRoleList:boolean=false;\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n\n  @HostListener('window:navigateToPermission',['$event.detail'])\n  navigateToPermission(detail) {\n    let dataRecord = this.datagrid.getrowdata(detail.rowId)\n    this.router.navigate(['/ams/roles-permissions/set-permission'],{queryParams:{ secLevelId: dataRecord.secLevelId, roleId: dataRecord.roleId}});\n  }\n  @HostListener('window:onEditRole', ['$event.detail'])\n  onEditRole(detail) {\n    let dataRecord = this.datagrid.getrowdata(detail.rowId);\n    let menuRoleSecLevelId = dataRecord.menuRoleSecLevelId;\n    this.router.navigateByUrl('/ams/roles-permissions/edit-roles-permissions/' + menuRoleSecLevelId);\n  }\n  @HostListener('window:onDeleteRole', ['$event.detail'])\n  onDeleteRole(detail) {\n    let dataRecord = this.datagrid.getrowdata(detail.rowId)\n    let menuRoleSecLevelId = dataRecord.menuRoleSecLevelId\n    this.modalService.showConfirmModal(menuRoleSecLevelId);\n  }\n  constructor(private router: Router,\n    private screenService: ScreenService,\n    private sharedService: SharedService,\n    private sessionService: SessionService,\n    private injector: Injector) {\n    this.modalService = this.injector.get(ModalService);\n  }\n\n  ngOnInit(): void {\n    var cellsrenderer = (row, column, value) => {\n      return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n    }\n    var columnrenderer = (value) => {\n      return '<div style=\"padding: 14px\">' + value + '</div>';\n    }\n    this.roleHeader = [{\n      text: 'role type',\n      datafield: 'roleId',\n      cellsrenderer: cellsrenderer,\n      renderer: columnrenderer\n    }, {\n      text: 'Role Name',\n      datafield: 'roleName',\n      cellsrenderer: cellsrenderer,\n      renderer: columnrenderer\n    }, {\n      text: 'set permission',\n      cellsalign: 'center',\n      align: 'center',\n      width: 200,\n      cellsrenderer: (row): string => {\n        return '<div class=\"simple-actions\"><a href=\"javascript:void(0)\" onClick=\"navigateToPermission(' + row + ')\" class=\"btn mat-primary\">Set Permissions</a></div>'\n      },\n      renderer: columnrenderer\n    },\n    {\n      text: 'action',\n      cellsalign: 'center',\n      align: 'center',\n      width: 120,\n      cellsrenderer: (row): string => {\n        return '<div class=\"simple-actions\"><a href=\"javascript:void(0)\" class=\"mr-2\" onClick=\"onEditRole(' + row + ')\"><i class=\"fa fa-pencil icon edit\" aria-hidden=\"true\"></i></a><a href=\"javascript:void(0)\" class=\"mr-2\" onClick=\"onDeleteRole(' + row + ')\"><i class=\"fa fa-trash icon delete\" aria-hidden=\"true\"></i></a></div>'\n      },\n      renderer: columnrenderer\n    }];\n    // delete item\n    this.sharedService.unitlistdeleteindexcast.subscribe(id => {\n\n      if (id != null) {\n\n        var params = {\n          menuRoleSecLevelId: id,\n          deleteBy: parseInt(this.sessionService.userId)\n        }\n\n        this.screenService.deleteMenuRoleSecLevel(params).subscribe((res: any) => {\n          this.getRolePermissionList();\n        }, error => {\n          console.log(error);\n        });\n\n\n      }\n\n    })\n    this.getRolePermissionList();\n  }\n  getRolePermissionList() {\n    this.isShowRoleList = false;\n    let param = {\n      apartmentId: this.sessionService.apartmentId\n    }\n    this.screenService.getAllDefaultMenuRoleSecLevelbyApartmentId(param).subscribe(\n      (resp: any) => {\n        let refMenuData = resp.filter(data => {\n          return data.isActive\n        });\n        let gridSourceData = {\n          localdata: refMenuData,\n          datatype: \"array\"\n\n        }\n        this.roleList = new jqx.dataAdapter(gridSourceData);\n        this.isShowRoleList = true;\n        this.isEnableCreate = true;\n      }\n    )\n  }\n\n}\n\nfunction navigateToPermission(row) {\n  var event = new CustomEvent('navigateToPermission', {\n    detail: {\n      rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).navigateToPermission = navigateToPermission;\n\nfunction onEditRole(row) {\n  var event = new CustomEvent('onEditRole', {\n    detail: {\n      rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).onEditRole = onEditRole;\n\nfunction onDeleteRole(row) {\n  var event = new CustomEvent('onDeleteRole', {\n    detail: {\n      rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).onDeleteRole = onDeleteRole;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RolesAndPermissionsListComponent } from './roles-and-permissions-list/roles-and-permissions-list.component';\nimport { AddRoleComponent } from './add-role/add-role.component';\nimport { SetPermissionsComponent } from './set-permissions/set-permissions.component';\n\n\n\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: 'roles-permissions-list', pathMatch: 'full'},\n\t{ path: 'roles-permissions-list', component: RolesAndPermissionsListComponent},\n\t{ path: 'add-roles-permissions', component: AddRoleComponent},\n\t{ path: 'edit-roles-permissions/:id', component: AddRoleComponent},\n\t{ path: 'set-permission', component: SetPermissionsComponent},\n\t{ path: '**', redirectTo: 'roles-permissions-list', pathMatch: 'full'}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RolesAndPermissionsRouting { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RolesAndPermissionsListComponent } from './roles-and-permissions-list/roles-and-permissions-list.component';\nimport { AddRoleComponent } from './add-role/add-role.component';\nimport { SetPermissionsComponent } from './set-permissions/set-permissions.component';\nimport { RolesAndPermissionsRouting } from './roles-and-permissions-routing.modiule';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport {MatListModule} from '@angular/material/list';\nimport { CondoCardModule } from '../../ui/card/card.module';\n\n\n\n\n@NgModule({\n  declarations: [RolesAndPermissionsListComponent, AddRoleComponent, SetPermissionsComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MatListModule,\n    CondoCardModule,\n    RolesAndPermissionsRouting\n  ]\n})\nexport class RolesAndPermissionsModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3JvbGVzLWFuZC1wZXJtaXNzaW9ucy9zZXQtcGVybWlzc2lvbnMvc2V0LXBlcm1pc3Npb25zLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ScreenService } from 'src/app/api/controllers/Screen';\nimport { ActivatedRoute } from '@angular/router';\nimport { SessionService } from 'src/app/core/session/session.service';\n\n@Component({\n  selector: 'app-set-permissions',\n  templateUrl: './set-permissions.component.html',\n  styleUrls: ['./set-permissions.component.scss']\n})\nexport class SetPermissionsComponent implements OnInit {\n\n  public menuList: Array<any> = [];\n  public subMenuList: any;\n  public actionList: any;\n  public selectedMenuName: any;\n  public selectedSubMenuName: any;\n  public actions: any;\n  public secLevelId:any;\n  public roleId:any;\n  is\n  constructor(private screenService: ScreenService,private activatedRoute: ActivatedRoute,private sessionService : SessionService) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe(params => {\n      this.secLevelId = params['secLevelId'];\n      this.roleId = params['roleId'];\n      this.getScreenList();\n    });\n    this.actionList = [\n      {\n        name: 'add',\n        functionId: 0,\n        checked: false\n      },\n      {\n        name: 'edit',\n        functionId: 0,\n        checked: false\n      },\n      {\n        name: 'display',\n        functionId: 0,\n        checked: false\n      },\n      {\n        name: 'delete',\n        functionId: 0,\n        checked: false\n      }\n    ]\n  }\n\n  getScreenList() {\n    let queryParamBase = {\n      ApartmentId: this.sessionService.apartmentId,\n      RoleId: parseInt(this.roleId),\n      secLevelId: parseInt(this.secLevelId)\n    };\n    this.screenService.getMenuFunctionByRoleIdMultiFilter(queryParamBase).subscribe(\n      (resp: any) => {\n        this.menuList = resp;\n        if (this.menuList && this.menuList.length) {\n          this.selectedMenuName = this.menuList[0].menuName;\n          this.changeMenu('');\n        }\n      }\n    )\n  }\n\n  changeMenu(event) {\n    if (event) {\n      this.selectedMenuName = event.option.value ? event.option.value.menuName : '';\n    }\n    if (this.selectedMenuName) {\n      this.menuList.filter(key => {\n        if (key.menuName == this.selectedMenuName) {\n          this.subMenuList = key.subMenuNames;\n          this.selectedSubMenuName = this.subMenuList.length ? this.subMenuList[0].subMenuName : '';\n          this.changeSubMenu('')\n        }\n      })\n    }\n  }\n  changeSubMenu(event) {\n    if (event) {\n      this.actions = event.option.value ? event.option.value.actions : {};\n      this.mapActions();\n    } else {\n      this.subMenuList.filter(key => {\n        if (this.selectedSubMenuName == key.subMenuName) {\n          this.actions = key.actions;\n          this.mapActions();\n        }\n      })\n    }\n  }\n\n  mapActions() {\n    this.actionList[0].functionId = this.actions.add_FunctionId;\n    this.actionList[1].functionId = this.actions.edit_FunctionId;\n    this.actionList[2].functionId = this.actions.display_FunctionId;\n    this.actionList[3].functionId = this.actions.delete_FunctionId;\n    this.actionList[0].checked = this.actions.add;\n    this.actionList[1].checked = this.actions.edit;\n    this.actionList[2].checked = this.actions.display;\n    this.actionList[3].checked = this.actions.delete;\n  }\n\n  changeActions(event) {\n    if (event.option.value) {\n      let queryParamBase = {\n        apartmentId: this.sessionService.apartmentId,\n        menuSecLevelFunctionId: event.option.value.functionId,\n        isActive: !event.option.value.checked,\n        updatedBy: this.sessionService.roleId,\n      };\n      this.screenService.updateMenuSecLevelFunctionMapping(queryParamBase).subscribe(\n        (resp: any) => {\n        });\n    }\n  }\n\n\n}\n"]}