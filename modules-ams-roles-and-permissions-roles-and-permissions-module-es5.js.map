{"version":3,"sources":["webpack:///src/app/modules/ams/roles-and-permissions/add-role/add-role.component.html","webpack:///src/app/modules/ams/roles-and-permissions/roles-and-permissions-list/roles-and-permissions-list.component.html","webpack:///src/app/modules/ams/roles-and-permissions/set-permissions/set-permissions.component.html","webpack:///src/app/modules/ams/roles-and-permissions/add-role/add-role.component.scss","webpack:///src/app/modules/ams/roles-and-permissions/add-role/add-role.component.ts","webpack:///src/app/modules/ams/roles-and-permissions/roles-and-permissions-list/roles-and-permissions-list.component.scss","webpack:///src/app/modules/ams/roles-and-permissions/roles-and-permissions-list/roles-and-permissions-list.component.ts","webpack:///src/app/modules/ams/roles-and-permissions/roles-and-permissions-routing.modiule.ts","webpack:///src/app/modules/ams/roles-and-permissions/roles-and-permissions.module.ts","webpack:///src/app/modules/ams/roles-and-permissions/set-permissions/set-permissions.component.scss","webpack:///src/app/modules/ams/roles-and-permissions/set-permissions/set-permissions.component.ts"],"names":["AddRoleComponent","userService","router","screenService","allRoles","getAllRoles","getAllRoleTypes","subscribe","resp","length","filter","key","value","splice","indexOf","addMenuLevelParam","parseInt","localStorage","getItem","roleName","Date","toISOString","secLevelParam","seclevel","addMenuSecLevel","message","addMenuRoleSecLevel","roleTypeId","roleSecLevelParam","roleseclevel","navigate","selector","template","RolesAndPermissionsListComponent","roleHeader","roleList","isEnableCreate","navigateByUrl","cellsrenderer","row","column","columnrenderer","text","datafield","width","renderer","minwidth","cellsalign","align","localData","sno","description","gridSourceData","localdata","datatype","jqx","dataAdapter","navigateToPermission","event","CustomEvent","window","dispatchEvent","routes","path","redirectTo","pathMatch","component","RolesAndPermissionsRouting","imports","forChild","exports","RolesAndPermissionsModule","declarations","SetPermissionsComponent","menuList","getScreenList","actionList","name","functionId","checked","queryParamBase","ApartmentId","RoleId","getMenuFunctionByRoleIdMultiFilter","selectedMenuName","menuName","changeMenu","option","subMenuList","subMenuNames","selectedSubMenuName","subMenuName","changeSubMenu","actions","mapActions","add_FunctionId","edit_FunctionId","display_FunctionId","delete_FunctionId","add","edit","display","addFunctionParam","toString","seclevelFunctionmap","addMenuSecLevelFunctionMapping"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCUFA,gBAAgB;AAO3B,kCAAoBC,WAApB,EACUC,MADV,EAEUC,aAFV,EAEwC;AAAA;;AAFpB,eAAAF,WAAA,GAAAA,WAAA;AACV,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AAPV,eAAAC,QAAA,GAAuB,EAAvB;AAO2C;;AAThB;AAAA;AAAA,qCAWnB;AACN,iBAAKC,WAAL;AACD;AAb0B;AAAA;AAAA,wCAeb;AAAA;;AACZ,iBAAKJ,WAAL,CAAiBK,eAAjB,GAAmCC,SAAnC,CACE,UAACC,IAAD,EAAe;AACb,mBAAI,CAACJ,QAAL,GAAgBI,IAAhB;;AACA,kBAAI,KAAI,CAACJ,QAAL,IAAiB,KAAI,CAACA,QAAL,CAAcK,MAAnC,EAA2C;AACzC,qBAAI,CAACL,QAAL,CAAcM,MAAd,CAAqB,UAAAC,GAAG,EAAI;AAC1B,sBAAIA,GAAG,CAACC,KAAJ,IAAa,CAAb,IAAkBD,GAAG,CAACC,KAAJ,IAAa,CAA/B,IAAoCD,GAAG,CAACC,KAAJ,IAAa,CAArD,EAAwD;AACtD,yBAAI,CAACR,QAAL,CAAcS,MAAd,CAAqB,KAAI,CAACT,QAAL,CAAcU,OAAd,CAAsBH,GAAtB,CAArB,EAAiD,CAAjD;AACD;AACF,iBAJD;AAKD;AACF,aAVH;AAYD;AA5B0B;AAAA;AAAA,oCA8BjB;AAAA;;AACR,gBAAII,iBAAiB,GAAG;AACtB,gCAAkB,CADI;AAEtB,6BAAeC,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAD,CAFD;AAGtB,sBAAQ,KAAKC,QAHS;AAItB,0BAAY,IAJU;AAKtB,4BAAcH,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAD,CALA;AAMtB,4BAAc,IAAIE,IAAJ,GAAWC,WAAX,EANQ;AAOtB,2BAAaL,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAD,CAPC;AAQtB,2BAAa;AARS,aAAxB;AAUA,gBAAII,aAAa,GAAG;AAClBC,sBAAQ,EAAER;AADQ,aAApB;AAGA,iBAAKZ,aAAL,CAAmBqB,eAAnB,CAAmCF,aAAnC,EAAkDf,SAAlD,CACE,UAACC,IAAD,EAAc;AACZ,kBAAIA,IAAI,IAAIA,IAAI,CAACiB,OAAjB,EAA0B;AACxB,oBAAIC,mBAAmB,GAAG;AACxB,wCAAsB,CADE;AAExB,iCAAeV,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAD,CAFC;AAGxB,4BAAUF,QAAQ,CAAC,MAAI,CAACW,UAAN,CAHM;AAIxB,gCAAcnB,IAAI,CAACiB,OAJK;AAKxB,8BAAY,IALY;AAMxB,gCAAcT,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAD,CANE;AAOxB,gCAAc,IAAIE,IAAJ,GAAWC,WAAX,EAPU;AAQxB,+BAAaL,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAD,CARG;AASxB,+BAAa;AATW,iBAA1B;AAWA,oBAAIU,iBAAiB,GAAG;AACtBC,8BAAY,EAAEH;AADQ,iBAAxB;;AAGA,sBAAI,CAACvB,aAAL,CAAmBuB,mBAAnB,CAAuCE,iBAAvC,EAA0DrB,SAA1D,CACE,UAAAC,IAAI,EAAI;AACN,wBAAI,CAACN,MAAL,CAAY4B,QAAZ,CAAqB,CAAC,IAAD,CAArB;AACD,iBAHH;AAKD;AACF,aAvBH;AAyBD;AArE0B;;AAAA;AAAA,S;;;;gBATpB;;gBAEA;;gBADA;;;;AAQI9B,sBAAgB,6DAL5B,gEAAU;AACT+B,gBAAQ,EAAE,cADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,yIAFS;;;;AAAA,OAAV,CAK4B,E,+EAOM,wE,EACf,sD,EACO,4E,EATE,GAAhBhC,gBAAgB,CAAhB;;;;;;;;;;;;;;;;ACVb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCSFiC,gCAAgC;AAa3C,kDAAoB/B,MAApB,EAAmC;AAAA;;AAAf,eAAAA,MAAA,GAAAA,MAAA;AAXb,eAAAgC,UAAA,GAAsB,EAAtB;AACA,eAAAC,QAAA,GAAoB,EAApB;AACA,eAAAC,cAAA,GAAuB,IAAvB;AAS+B;;AAbK;AAAA;AAAA,iDASpB;AACrB,iBAAKlC,MAAL,CAAYmC,aAAZ,CAA0B,uCAA1B;AACD;AAX0C;AAAA;AAAA,qCAenC;AACL,gBAAIC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAMC,MAAN,EAAc5B,KAAd,EAAwB;AAC7C,qBAAO,wCAAwCA,KAAxC,GAAgD,QAAvD;AACD,aAFE;;AAIH,gBAAI6B,cAAc,GAAG,SAAjBA,cAAiB,CAAC7B,KAAD,EAAW;AAC9B,qBAAO,gCAAgCA,KAAhC,GAAwC,QAA/C;AACD,aAFD;;AAGE,iBAAKsB,UAAL,GAAkB,CAAC;AACjBQ,kBAAI,EAAE,KADW;AAEjBC,uBAAS,EAAE,KAFM;AAGjBC,mBAAK,EAAE,GAHU;AAIjBN,2BAAa,EAACA,aAJG;AAKjBO,sBAAQ,EAAEJ;AALO,aAAD,EAMf;AACDC,kBAAI,EAAE,WADL;AAEDC,uBAAS,EAAE,UAFV;AAGDG,sBAAQ,EAAE,GAHT;AAIDR,2BAAa,EAAEA,aAJd;AAKDO,sBAAQ,EAAEJ;AALT,aANe,EAYf;AACDC,kBAAI,EAAE,aADL;AAEDC,uBAAS,EAAE,aAFV;AAGDL,2BAAa,EAAEA,aAHd;AAIDQ,sBAAQ,EAAE,GAJT;AAKDD,sBAAQ,EAAEJ;AALT,aAZe,EAkBf;AACDC,kBAAI,EAAE,gBADL;AAEDK,wBAAU,EAAE,QAFX;AAGDC,mBAAK,EAAE,QAHN;AAIDJ,mBAAK,EAAE,GAJN;AAKDN,2BAAa,EAAE,uBAACC,GAAD,EAAiB;AAC9B,uBAAO,6IAAP;AACD,eAPA;AAQDM,sBAAQ,EAAEJ;AART,aAlBe,EA4BjB;AACCC,kBAAI,EAAE,QADP;AAECK,wBAAU,EAAE,QAFb;AAGCC,mBAAK,EAAE,QAHR;AAICJ,mBAAK,EAAE,GAJR;AAKCN,2BAAa,EAAE,uBAACC,GAAD,EAAiB;AAC9B,uBAAO,oGAAoGA,GAApG,GAA0G,4IAA1G,GAAyPA,GAAzP,GAA+P,yEAAtQ;AACD,eAPF;AAQCM,sBAAQ,EAAEJ;AARX,aA5BiB,CAAlB;AAuCA,gBAAIQ,SAAS,GAAC,CACd;AACEC,iBAAG,EAAC,CADN;AAEE/B,sBAAQ,EAAC,OAFX;AAGEgC,yBAAW,EAAC;AAHd,aADc,EAMd;AACED,iBAAG,EAAC,CADN;AAEE/B,sBAAQ,EAAC,OAFX;AAGEgC,yBAAW,EAAC;AAHd,aANc,CAAd;AAaC,gBAAIC,cAAc,GAAG;AACnBC,uBAAS,EAAEJ,SADQ;AAEnBK,sBAAQ,EAAE;AAFS,aAArB;AAKA,iBAAKnB,QAAL,GAAgB,IAAIoB,GAAG,CAACC,WAAR,CAAoBJ,cAApB,CAAhB;AACA,iBAAKhB,cAAL,GAAsB,IAAtB;AACF;AAlF0C;;AAAA;AAAA,S;;;;gBAPpC;;;;;;gBAaN,uD;AAAS,iBAAC,UAAD,EAAa;AAAE,sBAAQ;AAAV,WAAb;;;gBAET,0D;AAAY,iBAAC,6BAAD;;;AARFH,sCAAgC,6DAL5C,gEAAU;AACTF,gBAAQ,EAAE,gCADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,6KAFS;;;;AAAA,OAAV,CAK4C,E,+EAahB,sD,EAbgB,GAAhCC,gCAAgC,CAAhC;;AAsFb,eAASwB,oBAAT,GAA6B;AAC3B,YAAIC,KAAK,GAAG,IAAIC,WAAJ,CAAgB,sBAAhB,CAAZ;AACAC,cAAM,CAACC,aAAP,CAAqBH,KAArB;AACD;;AACAE,YAAc,CAACH,oBAAf,GAAsCA,oBAAtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1FD,UAAMK,MAAM,GAAW,CACtB;AAAEC,YAAI,EAAE,EAAR;AAAYC,kBAAU,EAAE,wBAAxB;AAAkDC,iBAAS,EAAE;AAA7D,OADsB,EAEtB;AAAEF,YAAI,EAAE,wBAAR;AAAkCG,iBAAS,EAAE;AAA7C,OAFsB,EAGtB;AAAEH,YAAI,EAAE,uBAAR;AAAiCG,iBAAS,EAAE;AAA5C,OAHsB,EAItB;AAAEH,YAAI,EAAE,gBAAR;AAA0BG,iBAAS,EAAE;AAArC,OAJsB,EAKtB;AAAEH,YAAI,EAAE,IAAR;AAAcC,kBAAU,EAAE,wBAA1B;AAAoDC,iBAAS,EAAE;AAA/D,OALsB,CAAvB;;UAaaE,0BAA0B;AAAA;AAAA,O;;AAA1BA,gCAA0B,6DAJtC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBP,MAAtB,CAAD,CADD;AAERQ,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIsC,GAA1BH,0BAA0B,CAA1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCCAI,yBAAyB;AAAA;AAAA,O;;AAAzBA,+BAAyB,6DAVrC,+DAAS;AACRC,oBAAY,EAAE,CAAC,iIAAD,EAAmC,6EAAnC,EAAqD,kGAArD,CADN;AAERJ,eAAO,EAAE,CACP,4DADO,EAEP,yEAFO,EAGP,oEAHO,EAIP,oEAJO,EAKP,iGALO;AAFD,OAAT,CAUqC,GAAzBG,yBAAyB,CAAzB;;;;;;;;;;;;;;;;ACvBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCSFE,uBAAuB;AAQlC,yCAAoBtE,aAApB,EAAkD;AAAA;;AAA9B,eAAAA,aAAA,GAAAA,aAAA;AANb,eAAAuE,QAAA,GAAuB,EAAvB;AAM8C;;AARnB;AAAA;AAAA,qCAU1B;AACN,iBAAKC,aAAL;AACA,iBAAKC,UAAL,GAAkB,CAChB;AACEC,kBAAI,EAAG,KADT;AAEEC,wBAAU,EAAG,CAFf;AAGEC,qBAAO,EAAG;AAHZ,aADgB,EAMhB;AACEF,kBAAI,EAAG,MADT;AAEEC,wBAAU,EAAG,CAFf;AAGEC,qBAAO,EAAG;AAHZ,aANgB,EAWhB;AACEF,kBAAI,EAAG,SADT;AAEEC,wBAAU,EAAG,CAFf;AAGEC,qBAAO,EAAG;AAHZ,aAXgB,EAgBhB;AACEF,kBAAI,EAAG,QADT;AAEEC,wBAAU,EAAG,CAFf;AAGEC,qBAAO,EAAG;AAHZ,aAhBgB,CAAlB;AAsBD;AAlCiC;AAAA;AAAA,0CAoClB;AAAA;;AACd,gBAAIC,cAAc,GAAG;AACnBC,yBAAW,EAAEjE,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAD,CADF;AAEnBgE,oBAAM,EAAElE,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAD;AAFG,aAArB;AAIA,iBAAKf,aAAL,CAAmBgF,kCAAnB,CAAsDH,cAAtD,EAAsEzE,SAAtE,CACE,UAACC,IAAD,EAAe;AACb,oBAAI,CAACkE,QAAL,GAAgBlE,IAAhB;;AACA,kBAAI,MAAI,CAACkE,QAAL,IAAiB,MAAI,CAACA,QAAL,CAAcjE,MAAnC,EAA2C;AACzC,sBAAI,CAAC2E,gBAAL,GAAwB,MAAI,CAACV,QAAL,CAAc,CAAd,EAAiBW,QAAzC;;AACA,sBAAI,CAACC,UAAL,CAAgB,EAAhB;AACD;AACF,aAPH;AASD;AAlDiC;AAAA;AAAA,qCAoDvB5B,KApDuB,EAoDhB;AAAA;;AAChB,gBAAGA,KAAH,EAAS;AACP,mBAAK0B,gBAAL,GAAwB1B,KAAK,CAAC6B,MAAN,CAAa3E,KAAb,GAAqB8C,KAAK,CAAC6B,MAAN,CAAa3E,KAAb,CAAmByE,QAAxC,GAAmD,EAA3E;AACD;;AACD,gBAAG,KAAKD,gBAAR,EAAyB;AACvB,mBAAKV,QAAL,CAAchE,MAAd,CAAqB,UAAAC,GAAG,EAAG;AACzB,oBAAGA,GAAG,CAAC0E,QAAJ,IAAgB,MAAI,CAACD,gBAAxB,EAAyC;AACvC,wBAAI,CAACI,WAAL,GAAmB7E,GAAG,CAAC8E,YAAvB;AACA,wBAAI,CAACC,mBAAL,GAA2B,MAAI,CAACF,WAAL,CAAiB/E,MAAjB,GAA0B,MAAI,CAAC+E,WAAL,CAAiB,CAAjB,EAAoBG,WAA9C,GAA4D,EAAvF;;AACA,wBAAI,CAACC,aAAL,CAAmB,EAAnB;AACD;AACF,eAND;AAOD;AACF;AAjEiC;AAAA;AAAA,wCAkEpBlC,KAlEoB,EAkEb;AAAA;;AACnB,gBAAGA,KAAH,EAAS;AACP,mBAAKmC,OAAL,GAAenC,KAAK,CAAC6B,MAAN,CAAa3E,KAAb,GAAqB8C,KAAK,CAAC6B,MAAN,CAAa3E,KAAb,CAAmBiF,OAAxC,GAAkD,EAAjE;AACD,aAFD,MAEK;AACH,mBAAKL,WAAL,CAAiB9E,MAAjB,CAAwB,UAAAC,GAAG,EAAG;AAC5B,oBAAG,MAAI,CAAC+E,mBAAL,IAA4B/E,GAAG,CAACgF,WAAnC,EAA+C;AAC7C,wBAAI,CAACE,OAAL,GAAelF,GAAG,CAACkF,OAAnB;;AACA,wBAAI,CAACC,UAAL;AACD;AACF,eALD;AAMD;AACF;AA7EiC;AAAA;AAAA,uCA+ExB;AACR,iBAAKlB,UAAL,CAAgB,CAAhB,EAAmBE,UAAnB,GAAgC,KAAKe,OAAL,CAAaE,cAA7C;AACA,iBAAKnB,UAAL,CAAgB,CAAhB,EAAmBE,UAAnB,GAAgC,KAAKe,OAAL,CAAaG,eAA7C;AACA,iBAAKpB,UAAL,CAAgB,CAAhB,EAAmBE,UAAnB,GAAgC,KAAKe,OAAL,CAAaI,kBAA7C;AACA,iBAAKrB,UAAL,CAAgB,CAAhB,EAAmBE,UAAnB,GAAgC,KAAKe,OAAL,CAAaK,iBAA7C;AACA,iBAAKtB,UAAL,CAAgB,CAAhB,EAAmBG,OAAnB,GAA6B,KAAKc,OAAL,CAAaM,GAA1C;AACA,iBAAKvB,UAAL,CAAgB,CAAhB,EAAmBG,OAAnB,GAA6B,KAAKc,OAAL,CAAaO,IAA1C;AACA,iBAAKxB,UAAL,CAAgB,CAAhB,EAAmBG,OAAnB,GAA6B,KAAKc,OAAL,CAAaQ,OAA1C;AACA,iBAAKzB,UAAL,CAAgB,CAAhB,EAAmBG,OAAnB,GAA6B,KAAKc,OAAL,UAA7B;AACD;AAxFiC;AAAA;AAAA,wCA0FpBnC,KA1FoB,EA0Ff;AACjB,gBAAGA,KAAK,CAAC6B,MAAN,CAAa3E,KAAhB,EAAsB;AACpB,kBAAI0F,gBAAgB,GAAG;AACnB,0CAA0B,CADP;AAEnB,+BAAetF,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAD,CAFJ;AAGnB,8BAAc,IAHK;AAInB,8BAAcwC,KAAK,CAAC6B,MAAN,CAAa3E,KAAb,CAAmBkE,UAJd;AAKnB,2BAAW,CALQ;AAMnB,4BAAY,CAACpB,KAAK,CAAC6B,MAAN,CAAa3E,KAAb,CAAmBmE,OANb;AAOnB,8BAAc/D,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAD,CAPH;AAQnB,8BAAc,IAAIE,IAAJ,GAAWmF,QAAX,EARK;AASnB,6BAAavF,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAD,CATF;AAUnB,6BAAa;AAVM,eAAvB;AAYA,kBAAI8D,cAAc,GAAG;AACnBwB,mCAAmB,EAAGF;AADH,eAArB;AAGA,mBAAKnG,aAAL,CAAmBsG,8BAAnB,CAAkDzB,cAAlD,EAAkEzE,SAAlE,CACE,UAACC,IAAD,EAAe,CACd,CAFH;AAGD;AACF;AA/GiC;;AAAA;AAAA,S;;;;gBAR3B;;;;AAQIiE,6BAAuB,6DALnC,gEAAU;AACT1C,gBAAQ,EAAE,qBADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,uJAFS;;;;AAAA,OAAV,CAKmC,E,+EAQC,4E,EARD,GAAvByC,uBAAuB,CAAvB","file":"modules-ams-roles-and-permissions-roles-and-permissions-module-es5.js","sourcesContent":["export default \"<div class=\\\"parking-create-parking-slot-wrapper\\\">\\n\\t<div class=\\\"main\\\">\\n\\t\\t<form #createParkingSlotForm=\\\"ngForm\\\" name=\\\"addSlotForm\\\" novalidate>\\n\\t\\t\\t<condo-card>\\n\\t\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t<h4>Create Roles</h4>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div CondoCardBody>\\n\\t\\t\\t\\t\\t<div class=\\\"row m-0 pt-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Roles Type</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select name=\\\"roleTypeId\\\" [(ngModel)]=\\\"roleTypeId\\\"  class=\\\"form-control\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of allRoles\\\" value=\\\"{{item.value}}\\\">{{item?.name}}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Roles Name</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"roleName\\\" [(ngModel)]=\\\"roleName\\\">\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Description</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<textarea name=\\\"description\\\" [(ngModel)]=\\\"description\\\" cols=\\\"10\\\" rows=\\\"3\\\"></textarea>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"row m-0 pb-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline float-right mt-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" (click)=\\\"addRole()\\\" >Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</condo-card>\\n\\t\\t</form>\\n\\t</div>\\n</div>\";","export default \"<div class=\\\"parking-aa-unit-to-unit-allocation-wrapper\\\">\\n\\t<div class=\\\"main\\\">\\n\\t\\t<condo-card >\\n\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<h4>Roles And Permissions</h4>\\n\\t\\t\\t\\t\\t\\t<!-- <p>{{totalItems}} results</p> -->\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"ml-auto d-none d-md-block mr-3\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\">\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"mr-3\\\">\\n\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" \\n\\t\\t\\t\\t\\t\\thref=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t\\t\\trouterLink=\\\"/ams/roles-permissions/add-roles-permissions\\\" \\n\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">Create Roles</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div CondoCardBody>\\n\\t\\t\\t\\t<jqxGrid [theme]=\\\"'material'\\\" [width]=\\\"'100%'\\\" [rowsheight]=\\\"48\\\" [autoheight]=\\\"true\\\" [pageable]=\\\"true\\\"\\n\\t\\t\\t\\t[filterable]=\\\"true\\\" [sortable]=\\\"true\\\" [source]=\\\"roleList\\\" [columns]=\\\"roleHeader\\\"\\n\\t\\t\\t\\t[columnsresize]=\\\"true\\\" [enablehover]=\\\"false\\\" #datagrid>\\n\\t\\t\\t</jqxGrid>\\n\\t\\t\\t</div>\\n\\t\\t</condo-card>\\n\\t</div>\\n    </div>\";","export default \"<div class=\\\"parking-create-parking-slot-wrapper\\\">\\n    <div class=\\\"main\\\">\\n        <condo-card>\\n            <div CondoCardHeader>\\n                <div class=\\\"d-flex\\\">\\n                    <div>\\n                        <h4>Set Permissions</h4>\\n                    </div>\\n                </div>\\n            </div>\\n            <div CondoCardBody>\\n                <div class=\\\"p-5\\\" >\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-4 col-lg-4 col-sm-6 col-xs-6\\\">\\n                            <mat-selection-list #menu [multiple]=\\\"false\\\" (selectionChange)=\\\"changeMenu($event)\\\" >\\n                                <mat-list-option *ngFor=\\\"let item of menuList;let i=index\\\" [selected]=\\\"item.menuName === selectedMenuName\\\">\\n                                    <!-- <div class=\\\"form-check recur-check float-left\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"{{item}}\\\" name=\\\"{{item}}\\\" checked>\\n                                        <label class=\\\"form-check-label tiny\\\" for=\\\"{{item}}\\\">{{item}}</label>\\n                                    </div> -->\\n                                    {{item?.menuName}}\\n                                </mat-list-option>\\n                            </mat-selection-list>\\n                        </div>\\n                        <div class=\\\"col-md-4 col-lg-4 col-sm-6 col-xs-6\\\">\\n                            <mat-selection-list #submenu [multiple]=\\\"false\\\" (selectionChange)=\\\"changeSubMenu($event)\\\">\\n                                <mat-list-option *ngFor=\\\"let item of subMenuList\\\" [selected]=\\\"item.subMenuName === selectedSubMenuName\\\">\\n                                    <!-- <div class=\\\"form-check recur-check float-left\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"{{item}}\\\" name=\\\"{{item}}\\\">\\n                                        <label class=\\\"form-check-label tiny\\\" for=\\\"{{item}}\\\">{{item}}</label>\\n                                    </div> -->\\n                                    {{item?.subMenuName}}\\n                                </mat-list-option>\\n                            </mat-selection-list>\\n                        </div>\\n                        <div class=\\\"col-md-4 col-lg-4 col-sm-6 col-xs-6\\\" *ngIf=\\\"actionList && actionList.length\\\" >\\n                            <mat-selection-list #menuActions (selectionChange)=\\\"changeActions($event)\\\">\\n                                <mat-list-option *ngFor=\\\"let item of actionList\\\" [selected]=\\\"item.checked\\\" [value]=\\\"item\\\" >\\n                                    {{item?.name | uppercase}}\\n                                </mat-list-option>\\n                            </mat-selection-list>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </condo-card>\\n    </div>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3JvbGVzLWFuZC1wZXJtaXNzaW9ucy9hZGQtcm9sZS9hZGQtcm9sZS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/api/controllers/User';\nimport { ScreenService } from 'src/app/api/controllers/Screen';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-role',\n  templateUrl: './add-role.component.html',\n  styleUrls: ['./add-role.component.scss']\n})\nexport class AddRoleComponent implements OnInit {\n\n  allRoles: Array<any> = [];\n  roleTypeId: any;\n  roleName: any;\n  description: any;\n\n  constructor(private userService: UserService,\n    private router: Router,\n    private screenService: ScreenService) { }\n\n  ngOnInit(): void {\n    this.getAllRoles();\n  }\n\n  getAllRoles() {\n    this.userService.getAllRoleTypes().subscribe(\n      (resp: any) => {\n        this.allRoles = resp;\n        if (this.allRoles && this.allRoles.length) {\n          this.allRoles.filter(key => {\n            if (key.value == 2 || key.value == 4 || key.value == 5) {\n              this.allRoles.splice(this.allRoles.indexOf(key), 1);\n            }\n          })\n        }\n      }\n    )\n  }\n\n  addRole() {\n    let addMenuLevelParam = {\n      \"menuSecLevelId\": 0,\n      \"apartmentId\": parseInt(localStorage.getItem('apartmentId')),\n      \"name\": this.roleName,\n      \"isActive\": true,\n      \"insertedBy\": parseInt(localStorage.getItem('userId')),\n      \"insertedOn\": new Date().toISOString(),\n      \"updatedBy\": parseInt(localStorage.getItem('userId')),\n      \"updatedOn\": \"2020-08-09T06:22:21.539Z\"\n    }\n    let secLevelParam = {\n      seclevel: addMenuLevelParam\n    }\n    this.screenService.addMenuSecLevel(secLevelParam).subscribe(\n      (resp:any) => {\n        if (resp && resp.message) {\n          let addMenuRoleSecLevel = {\n            \"menuRoleSecLevelId\": 0,\n            \"apartmentId\": parseInt(localStorage.getItem('apartmentId')),\n            \"roleId\": parseInt(this.roleTypeId),\n            \"secLevelId\": resp.message,\n            \"isActive\": true,\n            \"insertedBy\": parseInt(localStorage.getItem('userId')),\n            \"insertedOn\": new Date().toISOString(),\n            \"updatedBy\": parseInt(localStorage.getItem('userId')),\n            \"updatedOn\": \"2020-08-09T06:22:21.539Z\"\n          }\n          let roleSecLevelParam = {\n            roleseclevel: addMenuRoleSecLevel\n          }\n          this.screenService.addMenuRoleSecLevel(roleSecLevelParam).subscribe(\n            resp => {\n              this.router.navigate(['./']);\n            }\n          )\n        }\n      }\n    )\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3JvbGVzLWFuZC1wZXJtaXNzaW9ucy9yb2xlcy1hbmQtcGVybWlzc2lvbnMtbGlzdC9yb2xlcy1hbmQtcGVybWlzc2lvbnMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-roles-and-permissions-list',\n  templateUrl: './roles-and-permissions-list.component.html',\n  styleUrls: ['./roles-and-permissions-list.component.scss']\n})\nexport class RolesAndPermissionsListComponent implements OnInit {\n\n  public roleHeader:Array<any>=[];\n  public roleList:Array<any>=[];\n  public isEnableCreate:boolean=true;\n\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n\n  @HostListener('window:navigateToPermission')\n  navigateToPermission() {\n    this.router.navigateByUrl('/ams/roles-permissions/set-permission');\n  }\n\n  constructor(private router:Router) { }\n\n  ngOnInit(): void {   \n     var cellsrenderer = (row, column, value) => {\n    return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n  }\n\n  var columnrenderer = (value) => {\n    return '<div style=\"padding: 14px\">' + value + '</div>';\n  }\n    this.roleHeader = [{\n      text: 'sno',\n      datafield: 'sno',\n      width: 100,\n      cellsrenderer:cellsrenderer,\n      renderer: columnrenderer\n    }, {\n      text: 'Role Name',\n      datafield: 'roleName',\n      minwidth: 100,\n      cellsrenderer: cellsrenderer,\n      renderer: columnrenderer\n    }, {\n      text: 'Description',\n      datafield: 'description',\n      cellsrenderer: cellsrenderer,\n      minwidth: 100,\n      renderer: columnrenderer\n    }, {\n      text: 'set permission',\n      cellsalign: 'center',\n      align: 'center',\n      width: 200,\n      cellsrenderer: (row): string => {\n        return '<div class=\"simple-actions\"><a href=\"javascript:void(0)\" onClick=\"navigateToPermission()\" class=\"btn mat-primary\">Set Permissions</a></div>'\n      },\n      renderer: columnrenderer\n    }, \n     {\n      text: 'action',\n      cellsalign: 'center',\n      align: 'center',\n      width: 120,\n      cellsrenderer: (row): string => {\n        return '<div class=\"simple-actions\"><a href=\"javascript:void(0)\" class=\"mr-2\" onClick=\"editTicketEvent(' + row + ')\"><i class=\"fa fa-pencil icon edit\" aria-hidden=\"true\"></i></a><a href=\"javascript:void(0)\" class=\"mr-2\" onClick=\"showConfirmDeleteEvent(' + row + ')\"><i class=\"fa fa-trash icon delete\" aria-hidden=\"true\"></i></a></div>'\n      },\n      renderer: columnrenderer\n    }];\n\n    let localData=[\n    {\n      sno:1,\n      roleName:'Admin',\n      description:'Admin Having All the Provisions'\n    },\n    {\n      sno:2,\n      roleName:'Staff',\n      description:'Staff Having All the Provisions'\n    }\n    ]\n \n     let gridSourceData = {\n       localdata: localData,\n       datatype: \"array\"\n     }\n \n     this.roleList = new jqx.dataAdapter(gridSourceData);\n     this.isEnableCreate = true;\n  }\n\n}\n\nfunction navigateToPermission(){\n  var event = new CustomEvent('navigateToPermission')\n  window.dispatchEvent(event);\n}\n(window as any).navigateToPermission = navigateToPermission;\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RolesAndPermissionsListComponent } from './roles-and-permissions-list/roles-and-permissions-list.component';\nimport { AddRoleComponent } from './add-role/add-role.component';\nimport { SetPermissionsComponent } from './set-permissions/set-permissions.component';\n\n\n\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: 'roles-permissions-list', pathMatch: 'full'},\n\t{ path: 'roles-permissions-list', component: RolesAndPermissionsListComponent},\n\t{ path: 'add-roles-permissions', component: AddRoleComponent},\n\t{ path: 'set-permission', component: SetPermissionsComponent},\n\t{ path: '**', redirectTo: 'roles-permissions-list', pathMatch: 'full'}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RolesAndPermissionsRouting { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RolesAndPermissionsListComponent } from './roles-and-permissions-list/roles-and-permissions-list.component';\nimport { AddRoleComponent } from './add-role/add-role.component';\nimport { SetPermissionsComponent } from './set-permissions/set-permissions.component';\nimport { RolesAndPermissionsRouting } from './roles-and-permissions-routing.modiule';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport {MatListModule} from '@angular/material/list';\nimport { CondoCardModule } from '../../ui/card/card.module';\n\n\n\n\n@NgModule({\n  declarations: [RolesAndPermissionsListComponent, AddRoleComponent, SetPermissionsComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MatListModule,\n    CondoCardModule,\n    RolesAndPermissionsRouting\n  ]\n})\nexport class RolesAndPermissionsModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3JvbGVzLWFuZC1wZXJtaXNzaW9ucy9zZXQtcGVybWlzc2lvbnMvc2V0LXBlcm1pc3Npb25zLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ScreenService } from 'src/app/api/controllers/Screen';\nimport { NullTemplateVisitor } from '@angular/compiler';\n\n@Component({\n  selector: 'app-set-permissions',\n  templateUrl: './set-permissions.component.html',\n  styleUrls: ['./set-permissions.component.scss']\n})\nexport class SetPermissionsComponent implements OnInit {\n\n  public menuList: Array<any> = [];\n  public subMenuList: any;\n  public actionList: any;\n  public selectedMenuName: any;\n  public selectedSubMenuName: any;\n  public actions:any;\n  constructor(private screenService: ScreenService) { }\n\n  ngOnInit(): void {\n    this.getScreenList();\n    this.actionList = [\n      {\n        name : 'add',\n        functionId : 0,\n        checked : false\n      },\n      {\n        name : 'edit',\n        functionId : 0,\n        checked : false\n      },\n      {\n        name : 'display',\n        functionId : 0,\n        checked : false\n      },\n      {\n        name : 'delete',\n        functionId : 0,\n        checked : false\n      }\n    ]\n  }\n\n  getScreenList() {\n    let queryParamBase = {\n      ApartmentId: parseInt(localStorage.getItem('apartmentId')),\n      RoleId: parseInt(localStorage.getItem('roleId')),\n    };\n    this.screenService.getMenuFunctionByRoleIdMultiFilter(queryParamBase).subscribe(\n      (resp: any) => {\n        this.menuList = resp;\n        if (this.menuList && this.menuList.length) {\n          this.selectedMenuName = this.menuList[0].menuName;\n          this.changeMenu('');\n        }\n      }\n    )\n  }\n\n  changeMenu(event) {\n    if(event){\n      this.selectedMenuName = event.option.value ? event.option.value.menuName : '';\n    }\n    if(this.selectedMenuName){\n      this.menuList.filter(key =>{\n        if(key.menuName == this.selectedMenuName){\n          this.subMenuList = key.subMenuNames;\n          this.selectedSubMenuName = this.subMenuList.length ? this.subMenuList[0].subMenuName : '';\n          this.changeSubMenu('')\n        }\n      })\n    }\n  }\n  changeSubMenu(event) {\n    if(event){\n      this.actions = event.option.value ? event.option.value.actions : {};\n    }else{\n      this.subMenuList.filter(key =>{\n        if(this.selectedSubMenuName == key.subMenuName){\n          this.actions = key.actions;\n          this.mapActions();\n        }\n      })\n    }\n  }\n\n  mapActions(){\n    this.actionList[0].functionId = this.actions.add_FunctionId;\n    this.actionList[1].functionId = this.actions.edit_FunctionId;\n    this.actionList[2].functionId = this.actions.display_FunctionId;\n    this.actionList[3].functionId = this.actions.delete_FunctionId;\n    this.actionList[0].checked = this.actions.add;\n    this.actionList[1].checked = this.actions.edit;\n    this.actionList[2].checked = this.actions.display;\n    this.actionList[3].checked = this.actions.delete;\n  }\n\n  changeActions(event){\n    if(event.option.value){\n      let addFunctionParam = {\n          \"menuSecLevelFunctionId\": 0,\n          \"apartmentId\": parseInt(localStorage.getItem('apartmentId')),\n          \"secLevelId\": null,\n          \"functionId\": event.option.value.functionId,\n          \"orderNo\": 0,\n          \"isActive\": !event.option.value.checked,\n          \"insertedBy\": parseInt(localStorage.getItem('roleId')),\n          \"insertedOn\": new Date().toString(),\n          \"updatedBy\": parseInt(localStorage.getItem('roleId')),\n          \"updatedOn\": \"2020-08-13T12:10:58.204Z\"\n      };\n      let queryParamBase = {\n        seclevelFunctionmap : addFunctionParam\n      }\n      this.screenService.addMenuSecLevelFunctionMapping(queryParamBase).subscribe(\n        (resp: any) => {\n        });\n    }\n  }\n\n\n}\n"]}