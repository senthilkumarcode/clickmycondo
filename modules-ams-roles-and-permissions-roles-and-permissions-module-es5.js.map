{"version":3,"sources":["webpack:///src/app/modules/ams/roles-and-permissions/add-role/add-role.component.html","webpack:///src/app/modules/ams/roles-and-permissions/configure-roles/configure-roles.component.html","webpack:///src/app/modules/ams/roles-and-permissions/role-type-list/role-type-list.component.html","webpack:///src/app/modules/ams/roles-and-permissions/roles-and-permissions-list/roles-and-permissions-list.component.html","webpack:///src/app/modules/ams/roles-and-permissions/set-permissions/set-permissions.component.html","webpack:///src/app/modules/ams/roles-and-permissions/add-role/add-role.component.scss","webpack:///src/app/modules/ams/roles-and-permissions/add-role/add-role.component.ts","webpack:///src/app/modules/ams/roles-and-permissions/configure-roles/configure-roles.component.scss","webpack:///src/app/modules/ams/roles-and-permissions/configure-roles/configure-roles.component.ts","webpack:///src/app/modules/ams/roles-and-permissions/role-type-list/role-type-list.component.scss","webpack:///src/app/modules/ams/roles-and-permissions/role-type-list/role-type-list.component.ts","webpack:///src/app/modules/ams/roles-and-permissions/roles-and-permissions-list/roles-and-permissions-list.component.scss","webpack:///src/app/modules/ams/roles-and-permissions/roles-and-permissions-list/roles-and-permissions-list.component.ts","webpack:///src/app/modules/ams/roles-and-permissions/roles-and-permissions-routing.module.ts","webpack:///src/app/modules/ams/roles-and-permissions/roles-and-permissions.module.ts","webpack:///src/app/modules/ams/roles-and-permissions/set-permissions/set-permissions.component.scss","webpack:///src/app/modules/ams/roles-and-permissions/set-permissions/set-permissions.component.ts"],"names":["AddRoleComponent","userService","router","activatedRoute","sessionService","sharedService","_changeDetectorRef","translateService","allRoles","isCreate","roleInfo","message","form","valid","window","scroll","top","behavior","get","subscribe","data","appearance","content","CONTENTREQUIREDFIELD","shake","showIcon","type","markForCheck","addRoleParam","apartmentId","roleName","description","userId","toISOString","roleTypeId","roleParam","role","addRole","resp","navigate","relativeTo","parent","openSnackBar","errorMessage","error","roleId","insertedBy","insertedOn","updateRole","params","id","undefined","queryParamBase","getRoleByRoleId","getAllRoleTypes","Array","isArray","filter","value","selector","template","encapsulation","None","animations","ConfigureRolesComponent","screenService","roleList","event","getRoleList","paramsRoles","RoleTypeId","ApartmentId","getAllRolesByRoleTypeIdByApartmentId","res","addMenuLevelParam","name","secLevelParam","seclevel","addMenuSecLevel","addMenuRoleSecLevel","roleSecLevelParam","roleseclevel","updataParam","menuRole","secLevelId","updateRoleParam","menuSecLevel","updateMenuSecLevel","menuRoleSecLevelId","getMenuRoleSecLevelbyRoleSecLevelId","secLevelName","RoleTypeListComponent","injector","roleHeader","isEnableCreate","isShowRoleList","roleTypeSearch","modalService","detail","dataRecord","datagrid","getrowdata","rowId","navigateByUrl","showConfirmModal","filtergroup","jqx","filter_or_operator","filtervalue","filtercondition","filterData","createfilter","operator","addfilter","showfiltercolumnbackground","forEach","item","datafield","applyfilters","clearfilters","param","roleTypeIDs","getAllRolesbyMultipleRoleTypeId","refMenuData","isActive","gridSourceData","localdata","datatype","roleTypeList","dataAdapter","getRolePermissionList","cellsrenderer","row","column","columnrenderer","text","renderer","minwidth","cellsalign","align","width","apiSubscribe","unitlistdeleteindexcast","deleteBy","deleteRole","setUnitListDeleteIndex","unsubscribe","onEditRole","CustomEvent","dispatchEvent","onDeleteRole","RolesAndPermissionsListComponent","roleSearch","queryParams","getAllDefaultMenuRoleSecLevelbyApartmentId","parseInt","deleteMenuRoleSecLevel","navigateToPermission","routes","path","redirectTo","pathMatch","component","RolesAndPermissionsRouting","imports","forChild","exports","RolesAndPermissionsModule","declarations","SetPermissionsComponent","_router","changeDetection","menuList","isDataLoaded","isEnabled","getScreenList","actionList","functionId","checked","RoleId","getMenuFunctionByRoleIdMultiFilter","code","responseData","length","selectedMenuName","menuName","changeMenu","option","key","subMenuList","subMenuNames","selectedSubMenuName","subMenuName","changeSubMenu","actions","mapActions","add_FunctionId","edit_FunctionId","display_FunctionId","delete_FunctionId","add","edit","display","every","_selected","multipleApiCall","menuSecLevelFunctionId","updatedBy","push","updateMenuSecLevelFunctionMapping","success","url","skipLocationChange","then","detectChanges","operation","menu","submenu","includes"],"mappings":"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","file":"modules-ams-roles-and-permissions-roles-and-permissions-module-es5.js","sourcesContent":["export default \"<div class=\\\"parking-create-parking-slot-wrapper\\\">\\n\\t<div class=\\\"main\\\">\\n\\t\\t<condo-message class=\\\"mb-3\\\" *ngIf=\\\"message\\\"\\n\\t\\t\\t[appearance]=\\\"message.appearance\\\"\\n\\t\\t\\t[showIcon]=\\\"message.showIcon\\\"\\n\\t\\t\\t[type]=\\\"message.type\\\"\\n\\t\\t\\t[@shake]=\\\"message.shake\\\">\\n\\t\\t\\t{{message.content}}\\n\\t\\t</condo-message>\\n\\t\\t<form #rolesForm=\\\"ngForm\\\" name=\\\"addSlotForm\\\" novalidate>\\n\\t\\t\\t<condo-card>\\n\\t\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t\\t<h4>\\n\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"isCreate\\\">Create Roles</span>\\n\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"!isCreate\\\">Edit Roles</span>\\n\\t\\t\\t\\t\\t\\t</h4>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div CondoCardBody>\\n\\t\\t\\t\\t\\t<div class=\\\"p-5\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Roles Type*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select name=\\\"roleTypeId\\\" [(ngModel)]=\\\"roleInfo.roleTypeId\\\" class=\\\"form-control\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of allRoles\\\" [ngValue]=\\\"item.value\\\">{{item?.name}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Roles Name*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"roleName\\\" [(ngModel)]=\\\"roleInfo.roleName\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Description</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea name=\\\"description\\\" [(ngModel)]=\\\"roleInfo.description\\\" cols=\\\"10\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trows=\\\"3\\\"></textarea>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12 d-flex justify-content-end\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"mr-3\\\" mat-flat-button\\n\\t\\t\\t\\t\\t\\t\\t\\trouterLink=\\\"/ams/roles-permissions/roles-type-list\\\" routerLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions]=\\\"{exact:true}\\\">Cancel</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" *ngIf=\\\"isCreate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"addRole()\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" *ngIf=\\\"!isCreate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"updateRole()\\\">Update</button>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</condo-card>\\n\\t\\t</form>\\n\\t</div>\\n</div>\";","export default \"<div class=\\\"parking-create-parking-slot-wrapper\\\">\\n\\t<div class=\\\"main\\\">\\n\\t\\t<form #rolesForm=\\\"ngForm\\\" name=\\\"addSlotForm\\\" novalidate>\\n\\t\\t\\t<condo-message class=\\\"mb-3\\\" *ngIf=\\\"message\\\"\\n\\t\\t\\t\\t[appearance]=\\\"message.appearance\\\"\\n\\t\\t\\t\\t[showIcon]=\\\"message.showIcon\\\"\\n\\t\\t\\t\\t[type]=\\\"message.type\\\"\\n\\t\\t\\t\\t[@shake]=\\\"message.shake\\\">\\n\\t\\t\\t\\t{{message.content}}\\n\\t\\t\\t</condo-message>\\n\\t\\t\\t<condo-card>\\n\\t\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h4>\\n\\t\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"isCreate\\\">Create Menu Control</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"!isCreate\\\">Edit Menu Control</span>\\n\\t\\t\\t\\t\\t\\t\\t</h4>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div CondoCardBody>\\n\\t\\t\\t\\t\\t<div class=\\\"p-5\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<condo-select \\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"Role Type\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldPlaceholder=\\\"Select Role Type\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldList]=\\\"allRoles\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldValue=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldModel]=\\\"roleTypeId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldId=\\\"value\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(fieldParams)=\\\"setRoleType($event)\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t></condo-select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"roleTypeId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<condo-select \\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"{{roleTypeId == 1 ? 'Admin' : 'Staff'}} Role\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldPlaceholder=\\\"Select {{roleTypeId == 1 ? 'Admin' : 'Staff'}} Role\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldList]=\\\"roleList\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldValue=\\\"roleName\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldModel]=\\\"roleId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldId=\\\"roleId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(fieldParams)=\\\"setRole($event)\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t></condo-select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Menu Control Name*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"name\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<!-- <div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Description</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea name=\\\"description\\\" [(ngModel)]=\\\"description\\\" cols=\\\"10\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trows=\\\"3\\\"></textarea>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div> -->\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12 d-flex justify-content-end\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"mr-3\\\" mat-flat-button\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trouterLink=\\\"/ams/roles-permissions/role-permissions-list\\\" routerLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions]=\\\"{exact:true}\\\">Cancel</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" *ngIf=\\\"isCreate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"addRole()\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" *ngIf=\\\"!isCreate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"updateRole()\\\">Update</button>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</condo-card>\\n\\t\\t</form>\\n\\t</div>\\n</div>\";","export default \"<div class=\\\"parking-aa-unit-to-unit-allocation-wrapper\\\">\\n\\t<div class=\\\"main\\\">\\n\\t\\t<app-loader *ngIf=\\\"!isShowRoleList\\\"></app-loader>\\n\\t\\t<condo-card *ngIf=\\\"isShowRoleList\\\">\\n\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"d-flex align-items-center\\\">\\n\\t\\t\\t\\t\\t\\t<h4>Roles for Staff & Admin</h4>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"ml-auto mr-3\\\">\\n\\t\\t\\t\\t\\t\\t<app-table-search [input]=\\\"roleTypeSearch\\\" (outputParams)=\\\"onGlSearchFilter($event)\\\"></app-table-search>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"mr-3\\\">\\n\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t\\t\\trouterLink=\\\"/ams/roles-permissions/role-type\\\" routerLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions]=\\\"{exact:true}\\\">Create Role</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div CondoCardBody>\\n\\t\\t\\t\\t<jqxGrid [theme]=\\\"'material'\\\" [width]=\\\"'100%'\\\" [rowsheight]=\\\"48\\\" [autoheight]=\\\"true\\\" [pageable]=\\\"true\\\"\\n\\t\\t\\t\\t\\t[filterable]=\\\"true\\\" [sortable]=\\\"true\\\" [source]=\\\"roleTypeList\\\" [columns]=\\\"roleHeader\\\"\\n\\t\\t\\t\\t\\t[columnsresize]=\\\"true\\\" [enablehover]=\\\"false\\\" #datagrid>\\n\\t\\t\\t\\t</jqxGrid>\\n\\t\\t\\t</div>\\n\\t\\t</condo-card>\\n\\t</div>\\n</div>\";","export default \"<div class=\\\"parking-aa-unit-to-unit-allocation-wrapper\\\">\\n\\t<div class=\\\"main\\\">\\n\\t\\t<app-loader *ngIf=\\\"!isShowRoleList\\\"></app-loader>\\n\\t\\t<condo-card *ngIf=\\\"isShowRoleList\\\">\\n\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"d-flex align-items-center\\\">\\n\\t\\t\\t\\t\\t\\t<h4>Roles And Permissions</h4>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"ml-auto mr-3\\\">\\n\\t\\t\\t\\t\\t\\t<app-table-search [input]=\\\"roleSearch\\\" (outputParams)=\\\"onGlSearchFilter($event)\\\"></app-table-search>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"mr-3\\\">\\n\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t\\t\\t\\trouterLink=\\\"/ams/roles-permissions/configure-roles\\\" routerLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions]=\\\"{exact:true}\\\">Add Menu Control</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div CondoCardBody>\\n\\t\\t\\t\\t<jqxGrid [theme]=\\\"'material'\\\" [width]=\\\"'100%'\\\" [rowsheight]=\\\"48\\\" [autoheight]=\\\"true\\\" [pageable]=\\\"true\\\"\\n\\t\\t\\t\\t\\t[filterable]=\\\"true\\\" [sortable]=\\\"true\\\" [source]=\\\"roleList\\\" [columns]=\\\"roleHeader\\\"\\n\\t\\t\\t\\t\\t[columnsresize]=\\\"true\\\" [enablehover]=\\\"false\\\" #datagrid>\\n\\t\\t\\t\\t</jqxGrid>\\n\\t\\t\\t</div>\\n\\t\\t</condo-card>\\n\\t</div>\\n</div>\";","export default \"<div class=\\\"parking-create-parking-slot-wrapper\\\">\\n    <div class=\\\"main\\\">\\n        <condo-card>\\n            <div CondoCardHeader>\\n                <div class=\\\"d-flex\\\">\\n                    <div>\\n                        <h4>Set Permissions</h4>\\n                        <p>{{menuList.length}} results</p>\\n                    </div>\\n                    <div class=\\\"ml-auto d-none d-md-block mr-3\\\">\\n                        <button mat-flat-button \\n                        routerLink=\\\"/ams/roles-permissions/role-permissions-list\\\" \\n\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">Back to Role List</button>\\n                    </div>\\n                </div>\\n            </div>\\n            <div CondoCardBody>\\n                <app-loader *ngIf=\\\"!isDataLoaded\\\" ></app-loader>\\n                <div class=\\\"p-5\\\" *ngIf=\\\"isDataLoaded && menuList.length > 0\\\"> \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-4 col-lg-4 col-sm-6 col-xs-6\\\">\\n                            <h5 class=\\\"mb-4\\\">Menu</h5>\\n                            <mat-selection-list #menu [multiple]=\\\"false\\\" (selectionChange)=\\\"changeMenu($event)\\\">\\n                                <mat-list-option *ngFor=\\\"let item of menuList;let i=index\\\" [value]=\\\"item\\\"\\n                                    [selected]=\\\"item.menuName === selectedMenuName\\\">\\n                                    <!-- <div class=\\\"form-check recur-check float-left\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"{{item}}\\\" name=\\\"{{item}}\\\" checked>\\n                                        <label class=\\\"form-check-label tiny\\\" for=\\\"{{item}}\\\">{{item}}</label>\\n                                    </div> -->\\n                                    {{item?.menuName}}\\n                                </mat-list-option>\\n                            </mat-selection-list>\\n                        </div>\\n                        <div class=\\\"col-md-4 col-lg-4 col-sm-6 col-xs-6\\\">\\n                            <h5 class=\\\"mb-4\\\">Sub-Menu</h5>\\n                            <mat-selection-list #submenu [multiple]=\\\"false\\\" (selectionChange)=\\\"changeSubMenu($event)\\\">\\n                                <mat-list-option *ngFor=\\\"let item of subMenuList\\\" [value]=\\\"item\\\"\\n                                    [selected]=\\\"item.subMenuName === selectedSubMenuName\\\">\\n                                    <!-- <div class=\\\"form-check recur-check float-left\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"{{item}}\\\" name=\\\"{{item}}\\\">\\n                                        <label class=\\\"form-check-label tiny\\\" for=\\\"{{item}}\\\">{{item}}</label>\\n                                    </div> -->\\n                                    {{item?.subMenuName}}\\n                                </mat-list-option>\\n                            </mat-selection-list>\\n                        </div>\\n                        <div class=\\\"col-md-4 col-lg-4 col-sm-6 col-xs-6\\\" *ngIf=\\\"actionList && actionList.length\\\">\\n                            <h5 class=\\\"mb-4\\\">Action</h5>\\n                            <!-- Temporary Solution -->\\n                            <mat-selection-list #menuActions (selectionChange)=\\\"changeActions($event)\\\">\\n                                <mat-list-option [selected]=\\\"isEnabled\\\" [value]=\\\"actionList\\\">\\n                                    Enable  \\n                                </mat-list-option>\\n                            </mat-selection-list>\\n\\n                            <!-- Permanent Solution -->\\n\\n                            <!-- <mat-selection-list #menuActions (selectionChange)=\\\"changeActions($event)\\\">\\n                                <mat-list-option *ngFor=\\\"let item of actionList\\\" [selected]=\\\"item.checked\\\"\\n                                    [value]=\\\"item\\\">\\n                                    {{item?.name | uppercase}}\\n                                </mat-list-option>\\n                            </mat-selection-list> -->\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </condo-card>\\n    </div>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3JvbGVzLWFuZC1wZXJtaXNzaW9ucy9hZGQtcm9sZS9hZGQtcm9sZS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild, ChangeDetectorRef, ViewEncapsulation } from '@angular/core';\nimport { UserService } from 'src/app/api/controllers/User';\nimport { ScreenService } from 'src/app/api/controllers/Screen';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { SharedService } from 'src/app/shared/services/shared.service';\n\nimport * as moment from 'moment';\nimport _moment from \"moment-timezone\";\nimport { CondoAnimations } from 'src/@condo/animations';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-add-role',\n  templateUrl: './add-role.component.html',\n  styleUrls: ['./add-role.component.scss'],\n  encapsulation  : ViewEncapsulation.None,\n  animations   : CondoAnimations\n})\nexport class AddRoleComponent implements OnInit {\n  @ViewChild('rolesForm') form:any;\n  allRoles: Array<any> = [];\n  isCreate:boolean=true;\n  roleInfo:any = {};\n  message:any = null;\n  constructor(private userService: UserService,\n    private router: Router,\n    private activatedRoute : ActivatedRoute,\n    private sessionService : SessionService,\n    private sharedService : SharedService,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private translateService: TranslateService\n  ) { }\n\n  addRole() {\n    this.message = null;\n    if(!this.form.valid){\n      window.scroll({\n        top: 0,\n        behavior: 'smooth'\n      });\n      // Show the validation message\n      this.translateService.get('VALIDATION').subscribe((data:any)=> {\n      this.message = {\n        appearance: 'outline',\n        content   : `${data.CONTENTREQUIREDFIELD}`,\n        shake     : true,\n        showIcon  : true,\n        type      : 'error'\n      };\n    });\n      //Mark for check\n      this._changeDetectorRef.markForCheck();\n    } else {\n      let addRoleParam = {\n        \"roleId\": 0,\n        \"apartmentId\": this.sessionService.apartmentId,\n        \"roleName\": this.roleInfo.roleName,\n        \"description\": this.roleInfo.description,\n        \"isActive\": true,\n        \"insertedBy\": this.sessionService.userId,\n        \"insertedOn\": _moment().toISOString(),\n        \"updatedBy\": null,\n        \"updatedOn\": null,\n        \"roleTypeId\": this.roleInfo.roleTypeId\n      }\n      let roleParam = {\n        role: addRoleParam\n      }\n      this.userService.addRole(roleParam).subscribe((resp:any) => {\n        if(resp.message) {\n          this.router.navigate(['roles-type-list'],{relativeTo:this.activatedRoute.parent})\n          this.sharedService.openSnackBar('Role Added Successfully','success');\n        } else \n          this.sharedService.openSnackBar(resp.errorMessage,'error');\n      },(error)=>{\n        this.sharedService.openSnackBar('Server Error','error');\n      })\n    }\n  }\n\n  updateRole() {\n    this.message = null;\n    if(!this.form.valid) {\n      window.scroll({\n        top: 0,\n        behavior: 'smooth'\n      });\n      // Show the validation message\n      this.translateService.get('VALIDATION').subscribe((data:any)=> {\n      this.message = {\n        appearance: 'outline',\n        content   : `${data.CONTENTREQUIREDFIELD}`,\n        shake     : true,\n        showIcon  : true,\n        type      : 'error'\n      };\n    });\n      //Mark for check\n      this._changeDetectorRef.markForCheck();\n    } else {\n      let addRoleParam = {\n        \"roleId\":  this.roleInfo.roleId,\n        \"apartmentId\": this.sessionService.apartmentId,\n        \"roleName\": this.roleInfo.roleName,\n        \"description\": this.roleInfo.description,\n        \"isActive\": true,\n        \"insertedBy\": this.roleInfo.insertedBy,\n        \"insertedOn\": this.roleInfo.insertedOn,\n        \"updatedBy\": this.sessionService.userId,\n        \"updatedOn\": _moment().toISOString(),\n        \"roleTypeId\": this.roleInfo.roleTypeId\n      }\n      let roleParam = {\n        role: addRoleParam\n      }\n      this.userService.updateRole(roleParam).subscribe((resp:any) => {\n        if(resp.message) {\n          this.router.navigate(['roles-type-list'],{relativeTo:this.activatedRoute.parent})\n          this.sharedService.openSnackBar(resp.message,'success');\n        } else \n          this.sharedService.openSnackBar(resp.errorMessage,'error');\n      },(error)=>{\n        this.sharedService.openSnackBar('Server Error','error');\n      })\n    }\n  }\n\n  ngOnInit(): void {\n    if (this.activatedRoute.params['value'].id != undefined) {\n      this.isCreate = false;\n      let queryParamBase = {\n        roleId: this.activatedRoute.params['value'].id\n      };\n      this.userService.getRoleByRoleId(queryParamBase).subscribe(resp =>{\n        this.roleInfo = resp[0];\n      })\n    }\n    this.userService.getAllRoleTypes().subscribe((resp: any) => {\n      if(Array.isArray(resp)) {\n        this.allRoles = resp.filter(data => {\n          if (data.value == 1 || data.value == 3) {\n            return data;\n          }\n        })\n      }\n    })\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3JvbGVzLWFuZC1wZXJtaXNzaW9ucy9jb25maWd1cmUtcm9sZXMvY29uZmlndXJlLXJvbGVzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ChangeDetectorRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ScreenService } from 'src/app/api/controllers/Screen';\nimport { UserService } from 'src/app/api/controllers/User';\nimport { SessionService } from 'src/app/core/session/session.service';\n\nimport * as moment from 'moment';\nimport _moment from \"moment-timezone\";\nimport { CondoAnimations } from 'src/@condo/animations';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-configure-roles',\n  templateUrl: './configure-roles.component.html',\n  styleUrls: ['./configure-roles.component.scss'],\n  encapsulation  : ViewEncapsulation.None,\n  animations   : CondoAnimations\n})\nexport class ConfigureRolesComponent implements OnInit {\n  @ViewChild('rolesForm') form:any;\n  allRoles: Array<any> = [];\n  roleList:any = [];\n  roleTypeId: number;\n  roleId:number;\n  name: any;\n  description: any;\n  menuRoleSecLevelId:any;\n  isCreate:boolean=true;\n  menuRole:any;\n  message:any = null;\n  constructor(private userService: UserService,\n    private router: Router,\n    private activatedRoute : ActivatedRoute,\n    private sessionService : SessionService,\n    private sharedService : SharedService,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private screenService: ScreenService,\n    private translateService: TranslateService) { }\n\n  setRoleType(event) {\n    this.roleId = null;\n    this.roleTypeId = event[0].value;\n    this.getRoleList();\n  }\n\n  getRoleList() {\n    //Admin Role Type\n    var paramsRoles = {\n      RoleTypeId: this.roleTypeId,\n      ApartmentId: this.sessionService.apartmentId\n    }\n    this.userService.getAllRolesByRoleTypeIdByApartmentId(paramsRoles).subscribe((res: any) => {\n      this.roleList = res;\n    });\n  }\n\n  setRole(event) {\n    this.roleId = event[0].roleId;\n  }\n\n  addRole() {\n    this.message = null;\n    if(!this.form.valid){\n      window.scroll({\n        top: 0,\n        behavior: 'smooth'\n      });\n      // Show the validation message\n      this.translateService.get('VALIDATION').subscribe((data:any)=> {\n      this.message = {\n        appearance: 'outline',\n        content   : `${data.CONTENTREQUIREDFIELD}`,\n        shake     : true,\n        showIcon  : true,\n        type      : 'error'\n      };\n    });\n      //Mark for check\n      this._changeDetectorRef.markForCheck();\n    } else {\n      let addMenuLevelParam = {\n        \"menuSecLevelId\": 0,\n        \"apartmentId\": this.sessionService.apartmentId,\n        \"name\": this.name,\n        \"isActive\": true,\n        \"insertedBy\": this.sessionService.userId,\n        \"insertedOn\": _moment().toISOString(),\n        \"updatedBy\": null,\n        \"updatedOn\": null\n      }\n      let secLevelParam = {\n        seclevel: addMenuLevelParam\n      }\n      this.screenService.addMenuSecLevel(secLevelParam).subscribe((resp:any) => {\n        if (resp && resp.message) {\n          let addMenuRoleSecLevel = {\n            \"menuRoleSecLevelId\": 0,\n            \"apartmentId\": this.sessionService.apartmentId,\n            \"roleId\": this.roleId,\n            \"secLevelId\": resp.message,\n            \"isActive\": true,\n            \"insertedBy\": this.sessionService.userId,\n            \"insertedOn\": _moment().toISOString(),\n            \"updatedBy\": null,\n            \"updatedOn\": null\n          }\n          let roleSecLevelParam = {\n            roleseclevel: addMenuRoleSecLevel\n          }\n          this.screenService.addMenuRoleSecLevel(roleSecLevelParam).subscribe((resp:any) => {\n            if(resp.message) {\n              this.sharedService.openSnackBar('Menu Control Added Successfully','success');\n              this.router.navigate(['/ams/roles-permissions/role-permissions-list']);\n            } else {\n              this.sharedService.openSnackBar(resp.errorMessage,'error')\n            }\n          },(error)=>{\n            this.sharedService.openSnackBar('Server Error','error');\n          })\n        }\n      })\n    }\n  }\n\n  updateRole(){\n    this.message = null;\n    if(!this.form.valid){\n      window.scroll({\n        top: 0,\n        behavior: 'smooth'\n      });\n      // Show the validation message\n      this.translateService.get('VALIDATION').subscribe((data:any)=> {\n      this.message = {\n        appearance: 'outline',\n        content   : `${data.CONTENTREQUIREDFIELD}`,\n        shake     : true,\n        showIcon  : true,\n        type      : 'error'\n      };\n    });\n      //Mark for check\n      this._changeDetectorRef.markForCheck();\n    } else {\n      let updataParam = {\n        \"menuSecLevelId\": this.menuRole.secLevelId,\n        \"apartmentId\":  this.sessionService.apartmentId,\n        \"name\": this.name,\n        \"isActive\": true,\n        \"insertedBy\": this.menuRole.insertedBy,\n        \"insertedOn\": this.menuRole.insertedOn,\n        \"updatedBy\": this.sessionService.userId,\n        \"updatedOn\": _moment().toISOString()\n      }\n      let updateRoleParam = {\n        menuSecLevel : updataParam\n      }\n      this.screenService.updateMenuSecLevel(updateRoleParam).subscribe((resp:any) =>{\n        if(resp.message) {\n          this.sharedService.openSnackBar('Menu Control Updated','success');\n          this.router.navigate(['/ams/roles-permissions/role-permissions-list']);\n        } else {\n          this.sharedService.openSnackBar(resp.errorMessage,'error')\n        }\n      },(error)=>{\n        this.sharedService.openSnackBar('Server Error','error');\n      })\n    }\n  }\n\n  ngOnInit(): void {\n    if (this.activatedRoute.params['value'].id != undefined) {\n      this.menuRoleSecLevelId = this.activatedRoute.params['value'].id;\n      this.isCreate = false;\n      let queryParamBase = {\n        apartmentId: this.sessionService.apartmentId,\n        menuRoleSecLevelId: this.menuRoleSecLevelId,\n      };\n      this.screenService.getMenuRoleSecLevelbyRoleSecLevelId(queryParamBase).subscribe(resp =>{\n        this.menuRole = resp[0];\n        this.roleId = this.menuRole.roleId;\n        this.name = this.menuRole.secLevelName;\n        this.roleTypeId = this.menuRole.roleTypeId;\n        this.getRoleList();\n      })\n    }\n    this.userService.getAllRoleTypes().subscribe((resp: any) => {\n      if(Array.isArray(resp)) {\n        this.allRoles = resp.filter(data => {\n          if (data.value == 1 || data.value == 3) {\n            return data;\n          }\n        })\n      }\n    })\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3JvbGVzLWFuZC1wZXJtaXNzaW9ucy9yb2xlLXR5cGUtbGlzdC9yb2xlLXR5cGUtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import { HostListener, Injector, ViewChild } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ScreenService } from 'src/app/api/controllers/Screen';\nimport { UserService } from 'src/app/api/controllers/User';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\nimport { ModalService } from 'src/app/shared/services/modal.service';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-role-type-list',\n  templateUrl: './role-type-list.component.html',\n  styleUrls: ['./role-type-list.component.scss']\n})\nexport class RoleTypeListComponent implements OnInit {\n\n  public roleHeader: Array<any> = [];\n  public roleTypeList: any;\n  public isEnableCreate: boolean = true;\n  modalService: any;\n  isShowRoleList:boolean=false;\n  roleTypeSearch:string = '';\n  apiSubscribe:Subscription;\n\n  constructor(private router: Router,\n    private userService: UserService,\n    private sharedService: SharedService,\n    private sessionService: SessionService,\n    private injector: Injector) {\n    this.modalService = this.injector.get(ModalService);\n  }\n\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n  @HostListener('window:onEditRole', ['$event.detail'])\n  onEditRole(detail) {\n    let dataRecord = this.datagrid.getrowdata(detail.rowId);\n    let roleId = dataRecord.roleId;\n    this.router.navigateByUrl('/ams/roles-permissions/edit-role-type/' + roleId);\n  }\n\n  @HostListener('window:onDeleteRole', ['$event.detail'])\n  onDeleteRole(detail) {\n    let dataRecord = this.datagrid.getrowdata(detail.rowId)\n    let roleId = dataRecord.roleId\n    this.modalService.showConfirmModal(roleId);\n  }\n\n  onGlSearchFilter(event) {\n    if(event != \"\"){\n      let filtergroup = new jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = event;\n      let filtercondition = 'contains';\n      let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n      filtergroup.operator = 'or';\n      filtergroup.addfilter(filter_or_operator, filterData);\n      this.datagrid.showfiltercolumnbackground(false);\n      this.roleHeader.forEach(item => {\n        if(item.datafield != 'Actions') {\n          this.datagrid.addfilter(item.datafield, filtergroup, true);\n        }\n      })\n      this.datagrid.applyfilters();\n    }\n    else {\n      this.datagrid.clearfilters();\n    }\n  }\n\n  getRolePermissionList() {\n    this.isShowRoleList = false;\n    let param = {\n      ApartmentId: this.sessionService.apartmentId,\n      roleTypeIDs: '1,3,5',\n    }\n    this.userService.getAllRolesbyMultipleRoleTypeId(param).subscribe((resp: any) => {\n      let refMenuData = resp.filter(data => {\n        return data.isActive\n      });\n      let gridSourceData = {\n        localdata: refMenuData,\n        datatype: \"array\"\n      }\n      this.roleTypeList = new jqx.dataAdapter(gridSourceData);\n      this.isShowRoleList = true;\n      this.isEnableCreate = true;\n    })\n  }\n\n  ngOnInit(): void {\n    this.getRolePermissionList();\n    var cellsrenderer = (row, column, value) => {\n      return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n    }\n    var columnrenderer = (value) => {\n      return '<div style=\"padding: 14px\">' + value + '</div>';\n    }\n    this.roleHeader = [{\n        text: 'Role Type',\n        datafield: 'roleTypeName',\n        cellsrenderer: cellsrenderer,\n        renderer: columnrenderer,\n        minwidth: 120\n      },{\n        text: 'role name',\n        datafield: 'roleName',\n        cellsrenderer: cellsrenderer,\n        renderer: columnrenderer,\n        minwidth: 120\n      }, {\n        text: 'description',\n        datafield: 'description',\n        cellsrenderer: cellsrenderer,\n        renderer: columnrenderer,\n        minwidth: 120\n      },{\n        text: 'action',\n        datafield: 'roleTypeId',\n        cellsalign: 'center',\n        align: 'center',\n        width: 120,\n        cellsrenderer: (row,column,value): string => {\n          if(value != 5) {\n          \n            return '<div class=\"simple-actions\"><a href=\"javascript:void(0)\" class=\"mr-2\" onClick=\"onEditRole(' + row + ')\"><i class=\"fa fa-pencil icon edit\" aria-hidden=\"true\"></i></a>'\n            +'<a href=\"javascript:void(0)\" class=\"mr-2\" onClick=\"onDeleteRole(' + row + ')\"><i class=\"fa fa-trash icon delete\" aria-hidden=\"true\"></i></a>'\n            +'</div>'\n          } else {\n            return ''\n          }\n        },\n        renderer: columnrenderer\n    }];\n   \n    this.apiSubscribe = this.sharedService.unitlistdeleteindexcast.subscribe(id => {\n      if (id != null) {\n        var params = {\n          roleId: id,\n          deleteBy: this.sessionService.userId,\n        }\n        this.userService.deleteRole(params).subscribe((res: any) => {\n          this.sharedService.setUnitListDeleteIndex(null);\n          if(res.message) {\n            this.getRolePermissionList();\n            this.sharedService.openSnackBar('Role deleted Successfully','success');\n          } else {\n            this.sharedService.openSnackBar(res.errorMessage,'error');\n          }\n        }, error => {\n          this.sharedService.setUnitListDeleteIndex(null);\n          this.sharedService.openSnackBar('Server Error','error');\n        });\n      }\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.apiSubscribe.unsubscribe();\n  }\n\n}\n\nfunction onEditRole(row) {\n  var event = new CustomEvent('onEditRole', {\n    detail: {\n      rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).onEditRole = onEditRole;\n\nfunction onDeleteRole(row) {\n  var event = new CustomEvent('onDeleteRole', {\n    detail: {\n      rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).onDeleteRole = onDeleteRole;\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3JvbGVzLWFuZC1wZXJtaXNzaW9ucy9yb2xlcy1hbmQtcGVybWlzc2lvbnMtbGlzdC9yb2xlcy1hbmQtcGVybWlzc2lvbnMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild, HostListener, Injector } from '@angular/core';\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ScreenService } from 'src/app/api/controllers/Screen';\nimport { ModalService } from 'src/app/shared/services/modal.service';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-roles-and-permissions-list',\n  templateUrl: './roles-and-permissions-list.component.html',\n  styleUrls: ['./roles-and-permissions-list.component.scss']\n})\nexport class RolesAndPermissionsListComponent implements OnInit {\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n  public roleHeader: Array<any> = [];\n  public roleList: any;\n  public isEnableCreate: boolean = true;\n  modalService: any;\n  isShowRoleList:boolean=false;\n  roleSearch:string = '';\n  apiSubscribe:Subscription;\n \n  constructor(private router: Router,\n    private screenService: ScreenService,\n    private sharedService: SharedService,\n    private sessionService: SessionService,\n    private injector: Injector) {\n    this.modalService = this.injector.get(ModalService);\n  }\n\n  onGlSearchFilter(event) {\n    if(event != \"\"){\n      let filtergroup = new jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = event;\n      let filtercondition = 'contains';\n      let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n      filtergroup.operator = 'or';\n      filtergroup.addfilter(filter_or_operator, filterData);\n      this.datagrid.showfiltercolumnbackground(false);\n      this.roleHeader.forEach(item => {\n        if(item.datafield != 'Actions') {\n          this.datagrid.addfilter(item.datafield, filtergroup, true);\n        }\n      })\n      this.datagrid.applyfilters();\n    }\n    else {\n      this.datagrid.clearfilters();\n    }\n  }\n\n  @HostListener('window:navigateToPermission',['$event.detail'])\n  navigateToPermission(detail) {\n    let dataRecord = this.datagrid.getrowdata(detail.rowId)\n    this.router.navigate(['/ams/roles-permissions/set-permission'],{queryParams:{ secLevelId: dataRecord.secLevelId, roleId: dataRecord.roleId}});\n  }\n  @HostListener('window:onEditRole', ['$event.detail'])\n  onEditRole(detail) {\n    let dataRecord = this.datagrid.getrowdata(detail.rowId);\n    let menuRoleSecLevelId = dataRecord.menuRoleSecLevelId;\n    this.router.navigateByUrl('/ams/roles-permissions/edit-configure-roles/' + menuRoleSecLevelId);\n  }\n  @HostListener('window:onDeleteRole', ['$event.detail'])\n  onDeleteRole(detail) {\n    let dataRecord = this.datagrid.getrowdata(detail.rowId)\n    let menuRoleSecLevelId = dataRecord.menuRoleSecLevelId\n    this.modalService.showConfirmModal(menuRoleSecLevelId);\n  }\n\n  getRolePermissionList() {\n    this.isShowRoleList = false;\n    let param = {\n      apartmentId: this.sessionService.apartmentId\n    }\n    this.screenService.getAllDefaultMenuRoleSecLevelbyApartmentId(param).subscribe(\n      (resp: any) => {\n        let refMenuData = resp.filter(data => {\n          return data.isActive\n        });\n        let gridSourceData = {\n          localdata: refMenuData,\n          datatype: \"array\"\n\n        }\n        this.roleList = new jqx.dataAdapter(gridSourceData);\n        this.isShowRoleList = true;\n        this.isEnableCreate = true;\n      }\n    )\n  }\n\n  ngOnInit(): void {\n    var cellsrenderer = (row, column, value) => {\n      return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n    }\n    var columnrenderer = (value) => {\n      return '<div style=\"padding: 14px\">' + value + '</div>';\n    }\n    this.roleHeader = [{\n      text: 'role name',\n      datafield: 'roleName',\n      cellsrenderer: cellsrenderer,\n      renderer: columnrenderer,\n      minwidth: 120\n    }, {\n      text: 'menu control name',\n      datafield: 'secLevelName',\n      cellsrenderer: cellsrenderer,\n      renderer: columnrenderer,\n      minwidth: 120\n    }, {\n      text: 'set permission',\n      cellsalign: 'center',\n      align: 'center',\n      width: 200,\n      cellsrenderer: (row): string => {\n        return '<div class=\"simple-actions\"><a href=\"javascript:void(0)\" onClick=\"navigateToPermission(' + row + ')\" class=\"btn mat-primary\">Set Permissions</a></div>'\n      },\n      renderer: columnrenderer\n    },\n    {\n      text: 'action',\n      cellsalign: 'center',\n      align: 'center',\n      width: 120,\n      cellsrenderer: (row): string => {\n        return '<div class=\"simple-actions\"><a href=\"javascript:void(0)\" class=\"mr-2\" onClick=\"onEditRole(' + row + ')\"><i class=\"fa fa-pencil icon edit\" aria-hidden=\"true\"></i></a><a href=\"javascript:void(0)\" class=\"mr-2\" onClick=\"onDeleteRole(' + row + ')\"><i class=\"fa fa-trash icon delete\" aria-hidden=\"true\"></i></a></div>'\n      },\n      renderer: columnrenderer\n    }];\n    // delete item\n    this.apiSubscribe = this.sharedService.unitlistdeleteindexcast.subscribe(id => {\n\n      if (id != null) {\n\n        var params = {\n          menuRoleSecLevelId: id,\n          deleteBy: parseInt(this.sessionService.userId)\n        }\n\n        this.screenService.deleteMenuRoleSecLevel(params).subscribe((res: any) => {\n          this.sharedService.setUnitListDeleteIndex(null);\n          if(res.message) {\n            this.getRolePermissionList();\n            this.sharedService.openSnackBar(res.message,'success');\n          } else {\n            this.sharedService.openSnackBar(res.errorMessage,'error');\n          }\n        }, error => {\n          this.sharedService.setUnitListDeleteIndex(null);\n          this.sharedService.openSnackBar('Server Error','error')\n        });\n\n\n      }\n\n    })\n    this.getRolePermissionList();\n  }\n\n  ngOnDestroy(){\n    this.apiSubscribe.unsubscribe();\n  }\n}\n\nfunction navigateToPermission(row) {\n  var event = new CustomEvent('navigateToPermission', {\n    detail: {\n      rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).navigateToPermission = navigateToPermission;\n\nfunction onEditRole(row) {\n  var event = new CustomEvent('onEditRole', {\n    detail: {\n      rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).onEditRole = onEditRole;\n\nfunction onDeleteRole(row) {\n  var event = new CustomEvent('onDeleteRole', {\n    detail: {\n      rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).onDeleteRole = onDeleteRole;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddRoleComponent } from './add-role/add-role.component';\nimport { ConfigureRolesComponent } from './configure-roles/configure-roles.component';\nimport { RoleTypeListComponent } from './role-type-list/role-type-list.component';\nimport { RolesAndPermissionsListComponent } from './roles-and-permissions-list/roles-and-permissions-list.component';\nimport { SetPermissionsComponent } from './set-permissions/set-permissions.component';\n\n\n\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: 'roles-permissions-list', pathMatch: 'full'},\n\t{ path: 'roles-permissions-list', component: RolesAndPermissionsListComponent},\n\t{ path: 'roles-type-list', component: RoleTypeListComponent},\n\t{ path: 'set-permission', component: SetPermissionsComponent},\n\t{ path: 'role-type', component: AddRoleComponent},\n\t{ path: 'edit-role-type/:id', component: AddRoleComponent},\n\t{ path: 'configure-roles', component: ConfigureRolesComponent},\n\t{ path: 'edit-configure-roles/:id', component: ConfigureRolesComponent},\n\t{ path: '**', redirectTo: 'roles-permissions-list', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RolesAndPermissionsRouting { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RolesAndPermissionsListComponent } from './roles-and-permissions-list/roles-and-permissions-list.component';\nimport { SetPermissionsComponent } from './set-permissions/set-permissions.component';\nimport { RolesAndPermissionsRouting } from './roles-and-permissions-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport {MatListModule} from '@angular/material/list';\nimport { CondoCardModule } from 'src/app/modules/ui/card/card.module';\nimport { AddRoleComponent } from './add-role/add-role.component';\nimport { ConfigureRolesComponent } from './configure-roles/configure-roles.component';\nimport { RoleTypeListComponent } from './role-type-list/role-type-list.component';\nimport { SelectModule } from 'src/app/modules/ui/select/select.module';\n\nimport { CondoMessageModule } from 'src/app/modules/ui/message/message.module';\n\n\n\n@NgModule({\n  declarations: [RolesAndPermissionsListComponent, SetPermissionsComponent,AddRoleComponent, ConfigureRolesComponent, RoleTypeListComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MatListModule,\n    CondoCardModule,\n    SelectModule,\n    CondoMessageModule,\n    RolesAndPermissionsRouting\n  ]\n})\nexport class RolesAndPermissionsModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3JvbGVzLWFuZC1wZXJtaXNzaW9ucy9zZXQtcGVybWlzc2lvbnMvc2V0LXBlcm1pc3Npb25zLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { ScreenService } from 'src/app/api/controllers/Screen';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { forkJoin } from 'rxjs';\n\n@Component({\n  selector: 'app-set-permissions',\n  templateUrl: './set-permissions.component.html',\n  styleUrls: ['./set-permissions.component.scss']\n})\nexport class SetPermissionsComponent implements OnInit {\n\n  public menuList: Array<any> = [];\n  public subMenuList: any;\n  public actionList: any;\n  public selectedMenuName: any;\n  public selectedSubMenuName: any;\n  public actions: any;\n  public secLevelId: any;\n  public roleId: any;\n  public isDataLoaded: boolean = false;\n  isEnabled:boolean = false;\n\n  constructor(\n    private _router: Router,\n    private screenService: ScreenService,\n    private sharedService: SharedService,\n    private activatedRoute: ActivatedRoute,\n    private changeDetection: ChangeDetectorRef,\n    private sessionService: SessionService) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe(params => {\n      this.secLevelId = params['secLevelId'];\n      this.roleId = params['roleId'];\n      this.getScreenList();\n    });\n    this.actionList = [\n      {\n        name: 'add',\n        functionId: 0,\n        checked: false\n      },\n      {\n        name: 'edit',\n        functionId: 0,\n        checked: false\n      },\n      {\n        name: 'display',\n        functionId: 0,\n        checked: false\n      },\n      {\n        name: 'delete',\n        functionId: 0,\n        checked: false\n      }\n    ]\n  }\n\n  getScreenList() {\n    this.isDataLoaded = false;\n    let queryParamBase = {\n      ApartmentId: this.sessionService.apartmentId,\n      RoleId: parseInt(this.roleId),\n      secLevelId: parseInt(this.secLevelId)\n    };\n    this.screenService.getMenuFunctionByRoleIdMultiFilter(queryParamBase).subscribe(\n      (resp: any) => {\n        if(resp.code == 200) {\n          this.menuList = resp.responseData.value;\n          if (this.menuList && this.menuList.length) {\n            this.selectedMenuName = this.menuList[0].menuName;\n            this.changeMenu('');\n          }\n        } else {\n          this.sharedService.openSnackBar(resp.message,'error');\n        }\n        this.isDataLoaded = true;\n      }\n    )\n  }\n\n  changeMenu(event) {\n    if (event) {\n      this.selectedMenuName = event.option.value ? event.option.value.menuName : '';\n    }\n    if (this.selectedMenuName) {\n      this.menuList.filter(key => {\n        if (key.menuName == this.selectedMenuName) {\n          this.subMenuList = [...key.subMenuNames];\n          this.selectedSubMenuName = this.subMenuList.length ? this.subMenuList[0].subMenuName : '';\n          this.changeSubMenu('')\n        }\n      })\n    }\n  }\n  changeSubMenu(event) {\n    if (event) {\n      this.actions = event.option.value ? event.option.value.actions : {};\n      this.mapActions();\n    } else {\n      this.subMenuList.filter(key => {\n        if (this.selectedSubMenuName == key.subMenuName) {\n          this.actions = {...key.actions};\n          this.mapActions();\n        }\n      })\n    }\n  }\n\n  mapActions() {\n    this.actionList[0].functionId = this.actions.add_FunctionId;\n    this.actionList[1].functionId = this.actions.edit_FunctionId;\n    this.actionList[2].functionId = this.actions.display_FunctionId;\n    this.actionList[3].functionId = this.actions.delete_FunctionId;\n    this.actionList[0].checked = this.actions.add;\n    this.actionList[1].checked = this.actions.edit;\n    this.actionList[2].checked = this.actions.display;\n    this.actionList[3].checked = this.actions.delete;\n\n    //Temporary Solution\n    this.isEnabled  = this.actionList.every((data)=> data.checked);\n  }\n\n  changeActions(event) {\n\n    ;\n\n    let isActive = event.option._selected;\n    this.isDataLoaded = false;\n    let multipleApiCall:any = [];\n    this.actionList.forEach((data)=>{\n      if(data.functionId != 0) {\n        let queryParamBase = {\n          apartmentId: this.sessionService.apartmentId,\n          menuSecLevelFunctionId: data.functionId,\n          isActive: isActive,\n          updatedBy: this.sessionService.roleId,\n        };\n        multipleApiCall.push(this.screenService.updateMenuSecLevelFunctionMapping(queryParamBase));\n      }\n    })\n    forkJoin(...multipleApiCall).subscribe((res)=>{\n      let success:boolean\n      success = res.every((data)=> {\n        if(data.message)\n          return true\n        else\n         return false\n      });\n      if(success) {\n\n        let url = this._router.url;\n\n        this._router.navigateByUrl('/ams/dummy', { skipLocationChange: true }).then(() => {\n          this._router.navigate(['/ams']);\n        });\n\n        this.changeDetection.detectChanges();\n        let operation = ['add','edit','display','delete'];\n        for (let menu of this.menuList) {\n          if(menu.menuName == this.selectedMenuName) {\n            for(let submenu of menu.subMenuNames) {\n              if(submenu.subMenuName == this.selectedSubMenuName) {\n                for(let key in submenu.actions) {\n                  if(operation.includes(key)) {\n                    submenu.actions[key] = isActive;\n                  }\n                }\n              }\n              break;\n            }\n            break;\n          }\n        }\n        this.sharedService.openSnackBar(`Permission Updated!`, 'success');\n      }\n      else \n        this.sharedService.openSnackBar(`Permission Not Updated!`, 'error')\n      this.isDataLoaded = true;\n      this.isEnabled = isActive;\n    })\n      // let queryParamBase = {\n      //   apartmentId: this.sessionService.apartmentId,\n      //   menuSecLevelFunctionId: event.option.value.functionId,\n      //   isActive: !event.option.value.checked,\n      //   updatedBy: this.sessionService.roleId,\n      // };\n      // this.screenService.updateMenuSecLevelFunctionMapping(queryParamBase).subscribe(\n      //   (resp: any) => {\n      //     this.sharedService.openSnackBar(`${event.option.value.name} Permission Updated!`, 'success')\n      //   });\n  }\n\n\n}\n"]}