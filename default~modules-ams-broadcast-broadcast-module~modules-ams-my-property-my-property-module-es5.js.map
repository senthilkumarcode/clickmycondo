{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/sidenav.js"],"names":["_c0","MatDrawerContainer_div_0_Template","rf","ctx","_r3","MatDrawerContainer_div_0_Template_div_click_0_listener","ctx_r2","_onBackdropClicked","ctx_r0","_isShowingBackdrop","MatDrawerContainer_mat_drawer_content_3_Template","_c1","_c2","MatSidenavContainer_div_0_Template","_r7","MatSidenavContainer_div_0_Template_div_click_0_listener","ctx_r6","ctx_r4","MatSidenavContainer_mat_sidenav_content_3_Template","_c3","_c4","matDrawerAnimations","transformDrawer","throwMatDuplicatedDrawerError","position","Error","MAT_DRAWER_DEFAULT_AUTOSIZE","providedIn","factory","MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY","MAT_DRAWER_CONTAINER","MatDrawerContent","_changeDetectorRef","_container","elementRef","scrollDispatcher","ngZone","_contentMarginChanges","subscribe","markForCheck","ɵfac","MatDrawerContent_Factory","t","MatDrawerContainer","ɵcmp","type","selectors","hostAttrs","hostVars","hostBindings","MatDrawerContent_HostBindings","_contentMargins","left","right","features","ngContentSelectors","decls","vars","template","MatDrawerContent_Template","encapsulation","changeDetection","ctorParameters","decorators","args","selector","host","OnPush","None","MatDrawer","_elementRef","_focusTrapFactory","_focusMonitor","_platform","_ngZone","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_position","_mode","_disableClose","_opened","_animationStarted","_animationEnd","_animationState","openedChange","_destroyed","onPositionChanged","_modeChanged","opened","activeElement","_takeFocus","_restoreFocus","runOutsideAngular","nativeElement","pipe","event","keyCode","disableClose","run","close","stopPropagation","preventDefault","x","y","fromState","toState","indexOf","emit","autoFocus","_focusTrap","focusInitialElementWhenReady","then","hasMovedFocus","focus","activeEl","contains","focusVia","_openedVia","blur","create","_updateFocusTrapState","isBrowser","destroy","complete","next","openedVia","toggle","isOpen","Promise","resolve","open","enabled","mode","value","_autoFocus","o","e","offsetWidth","MatDrawer_Factory","MatDrawer_HostBindings","MatDrawer_animation_transform_start_HostBindingHandler","$event","_animationStartListener","MatDrawer_animation_transform_done_HostBindingHandler","_animationDoneListener","inputs","outputs","_openedStream","openedStart","_closedStream","closedStart","exportAs","consts","MatDrawer_Template","data","animation","undefined","propDecorators","animations","_dir","_element","viewportRuler","defaultAutosize","_animationMode","_drawers","backdropClick","_doCheckSubject","change","_validateDrawers","updateContentMargins","_autosize","_allDrawers","changes","drawer","reset","filter","item","notifyOnChanges","forEach","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","length","_isDrawerOpen","_start","_end","_left","_width","width","_right","_isPushed","classList","add","_setContainerClass","onMicrotaskEmpty","asObservable","isAdd","className","remove","_closeModalDrawer","_canHaveBackdrop","_backdropOverride","_userContent","_content","MatDrawerContainer_Factory","contentQueries","MatDrawerContainer_ContentQueries","dirIndex","_t","first","viewQuery","MatDrawerContainer_Query","MatDrawerContainer_HostBindings","autosize","hasBackdrop","provide","useExisting","MatDrawerContainer_Template","directives","styles","String","descendants","providers","MatSidenavContent","changeDetectorRef","container","MatSidenavContent_Factory","MatSidenavContainer","MatSidenavContent_HostBindings","MatSidenavContent_Template","MatSidenav","arguments","_fixedInViewport","_fixedTopGap","_fixedBottomGap","MatSidenav_Factory","ɵMatSidenav_BaseFactory","MatSidenav_HostBindings","fixedInViewport","fixedTopGap","fixedBottomGap","MatSidenav_Template","MatSidenavContainer_Factory","ɵMatSidenavContainer_BaseFactory","MatSidenavContainer_ContentQueries","MatSidenavContainer_HostBindings","MatSidenavContainer_Template","MatSidenavModule","ɵmod","ɵinj","MatSidenavModule_Factory","imports","ngJitMode","declarations","exports"],"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","file":"default~modules-ams-broadcast-broadcast-module~modules-ams-my-property-my-property-module-es5.js","sourcesContent":["import { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, forwardRef, ElementRef, NgZone, EventEmitter, Optional, Input, HostBinding, Output, HostListener, QueryList, ContentChildren, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { FocusTrapFactory, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, takeUntil, distinctUntilChanged, map, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/drawer-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material drawers.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\n\nconst _c0 = [\"*\"];\nfunction MatDrawerContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatSidenavContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r4._isShowingBackdrop());\n} }\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nconst matDrawerAnimations = {\n    /**\n     * Animation that slides a drawer in and out.\n     */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/drawer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/**\n * Configures whether drawers should use auto sizing by default.\n * @type {?}\n */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n}\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) { return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatDrawerContainer))), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatDrawerContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContent, selectors: [[\"mat-drawer-content\"]], hostAttrs: [1, \"mat-drawer-content\"], hostVars: 4, hostBindings: function MatDrawerContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatDrawerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatDrawerContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatDrawerContainer)),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatDrawerContainer))]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContent.prototype._changeDetectorRef;\n    /** @type {?} */\n    MatDrawerContent.prototype._container;\n}\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _focusMonitor\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _doc\n     * @param {?=} _container\n     */\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /**\n         * Whether the drawer is initialized. Used for disabling the initial animation.\n         */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /**\n         * Emits whenever the drawer has started animating.\n         */\n        this._animationStarted = new Subject();\n        /**\n         * Emits whenever the drawer is done animating.\n         */\n        this._animationEnd = new Subject();\n        /**\n         * Current state of the sidenav animation.\n         */\n        // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n        // metadata is not inherited by child classes, instead the host binding data is defined in a way\n        // that can be inherited.\n        // tslint:disable:no-host-decorator-in-concrete\n        this._animationState = 'void';\n        /**\n         * Event emitted when the drawer open state is changed.\n         */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ true);\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Event emitted when the drawer's position changes.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((/**\n         * @param {?} opened\n         * @return {?}\n         */\n        (opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = (/** @type {?} */ (this._doc.activeElement));\n                }\n                this._takeFocus();\n            }\n            else {\n                this._restoreFocus();\n            }\n        }));\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            ((/** @type {?} */ (fromEvent(this._elementRef.nativeElement, 'keydown')))).pipe(filter((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            })), takeUntil(this._destroyed)).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }))));\n        }));\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        }));\n    }\n    /**\n     * The side that the drawer is attached to.\n     * @return {?}\n     */\n    get position() { return this._position; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /**\n     * Mode of the drawer; one of 'over', 'push' or 'side'.\n     * @return {?}\n     */\n    get mode() { return this._mode; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /**\n     * Whether the drawer can be closed with the escape key or by clicking on the backdrop.\n     * @return {?}\n     */\n    get disableClose() { return this._disableClose; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableClose(value) { this._disableClose = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     * @return {?}\n     */\n    get autoFocus() {\n        /** @type {?} */\n        const value = this._autoFocus;\n        // Note that usually we disable auto focusing in `side` mode, because we don't know how the\n        // sidenav is being used, but in some cases it still makes sense to do it. If the consumer\n        // explicitly enabled `autoFocus`, we take it as them always wanting to enable it.\n        return value == null ? this.mode !== 'side' : value;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoFocus(value) { this._autoFocus = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set opened(value) { this.toggle(coerceBooleanProperty(value)); }\n    /**\n     * Event emitted when the drawer has been opened.\n     * @return {?}\n     */\n    get _openedStream() {\n        return this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has started opening.\n     * @return {?}\n     */\n    get openedStart() {\n        return this._animationStarted.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e.fromState !== e.toState && e.toState.indexOf('open') === 0)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has been closed.\n     * @return {?}\n     */\n    get _closedStream() {\n        return this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has started closing.\n     * @return {?}\n     */\n    get closedStart() {\n        return this._animationStarted.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e.fromState !== e.toState && e.toState === 'void')), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     * @private\n     * @return {?}\n     */\n    _takeFocus() {\n        if (!this.autoFocus || !this._focusTrap) {\n            return;\n        }\n        this._focusTrap.focusInitialElementWhenReady().then((/**\n         * @param {?} hasMovedFocus\n         * @return {?}\n         */\n        hasMovedFocus => {\n            // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n            // still works. We need to check that `focus` is a function due to Universal.\n            if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                this._elementRef.nativeElement.focus();\n            }\n        }));\n    }\n    /**\n     * If focus is currently inside the drawer, restores it to where it was before the drawer\n     * opened.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        if (!this.autoFocus) {\n            return;\n        }\n        /** @type {?} */\n        const activeEl = this._doc && this._doc.activeElement;\n        if (activeEl && this._elementRef.nativeElement.contains(activeEl)) {\n            // Note that we don't check via `instanceof HTMLElement` so that we can cover SVGs as well.\n            if (this._elementFocusedBeforeDrawerWasOpened) {\n                this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n            }\n            else {\n                this._elementRef.nativeElement.blur();\n            }\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        this._openedVia = null;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /**\n     * Close the drawer.\n     * @return {?}\n     */\n    close() {\n        return this.toggle(false);\n    }\n    /**\n     * Toggle this drawer.\n     * @param {?=} isOpen Whether the drawer should be open.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    toggle(isOpen = !this.opened, openedVia = 'program') {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n            this._openedVia = openedVia;\n        }\n        else {\n            this._animationState = 'void';\n            this._restoreFocus();\n        }\n        this._updateFocusTrapState();\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this.openedChange.pipe(take(1)).subscribe((/**\n             * @param {?} open\n             * @return {?}\n             */\n            open => resolve(open ? 'open' : 'close')));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    get _width() {\n        return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n    }\n    /**\n     * Updates the enabled state of the focus trap.\n     * @private\n     * @return {?}\n     */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            this._focusTrap.enabled = this.opened && this.mode !== 'side';\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationStartListener(event) {\n        this._animationStarted.next(event);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationDoneListener(event) {\n        this._animationEnd.next(event);\n    }\n}\nMatDrawer.ɵfac = function MatDrawer_Factory(t) { return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_CONTAINER, 8)); };\nMatDrawer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawer, selectors: [[\"mat-drawer\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"], hostVars: 12, hostBindings: function MatDrawer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) { return ctx._animationStartListener($event); })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) { return ctx._animationDoneListener($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@transform\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened);\n    } }, inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", onPositionChanged: \"positionChanged\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\" }, exportAs: [\"matDrawer\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatDrawer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\n/** @nocollapse */\nMatDrawer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: FocusMonitor },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDrawerContainer, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DRAWER_CONTAINER,] }] }\n];\nMatDrawer.propDecorators = {\n    position: [{ type: Input }],\n    mode: [{ type: Input }],\n    disableClose: [{ type: Input }],\n    autoFocus: [{ type: Input }],\n    opened: [{ type: Input }],\n    _animationState: [{ type: HostBinding, args: ['@transform',] }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    openedStart: [{ type: Output }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    closedStart: [{ type: Output }],\n    onPositionChanged: [{ type: Output, args: ['positionChanged',] }],\n    _animationStartListener: [{ type: HostListener, args: ['@transform.start', ['$event'],] }],\n    _animationDoneListener: [{ type: HostListener, args: ['@transform.done', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer',\n                exportAs: 'matDrawer',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    'tabIndex': '-1'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.FocusTrapFactory }, { type: ɵngcc2.FocusMonitor }, { type: ɵngcc3.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDrawerContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DRAWER_CONTAINER]\n            }] }]; }, { _animationState: [{\n            type: HostBinding,\n            args: ['@transform']\n        }], openedChange: [{\n            type: Output\n        }], onPositionChanged: [{\n            type: Output,\n            args: ['positionChanged']\n        }], position: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], disableClose: [{\n            type: Input\n        }], autoFocus: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], openedStart: [{\n            type: Output\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], closedStart: [{\n            type: Output\n        }], _animationStartListener: [{\n            type: HostListener,\n            args: ['@transform.start', ['$event']]\n        }], _animationDoneListener: [{\n            type: HostListener,\n            args: ['@transform.done', ['$event']]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_disableClose;\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_autoFocus;\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_opened;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusTrap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._elementFocusedBeforeDrawerWasOpened;\n    /**\n     * Whether the drawer is initialized. Used for disabling the initial animation.\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._enableAnimations;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._mode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._disableClose;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._autoFocus;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._opened;\n    /**\n     * How the sidenav was opened (keypress, mouse click etc.)\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._openedVia;\n    /**\n     * Emits whenever the drawer has started animating.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationStarted;\n    /**\n     * Emits whenever the drawer is done animating.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationEnd;\n    /**\n     * Current state of the sidenav animation.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationState;\n    /**\n     * Event emitted when the drawer open state is changed.\n     * @type {?}\n     */\n    MatDrawer.prototype.openedChange;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._destroyed;\n    /**\n     * Event emitted when the drawer's position changes.\n     * @type {?}\n     */\n    MatDrawer.prototype.onPositionChanged;\n    /**\n     * An observable that emits when the drawer mode changes. This is used by the drawer container to\n     * to know when to when the mode changes so it can adapt the margins on the content.\n     * @type {?}\n     */\n    MatDrawer.prototype._modeChanged;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusTrapFactory;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._doc;\n    /**\n     * @deprecated `_container` parameter to be made required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatDrawer.prototype._container;\n}\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    /**\n     * @param {?} _dir\n     * @param {?} _element\n     * @param {?} _ngZone\n     * @param {?} _changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} defaultAutosize\n     * @param {?=} _animationMode\n     */\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * Drawers that belong to this container.\n         */\n        this._drawers = new QueryList();\n        /**\n         * Event emitted when the drawer backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Emits on every ngDoCheck. Used for debouncing reflows.\n         */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            }));\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler.change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this.updateContentMargins()));\n        this._autosize = defaultAutosize;\n    }\n    /**\n     * The drawer child with the `start` position.\n     * @return {?}\n     */\n    get start() { return this._start; }\n    /**\n     * The drawer child with the `end` position.\n     * @return {?}\n     */\n    get end() { return this._end; }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     * @return {?}\n     */\n    get autosize() { return this._autosize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autosize(value) { this._autosize = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     * @return {?}\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /**\n     * Reference to the CdkScrollable instance that wraps the scrollable content.\n     * @return {?}\n     */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        (drawer) => {\n            // @breaking-change 10.0.0 Remove `_container` check once container parameter is required.\n            this._drawers.reset(drawer.filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            item => !item._container || item._container === this)));\n            this._drawers.notifyOnChanges();\n        }));\n        this._drawers.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validateDrawers();\n            this._drawers.forEach((/**\n             * @param {?} drawer\n             * @return {?}\n             */\n            (drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            }));\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        }));\n        this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n        takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => this.updateContentMargins()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Calls `open` of both start and end drawers\n     * @return {?}\n     */\n    open() {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer.open()));\n    }\n    /**\n     * Calls `close` of both start and end drawers\n     * @return {?}\n     */\n    close() {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer.close()));\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     * @return {?}\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        /** @type {?} */\n        let left = 0;\n        /** @type {?} */\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._width;\n            }\n            else if (this._left.mode == 'push') {\n                /** @type {?} */\n                const width = this._left._width;\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._width;\n            }\n            else if (this._right.mode == 'push') {\n                /** @type {?} */\n                const width = this._right._width;\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || (/** @type {?} */ (null));\n        right = right || (/** @type {?} */ (null));\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => this._contentMarginChanges.next(this._contentMargins)));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => this._doCheckSubject.next()));\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => event.fromState !== event.toState)), takeUntil(this._drawers.changes))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (drawer.mode !== 'side') {\n            drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n             * @return {?}\n             */\n            () => this._setContainerClass(drawer.opened)));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._validateDrawers();\n            }));\n        }));\n    }\n    /**\n     * Subscribes to changes in drawer mode so we can run change detection.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element.\n     * @private\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _setContainerClass(isAdd) {\n        /** @type {?} */\n        const classList = this._element.nativeElement.classList;\n        /** @type {?} */\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /**\n     * Validate the state of the drawer children components.\n     * @private\n     * @return {?}\n     */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        }));\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /**\n     * Whether the container is being pushed to the side by one of the drawers.\n     * @private\n     * @return {?}\n     */\n    _isPushed() {\n        return (this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over');\n    }\n    /**\n     * @return {?}\n     */\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawer();\n    }\n    /**\n     * @return {?}\n     */\n    _closeModalDrawer() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer)))\n            .forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => (/** @type {?} */ (drawer)).close()));\n    }\n    /**\n     * @return {?}\n     */\n    _isShowingBackdrop() {\n        return (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end));\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n}\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) { return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatDrawerContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContainer, selectors: [[\"mat-drawer-container\"]], contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, viewQuery: function MatDrawerContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatDrawerContent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    } }, hostAttrs: [1, \"mat-drawer-container\"], hostVars: 2, hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, exportAs: [\"matDrawerContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatDrawerContainer\n            }])], ngContentSelectors: _c2, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]], template: function MatDrawerContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatDrawerContent], styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContainer.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DRAWER_DEFAULT_AUTOSIZE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatDrawerContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatDrawerContent,] }],\n    _userContent: [{ type: ViewChild, args: [MatDrawerContent,] }],\n    autosize: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    backdropClick: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-container',\n                exportAs: 'matDrawerContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatDrawerContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc4.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { backdropClick: [{\n            type: Output\n        }], autosize: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], _allDrawers: [{\n            type: ContentChildren,\n            args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatDrawerContent]\n        }], _userContent: [{\n            type: ViewChild,\n            args: [MatDrawerContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDrawerContainer.ngAcceptInputType_autosize;\n    /** @type {?} */\n    MatDrawerContainer.ngAcceptInputType_hasBackdrop;\n    /**\n     * All drawers in the container. Includes drawers from inside nested containers.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._allDrawers;\n    /**\n     * Drawers that belong to this container.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._drawers;\n    /** @type {?} */\n    MatDrawerContainer.prototype._content;\n    /** @type {?} */\n    MatDrawerContainer.prototype._userContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._autosize;\n    /** @type {?} */\n    MatDrawerContainer.prototype._backdropOverride;\n    /**\n     * Event emitted when the drawer backdrop is clicked.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype.backdropClick;\n    /**\n     * The drawer at the start/end position, independent of direction.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._end;\n    /**\n     * The drawer at the left/right. When direction changes, these will change as well.\n     * They're used as aliases for the above to set the left/right style properly.\n     * In LTR, _left == _start and _right == _end.\n     * In RTL, _left == _end and _right == _start.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._left;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._right;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._destroyed;\n    /**\n     * Emits on every ngDoCheck. Used for debouncing reflows.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._doCheckSubject;\n    /**\n     * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n     * drawer is open. We use margin rather than transform even for push mode because transform breaks\n     * fixed position elements inside of the transformed element.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._contentMargins;\n    /** @type {?} */\n    MatDrawerContainer.prototype._contentMarginChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/sidenav.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavContent extends MatDrawerContent {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) { return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatSidenavContainer))), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatSidenavContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContent, selectors: [[\"mat-sidenav-content\"]], hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"], hostVars: 4, hostBindings: function MatSidenavContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSidenavContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSidenavContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatSidenavContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatSidenavContainer)),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content mat-sidenav-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatSidenavContainer))]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /**\n     * Whether the sidenav is fixed in the viewport.\n     * @return {?}\n     */\n    get fixedInViewport() { return this._fixedInViewport; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedInViewport(value) { this._fixedInViewport = coerceBooleanProperty(value); }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     * @return {?}\n     */\n    get fixedTopGap() { return this._fixedTopGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedTopGap(value) { this._fixedTopGap = coerceNumberProperty(value); }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     * @return {?}\n     */\n    get fixedBottomGap() { return this._fixedBottomGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedBottomGap(value) { this._fixedBottomGap = coerceNumberProperty(value); }\n}\nMatSidenav.ɵfac = function MatSidenav_Factory(t) { return ɵMatSidenav_BaseFactory(t || MatSidenav); };\nMatSidenav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenav, selectors: [[\"mat-sidenav\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"], hostVars: 17, hostBindings: function MatSidenav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened)(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    } }, inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, exportAs: [\"matSidenav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatSidenav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatSidenav.propDecorators = {\n    fixedInViewport: [{ type: Input }],\n    fixedTopGap: [{ type: Input }],\n    fixedBottomGap: [{ type: Input }]\n};\nconst ɵMatSidenav_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenav);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav',\n                exportAs: 'matSidenav',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer mat-sidenav',\n                    'tabIndex': '-1',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                    '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                    '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, { fixedInViewport: [{\n            type: Input\n        }], fixedTopGap: [{\n            type: Input\n        }], fixedBottomGap: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedInViewport;\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedTopGap;\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedBottomGap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedInViewport;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedTopGap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedBottomGap;\n}\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = function MatSidenavContainer_Factory(t) { return ɵMatSidenavContainer_BaseFactory(t || MatSidenavContainer); };\nMatSidenavContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContainer, selectors: [[\"mat-sidenav-container\"]], contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"], hostVars: 2, hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, exportAs: [\"matSidenavContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatSidenavContainer\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]], template: function MatSidenavContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatSidenavContent, ɵngcc1.CdkScrollable], styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSidenavContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatSidenavContent,] }]\n};\nconst ɵMatSidenavContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-container',\n                exportAs: 'matSidenavContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container mat-sidenav-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatSidenavContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], null, { _allDrawers: [{\n            type: ContentChildren,\n            args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatSidenavContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSidenavContainer.ngAcceptInputType_hasBackdrop;\n    /** @type {?} */\n    MatSidenavContainer.prototype._allDrawers;\n    /** @type {?} */\n    MatSidenavContainer.prototype._content;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/sidenav-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSidenavModule });\nMatSidenavModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSidenavModule_Factory(t) { return new (t || MatSidenavModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            ScrollingModule,\n            PlatformModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, { declarations: function () { return [MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ScrollingModule,\n        PlatformModule]; }, exports: function () { return [MatCommonModule,\n        MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ScrollingModule,\n                    PlatformModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ],\n                declarations: [\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError, MAT_DRAWER_CONTAINER as ɵangular_material_src_material_sidenav_sidenav_a };\n\n//# sourceMappingURL=sidenav.js.map"]}