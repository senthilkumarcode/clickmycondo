{"version":3,"sources":["webpack:///src/app/modules/ams/income-tracker/income-defaulters/income-view-defaulters.component.html","webpack:///src/app/modules/ams/income-tracker/income-defaulters/income-defaulters-routing.module.ts","webpack:///src/app/modules/ams/income-tracker/income-defaulters/income-defaulters.module.ts","webpack:///src/app/modules/ams/income-tracker/income-defaulters/income-view-defaulters.component.scss","webpack:///src/app/modules/ams/income-tracker/income-defaulters/income-view-defaulters.component.ts"],"names":["routes","path","component","IncomeDefaultersRoutingModule","imports","forChild","exports","IncomeDefaultersModule","declarations","bootstrap","IncomeViewDefaultersComponent","accountsService","cookieService","isDefaultersDataLoaded","defaultData","isDefaultSelected","selectAllDefaulters","sendMessage","filtergroup","jqx","filter","filter_or_operator","filtervalue","filtercondition","filterData","createfilter","operator","addfilter","datagrid","showfiltercolumnbackground","columnData","forEach","item","datafield","applyfilters","clearfilters","event","exportdata","detail","allDataRecords","getrows","checked","some","refresh","dataRecord","getrowdata","rowId","totalItems","cellsrenderer","row","column","value","columnrenderer","text","width","pinned","sortable","menu","chkedProperty","renderer","minwidth","params","apartmentId","parseInt","get","getIncomeTrackerDefaulterByApartmentId","subscribe","res","gridDefaultDataList","length","gridSourceData","localdata","datatype","defaultDataList","dataAdapter","renderColumns","error","console","log","selector","template","checkDefaulterHeaderEvent","isChecked","stopPropagation","newEvent","CustomEvent","window","dispatchEvent","checkDefaulterRowEvent"],"mappings":"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","file":"modules-ams-income-tracker-income-defaulters-income-defaulters-module-es5.js","sourcesContent":["export default \"<div class=\\\"income-view-defaulters-wrapper\\\">\\n\\t\\n\\t<div class=\\\"main\\\">\\n\\n\\t\\t<app-loader *ngIf=\\\"!isDefaultersDataLoaded\\\"></app-loader>\\n\\n\\t\\t<condo-card *ngIf=\\\"isDefaultersDataLoaded\\\">\\n\\n\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<h4>View Defaulters</h4>\\n\\t\\t\\t\\t\\t\\t<p>{{totalItems}} results</p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"ml-auto mr-3\\\">\\n\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" \\n\\t\\t\\t\\t\\t\\t[disabled]=\\\"!isDefaultSelected\\\"\\n\\t\\t\\t\\t\\t\\t(click)=\\\"sendEmail()\\\">Send Email</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"mr-3\\\">\\n\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'accent'\\\" \\n\\t\\t\\t\\t\\t\\t[disabled]=\\\"!isDefaultSelected\\\"\\n\\t\\t\\t\\t\\t\\t(click)=\\\"sendSMS()\\\">Send SMS</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"d-none d-md-block mr-3\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"defaultData\\\" (ngModelChange)=\\\"onGlSearchFilter()\\\">\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<app-print-dropdown (outputParams) =\\\"getPrintParams($event)\\\"></app-print-dropdown>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\n\\t\\t\\t<div CondoCardBody>\\n\\t\\n\\t\\t\\t\\t<jqxGrid \\n\\t\\t\\t\\t\\t\\t[theme]=\\\"'material'\\\" \\n\\t\\t\\t\\t\\t\\t[width]=\\\"'100%'\\\"\\n\\t\\t\\t\\t\\t\\t[rowsheight]=\\\"48\\\"\\n\\t\\t\\t\\t\\t\\t[autoheight]=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t[pageable]=\\\"true\\\" \\n\\t\\t\\t\\t\\t\\t[filterable]=\\\"true\\\" \\n\\t\\t\\t\\t\\t\\t[sortable]=\\\"true\\\" \\n\\t\\t\\t\\t\\t\\t[source]=\\\"defaultDataList\\\"\\n\\t\\t\\t\\t\\t\\t[columns]=\\\"columnData\\\"\\n\\t\\t\\t\\t\\t\\t[enablehover]=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\t[selectionmode]=\\\"'none'\\\"\\n\\t\\t\\t\\t\\t#datagrid>\\n\\t\\t\\t\\t</jqxGrid>\\n\\t\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\n\\t\\t</condo-card>\\n\\n\\t</div>\\n\\n</div>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IncomeViewDefaultersComponent } from './income-view-defaulters.component';\n\nexport const routes: Routes = [\n  { path: '', component: IncomeViewDefaultersComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class IncomeDefaultersRoutingModule { }\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nimport { CondoCardModule } from 'src/app/modules/ui/card/card.module';\n\nimport { RouterModule } from '@angular/router';\nimport { routes } from './income-defaulters-routing.module';\nimport { IncomeDefaultersRoutingModule } from './income-defaulters-routing.module';\n\nimport { IncomeViewDefaultersComponent } from './income-view-defaulters.component';\n\n\n@NgModule({\n  declarations: [IncomeViewDefaultersComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    CondoCardModule,\n    RouterModule.forChild(routes),\n    IncomeDefaultersRoutingModule\n  ],\n  bootstrap: [\n    IncomeViewDefaultersComponent\n  ]\n})\nexport class IncomeDefaultersModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL2luY29tZS10cmFja2VyL2luY29tZS1kZWZhdWx0ZXJzL2luY29tZS12aWV3LWRlZmF1bHRlcnMuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, HostListener, ViewChild } from '@angular/core';\n\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\n\nimport { AccountsService } from 'src/app/api/controllers/Accounts';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-income-view-defaulters',\n  templateUrl: './income-view-defaulters.component.html',\n  styleUrls: ['./income-view-defaulters.component.scss']\n})\nexport class IncomeViewDefaultersComponent implements OnInit {\n  \n  isDefaultersDataLoaded:boolean = false;\n\n  defaultData:string = \"\";\n  defaultDataList:any;\n\n  totalItems:any;\n\n  userDataList:any;\n  glAccountListData:any;\n\n  isDefaultSelected:boolean = false;\n  selectAllDefaulters:boolean = false;\n\n  sendMessage:string = null;\n\n  gridSourceData:any;\n  gridDefaultDataList:any;\n  columnData:any;\n\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n\n  constructor(\n  \tprivate accountsService:AccountsService,\n  \tprivate cookieService:CookieService\n  ) { }\n\n  onSearchFilter(){\n\n    if(this.defaultData != \"\"){\n\n      let filtergroup = new jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = this.defaultData;\n      let filtercondition = 'contains';\n      let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n      filtergroup.operator = 'or';\n      filtergroup.addfilter(filter_or_operator, filterData);\n\n      this.datagrid.showfiltercolumnbackground(false);\n\n      this.columnData.forEach(item => {\n        if(item.datafield != 'Actions') {\n          this.datagrid.addfilter(item.datafield, filtergroup, true);\n        }\n      })\n\n      this.datagrid.applyfilters();\n      \n    }\n    else {\n      this.datagrid.clearfilters();\n    }\n\n  }\n\n  getPrintParams(event){\n    this.datagrid.exportdata(event, 'helpdeskData');\n  }\n\n  @HostListener('window:onCheckDefaulterHeader', ['$event.detail'])\n  onCheckDefaulterHeader(detail) {\n\n    let allDataRecords = this.datagrid.getrows()\n\n    _.each(allDataRecords, item => {\n      item.checked = detail.checked\n    })\n\n    this.isDefaultSelected = allDataRecords.some(item => {\n      return item.checked\n    })\n    this.datagrid.refresh();\n\n  }\n\n  @HostListener('window:onCheckDefaulterRow', ['$event.detail'])\n  onCheckDefaulterRow(detail) {\n    \n    let allDataRecords = this.datagrid.getrows()\n    var dataRecord = this.datagrid.getrowdata(detail.rowId)\n\n    dataRecord.checked = detail.checked;\n\n    this.isDefaultSelected = allDataRecords.some(item => {\n      return item.checked\n    })\n\n  }\n\n\n  sendEmail() {\n    \n  }\n\n  sendSMS() {\n    \n  }\n\n  isItemsAvailable(){\n    return this.totalItems > 0 ? true : false;\n  }\n\n  isNoItemsAvailable(){\n    return this.totalItems == 0 ? true : false;\n  }\n\n  renderColumns() {\n\n    var cellsrenderer = (row, column, value) => {\n      return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n    }\n\n    var columnrenderer = (value) => {\n      return '<div style=\"padding: 14px\">' + value + '</div>';\n    }\n\n    this.columnData = [{\n         text: '',\n         datafield: 'checked',\n         width: 80,\n         pinned: true,\n         sortable: false,\n         menu: false,\n         cellsrenderer: (row, column, value) => {\n\n            var chkedProperty;\n            \n            if(value){\n              chkedProperty = 'checked=\"true\"';\n            }\n            else {\n              chkedProperty = '';\n            }\n\n            return '<div class=\"jqx-custom-inner-cell\">'\n                    + '<div class=\"form-group mb-0 w-100\">'\n                      +  '<div class=\"form-check text-center\">'\n                          + '<input type=\"checkbox\" class=\"form-check-input\" onClick=\"checkDefaulterRowEvent('+ row +', this.checked)\" id=\"defaultChecker'+ row +'\" name=\"defaultChecker'+ row +'\" '+ chkedProperty +'>'\n                          + '<label class=\"form-check-label\" for=\"defaultChecker'+ row +'\"></label>'\n                      +  '</div>'\n                    + '</div>'\n                 + '</div>'\n         },\n         renderer: (value) => {\n\n          return '<div style=\"padding: 10px\">'\n          + '<div class=\"form-group mb-0 w-100\">'\n            +  '<div class=\"form-check check-header text-center\">'\n                + '<input type=\"checkbox\" id=\"selectAllDefaulters\" name=\"selectAllDefaulters\" onClick=\"checkDefaulterHeaderEvent(event, this.checked)\" >'\n                + '<label class=\"form-check-label\" for=\"selectAllDefaulters\"></label>'\n            +  '</div>'\n          + '</div>'\n       + '</div>'\n         }\n     },\n     {\n         text: 'Type',\n         datafield: 'type',\n         width: 200,\n         cellsrenderer: cellsrenderer,\n         renderer: columnrenderer\n     },\n     {\n         text: 'Tower Unit',\n         datafield: 'unit',\n         minwidth: 100,\n         cellsrenderer: cellsrenderer,\n         renderer: columnrenderer\n     },\n     {\n      text: 'Primary Contact',\n      datafield: 'primaryContact',\n      minwidth: 150,\n      cellsrenderer: cellsrenderer,\n      renderer: columnrenderer\n     },\n     {\n      text: 'Phone',\n      datafield: 'phone',\n      minwidth: 180,\n      cellsrenderer: cellsrenderer,\n      renderer: columnrenderer\n     },\n     {\n      text: 'Amount',\n      datafield: 'due',\n      minwidth: 150,\n      cellsrenderer: cellsrenderer,\n      renderer: columnrenderer\n     },\n     {\n      text: 'Email',\n      datafield: 'emailSetting',\n      minwidth: 200,\n      cellsrenderer: cellsrenderer,\n      renderer: columnrenderer\n     }];\n\n     this.isDefaultersDataLoaded = true;\n\n  }\n\n  ngOnInit() {\n\n    let params = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n\n  \tthis.accountsService.getIncomeTrackerDefaulterByApartmentId(params).subscribe((res:any) => {\n\n      var gridDefaultDataList = res;\n\n      _.each(gridDefaultDataList, item => {\n        item.checked = false;\n      })\n\n      this.totalItems = gridDefaultDataList.length;\n      \n      this.gridSourceData = {\n        localdata: gridDefaultDataList,\n        datatype: \"array\"\n      }\n\n\n      this.defaultDataList = new jqx.dataAdapter(this.gridSourceData);\n      this.renderColumns();\n\n  \t}, error => {\n    \tconsole.log(error);\n    });\n\n  }\n\n}\n\n\nfunction checkDefaulterHeaderEvent(event, isChecked){\n  \n  event.stopPropagation();\n  var newEvent = new CustomEvent('onCheckDefaulterHeader', {\n    detail : {\n      checked: isChecked\n    }\n  })\n  window.dispatchEvent(newEvent);\n\n}\n(window as any).checkDefaulterHeaderEvent = checkDefaulterHeaderEvent;\n\nfunction checkDefaulterRowEvent(row, isChecked){\n\n  var event = new CustomEvent('onCheckDefaulterRow', {\n    detail: {\n        rowId: row,\n        checked: isChecked\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).checkDefaulterRowEvent = checkDefaulterRowEvent;\n"]}