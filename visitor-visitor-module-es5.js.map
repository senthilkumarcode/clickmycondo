{"version":3,"sources":["webpack:///src/app/ams/visitor/components/checkin-visitor/checkin-visitor.component.html","webpack:///src/app/ams/visitor/components/visitor-checkin/visitor-checkin.component.html","webpack:///src/app/ams/visitor/components/visitor-checkout/visitor-checkout.component.html","webpack:///src/app/ams/visitor/components/visitor-create/visitor-create.component.html","webpack:///src/app/ams/visitor/components/visitor-expected-visitor/visitor-expected-visitor.component.html","webpack:///src/app/ams/visitor/components/visitor-history/visitor-history.component.html","webpack:///src/app/ams/visitor/components/visitor-reports/visitor-reports.component.html","webpack:///src/app/ams/visitor/components/visitor-setup/visitor-setup.component.html","webpack:///src/app/ams/visitor/visitor.component.html","webpack:///src/app/ams/visitor/components/checkin-visitor/checkin-visitor.component.scss","webpack:///src/app/ams/visitor/components/checkin-visitor/checkin-visitor.component.ts","webpack:///src/app/ams/visitor/components/visitor-checkin/visitor-checkin.component.scss","webpack:///src/app/ams/visitor/components/visitor-checkin/visitor-checkin.component.ts","webpack:///src/app/ams/visitor/components/visitor-checkout/visitor-checkout.component.scss","webpack:///src/app/ams/visitor/components/visitor-checkout/visitor-checkout.component.ts","webpack:///src/app/ams/visitor/components/visitor-create/visitor-create.component.scss","webpack:///src/app/ams/visitor/components/visitor-create/visitor-create.component.ts","webpack:///src/app/ams/visitor/components/visitor-expected-visitor/visitor-expected-visitor.component.scss","webpack:///src/app/ams/visitor/components/visitor-expected-visitor/visitor-expected-visitor.component.ts","webpack:///src/app/ams/visitor/components/visitor-history/visitor-history.component.scss","webpack:///src/app/ams/visitor/components/visitor-history/visitor-history.component.ts","webpack:///src/app/ams/visitor/components/visitor-reports/visitor-reports.component.scss","webpack:///src/app/ams/visitor/components/visitor-reports/visitor-reports.component.ts","webpack:///src/app/ams/visitor/components/visitor-setup/visitor-setup.component.scss","webpack:///src/app/ams/visitor/components/visitor-setup/visitor-setup.component.ts","webpack:///src/app/ams/visitor/visitor-routing.module.ts","webpack:///src/app/ams/visitor/visitor.component.scss","webpack:///src/app/ams/visitor/visitor.component.ts","webpack:///src/app/ams/visitor/visitor.module.ts"],"names":["CheckinVisitorComponent","router","route","userService","apartmentService","visitorService","lookupService","sharedService","cookieService","SharedToaster","isEditVisitor","isVisitorSubmitted","isVisitorAdded","isError","errorMessage","visitTypeId","isExpectedVisitor","visitorStatus","isUnitVisitor","iscommunityVisitor","minDate","Date","format","form","visitorDetails","apartmentUnitId","parseInt","get","visitor","expectedVisitorName","expectedVisitorCount","expectedVisitorPhone","passNumber","expectedVisitorInTime","expectedDurationInHours","visitCategoryId","purpose","addVisitor","subscribe","res","message","error","getLookupValueByLookupTypeId","visitByData","visitCategoryData","getApartmentBlockUnitByUserId","apartmentBlockUnitId","getAllApartmentBlockUnits","blockUnitData","id","console","log","result","filter","filterId","lookupValueId","lookupValueName","undefined","openSnackBar","expectedVisitorOutTime","inDate","outDate","diffDuration","diff","expectedDuration","days","isSingleDigit","hours","minutes","sendDuration","asHours","Math","round","digit","toString","length","selector","template","VisitorCheckinComponent","expectedVisitorDetails","apartmentBlockNumber","apartmentBlockUnitNumber","navigate","isCheckout","params","visitorName","visitorCount","visitorPhone","visitorInTime","visitorOutTime","updateVisitor","type","getVisitorById","visitorCategoryId","getExpectedVisitorById","VisitorCheckoutComponent","injector","visitorData","isVisitorDataLoaded","unitFieldType","unitOrder","ItemStartIndex","itemLimit","modalService","event","ItemEndIndex","window","innerWidth","index","showConfirmModal","visitTypeData","getYetToCheckoutVisitorsByApartmentId","visitorListData","item","isActive","isCheckedOut","getApartmentBlockUnitById","blockNo","blockUnitNo","totalItems","VisitorCreateComponent","addExpectedVisitor","setAlertMessage","getApartmentBlockUnitByApartmentId","VisitorExpectedVisitorComponent","selectedInput","columnField","value","name","dateTime","getExpectedVisitorsByApartmentId","data","checkVisitTypeData","checkVisitCategoryData","forEach","element","visitTypeName","toLowerCase","visitCategoryName","VisitorHistoryComponent","getVisitorsByApartmentId","VisitorReportsComponent","isDataLoaded","details","ApartmentId","LookupTypeId","MenuName","getLookupValuesByApartmentIdLookupTypeIdMenuName","reportDataList","VisitorSetupComponent","isCategoryTypeSubmitted","isMobile","isCategoryTypeNew","isCategoryTypeUpdate","categoryType","categoryUpdateId","alertMessage","setTimeout","elem","document","querySelector","scrollTo","getBoundingClientRect","top","scroll","behavior","unitlistdeleteindexcast","updateUserId","deleteLookupvalue","categoryDataList","setUnitListDeleteIndex","addLookupValue","updateLookupValue","routes","path","redirectTo","pathMatch","component","VisitorRoutingModule","imports","forChild","exports","VisitorComponent","VisitorModule","declarations","bootstrap"],"mappings":"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","file":"visitor-visitor-module-es5.js","sourcesContent":["export default \"<div class=\\\"checkin-visitor-wrapper\\\">\\n\\t<div class=\\\"card mb-30\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>\\n    \\t\\t\\t\\t<span >Visitor Checkin</span>\\n    \\t\\t\\t</h5>\\n    \\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card-body\\\">\\n            \\n            <app-loader *ngIf=\\\"isVisitorSubmitted\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"!isVisitorSubmitted\\\">\\n\\n\\t\\t\\t\\t<form #addVisitorForm = \\\"ngForm\\\" name=\\\"addVisitorForm\\\" (ngSubmit)=\\\"submitAddVisitorForm(addVisitorForm)\\\"  novalidate>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Visitor Name*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Name\\\" name=\\\"visitorName\\\" [(ngModel)]=\\\"visitor.expectedVisitorName\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Visitor Count*</label>\\n\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Count\\\" name=\\\"visitorCount\\\" [(ngModel)]=\\\"visitor.expectedVisitorCount\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Phone/Mobile*</label>\\n\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\" name=\\\"phoneNo\\\" [(ngModel)]=\\\"visitor.expectedVisitorPhone\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>In-time*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t                    <input class=\\\"form-control\\\" name=\\\"visitorInTime\\\" [owlDateTime]=\\\"visitorInTime\\\" [owlDateTimeTrigger]=\\\"visitorInTime\\\" placeholder=\\\"Date Time\\\" [(ngModel)]=\\\"visitor.expectedVisitorInTime\\\" (ngModelChange)=\\\"expectedDurationChange()\\\" [disabled]='true' required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorInTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorInTime\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Out-time*</label>\\n\\t\\t\\t                    <input class=\\\"form-control\\\" name=\\\"visitorOutTime\\\" [owlDateTime]=\\\"visitorOutTime\\\" [owlDateTimeTrigger]=\\\"visitorOutTime\\\" placeholder=\\\"Date Time\\\" [(ngModel)]=\\\"visitor.expectedVisitorOutTime\\\" (ngModelChange)=\\\"expectedDurationChange()\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorOutTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorOutTime\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Duration*</label>\\n\\t\\t\\t                    <input OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Duration\\\" name=\\\"visitorDuration\\\" [(ngModel)]=\\\"visitor.expectedDuration\\\" [disabled]=\\\"true\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Pass Number*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\" name=\\\"visitorPassNumber\\\" [(ngModel)]=\\\"visitor.passNumber\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Visit Type*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select \\n\\t\\t\\t\\t\\t\\t\\t        name=\\\"visitBy\\\" \\n\\t\\t\\t\\t\\t\\t\\t        id=\\\"visitBy\\\" \\n\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"visitTypeId\\\" (ngModelChange)=\\\"changeVisitorType(visitTypeId)\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of visitByData\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Visit Category*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select \\n\\t\\t\\t\\t\\t\\t\\t        name=\\\"visitByCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\t        id=\\\"visitByCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"visitCategoryId\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of visitCategoryData\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"isUnitVisitor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Tenant block-No*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select \\n\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorblock-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"visitorblock-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.apartmentBlockNumber\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of blockUnitData\\\" [value]=\\\"item.apartmentBlockNumber\\\">{{ item.apartmentBlockNumber }}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"isUnitVisitor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Tenant Unit-No*</label>\\n\\t\\t\\t                   \\t<select \\n\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorUnit-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"visitorUnit-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.apartmentBlockUnitNumber\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of blockUnitData\\\" [value]=\\\"item.apartmentBlockUnitNumber\\\">{{ item.apartmentBlockUnitNumber }}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"iscommunityVisitor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Staff Id*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Staff-id\\\" name=\\\"staffId\\\" [(ngModel)]=\\\"visitor.staffId\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Purpose</label>\\n\\t\\t\\t                    <textarea  type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter purpose\\\" name=\\\"visitorpurpose\\\" [(ngModel)]=\\\"visitor.purpose\\\"></textarea>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline float-right mt-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addVisitorForm.invalid\\\">Check In</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t</ng-container>\\n\\t\\t\\t\\n\\t\\t</div>\\n\\t</div>\\n\\t\\n</div>\"","export default \"<div class=\\\"checkin-visitor-wrapper\\\">\\n\\t<div class=\\\"card mb-30\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>\\n    \\t\\t\\t\\t<span *ngIf=\\\"!isEditVisitor\\\">Create Expected Visitor</span>\\n    \\t\\t\\t\\t<span *ngIf=\\\"isEditVisitor\\\">Edit Expected Visitor</span>\\n    \\t\\t\\t</h5>\\n    \\t\\t</div>\\n    \\t\\t<div class=\\\"float-right\\\">\\n    \\t\\t\\t<a href=\\\"javascript:void(0)\\\" routerLink=\\\"/ams/visitor/expected-visitor\\\" \\n\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t<i-feather class=\\\"icon back\\\" name=\\\"chevron-left\\\"></i-feather>\\n\\t\\t\\t\\t</a>\\n    \\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\n\\t\\t\\t<app-alert-message [message]=\\\"errorMessage\\\" [isAlert]=\\\"isError\\\"></app-alert-message>\\n\\n\\t\\t\\t<app-loader *ngIf=\\\"isVisitorSubmitted && !isVisitorAdded\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"!isVisitorSubmitted && !isVisitorAdded\\\">\\n\\n\\t\\t\\t\\t<form #addVisitorForm = \\\"ngForm\\\" name=\\\"addVisitorForm\\\" (ngSubmit)=\\\"submitAddVisitorForm(addVisitorForm)\\\"  novalidate>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\" *ngIf=\\\"!isCheckout()\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Expected Visitor Name*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Name\\\" name=\\\"visitorName\\\" [(ngModel)]=\\\"visitor.expectedVisitorName\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Expected Visitor Count*</label>\\n\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Count\\\" name=\\\"visitorCount\\\" [(ngModel)]=\\\"visitor.expectedVisitorCount\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Expected Phone/Mobile*</label>\\n\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\" name=\\\"phoneNo\\\" [(ngModel)]=\\\"visitor.expectedVisitorPhone\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Visitor In-time*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t                    <input class=\\\"form-control\\\" name=\\\"visitorInTime\\\" [owlDateTime]=\\\"visitorInTime\\\" [owlDateTimeTrigger]=\\\"visitorInTime\\\" placeholder=\\\"Date Time\\\" [(ngModel)]=\\\"visitor.expectedVisitorInTime\\\" (ngModelChange)=\\\"expectedDurationChange()\\\" [disabled]='true' required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorInTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorInTime\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Expected Visitor Out-time*</label>\\n\\t\\t\\t                    <input class=\\\"form-control\\\" name=\\\"visitorOutTime\\\" [owlDateTime]=\\\"visitorOutTime\\\" [owlDateTimeTrigger]=\\\"visitorOutTime\\\" placeholder=\\\"Date Time\\\" [(ngModel)]=\\\"visitor.expectedVisitorOutTime\\\" (ngModelChange)=\\\"expectedDurationChange()\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorOutTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorOutTime\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Expected Duration*</label>\\n\\t\\t\\t                    <input OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Duration\\\" name=\\\"visitorDuration\\\" [(ngModel)]=\\\"visitor.expectedDuration\\\" [disabled]=\\\"true\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Pass Number*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\" name=\\\"visitorPassNumber\\\" [(ngModel)]=\\\"visitor.passNumber\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Visit Type*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select \\n\\t\\t\\t\\t\\t\\t\\t        name=\\\"visitBy\\\" \\n\\t\\t\\t\\t\\t\\t\\t        id=\\\"visitBy\\\" \\n\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"visitTypeId\\\" (ngModelChange)=\\\"changeVisitorType(visitTypeId)\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of visitByData\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Visit Category*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select \\n\\t\\t\\t\\t\\t\\t\\t        name=\\\"visitByCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\t        id=\\\"visitByCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"visitCategoryId\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of visitCategoryData\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"isUnitVisitor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Tenant block-No*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select \\n\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorblock-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"visitorblock-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.apartmentBlockNumber\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of blockUnitData\\\" [value]=\\\"item.apartmentBlockNumber\\\">{{ item.apartmentBlockNumber }}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"isUnitVisitor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Tenant Unit-No*</label>\\n\\t\\t\\t                   \\t<select \\n\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorUnit-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"visitorUnit-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.apartmentBlockUnitNumber\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of blockUnitData\\\" [value]=\\\"item.apartmentBlockUnitNumber\\\">{{ item.apartmentBlockUnitNumber }}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"iscommunityVisitor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Staff Id*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Staff-id\\\" name=\\\"staffId\\\" [(ngModel)]=\\\"visitor.staffId\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Purpose</label>\\n\\t\\t\\t                    <textarea  type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter purpose\\\" name=\\\"visitorpurpose\\\" [(ngModel)]=\\\"visitor.purpose\\\"></textarea>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\" *ngIf=\\\"isCheckout()\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Expected Visitor Name*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Name\\\" name=\\\"visitorName\\\" [(ngModel)]=\\\"visitor.visitorName\\\" [disabled]='true' required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Expected Visitor Count*</label>\\n\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Count\\\" name=\\\"visitorCount\\\" [(ngModel)]=\\\"visitor.visitorCount\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Phone/Mobile*</label>\\n\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\" name=\\\"phoneNo\\\" [(ngModel)]=\\\"visitor.visitorPhone\\\" [disabled]='true' required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Expected Visitor In-time*</label>\\n\\t\\t\\t                    <input class=\\\"form-control\\\" name=\\\"visitorInTime\\\" [owlDateTime]=\\\"visitorInTime\\\" [owlDateTimeTrigger]=\\\"visitorInTime\\\" [min]=\\\"minDate\\\" [max]=\\\"minDate\\\" placeholder=\\\"Date Time\\\" [disabled]=\\\"true\\\" [(ngModel)]=\\\"visitor.visitorInTime\\\" (ngModelChange)=\\\"expectedDurationChange()\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorInTime [min]=\\\"minDate\\\"></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorInTime\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Expected Visitor Out-time</label>\\n\\t\\t\\t                    <input class=\\\"form-control\\\" name=\\\"visitorOutTime\\\"  [owlDateTime]=\\\"visitorOutTime\\\" [owlDateTimeTrigger]=\\\"visitorOutTime\\\" [min]=\\\"minDate\\\" [max]=\\\"minDate\\\"  placeholder=\\\"Date Time\\\" [(ngModel)]=\\\"visitor.visitorOutTime\\\" (ngModelChange)=\\\"expectedDurationChange()\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorOutTime [min]=\\\"minDate\\\"></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorOutTime\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Expected Duration*</label>\\n\\t\\t\\t                    <input OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Duration\\\" name=\\\"visitorCount\\\" [(ngModel)]=\\\"visitor.expectedDuration\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Pass Number*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\" name=\\\"visitorPassNumber\\\" [(ngModel)]=\\\"visitor.passNumber\\\" [disabled]='true' required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Visit Type*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select \\n\\t\\t\\t\\t\\t\\t\\t        name=\\\"visitBy\\\" \\n\\t\\t\\t\\t\\t\\t\\t        id=\\\"visitBy\\\" \\n\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"visitTypeId\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of visitByData\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Visit Category*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select \\n\\t\\t\\t\\t\\t\\t\\t        name=\\\"visitByCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\t        id=\\\"visitByCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"visitCategoryId\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of visitCategoryData\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline float-right mt-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addVisitorForm.invalid\\\" *ngIf=\\\"!isCheckout()\\\">Check In</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addVisitorForm.invalid\\\" *ngIf=\\\"isCheckout()\\\">Check Out</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t<div class=\\\"message\\\" *ngIf=\\\"isVisitorAdded\\\">\\n\\t\\t\\t\\t<div class=\\\"icon-wrapper float-left\\\">\\n\\t\\t\\t\\t\\t<i-feather class=\\\"icon float-left\\\" name=\\\"check\\\" width=\\\"20\\\"></i-feather>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<h5 class=\\\"float-left\\\" *ngIf=\\\"!isCheckout()\\\">Visitor Checked In successfully!</h5>\\n\\t\\t\\t\\t<h5 class=\\\"float-left\\\" *ngIf=\\\"isCheckout()\\\">Visitor Checked Out successfully!</h5>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t\\n\\t\\t</div>\\n\\t</div>\\n\\t\\n</div>\"","export default \"<div class=\\\"checkedout-visitor-wrapper\\\">\\n\\t\\n\\t<app-loader *ngIf=\\\"!isVisitorDataLoaded\\\"></app-loader>\\n\\n\\t\\n\\n\\t<div class=\\\"card table-card\\\" *ngIf=\\\"isVisitorDataLoaded\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All Checked-in Visitors <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"visitorData\\\" >\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n    \\t\\t\\t\\t<a class=\\\"btn l-blue mt_5\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Print</span>\\n    \\t\\t\\t\\t</a>\\n    \\t\\t\\t</li>\\n\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n  \\t\\t\\n  \\t\\t<div class=\\\"card-body p-0\\\">\\n  \\t\\t\\t\\n  \\t\\t\\t<table class=\\\"table\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('visitorName')\\\">Visitor Name <span [ngClass]=\\\"getFieldOrderBy('visitorName')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('visitorPhone')\\\">Phone Number <span [ngClass]=\\\"getFieldOrderBy('visitorPhone')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('visitorInTime')\\\">In-time <span [ngClass]=\\\"getFieldOrderBy('visitorInTime')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('visitorOutTime')\\\">Out-time <span [ngClass]=\\\"getFieldOrderBy('visitorOutTime')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('blockNo')\\\">Block No<span [ngClass]=\\\"getFieldOrderBy('blockNo')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('blockUnitNo')\\\">Unit No <span [ngClass]=\\\"getFieldOrderBy('blockUnitNo')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Action</th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let visitor of visitorListData | simpleSearch: visitorData | sort : unitFieldType: unitOrder | slice:ItemUserStartIndex:ItemUserEndIndex ; let i = index\\\">\\n\\t\\t\\t\\t      <td class=\\\"name\\\">\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\" placement=\\\"right\\\" [ngbPopover]=\\\"popContent\\\" triggers=\\\"mouseenter:mouseleave\\\">{{visitor.visitorName}}\\n\\t\\t\\t\\t      \\t<ng-template #popContent>\\n\\t\\t\\t\\t\\t\\t    <div class=\\\"pop-desp\\\">\\n\\t\\t\\t\\t\\t\\t    \\t<ul>\\n\\t\\t\\t\\t\\t\\t    \\t\\t<li>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<h5>Visitor Count</h5>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<small>{{visitor.visitorCount}}</small>\\n\\t\\t\\t\\t\\t\\t    \\t\\t</li>\\n\\t\\t\\t\\t\\t\\t    \\t\\t<li>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<h5>Expected Duration</h5>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<small>{{visitor.expectedDuration}}</small>\\n\\t\\t\\t\\t\\t\\t    \\t\\t</li>\\n\\t\\t\\t\\t\\t\\t    \\t</ul>\\n\\t\\t\\t\\t\\t\\t    </div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t      </td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{visitor.visitorPhone}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{visitor.visitorInTime | date:'MM/dd/yy, hh:mm'}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{visitor.visitorOutTime | date:'MM/dd/yy, hh:mm'}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{visitor.blockNo}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{visitor.blockUnitNo}}</td>\\n\\t\\t\\t\\t      <td>\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t      \\tplacement=\\\"top\\\" [ngbPopover]=\\\"popAddCheckOutContent\\\" triggers=\\\"mouseenter:mouseleave\\\"\\n\\t\\t\\t\\t      \\trouterLink=\\\"/ams/visitor/edit-visitor/{{visitor.visitorId}}/checkout\\\" \\n\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t\\t<img src=\\\"assets/images/checkout-icon.svg\\\" width=\\\"20\\\" />\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t<ng-template #popAddCheckOutContent>\\n\\t\\t\\t\\t      \\t\\t<div class=\\\"pop-desp\\\">\\n\\t\\t\\t\\t      \\t\\t\\t<h5>CheckOut</h5>\\n\\t\\t\\t\\t      \\t\\t</div>\\n\\t\\t\\t\\t      \\t</ng-template>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\t\\t\\t\\n\\t\\t\\t<app-pagination \\n\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t\\t</app-pagination>\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n\\n</div>\"","export default \"<div class=\\\"create-visitor-wrapper\\\">\\n\\t<div class=\\\"card mb-30\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>\\n    \\t\\t\\t\\t<span >Create Expected Visitor</span>\\n    \\t\\t\\t</h5>\\n    \\t\\t</div>\\n    \\t\\t<div class=\\\"float-right\\\">\\n    \\t\\t\\t<a href=\\\"javascript:void(0)\\\" routerLink=\\\"/ams/visitor/expected-visitor\\\" \\n\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t<i-feather class=\\\"icon back\\\" name=\\\"chevron-left\\\"></i-feather>\\n\\t\\t\\t\\t</a>\\n    \\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card-body\\\">\\n            \\n            <app-loader *ngIf=\\\"isVisitorSubmitted\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"!isVisitorSubmitted\\\">\\n\\n\\t\\t\\t\\t<form #addVisitorForm = \\\"ngForm\\\" name=\\\"addVisitorForm\\\" (ngSubmit)=\\\"submitAddVisitorForm(addVisitorForm)\\\"  novalidate>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Expected Visitor Name*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Name\\\" name=\\\"visitorName\\\" [(ngModel)]=\\\"visitor.expectedVisitorName\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Expected Visitor Count*</label>\\n\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Count\\\" name=\\\"visitorCount\\\" [(ngModel)]=\\\"visitor.expectedVisitorCount\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Expected Phone/Mobile*</label>\\n\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\" name=\\\"phoneNo\\\" [(ngModel)]=\\\"visitor.expectedVisitorPhone\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Visitor In-time*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t                    <input class=\\\"form-control\\\" name=\\\"visitorInTime\\\" [owlDateTime]=\\\"visitorInTime\\\" [owlDateTimeTrigger]=\\\"visitorInTime\\\" placeholder=\\\"Date Time\\\" [(ngModel)]=\\\"visitor.expectedVisitorInTime\\\" (ngModelChange)=\\\"expectedDurationChange()\\\" [disabled]='true' required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorInTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorInTime\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Expected Visitor Out-time*</label>\\n\\t\\t\\t                    <input class=\\\"form-control\\\" name=\\\"visitorOutTime\\\" [owlDateTime]=\\\"visitorOutTime\\\" [owlDateTimeTrigger]=\\\"visitorOutTime\\\" placeholder=\\\"Date Time\\\" [(ngModel)]=\\\"visitor.expectedVisitorOutTime\\\" (ngModelChange)=\\\"expectedDurationChange()\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorOutTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorOutTime\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Expected Duration*</label>\\n\\t\\t\\t                    <input OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Duration\\\" name=\\\"visitorDuration\\\" [(ngModel)]=\\\"visitor.expectedDuration\\\" [disabled]=\\\"true\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Pass Number*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\" name=\\\"visitorPassNumber\\\" [(ngModel)]=\\\"visitor.passNumber\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Visit Type*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select \\n\\t\\t\\t\\t\\t\\t\\t        name=\\\"visitBy\\\" \\n\\t\\t\\t\\t\\t\\t\\t        id=\\\"visitBy\\\" \\n\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"visitTypeId\\\" (ngModelChange)=\\\"changeVisitorType(visitTypeId)\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of visitByData\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Visit Category*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select \\n\\t\\t\\t\\t\\t\\t\\t        name=\\\"visitByCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\t        id=\\\"visitByCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"visitCategoryId\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of visitCategoryData\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"isUnitVisitor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Tenant block-No*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select \\n\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorblock-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"visitorblock-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.apartmentBlockNumber\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of blockUnitData\\\" [value]=\\\"item.apartmentBlockNumber\\\">{{ item.apartmentBlockNumber }}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"isUnitVisitor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Tenant Unit-No*</label>\\n\\t\\t\\t                   \\t<select \\n\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorUnit-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"visitorUnit-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.apartmentBlockUnitNumber\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of blockUnitData\\\" [value]=\\\"item.apartmentBlockUnitNumber\\\">{{ item.apartmentBlockUnitNumber }}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"iscommunityVisitor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Staff Id*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Staff-id\\\" name=\\\"staffId\\\" [(ngModel)]=\\\"visitor.staffId\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Purpose</label>\\n\\t\\t\\t                    <textarea  type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter purpose\\\" name=\\\"visitorpurpose\\\" [(ngModel)]=\\\"visitor.purpose\\\"></textarea>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline float-right mt-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addVisitorForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t</ng-container>\\n\\t\\t\\t\\n\\t\\t</div>\\n\\t</div>\\n\\t\\n</div>\"","export default \"<div class=\\\"expected-visitor-wrapper\\\">\\n\\t\\n\\t<app-loader *ngIf=\\\"!isVisitorDataLoaded\\\"></app-loader>\\n\\n\\t\\n\\n\\t<div class=\\\"card table-card\\\" *ngIf=\\\"isVisitorDataLoaded\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All Expected Visitors <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"visitorData\\\" >\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n    \\t\\t\\t\\t<a class=\\\"btn l-blue mt_5\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Print</span>\\n    \\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\n    \\t\\t\\t\\t<a class=\\\"btn lime-green mt_5\\\"\\n    \\t\\t\\t\\trouterLink=\\\"/ams/visitor/create-expected-visitor\\\" \\n\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\"\\n\\t\\t\\t\\t\\t[state]=\\\"{ data: 'admin'}\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon plus\\\" name=\\\"plus\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Add Expected Visitor</span>\\n    \\t\\t\\t\\t</a>\\n\\n    \\t\\t\\t</li>\\n\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n  \\t\\t<div class=\\\"card-body p-0 customScroll\\\">\\n  \\t\\t\\t\\n  \\t\\t\\t<table class=\\\"table\\\" [ngClass]=\\\"isMobileView()\\\" mdbTable mdbTableScroll scrollX=\\\"true\\\" maxWidth=\\\"400\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">\\n\\t\\t\\t\\t      \\tVisitor Name\\n\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('visitorName')\\\" [ngClass]=\\\"getFieldOrderBy('visitorName')\\\"></span>\\n\\t\\t\\t\\t      \\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"columnField['visitorName']\\\" (ngModelChange)=\\\"selectColInput('visitorName')\\\" >\\n\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">\\n\\t\\t\\t\\t      \\tPhone Number\\n\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('visitorPhone')\\\" [ngClass]=\\\"getFieldOrderBy('visitorPhone')\\\"></span>\\n\\t\\t\\t\\t      \\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Phone No\\\" [(ngModel)]=\\\"columnField['visitorPhone']\\\" (ngModelChange)=\\\"selectColInput('visitorPhone')\\\" >\\n\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Expected in Date/Time<span (click)=\\\"sortUnitData('visitorInTime')\\\" [ngClass]=\\\"getFieldOrderBy('visitorInTime')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Expected out Date/Time<span (click)=\\\"sortUnitData('visitorOutTime')\\\" [ngClass]=\\\"getFieldOrderBy('visitorOutTime')\\\"></span></th>\\n\\t\\t\\t\\t\\t  <th scope=\\\"col\\\">Visitor Type<span (click)=\\\"sortUnitData('visitorOutTime')\\\" [ngClass]=\\\"getFieldOrderBy('visitorType')\\\"></span></th>\\n\\t\\t\\t\\t\\t  <th scope=\\\"col\\\">Visitor category<span (click)=\\\"sortUnitData('visitorCategoryId_Label')\\\" [ngClass]=\\\"getFieldOrderBy('visitorCategoryId_Label')\\\"></span></th>\\n\\t\\t\\t\\t\\t  <th scope=\\\"col\\\">Tower Unit<span (click)=\\\"sortUnitData('block_Unit')\\\" [ngClass]=\\\"getFieldOrderBy('block_Unit')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Action</th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let visitor of visitorListData | simpleSearch: visitorData | sort : unitFieldType: unitOrder | slice:ItemUserStartIndex:ItemUserEndIndex ; let i = index\\\">\\n\\t\\t\\t\\t      <td class=\\\"name\\\">\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\" placement=\\\"right\\\" [ngbPopover]=\\\"popContent\\\" triggers=\\\"mouseenter:mouseleave\\\">{{visitor.expectedVisitorName}}\\n\\t\\t\\t\\t      \\t<ng-template #popContent>\\n\\t\\t\\t\\t\\t\\t    <div class=\\\"pop-desp\\\">\\n\\t\\t\\t\\t\\t\\t    \\t<ul>\\n\\t\\t\\t\\t\\t\\t    \\t\\t<li>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<h5>Visitor Count</h5>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<small>{{visitor.expectedVisitorCount}}</small>\\n\\t\\t\\t\\t\\t\\t    \\t\\t</li>\\n\\t\\t\\t\\t\\t\\t    \\t\\t<li>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<h5>Expected Duration</h5>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<small>{{visitor.expectedDuration}}</small>\\n\\t\\t\\t\\t\\t\\t    \\t\\t</li>\\n\\t\\t\\t\\t\\t\\t    \\t</ul>\\n\\t\\t\\t\\t\\t\\t    </div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t      </td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{visitor.expectedVisitorPhone}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{getTimeFormat(visitor.expectedVisitorInTime)}}</td>\\n\\t\\t\\t\\t\\t  <td class=\\\"grey\\\">{{getTimeFormat(visitor.expectedVisitorOutTime)}}</td>\\n\\t\\t\\t\\t\\t  <td class=\\\"grey\\\">{{visitor.visitTypeName}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{visitor.visitorCategoryId_Label}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{visitor.block_Unit}}</td>\\n\\t\\t\\t\\t      <td>\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t      \\tplacement=\\\"top\\\" [ngbPopover]=\\\"popAddCheckInContent\\\" triggers=\\\"mouseenter:mouseleave\\\"\\n\\t\\t\\t\\t      \\trouterLink=\\\"/ams/visitor/edit-visitor/{{visitor.expectedVisitorId}}/checkin\\\" \\n\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t\\t<img src=\\\"assets/images/checkin-icon.svg\\\" width=\\\"20\\\" />\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t<ng-template #popAddCheckInContent>\\n\\t\\t\\t\\t      \\t\\t<div class=\\\"pop-desp\\\">\\n\\t\\t\\t\\t      \\t\\t\\t<h5>CheckIn</h5>\\n\\t\\t\\t\\t      \\t\\t</div>\\n\\t\\t\\t\\t      \\t</ng-template>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\t\\t\\t\\n\\t\\t\\t<app-pagination \\n\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t\\t</app-pagination>\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n\\n</div>\"","export default \"<div class=\\\"visitor-history-wrapper\\\">\\n\\t\\n\\t<app-loader *ngIf=\\\"!isVisitorDataLoaded\\\"></app-loader>\\n\\n\\t\\n\\n\\t<div class=\\\"card table-card\\\" *ngIf=\\\"isVisitorDataLoaded\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All Checked-Out Visitors <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"visitorData\\\" >\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n    \\t\\t\\t\\t<a class=\\\"btn l-blue mt_5\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Print</span>\\n    \\t\\t\\t\\t</a>\\n    \\t\\t\\t</li>\\n\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n  \\t\\t\\n  \\t\\t<div class=\\\"card-body p-0\\\">\\n  \\t\\t\\t\\n  \\t\\t\\t<table class=\\\"table\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('visitorName')\\\">Visitor Name <span [ngClass]=\\\"getFieldOrderBy('visitorName')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('visitorPhone')\\\">Phone Number <span [ngClass]=\\\"getFieldOrderBy('visitorPhone')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('visitorInTime')\\\">In-time <span [ngClass]=\\\"getFieldOrderBy('visitorInTime')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('visitorOutTime')\\\">Out-time <span [ngClass]=\\\"getFieldOrderBy('visitorOutTime')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('blockNo')\\\">Block No<span [ngClass]=\\\"getFieldOrderBy('blockNo')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('blockUnitNo')\\\">Unit No <span [ngClass]=\\\"getFieldOrderBy('blockUnitNo')\\\"></span></th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let visitor of visitorListData | simpleSearch: visitorData | sort : unitFieldType: unitOrder | slice:ItemUserStartIndex:ItemUserEndIndex ; let i = index\\\">\\n\\t\\t\\t\\t      <td class=\\\"name\\\">\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\" placement=\\\"right\\\" [ngbPopover]=\\\"popContent\\\" triggers=\\\"mouseenter:mouseleave\\\">{{visitor.visitorName}}\\n\\t\\t\\t\\t      \\t<ng-template #popContent>\\n\\t\\t\\t\\t\\t\\t    <div class=\\\"pop-desp\\\">\\n\\t\\t\\t\\t\\t\\t    \\t<ul>\\n\\t\\t\\t\\t\\t\\t    \\t\\t<li>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<h5>Visitor Count</h5>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<small>{{visitor.visitorCount}}</small>\\n\\t\\t\\t\\t\\t\\t    \\t\\t</li>\\n\\t\\t\\t\\t\\t\\t    \\t\\t<li>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<h5>Expected Duration</h5>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<small>{{visitor.expectedDuration}}</small>\\n\\t\\t\\t\\t\\t\\t    \\t\\t</li>\\n\\t\\t\\t\\t\\t\\t    \\t</ul>\\n\\t\\t\\t\\t\\t\\t    </div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t      </td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{visitor.visitorPhone}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{visitor.visitorInTime | date:'MM/dd/yy, hh:mm'}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{visitor.visitorOutTime | date:'MM/dd/yy, hh:mm'}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{visitor.blockNo}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{visitor.blockUnitNo}}</td>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\t\\t\\t\\n\\t\\t\\t<app-pagination \\n\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t\\t</app-pagination>\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n\\n</div>\"","export default \"<div class=\\\"reports-wrapper\\\">\\n\\n\\t<app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n\\n\\t<ng-container *ngIf=\\\"isDataLoaded\\\">\\n\\n\\t\\t<h5 class=\\\"mb-3\\\">Helpdesk reports </h5>\\n\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-sm-6 mb-20\\\" *ngFor=\\\"let report of reportDataList\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"card report-card\\\">\\n\\t\\t\\t\\t\\t\\t<a class=\\\"t-no-decor\\\" href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t\\t\\t\\trouterLink = \\\"{{report.menuName}}/{{report.lookupValueID}}\\\" \\n\\t\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<h6>{{report.lookupValueName}}</h6>\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>{{report.description}}</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t</ng-container>\\n\\n</div>\"","export default \"<div class=\\\"visitor-setup-wrapper\\\">\\n\\t\\n\\t<app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n\\n\\t<div class=\\\"card table-card mb-30 vehicle-type-table-card\\\" *ngIf=\\\"isDataLoaded\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>Visitor Categories <span class=\\\"badge blue\\\">{{totalItems}}</span></h5>\\n    \\t\\t\\t<p class=\\\"d-none d-md-inline-block\\\">Edit and Delete Visitor Categories</p>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"categoryData\\\" >\\n    \\t\\t\\t</li>\\n\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t<a class=\\\"btn lime-green mt_5\\\" (click)=\\\"addNewCategoryType()\\\">\\n\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon plus\\\" name=\\\"plus\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t<span>Add Category</span>\\n\\t\\t\\t\\t\\t</a>\\n\\t    \\t\\t</li>\\n\\t\\t\\t</ul>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div class=\\\"card-body p-0\\\">\\n\\t\\t\\n\\t\\t\\t<table class=\\\"table\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Sno <span [ngClass]=\\\"getFieldOrderBy('primayContact')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('lookupValueName')\\\">Visitor Category <span [ngClass]=\\\"getFieldOrderBy('lookupValueName')\\\"></span></th> \\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Action</th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let category of categoryDataList | simpleSearch: categoryData | sort : unitFieldType: unitOrder | slice:ItemStartIndex:ItemEndIndex ; let i = index\\\">\\n\\t\\t\\t\\t      <td>{{i + 1}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{category.lookupValueName}}</td> \\n\\t\\t\\t\\t      <td>\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\" class=\\\"mr-2\\\" (click)=\\\"updateCategoryType(category)\\\">\\n\\t\\t\\t\\t      \\t\\t<i-feather class=\\\"icon edit\\\" name=\\\"edit\\\"></i-feather>\\n\\t\\t\\t\\t      \\t</a>\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\" (click)=\\\"deleteCategoryType(category)\\\"><i-feather class=\\\"icon delete\\\" name=\\\"trash\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t                </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\t\\t\\t<app-pagination \\n\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t\\t</app-pagination>\\n\\t\\t</div>\\n\\n    </div>\\n\\n    <div class=\\\"card mb-30 vehicle-type-card\\\" *ngIf=\\\"isCategoryTypeNew || isCategoryTypeUpdate\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h6 *ngIf=\\\"isCategoryTypeNew\\\">Add Visitor Category</h6>\\n    \\t\\t\\t<h6 *ngIf=\\\"!isCategoryTypeNew\\\">Update Visitor Category</h6>\\n    \\t\\t</div>\\n    \\t\\t<div class=\\\"float-right\\\" (click)=\\\"removeCategoryTypeBox()\\\">\\n    \\t\\t\\t<i-feather class=\\\"icon del\\\" name=\\\"x\\\"></i-feather>\\n    \\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card-body\\\">  \\n\\t\\t\\t\\n\\t\\t\\t<app-alert-message [isError]=\\\"isError\\\"></app-alert-message>\\n\\n\\t\\t\\t<app-loader *ngIf=\\\"!isCategoryTypeSubmitted\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"isCategoryTypeSubmitted\\\">\\n\\n\\t\\t\\t\\t<form #addCategoryTypeForm = \\\"ngForm\\\" name=\\\"addCategoryTypeForm\\\"  (ngSubmit)=\\\"submitCategoryTypeForm(addCategoryTypeForm)\\\"  novalidate>\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\"> \\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Visitor Category*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter text\\\" name=\\\"categoryType\\\" [(ngModel)]=\\\"categoryType\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue at-input\\\" [disabled]=\\\"addCategoryTypeForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n</div>\\n\"","export default \"<router-outlet></router-outlet>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvY2hlY2tpbi12aXNpdG9yL2NoZWNraW4tdmlzaXRvci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { UserService } from '../../../../api/services/user.service';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { LookupService } from '../../../../api/services/lookup.service';\nimport { ApartmentService } from '../../../../api/services/apartment.service';\nimport { VisitorService } from '../../../../api/services/visitor.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { SharedToasterService } from '../../../../shared/services/shared-toaster.service';\n\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-checkin-visitor',\n  templateUrl: './checkin-visitor.component.html',\n  styleUrls: ['./checkin-visitor.component.scss']\n})\nexport class CheckinVisitorComponent implements OnInit {\n\n  isEditVisitor:boolean = false;\n\n  isVisitorSubmitted:boolean = false;\n  isVisitorAdded:boolean = false;\n\n  isError:boolean = false;\n  errorMessage:string = \"\";\n\n  visitor:any;\n\n  visitByData:any;\n  visitTypeId:string = \"\";\n\n  apartmentUnitId:number;\n\n  isExpectedVisitor:boolean = false;\n\n  visitorStatus:string = \"\";\n  minDate;\n  isUnitVisitor = false;\n  iscommunityVisitor = false;\n  visitCategoryData;\n  visitCategoryId;\n  blockUnitData: any;\n\n  constructor(\n  \tprivate router: Router,\n    private route: ActivatedRoute,\n    private userService:UserService,\n    private apartmentService:ApartmentService,\n    private visitorService:VisitorService,\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService,\n    private SharedToaster:SharedToasterService,\n  ) {\n\n    this.minDate = moment(new Date()).format('YYYY-MM-DD');\n   }\n\n\n  isCheckout(){\n    return this.visitorStatus == 'checkout' ? true : false;\n  }\n\n  submitAddVisitorForm(form) {\n\n  \tthis.isVisitorSubmitted = true;\n    this.isError = false;\n\n        let visitorDetails = {\n      \n          \"apartmentUnitId\": this.apartmentUnitId,\n          \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n          \"visitorName\": this.visitor.expectedVisitorName,\n          \"visitorCount\": this.visitor.expectedVisitorCount,\n          \"visitorPhone\": this.visitor.expectedVisitorPhone,\n          \"visitorVehicleTypeId\": 1,\n          \"visitorVehicleNumber\": \"string\",\n          \"visitingPlaceId\": 1,\n          \"passNumber\": this.visitor.passNumber,\n          \"isCheckedIn\": true,\n          \"visitorInTime\": this.visitor.expectedVisitorInTime,\n          \"isCheckedOut\": false,\n          \"visitorOutTime\": null,\n          \"expectedDuration\": this.visitor.expectedDurationInHours,\n          \"meetingPersonId\": 1,\n          \"meetingPersonName\": \"string\",\n          \"visitTypeId\": parseInt(this.visitTypeId),\n          \"visitCategoryId\": parseInt(this.visitCategoryId),\n          \"visitorsOrg\": \"string\",\n          \"entryGateId\": null,\n          \"exitGateId\": null,\n          \"purpose\": this.visitor.purpose,\n          \"enteredBy\": parseInt(this.cookieService.get('userId')),\n          \"isActive\": true,\n          \"insertedBy\": parseInt(this.cookieService.get('userId')),\n          \"insertedOn\": \"2019-11-18T17:08:51.188Z\",\n          \"updatedBy\": 0,\n          \"updatedOn\": \"2019-11-18T17:08:51.188Z\"\n\n      }\n\n        this.visitorService.addVisitor(visitorDetails).subscribe((res:any) => {\n        \n          if(res.message) {\n            this.isVisitorSubmitted = false;\n          }\n          else {\n\n            this.isVisitorSubmitted = false;\n            this.isError = true;\n            this.errorMessage = res.errorMessage;\n          }\n\n        },\n        error => {\n          \n          this.isVisitorSubmitted = false;\n          this.isError = true;\n          this.errorMessage = error;\n\n        });\n\n      }\n  \n  ngOnInit() {\n    \n  \tthis.visitor = {};\n\n       //visit type\n    this.lookupService.getLookupValueByLookupTypeId(15).subscribe((res:any) => {\n          \n      this.visitByData = res;\n\n    },\n    error => {\n      \n    }\n    );\n    //visit type\n    this.lookupService.getLookupValueByLookupTypeId(100).subscribe((res:any) => {\n          \n      this.visitCategoryData = res;\n\n    },\n    error => {\n      \n    }\n    );\n\n\tthis.apartmentService.getApartmentBlockUnitByUserId(parseInt(this.cookieService.get('userId'))).subscribe((res:any) => {\n\n\t\tthis.apartmentUnitId = res[0].apartmentBlockUnitId;\n\n\t},\n\terror => {\n\n\t}\n  );\n  this.visitor.expectedVisitorInTime = moment(new Date());\n  \n  this.apartmentService.getAllApartmentBlockUnits().subscribe((res:any) => {\n\n    this.blockUnitData = res;\n    \n  });\n  }\n\n  changeVisitorType(id){\n    console.log(id);\n    let result = this.visitByData.filter(filterId => id == filterId.lookupValueId);\n    console.log(result);\n    this.isUnitVisitor = (result[0].lookupValueName == 'Unit Visitor') ? true : false;\n    this.iscommunityVisitor  = (result[0].lookupValueName == \"Community Visitor\") ? true : false;\n  }\n\n  expectedDurationChange(){\n    if(this.minDate > moment(this.visitor.expectedVisitorInTime).format('YYYY-MM-DD')){\n      this.visitor.expectedVisitorInTime = undefined;\n      this.SharedToaster.openSnackBar(\"Please Select valid Date\",'');\n      return;\n    }\n    \n    if(this.minDate > moment(this.visitor.expectedVisitorOutTime).format('YYYY-MM-DD')){\n      this.visitor.expectedVisitorOutTime = undefined;\n      this.SharedToaster.openSnackBar(\"Please Select Out-time greater than In-time\",'');\n      return;\n    }\n    console.log(this.visitor.expectedVisitorOutTime);\n    if(this.visitor.expectedVisitorOutTime){\n      if(moment(this.visitor.expectedVisitorInTime).format('YYYY-MM-DD') > moment(this.visitor.expectedVisitorOutTime).format('YYYY-MM-DD')){\n        this.visitor.expectedVisitorOutTime = undefined;\n        this.SharedToaster.openSnackBar(\"Please Select Out-time greater than In-time\",'');\n        return;\n      }\n    }\n    \n    let inDate = moment(this.visitor.expectedVisitorInTime);\n    let outDate = moment(this.visitor.expectedVisitorOutTime);\n    let diffDuration = moment.duration(outDate.diff(inDate));\n    this.visitor.expectedDuration = diffDuration.days()+\" days \"+this.isSingleDigit(diffDuration.hours())+\":\"+ this.isSingleDigit(diffDuration.minutes())+\" hours\";\n\n    let sendDuration = moment.duration(outDate.diff(inDate));\n    let hours = sendDuration.asHours();\n    this.visitor.expectedDurationInHours = Math.round(hours);\n  }\n  isSingleDigit(digit){\n    if(digit <= 0){\n      return '00';\n    }else{\n      return (digit.toString().length > 1) ? digit : '0'+digit;\n    }\n    \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvdmlzaXRvci1jaGVja2luL3Zpc2l0b3ItY2hlY2tpbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { UserService } from '../../../../api/services/user.service';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { LookupService } from '../../../../api/services/lookup.service';\nimport { ApartmentService } from '../../../../api/services/apartment.service';\nimport { VisitorService } from '../../../../api/services/visitor.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { SharedToasterService } from '../../../../shared/services/shared-toaster.service';\n\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-visitor-checkin',\n  templateUrl: './visitor-checkin.component.html',\n  styleUrls: ['./visitor-checkin.component.scss']\n})\nexport class VisitorCheckinComponent implements OnInit {\n\n  isEditVisitor:boolean = false;\n\n  isVisitorSubmitted:boolean = false;\n  isVisitorAdded:boolean = false;\n\n  isError:boolean = false;\n  errorMessage:string = \"\";\n\n  visitor:any;\n\n  visitByData:any;\n  visitTypeId:string = \"\";\n\n  apartmentUnitId:number;\n\n  isExpectedVisitor:boolean = false;\n\n  visitorStatus:string = \"\";\n  minDate;\n  isUnitVisitor = false;\n  iscommunityVisitor = false;\n  visitCategoryData;\n  visitCategoryId;\n  blockUnitData: any;\n\n  constructor(\n  \tprivate router: Router,\n    private route: ActivatedRoute,\n    private userService:UserService,\n    private apartmentService:ApartmentService,\n    private visitorService:VisitorService,\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService,\n    private SharedToaster:SharedToasterService,\n  ) {\n\n    this.minDate = moment(new Date()).format('YYYY-MM-DD');\n   }\n\n\n  isCheckout(){\n    return this.visitorStatus == 'checkout' ? true : false;\n  }\n\n  submitAddVisitorForm(form) {\n\n  \tthis.isVisitorSubmitted = true;\n    this.isError = false;\n\n    \n\n\n    if(!this.isEditVisitor) {\n      console.log(\"fist\");\n      let expectedVisitorDetails = {\n      \n      \"apartmentUnitId\": this.apartmentUnitId,\n      \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n      \"visitorName\": this.visitor.expectedVisitorName,\n      \"visitorCount\": this.visitor.expectedVisitorCount,\n      \"visitorPhone\": this.visitor.expectedVisitorPhone,\n      \"passNumber\": this.visitor.passNumber,\n      \"visitorInTime\": this.visitor.expectedVisitorInTime,\n      \"visitorOutTime\": this.visitor.expectedVisitorOutTime,\n      \"expectedDuration\": this.visitor.expectedDurationInHours,\n      \"meetingPersonId\": 1,\n      \"visitTypeId\": parseInt(this.visitTypeId),\n      \"visitCategoryId\": parseInt(this.visitCategoryId),\n      \"visitorsOrg\": \"string\",\n      \"entryGateId\": null,\n      'apartmentBlockNumber':this.visitor.apartmentBlockNumber,\n      'apartmentUnitNumber':this.visitor.apartmentBlockUnitNumber,\n      \"exitGateId\": null,\n      \"purpose\": this.visitor.purpose,\n      \"enteredBy\": parseInt(this.cookieService.get('userId')),\n      \"isActive\": true,\n      \"insertedBy\": parseInt(this.cookieService.get('userId')),\n      \"insertedOn\": \"2019-11-18T17:08:51.188Z\",\n      \"updatedBy\": 0,\n      \"updatedOn\": \"2019-11-18T17:08:51.188Z\",\n      \n\n    }\n\n      this.visitorService.addVisitor(expectedVisitorDetails).subscribe((res:any) => {\n        \n        if(res.message) {\n          this.isVisitorAdded = true;\n          this.router.navigate(['/ams/visitor/checkout']);\n        }\n        else {\n\n          this.isVisitorSubmitted = false;\n          this.isVisitorAdded = false;\n          this.isError = true;\n          this.errorMessage = res.errorMessage;\n        }\n\n      },\n      error => {\n        \n        this.isVisitorSubmitted = false;\n        this.isVisitorAdded = false;\n        this.isError = true;\n        this.errorMessage = error;\n\n      });\n\n    }\n\n    if(this.isEditVisitor) {\n\n      \n\n      if(!this.isCheckout()){\n\n        let visitorDetails = {\n      \n          \"apartmentUnitId\": this.apartmentUnitId,\n          \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n          \"visitorName\": this.visitor.expectedVisitorName,\n          \"visitorCount\": this.visitor.expectedVisitorCount,\n          \"visitorPhone\": this.visitor.expectedVisitorPhone,\n          \"visitorVehicleTypeId\": 1,\n          \"visitorVehicleNumber\": \"string\",\n          \"visitingPlaceId\": 1,\n          \"passNumber\": this.visitor.passNumber,\n          \"isCheckedIn\": true,\n          \"visitorInTime\": this.visitor.expectedVisitorInTime,\n          \"isCheckedOut\": false,\n          \"visitorOutTime\": null,\n          \"expectedDuration\": this.visitor.expectedDurationInHours,\n          \"meetingPersonId\": 1,\n          \"meetingPersonName\": \"string\",\n          \"visitTypeId\": parseInt(this.visitTypeId),\n          \"visitCategoryId\": parseInt(this.visitCategoryId),\n          \"visitorsOrg\": \"string\",\n          \"entryGateId\": null,\n          \"exitGateId\": null,\n          \"purpose\": this.visitor.purpose,\n          \"enteredBy\": parseInt(this.cookieService.get('userId')),\n          \"isActive\": true,\n          \"insertedBy\": parseInt(this.cookieService.get('userId')),\n          \"insertedOn\": \"2019-11-18T17:08:51.188Z\",\n          \"updatedBy\": 0,\n          \"updatedOn\": \"2019-11-18T17:08:51.188Z\"\n\n      }\n\n        this.visitorService.addVisitor(visitorDetails).subscribe((res:any) => {\n        \n          if(res.message) {\n            this.isVisitorAdded = true;\n          }\n          else {\n\n            this.isVisitorSubmitted = false;\n            this.isVisitorAdded = false;\n            this.isError = true;\n            this.errorMessage = res.errorMessage;\n          }\n\n        },\n        error => {\n          \n          this.isVisitorSubmitted = false;\n          this.isVisitorAdded = false;\n          this.isError = true;\n          this.errorMessage = error;\n\n        });\n\n      }\n      else {\n\n        let visitorDetails = {\n          \"visitorId\": parseInt(this.route.params['value'].id),\n          \"apartmentUnitId\": this.apartmentUnitId,\n          \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n          \"visitorName\": this.visitor.visitorName,\n          \"visitorCount\": this.visitor.visitorCount,\n          \"visitorPhone\": this.visitor.visitorPhone,\n          \"visitorVehicleTypeId\": 1,\n          \"visitorVehicleNumber\": \"string\",\n          \"visitingPlaceId\": 1,\n          \"passNumber\": this.visitor.passNumber,\n          \"isCheckedIn\": true,\n          \"visitorInTime\": this.visitor.visitorInTime,\n          \"isCheckedOut\": true,\n          \"visitorOutTime\": this.visitor.visitorOutTime,\n          \"expectedDuration\": this.visitor.expectedDurationInHours,\n          \"meetingPersonId\": 1,\n          \"meetingPersonName\": \"string\",\n          \"visitTypeId\": parseInt(this.visitTypeId),\n          \"visitCategoryId\": parseInt(this.visitCategoryId),\n          \"visitorsOrg\": \"string\",\n          \"entryGateId\": null,\n          \"exitGateId\": null,\n          \"purpose\": this.visitor.purpose,\n          \"enteredBy\": parseInt(this.cookieService.get('userId')),\n          \"isActive\": true,\n          \"insertedBy\": 0,\n          \"insertedOn\": \"2019-11-18T17:08:51.188Z\",\n          \"updatedBy\": parseInt(this.cookieService.get('userId')),\n          \"updatedOn\": \"2019-11-18T17:08:51.188Z\"\n\n      }\n\n        this.visitorService.updateVisitor(visitorDetails).subscribe((res:any) => {\n        \n          if(res.message) {\n            this.isVisitorAdded = true;\n          }\n          else {\n\n            this.isVisitorSubmitted = false;\n            this.isVisitorAdded = false;\n            this.isError = true;\n            this.errorMessage = res.errorMessage;\n          }\n\n        },\n        error => {\n          \n          this.isVisitorSubmitted = false;\n          this.isVisitorAdded = false;\n          this.isError = true;\n          this.errorMessage = error;\n\n        });\n\n      }\n\n    }\n\n  }\n\n  ngOnInit() {\n    \n  \tthis.visitor = {};\n\n    if(this.route.params['value'].id != undefined){\n      \n      this.isEditVisitor = true;\n      this.visitorStatus = this.route.params['value'].type;\n\n      if(this.route.params['value'].type == 'checkout') {\n\n        this.visitorService.getVisitorById(this.route.params['value'].id).subscribe((res:any) => {\n            \n          this.visitor = res[0];\n          this.visitTypeId = this.visitor.visitTypeId;\n          this.visitCategoryId = this.visitor.visitorCategoryId;\n          this.visitor.purpose = '';\n          this.visitor.visitorOutTime = moment(new Date());\n         \n          let inDate = moment(this.visitor.visitorInTime);\n          let outDate = moment(this.visitor.visitorOutTime);\n          let diffDuration = moment.duration(outDate.diff(inDate));\n          this.visitor.expectedDuration = diffDuration.days()+\" days \"+this.isSingleDigit(diffDuration.hours())+\":\"+ this.isSingleDigit(diffDuration.minutes())+\" hours\";\n  \n          let sendDuration = moment.duration(outDate.diff(inDate));\n          let hours = sendDuration.asHours();\n          this.visitor.expectedDurationInHours = Math.round(hours);\n            \n        },\n        error => {\n          \n        }\n        );\n\n     }\n     else {\n\n       this.visitorService.getExpectedVisitorById(this.route.params['value'].id).subscribe((res:any) => {\n          \n        this.visitor = res[0];\n        this.visitor.purpose = '';\n        this.visitTypeId = this.visitor.visitTypeId;\n        console.log(this.visitor);\n\n      },\n      error => {\n        \n      }\n      );\n\n\n     }\n\n    }\n\n    \n   \n\n    //visit type\n    this.lookupService.getLookupValueByLookupTypeId(15).subscribe((res:any) => {\n          \n      this.visitByData = res;\n\n    },\n    error => {\n      \n    }\n    );\n    //visit type\n    this.lookupService.getLookupValueByLookupTypeId(100).subscribe((res:any) => {\n          \n      this.visitCategoryData = res;\n\n    },\n    error => {\n      \n    }\n    );\n\n\tthis.apartmentService.getApartmentBlockUnitByUserId(parseInt(this.cookieService.get('userId'))).subscribe((res:any) => {\n\n\t\tthis.apartmentUnitId = res[0].apartmentBlockUnitId;\n\n\t},\n\terror => {\n\n\t}\n  );\n  this.visitor.expectedVisitorInTime = moment(new Date());\n  this.visitor.visitorInTime = moment(new Date());\n\n  this.apartmentService.getAllApartmentBlockUnits().subscribe((res:any) => {\n\n    this.blockUnitData = res;\n    \n  });\n  }\n\n  changeVisitorType(id){\n    console.log(id);\n    let result = this.visitByData.filter(filterId => id == filterId.lookupValueId);\n    console.log(result);\n    this.isUnitVisitor = (result[0].lookupValueName == 'Unit Visitor') ? true : false;\n    this.iscommunityVisitor  = (result[0].lookupValueName == \"Community Visitor\") ? true : false;\n  }\n\n  expectedDurationChange(){\n    if(this.minDate > moment(this.visitor.expectedVisitorInTime).format('YYYY-MM-DD')){\n      this.visitor.expectedVisitorInTime = undefined;\n      this.SharedToaster.openSnackBar(\"Please Select valid Date\",'');\n      return;\n    }\n    \n    if(this.minDate > moment(this.visitor.expectedVisitorOutTime).format('YYYY-MM-DD')){\n      this.visitor.expectedVisitorOutTime = undefined;\n      this.SharedToaster.openSnackBar(\"Please Select Out-time greater than In-time\",'');\n      return;\n    }\n    console.log(this.visitor.expectedVisitorOutTime);\n    if(this.visitor.expectedVisitorOutTime){\n      if(moment(this.visitor.expectedVisitorInTime).format('YYYY-MM-DD') > moment(this.visitor.expectedVisitorOutTime).format('YYYY-MM-DD')){\n        this.visitor.expectedVisitorOutTime = undefined;\n        this.SharedToaster.openSnackBar(\"Please Select Out-time greater than In-time\",'');\n        return;\n      }\n    }\n    \n    let inDate = moment(this.visitor.expectedVisitorInTime);\n    let outDate = moment(this.visitor.expectedVisitorOutTime);\n    let diffDuration = moment.duration(outDate.diff(inDate));\n    this.visitor.expectedDuration = diffDuration.days()+\" days \"+this.isSingleDigit(diffDuration.hours())+\":\"+ this.isSingleDigit(diffDuration.minutes())+\" hours\";\n\n    let sendDuration = moment.duration(outDate.diff(inDate));\n    let hours = sendDuration.asHours();\n    this.visitor.expectedDurationInHours = Math.round(hours);\n  }\n  isSingleDigit(digit){\n    if(digit <= 0){\n      return '00';\n    }else{\n      return (digit.toString().length > 1) ? digit : '0'+digit;\n    }\n    \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvdmlzaXRvci1jaGVja291dC92aXNpdG9yLWNoZWNrb3V0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Injector, HostListener } from '@angular/core';\n\nimport { ApartmentService } from '../../../../api/services/apartment.service';\nimport { LookupService } from '../../../../api/services/lookup.service';\nimport { VisitorService } from '../../../../api/services/visitor.service';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-visitor-checkout',\n  templateUrl: './visitor-checkout.component.html',\n  styleUrls: ['./visitor-checkout.component.scss']\n})\nexport class VisitorCheckoutComponent implements OnInit {\n\n   visitorData:string = \"\";\n  visitorListData:any;\n\n  isVisitorDataLoaded:boolean = false;\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n\n  visitor:any;\n\n  modalService:any;\n\n  totalFilterItems:any;\n  visitTypeData:any;\n\n\n  constructor(\n    private injector: Injector,\n  \tprivate apartmentService:ApartmentService,\n    private visitorService:VisitorService,\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService: CookieService\n  ) { \n    this.modalService = this.injector.get(ModalService);\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  getBlockUnit(id){\n\n  \t\n    \n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  showConfirmModal(index) {\n    this.modalService.showConfirmModal(index);\n  }\n\n  getVisitorType(){\n    \n  }\n\n\n\n  ngOnInit() {\n\n\n    //get visit type\n    this.lookupService.getLookupValueByLookupTypeId(15).subscribe((res:any) => {\n\n      this.visitTypeData = res;\n\n    },\n    error => {\n      \n    }\n    );\n\n  \tthis.visitorService.getYetToCheckoutVisitorsByApartmentId(parseInt(this.cookieService.get('apartmentId'))).subscribe((res:any) => {\n\n\t\t//filter active true items\n\n    this.visitorListData = res.filter(item => {\n      return item.isActive && !item.isCheckedOut;\n    });\n\n    // console.log(this.visitorListData);\n\t\t\n\t\t//get block and unit details\n\t\t_.each(this.visitorListData, (item, index) => {\n\t\tthis.apartmentService.getApartmentBlockUnitById(item.apartmentUnitId).subscribe((res:any) => {\n\n\t\t\tthis.visitorListData[index].blockNo = res[0].apartmentBlockNumber;\n\t\t\tthis.visitorListData[index].blockUnitNo = res[0].apartmentBlockUnitNumber;\n\n\t    },\n\t    error => {\n\t      \n\t    });\n\n\n\t\t});\n\n\t\tthis.totalItems = this.visitorListData.length;\n\n\t\tif(this.totalItems>this.itemLimit){\n\t\t\tthis.ItemEndIndex = this.itemLimit;\n\t\t}\n\n\t\telse {\n\t\t\tthis.ItemEndIndex = this.totalItems;\n\t\t}\n\n    this.isVisitorDataLoaded = true;\n    \n    \n    \n\t});\n\n  \t\n\n\n  \t\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvdmlzaXRvci1jcmVhdGUvdmlzaXRvci1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { UserService } from '../../../../api/services/user.service';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { LookupService } from '../../../../api/services/lookup.service';\nimport { ApartmentService } from '../../../../api/services/apartment.service';\nimport { VisitorService } from '../../../../api/services/visitor.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { SharedToasterService } from '../../../../shared/services/shared-toaster.service';\n\nimport * as moment from 'moment';\n\n@Component({\n    selector: 'app-visitor-create',\n    templateUrl: './visitor-create.component.html',\n    styleUrls: ['./visitor-create.component.scss']\n})\nexport class VisitorCreateComponent implements OnInit {\n\n    isEditVisitor: boolean = false;\n\n    isVisitorSubmitted: boolean = false;\n    isVisitorAdded: boolean = false;\n\n    isError: boolean = false;\n    errorMessage: string = \"\";\n\n    visitor: any;\n\n    visitByData: any;\n    visitTypeId: string = \"\";\n\n    apartmentUnitId: number;\n\n    isExpectedVisitor: boolean = false;\n\n    visitorStatus: string = \"\";\n    minDate;\n    isUnitVisitor = false;\n    iscommunityVisitor = false;\n    visitCategoryData;\n    visitCategoryId;\n    blockUnitData: any;\n\n    constructor(\n        private router: Router,\n        private route: ActivatedRoute,\n        private userService: UserService,\n        private apartmentService: ApartmentService,\n        private visitorService: VisitorService,\n        private lookupService: LookupService,\n        private sharedService: SharedService,\n        private cookieService: CookieService,\n        private SharedToaster: SharedToasterService,\n    ) {\n\n        this.minDate = moment(new Date()).format('YYYY-MM-DD');\n    }\n\n\n    isCheckout() {\n        return this.visitorStatus == 'checkout' ? true : false;\n    }\n\n    submitAddVisitorForm(form) {\n\n        this.isVisitorSubmitted = true;\n        let visitorDetails = {\n    \t\"apartmentUnitId\": this.apartmentUnitId,\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"expectedVisitorName\": this.visitor.expectedVisitorName,\n        \"expectedVisitorCount\": this.visitor.expectedVisitorCount,\n        \"expectedVisitorPhone\": this.visitor.expectedVisitorPhone.toString(),\n        \"expectedVisitorInTime\": this.visitor.expectedVisitorInTime,\n        \"expectedVisitorOutTime\": this.visitor.expectedVisitorOutTime,\n        \"expectedDuration\": this.visitor.expectedDurationInHours,\n        \"passNumber\": this.visitor.passNumber,\n        \"meetingPersonId\": 1,\n        \"visitTypeId\": parseInt(this.visitTypeId),\n        \"visitCategoryId\": parseInt(this.visitCategoryId),\n        \"visitorsOrg\": \"string\",\n        \"entryGateId\": null,\n        'apartmentBlockNumber': this.visitor.apartmentBlockNumber,\n        'apartmentUnitNumber': this.visitor.apartmentBlockUnitNumber,\n        \"exitGateId\": null,\n        \"purpose\": this.visitor.purpose,\n        \"enteredBy\": parseInt(this.cookieService.get('userId')),\n        \"isActive\": true,\n        \"insertedBy\": parseInt(this.cookieService.get('userId')),\n        \"insertedOn\": \"2019-11-18T17:08:51.188Z\",\n        \"updatedBy\": 0,\n        \"updatedOn\": \"2019-11-18T17:08:51.188Z\",\n      }\n\n    this.visitorService.addExpectedVisitor(visitorDetails).subscribe((res:any) => {\n          \n        if(res.message) {\n          this.isVisitorSubmitted = true;\n          this.sharedService.setAlertMessage(\"Visitor added successfully\");\n          this.router.navigate(['/ams/visitor/expected-visitor']);\n        }\n        else {\n\n          this.isVisitorSubmitted = false;\n          this.isError = true;\n          this.errorMessage = res.errorMessage;\n        }\n\n      },\n      error => {\n        \n    \t\tthis.isVisitorSubmitted = false;\n    \t\tthis.isError = true;\n    \t\tthis.errorMessage = error;\n     \n            });\n\n    }\n\n\n    ngOnInit() {\n\n        this.visitor = {}\n\n        //visit type\n        this.lookupService.getLookupValueByLookupTypeId(15).subscribe((res: any) => {\n\n            this.visitByData = res;\n\n        },\n            error => {\n\n            }\n        );\n        //visit type\n        this.lookupService.getLookupValueByLookupTypeId(100).subscribe((res: any) => {\n\n            this.visitCategoryData = res;\n\n        },\n            error => {\n\n            }\n        );\n\n        this.apartmentService.getApartmentBlockUnitByUserId(parseInt(this.cookieService.get('userId'))).subscribe((res: any) => {\n\n            this.apartmentUnitId = res[0].apartmentBlockUnitId;\n\n        },\n            error => {\n\n            }\n        );\n        this.visitor.expectedVisitorInTime = moment(new Date());\n\n        this.apartmentService.getApartmentBlockUnitByApartmentId(parseInt(this.cookieService.get('apartmentId'))).subscribe((res: any) => {\n           \n                this.blockUnitData = res;\n                console.log('this.blockUnitData', res)\n          \n        });\n    }\n\n    changeVisitorType(id) {\n        console.log(id);\n        let result = this.visitByData.filter(filterId => id == filterId.lookupValueId);\n        console.log(result);\n        this.isUnitVisitor = (result[0].lookupValueName == 'Unit Visitor') ? true : false;\n        this.iscommunityVisitor = (result[0].lookupValueName == \"Community Visitor\") ? true : false;\n    }\n\n    expectedDurationChange() {\n        if (this.minDate > moment(this.visitor.expectedVisitorInTime).format('YYYY-MM-DD')) {\n            this.visitor.expectedVisitorInTime = undefined;\n            this.SharedToaster.openSnackBar(\"Please Select valid Date\", '');\n            return;\n        }\n\n        if (this.minDate > moment(this.visitor.expectedVisitorOutTime).format('YYYY-MM-DD')) {\n            this.visitor.expectedVisitorOutTime = undefined;\n            this.SharedToaster.openSnackBar(\"Please Select Out-time greater than In-time\", '');\n            return;\n        }\n        console.log(this.visitor.expectedVisitorOutTime);\n        if (this.visitor.expectedVisitorOutTime) {\n            if (moment(this.visitor.expectedVisitorInTime).format('YYYY-MM-DD') > moment(this.visitor.expectedVisitorOutTime).format('YYYY-MM-DD')) {\n                this.visitor.expectedVisitorOutTime = undefined;\n                this.SharedToaster.openSnackBar(\"Please Select Out-time greater than In-time\", '');\n                return;\n            }\n        }\n\n        let inDate = moment(this.visitor.expectedVisitorInTime);\n        let outDate = moment(this.visitor.expectedVisitorOutTime);\n        let diffDuration = moment.duration(outDate.diff(inDate));\n        this.visitor.expectedDuration = diffDuration.days() + \" days \" + this.isSingleDigit(diffDuration.hours()) + \":\" + this.isSingleDigit(diffDuration.minutes()) + \" hours\";\n\n        let sendDuration = moment.duration(outDate.diff(inDate));\n        let hours = sendDuration.asHours();\n        this.visitor.expectedDurationInHours = Math.round(hours);\n    }\n    isSingleDigit(digit) {\n        if (digit <= 0) {\n            return '00';\n        } else {\n            return (digit.toString().length > 1) ? digit : '0' + digit;\n        }\n\n    }\n\n}\n","export default \".customScroll {\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  cursor: pointer;\\n}\\n.customScroll table thead th {\\n  overflow: hidden !important;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9hbXMvdmlzaXRvci9jb21wb25lbnRzL3Zpc2l0b3ItZXhwZWN0ZWQtdmlzaXRvci92aXNpdG9yLWV4cGVjdGVkLXZpc2l0b3IuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvdmlzaXRvci1leHBlY3RlZC12aXNpdG9yL3Zpc2l0b3ItZXhwZWN0ZWQtdmlzaXRvci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLHlCQUFBO0tBQUEsc0JBQUE7TUFBQSxxQkFBQTtVQUFBLGlCQUFBO0VBQ0EsZUFBQTtBQ0FKO0FESUk7RUFDSSwyQkFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7QUNGUiIsImZpbGUiOiJzcmMvYXBwL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvdmlzaXRvci1leHBlY3RlZC12aXNpdG9yL3Zpc2l0b3ItZXhwZWN0ZWQtdmlzaXRvci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jdXN0b21TY3JvbGx7XG4gICAgLy8gb3ZlcmZsb3cteDogc2Nyb2xsO1xuICAgIHVzZXItc2VsZWN0OiBub25lO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB0aHtcbiAgICAgICAgLy8gbWF4LXdpZHRoOiBub25lICFpbXBvcnRhbnQ7XG4gICAgfVxuICAgIHRhYmxlIHRoZWFkIHRoe1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuICFpbXBvcnRhbnQ7XG4gICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIFxuICAgIH1cbn0iLCIuY3VzdG9tU2Nyb2xsIHtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5jdXN0b21TY3JvbGwgdGFibGUgdGhlYWQgdGgge1xuICBvdmVyZmxvdzogaGlkZGVuICFpbXBvcnRhbnQ7XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xufSJdfQ== */\"","import { Component, OnInit, Injector, HostListener } from '@angular/core';\n\nimport { ApartmentService } from '../../../../api/services/apartment.service';\nimport { LookupService } from '../../../../api/services/lookup.service';\nimport { VisitorService } from '../../../../api/services/visitor.service';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\n\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-visitor-expected-visitor',\n  templateUrl: './visitor-expected-visitor.component.html',\n  styleUrls: ['./visitor-expected-visitor.component.scss']\n})\nexport class VisitorExpectedVisitorComponent implements OnInit {\n\n  visitorData:string = \"\";\n  visitorListData:any;\n\n  isVisitorDataLoaded:boolean = false;\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n\n  visitor:any;\n\n  modalService:any;\n\n  totalFilterItems:any;\n  visitTypeData:any;\n  visitCategoryData:any;\n\n  selectedInput:string = \"\";\n  columnField: any = {}\n\n  constructor(\n    private injector: Injector,\n  \tprivate apartmentService:ApartmentService,\n    private visitorService:VisitorService,\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService: CookieService\n  ) { \n    this.modalService = this.injector.get(ModalService);\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  selectColInput(value){\n    this.selectedInput = value;\n  }\n\n  onSelectChange(event, type, name){\n\n    if(!_.isEmpty(event)){\n      this.selectedInput = type;\n      this.columnField[type] = event[name];\n    }\n    else {\n       this.columnField = {};\n    }\n    \n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  showConfirmModal(index) {\n    this.modalService.showConfirmModal(index);\n  }\n\n  getTimeFormat(dateTime){\n    return moment(dateTime).format(\"YYYY-MM-DD HH:mm\");\n  }\n\n  ngOnInit() {\n\n    \n\n  \tthis.visitorService.getExpectedVisitorsByApartmentId(parseInt(this.cookieService.get('apartmentId'))).subscribe((res:any) => {\n\n\t\t//filter active true items\n\t\tthis.visitorListData = res.filter(data => {\n\t\t\treturn data.isActive\n\t\t})\n\n\t\t\n\t\t//get block and unit details\n\t\t_.each(this.visitorListData, (item, index) => {\n\t\tthis.apartmentService.getApartmentBlockUnitById(item.apartmentUnitId).subscribe((res:any) => {\n\n\t\t\tthis.visitorListData[index].blockNo = res[0].apartmentBlockNumber;\n      this.visitorListData[index].blockUnitNo = res[0].apartmentBlockUnitNumber;\n      // console.log(res[0]);\n\n\t    },\n\t    error => {\n\t      \n\t    });\n\n\n    });\n    \n    //get visit type\n    this.lookupService.getLookupValueByLookupTypeId(15).subscribe((res:any) => {\n\n      this.visitTypeData = res;\n      this.checkVisitTypeData();\n\n    },\n    error => {\n      \n    }\n    );\n\n    //get visit category\n    this.lookupService.getLookupValueByLookupTypeId(100).subscribe((res:any) => {\n      this.visitCategoryData = res;\n      this.checkVisitCategoryData();\n    },\n    error => {\n      \n    }\n    );\n\n    \n\t\tthis.totalItems = this.visitorListData.length;\n\n\t\tif(this.totalItems>this.itemLimit){\n\t\t\tthis.ItemEndIndex = this.itemLimit;\n\t\t}\n\n\t\telse {\n\t\t\tthis.ItemEndIndex = this.totalItems;\n\t\t}\n\n\t\tthis.isVisitorDataLoaded = true;\n    \n    \n\t});\n\n  \n  }\n  \n  checkVisitTypeData() {\n    this.visitTypeData.forEach(element => {\n      if(element.lookupValueId == this.visitorListData[0].visitTypeId){\n        this.visitorListData[0].visitTypeName = element.lookupValueName.toLowerCase();\n      }\n    });\n  }\n  checkVisitCategoryData(){\n    console.log(this.visitorListData[0]);\n    this.visitCategoryData.forEach(element => {\n      if(element.lookupValueId == this.visitorListData[0].visitorCategoryId){\n        this.visitorListData[0].visitCategoryName = element.lookupValueName.toLowerCase();\n      }\n    });\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvdmlzaXRvci1oaXN0b3J5L3Zpc2l0b3ItaGlzdG9yeS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Injector, HostListener } from '@angular/core';\n\nimport { ApartmentService } from '../../../../api/services/apartment.service';\nimport { LookupService } from '../../../../api/services/lookup.service';\nimport { VisitorService } from '../../../../api/services/visitor.service';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-visitor-hitory',\n  templateUrl: './visitor-history.component.html',\n  styleUrls: ['./visitor-history.component.scss']\n})\nexport class VisitorHistoryComponent implements OnInit {\n\n   visitorData:string = \"\";\n  visitorListData:any;\n\n  isVisitorDataLoaded:boolean = false;\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n\n  visitor:any;\n\n  modalService:any;\n\n  totalFilterItems:any;\n  visitTypeData:any;\n\n\n  constructor(\n    private injector: Injector,\n  \tprivate apartmentService:ApartmentService,\n    private visitorService:VisitorService,\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService: CookieService\n  ) { \n    this.modalService = this.injector.get(ModalService);\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  getBlockUnit(id){\n\n  \t\n    \n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  showConfirmModal(index) {\n    this.modalService.showConfirmModal(index);\n  }\n\n  getVisitorType(){\n    \n  }\n\n\n\n  ngOnInit() {\n\n\n    //get visit type\n    this.lookupService.getLookupValueByLookupTypeId(15).subscribe((res:any) => {\n\n      this.visitTypeData = res;\n\n    },\n    error => {\n      \n    }\n    );\n\n  \tthis.visitorService.getVisitorsByApartmentId(parseInt(this.cookieService.get('apartmentId'))).subscribe((res:any) => {\n\n\t\t//filter active true items\n\n    this.visitorListData = res.filter(item => {\n      return item.isActive && item.isCheckedOut;\n    });\n\n    // console.log(this.visitorListData);\n\t\t\n\t\t//get block and unit details\n\t\t_.each(this.visitorListData, (item, index) => {\n\t\tthis.apartmentService.getApartmentBlockUnitById(item.apartmentUnitId).subscribe((res:any) => {\n\n\t\t\tthis.visitorListData[index].blockNo = res[0].apartmentBlockNumber;\n\t\t\tthis.visitorListData[index].blockUnitNo = res[0].apartmentBlockUnitNumber;\n\n\t    },\n\t    error => {\n\t      \n\t    });\n\n\n\t\t});\n\n\t\tthis.totalItems = this.visitorListData.length;\n\n\t\tif(this.totalItems>this.itemLimit){\n\t\t\tthis.ItemEndIndex = this.itemLimit;\n\t\t}\n\n\t\telse {\n\t\t\tthis.ItemEndIndex = this.totalItems;\n\t\t}\n\n    this.isVisitorDataLoaded = true;\n    \n    \n    \n\t});\n\n  \t\n\n\n  \t\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvdmlzaXRvci1yZXBvcnRzL3Zpc2l0b3ItcmVwb3J0cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\nimport { LookupService } from '../../../../api/services/lookup.service';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-visitor-reports',\n  templateUrl: './visitor-reports.component.html',\n  styleUrls: ['./visitor-reports.component.scss']\n})\nexport class VisitorReportsComponent implements OnInit {\n\n  reportDataList:any;\n\n  isDataLoaded:boolean = false;\n\n  constructor(\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) { }\n\n  ngOnInit() {\n\n    let details = {\n      ApartmentId: parseInt(this.cookieService.get('apartmentId')),\n      LookupTypeId: 87, //lookuptypeid for report\n      MenuName: 'VisitorManagement'\n    }\n\n    this.lookupService.getLookupValuesByApartmentIdLookupTypeIdMenuName(details).subscribe((res:any) => {\n\n      this.reportDataList = res;\n\n      this.isDataLoaded = true;\n\n    })\n\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvdmlzaXRvci1zZXR1cC92aXNpdG9yLXNldHVwLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Injector } from '@angular/core';\n\nimport { LookupService } from '../../../../api/services/lookup.service';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-visitor-setup',\n  templateUrl: './visitor-setup.component.html',\n  styleUrls: ['./visitor-setup.component.scss']\n})\nexport class VisitorSetupComponent implements OnInit {\n\n  isDataLoaded: boolean = false;\n  isCategoryTypeSubmitted: boolean = true;\n\n  ItemStartIndex: any = 0;\n  ItemEndIndex: any;\n  totalItems: any;\n  itemLimit: any = 10;\n\n  unitFieldType: string = \"unitno\";\n  unitOrder: boolean = true;\n\n  isMobile: boolean = false;\n\n  categoryData: any;\n  categoryDataList: any;\n\n  isCategoryTypeNew: boolean = false;\n  isCategoryTypeUpdate: boolean = false;\n\n  categoryType: string = \"\";\n  categoryUpdateId: number = 0;\n\n  isError: boolean = false;\n  alertMessage: boolean = false;\n\n  modalService: any;\n\n  constructor(\n    private injector: Injector,\n    private lookupService: LookupService,\n    private sharedService: SharedService,\n    private cookieService: CookieService\n  ) {\n    this.modalService = this.injector.get(ModalService);\n  }\n\n  getIndexParams(event) {\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type) {\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if (this.unitFieldType == type) {\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  addNewCategoryType() {\n\n    this.isCategoryTypeNew = true;\n    this.isCategoryTypeUpdate = false;\n\n    setTimeout(() => {\n\n      var elem = document.querySelector('.vehicle-type-card');\n      var scrollTo = elem.getBoundingClientRect().top - 100;\n\n      window.scroll({\n        top: scrollTo,\n        behavior: 'smooth'\n      });\n\n    }, 100);\n\n  }\n\n  updateCategoryType(item) {\n\n    this.isCategoryTypeUpdate = true;\n    this.isCategoryTypeNew = false;\n    this.categoryType = item.lookupValueName;\n    this.categoryUpdateId = item.lookupValueId;\n\n    setTimeout(() => {\n\n      var elem = document.querySelector('.vehicle-type-card');\n      var scrollTo = elem.getBoundingClientRect().top - 100;\n\n      window.scroll({\n        top: scrollTo,\n        behavior: 'smooth'\n      });\n\n    }, 100);\n\n  }\n\n  deleteCategoryType(item) {\n    this.modalService.showConfirmModal(item);\n    // delete item\n    this.sharedService.unitlistdeleteindexcast.subscribe(item => {\n\n      if (item != null) {\n\n        this.isDataLoaded = false;\n\n        var params = {\n          lookupValueId: item.lookupValueId,\n          updateUserId: parseInt(this.cookieService.get('userId'))\n        }\n\n        this.lookupService.deleteLookupvalue(params).subscribe((res: any) => {\n\n          this.categoryDataList = this.categoryDataList.filter((type) => type.lookupValueId !== item.lookupValueId);\n          this.sharedService.setUnitListDeleteIndex(null);\n          this.isDataLoaded = true;\n\n        });\n\n\n      }\n\n    });\n  }\n\n  removeCategoryTypeBox() {\n\n    this.isCategoryTypeNew = false;\n    this.isCategoryTypeUpdate = false;\n    this.isError = false;\n\n    setTimeout(() => {\n\n      var elem = document.querySelector('.vehicle-type-table-card');\n      var scrollTo = elem.getBoundingClientRect().top - 100;\n\n      window.scroll({\n        top: scrollTo,\n        behavior: 'smooth'\n      });\n\n    }, 100);\n\n  }\n\n  submitCategoryTypeForm(form) {\n\n    this.isCategoryTypeSubmitted = false;\n\n    if (this.isCategoryTypeNew) {\n\n      let details = {\n\n        \"lookupTypeId\": 100,\n        \"lookupValueName\": this.categoryType,\n        \"description\": 'Visitor Category',\n        \"isActive\": true,\n        \"insertedBy\": parseInt(this.cookieService.get('userId')),\n        \"insertedOn\": \"2019-11-20T16:51:24.105Z\",\n        \"updatedBy\": 0,\n        \"updatedOn\": \"2019-11-20T16:51:24.105Z\"\n\n      }\n\n      this.lookupService.addLookupValue(details).subscribe((res: any) => {\n\n        if (res.message) {\n\n          this.lookupService.getLookupValueByLookupTypeId(100).subscribe((res: any) => {\n            this.isCategoryTypeNew = false;\n            this.isCategoryTypeSubmitted = true;\n            this.sharedService.setAlertMessage(\"Visitor Category added successfully\");\n            this.categoryDataList = res.filter(item => {\n              return item.isActive;\n            });\n          });\n\n\n        }\n        else {\n\n          this.isCategoryTypeSubmitted = true;\n          this.isError = true;\n          this.alertMessage = res.errorMessage;\n        }\n\n      });\n\n    }\n\n    else {\n\n      let details = {\n\n        \"lookupValueId\": this.categoryUpdateId,\n        \"lookupTypeId\": 100,\n        \"lookupValueName\": this.categoryType,\n        \"description\": this.categoryType,\n        \"isActive\": true,\n        \"insertedBy\": 0,\n        \"insertedOn\": \"2019-11-20T16:51:24.105Z\",\n        \"updatedBy\": parseInt(this.cookieService.get('userId')),\n        \"updatedOn\": \"2019-11-20T16:51:24.105Z\"\n\n      }\n\n      this.lookupService.updateLookupValue(details).subscribe((res: any) => {\n\n        if (res.message) {\n\n          this.lookupService.getLookupValueByLookupTypeId(100).subscribe((res: any) => {\n            this.isCategoryTypeUpdate = false;\n            this.isCategoryTypeSubmitted = true;\n            this.sharedService.setAlertMessage(\"Visitor Category updated successfully\");\n\n            this.categoryDataList = res.filter(item => {\n              return item.isActive;\n            });\n\n          });\n\n\n\n        }\n        else {\n\n          this.isCategoryTypeSubmitted = true;\n          this.isError = true;\n          this.alertMessage = res.errorMessage;\n\n        }\n\n      });\n\n    }\n\n  }\n\n  ngOnInit() {\n\n    this.lookupService.getLookupValueByLookupTypeId(100).subscribe((res: any) => {\n\n      this.categoryDataList = res.filter(item => {\n        return item.isActive;\n      });\n\n      this.totalItems = this.categoryDataList.length;\n\n      if (this.totalItems > this.itemLimit) {\n        this.ItemEndIndex = this.itemLimit;\n      }\n      else {\n        this.ItemEndIndex = this.totalItems;\n      }\n\n      this.isDataLoaded = true;\n    });\n\n  }\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from '../.././auth.guard';\n\nimport { VisitorComponent } from './visitor.component';\nimport { VisitorSetupComponent } from './components/visitor-setup/visitor-setup.component';\nimport { VisitorCheckinComponent } from './components/visitor-checkin/visitor-checkin.component';\nimport { VisitorCheckoutComponent } from './components/visitor-checkout/visitor-checkout.component';\nimport { VisitorExpectedVisitorComponent } from './components/visitor-expected-visitor/visitor-expected-visitor.component';\nimport { VisitorReportsComponent } from './components/visitor-reports/visitor-reports.component';\nimport { VisitorCreateComponent } from './components/visitor-create/visitor-create.component';\nimport { VisitorHistoryComponent } from './components/visitor-history/visitor-history.component';\nimport { CheckinVisitorComponent } from './components/checkin-visitor/checkin-visitor.component';\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: 'settings', pathMatch: 'full'},\n\t{ path: 'settings', component: VisitorSetupComponent},\n\t{ path: 'checkin', component: CheckinVisitorComponent},\n\t{ path: 'expected-visitor', component: VisitorExpectedVisitorComponent},\n\t{ path: 'add-visitor', component: VisitorCheckinComponent},\n\t{ path: 'edit-visitor/:id/:type', component: VisitorCheckinComponent},\n\t{ path: 'checkout', component: VisitorCheckoutComponent},\n\t{ path: 'reports', component: VisitorReportsComponent },\n\t{ path: 'create-expected-visitor', component: VisitorCreateComponent },\n\t{ path: 'history', component: VisitorHistoryComponent },\n\t{ path: '**', redirectTo: 'settings', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class VisitorRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy92aXNpdG9yL3Zpc2l0b3IuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-visitor',\n  templateUrl: './visitor.component.html',\n  styleUrls: ['./visitor.component.scss']\n})\nexport class VisitorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VisitorRoutingModule } from './visitor-routing.module';\n\nimport { SharedModule } from '../../shared/shared.module';\nimport { VisitorComponent } from './visitor.component';\nimport { VisitorSetupComponent } from './components/visitor-setup/visitor-setup.component';\nimport { VisitorCheckinComponent } from './components/visitor-checkin/visitor-checkin.component';\nimport { VisitorCheckoutComponent } from './components/visitor-checkout/visitor-checkout.component';\nimport { VisitorExpectedVisitorComponent } from './components/visitor-expected-visitor/visitor-expected-visitor.component';\nimport { VisitorReportsComponent } from './components/visitor-reports/visitor-reports.component';\nimport { VisitorCreateComponent } from './components/visitor-create/visitor-create.component';\nimport { VisitorHistoryComponent } from './components/visitor-history/visitor-history.component';\nimport { CheckinVisitorComponent } from './components/checkin-visitor/checkin-visitor.component';\n\n@NgModule({\n  declarations: [\n\t  VisitorComponent,\n\t  VisitorSetupComponent,\n\t  VisitorCheckinComponent,\n\t  VisitorCheckoutComponent,\n\t  VisitorExpectedVisitorComponent,\n    VisitorReportsComponent,\n    VisitorCreateComponent,\n    VisitorHistoryComponent,\n    CheckinVisitorComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    VisitorRoutingModule\n  ],\n  bootstrap: [ VisitorComponent ]\n})\nexport class VisitorModule { }\n"]}