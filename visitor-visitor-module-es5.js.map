{"version":3,"sources":["webpack:///src/app/ams/visitor/components/visitor-checkin/visitor-checkin.component.html","webpack:///src/app/ams/visitor/components/visitor-checkout/visitor-checkout.component.html","webpack:///src/app/ams/visitor/components/visitor-create/visitor-create.component.html","webpack:///src/app/ams/visitor/components/visitor-expected-visitor/visitor-expected-visitor.component.html","webpack:///src/app/ams/visitor/components/visitor-history/visitor-history.component.html","webpack:///src/app/ams/visitor/components/visitor-reports/visitor-reports-data/visitor-reports-data.component.html","webpack:///src/app/ams/visitor/components/visitor-reports/visitor-reports.component.html","webpack:///src/app/ams/visitor/components/visitor-setup/visitor-setup.component.html","webpack:///src/app/ams/visitor/visitor.component.html","webpack:///src/app/ams/visitor/components/visitor-checkin/visitor-checkin.component.scss","webpack:///src/app/ams/visitor/components/visitor-checkin/visitor-checkin.component.ts","webpack:///src/app/ams/visitor/components/visitor-checkout/visitor-checkout.component.scss","webpack:///src/app/ams/visitor/components/visitor-checkout/visitor-checkout.component.ts","webpack:///src/app/ams/visitor/components/visitor-create/visitor-create.component.scss","webpack:///src/app/ams/visitor/components/visitor-create/visitor-create.component.ts","webpack:///src/app/ams/visitor/components/visitor-expected-visitor/visitor-expected-visitor.component.scss","webpack:///src/app/ams/visitor/components/visitor-expected-visitor/visitor-expected-visitor.component.ts","webpack:///src/app/ams/visitor/components/visitor-history/visitor-history.component.scss","webpack:///src/app/ams/visitor/components/visitor-history/visitor-history.component.ts","webpack:///src/app/ams/visitor/components/visitor-reports/visitor-reports-data/visitor-reports-data.component.scss","webpack:///src/app/ams/visitor/components/visitor-reports/visitor-reports-data/visitor-reports-data.component.ts","webpack:///src/app/ams/visitor/components/visitor-reports/visitor-reports.component.scss","webpack:///src/app/ams/visitor/components/visitor-reports/visitor-reports.component.ts","webpack:///src/app/ams/visitor/components/visitor-setup/visitor-setup.component.scss","webpack:///src/app/ams/visitor/components/visitor-setup/visitor-setup.component.ts","webpack:///src/app/ams/visitor/visitor-routing.module.ts","webpack:///src/app/ams/visitor/visitor.component.scss","webpack:///src/app/ams/visitor/visitor.component.ts","webpack:///src/app/ams/visitor/visitor.module.ts"],"names":["VisitorCheckinComponent","router","route","userService","apartmentService","visitorService","lookupService","sharedService","cookieService","SharedToaster","isVisitorSubmitted","isVisitorAdded","isError","errorMessage","visitTypeId","isExpectedVisitor","visitorStatus","isUnitVisitor","iscommunityVisitor","isValidphoneNumber","minDate","Date","format","val","retVal","rex","RegExp","isValid","test","console","log","length","errorDetails","msg","type","setCustomAlertMessage","form","IsvalidatePhoneNo","visitor","expectedVisitorPhone","isCheckout","expectedDurationInHours","getDurationInHours","actualInTime","expectedVisitorOutTime","visitorDetails","parseInt","params","id","apartmentUnitId","get","expectedVisitorName","expectedVisitorCount","toString","passNumber","visitCategoryId","purpose","toISOString","expectedVisitorInTime","expectedDuration","addVisitor","subscribe","res","message","error","checkOutVisitor","undefined","getVisitorById","visitorIdParam","visitorId","visitorCategoryId","visitorOutTime","inDate","visitorInTime","outDate","diffDuration","diff","days","isSingleDigit","hours","minutes","minOutDate","expectedVisitorIdParam","expectedVisitorId","getExpectedVisitorById","minExOutTime","getDuration","visitParams","ApartmentId","LookupTypeId","getLookupValueByLookupTypeId","visitByData","categoryParams","visitCategoryData","filter","item","isActive","apartmentParams","userId","getApartmentBlockUnitByUserId","apartmentBlockUnitId","getAllApartmentBlockUnits","blockUnitData","param","navigate","result","filterId","lookupValueId","lookupValueName","date1","date2","openSnackBar","sendDuration","asHours","Math","round","digit","selector","template","VisitorCheckoutComponent","injector","dialog","visitorData","isVisitorDataLoaded","unitFieldType","unitOrder","ItemStartIndex","itemLimit","modalService","event","ItemEndIndex","window","innerWidth","index","showConfirmModal","filtergroup","jqx","filter_or_operator","filtervalue","filtercondition","filterData","createfilter","operator","addfilter","datagrid","showfiltercolumnbackground","columnData","forEach","datafield","applyfilters","clearfilters","confirmationMessage","dialogData","dialogRef","open","panelClass","disableClose","data","afterClosed","dialogResult","detail","dataRecord","getrowdata","rowId","navigateByUrl","exportdata","cellsrenderer","row","column","value","columnrenderer","text","width","pinned","renderer","minwidth","getDateTime","cellsalign","align","visitTypeData","apartmentId","getYetToCheckoutVisitorsByApartmentId","visitorListData","block_Unit","block","split","blockNo","blockUnitNo","isCheckedOut","gridSourceData","localdata","datatype","listData","dataAdapter","totalItems","navigateTo","CustomEvent","dispatchEvent","VisitorCreateComponent","isEditVisitor","apartmentBlockNumber","apartmentBlockUnitNumber","expectedVisitor","addExpectedVisitor","setAlertMessage","min","blockParams","getApartmentBlockUnitByApartmentId","VisitorExpectedVisitorComponent","selectedInput","columnField","name","dateTime","getExpectedVisitorsByApartmentId","checkVisitTypeData","element","visitTypeName","toLowerCase","VisitorHistoryComponent","visitTypeParams","visitListParams","getVisitorsByApartmentId","VisitorReportsDataComponent","pageName","isDataLoaded","blockId","end_date","start_date","isReportSubmitted","date","ApartmentID","ApartmentBlockID","StartDate","getDate","EndDate","VisitType","getDetails","serviceName","getReportsForVisitorsCheckedInMultiFilter","getReportsForVisitorsCheckedOutnMultiFilter","getReportsForExpectedVisitorsMultiFilter","reportsDataList","reportData","reset","unitBlockParams","getApartmentBlockByApartmentId","unitBlocksData","VisitorReportsComponent","details","MenuName","getLookupValuesByApartmentIdLookupTypeIdMenuName","reportDataList","description","VisitorSetupComponent","isCategoryTypeSubmitted","isMobile","isCategoryTypeNew","isCategoryTypeUpdate","categoryType","categoryUpdateId","alertMessage","setTimeout","elem","document","querySelector","scrollTo","getBoundingClientRect","top","scroll","behavior","unitlistdeleteindexcast","updateUserId","deleteLookupvalue","categoryDataList","setUnitListDeleteIndex","lookupvalue","addLookupValue","updateLookupValue","categoryListParams","routes","path","redirectTo","pathMatch","component","VisitorRoutingModule","imports","forChild","exports","VisitorComponent","VisitorModule","declarations","bootstrap"],"mappings":"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","file":"visitor-visitor-module-es5.js","sourcesContent":["export default \"<div class=\\\"checkin-visitor-wrapper\\\">\\n\\t<div class=\\\"card mb-30\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n\\t\\t\\t\\t<h5>\\n\\t\\t\\t\\t\\t<span *ngIf=\\\"!isCheckout()\\\">Edit Expected Visitor</span>\\n\\t\\t\\t\\t\\t<span *ngIf=\\\"isCheckout()\\\">Check Out</span>\\n\\t\\t\\t\\t</h5>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div *ngIf=\\\"!isCheckout()\\\" class=\\\"float-right\\\">\\n\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" class=\\\"btn lime-green mt_5\\\" routerLink=\\\"/ams/visitor/expected-visitor\\\" routerLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t[routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\tCancel\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div *ngIf=\\\"isCheckout()\\\" class=\\\"float-right\\\">\\n\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" class=\\\"btn lime-green mt_5\\\" routerLink=\\\"/ams/visitor/checkout\\\" routerLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t[routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\tCancel\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card-body pb-0\\\" [ngClass]=\\\"isError ? 'h-39' : 'h-0 pt-0'\\\">\\n\\t\\t\\t<app-alert-message [message]=\\\"alertMessage\\\" [isError]=\\\"isError\\\"></app-alert-message>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card-body\\\">\\n\\n\\t\\t\\t<app-alert-message [message]=\\\"errorMessage\\\" [isAlert]=\\\"isError\\\"></app-alert-message>\\n\\n\\t\\t\\t<app-loader *ngIf=\\\"isVisitorSubmitted && !isVisitorAdded\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"!isVisitorSubmitted && !isVisitorAdded\\\">\\n\\n\\t\\t\\t\\t<form #addVisitorForm=\\\"ngForm\\\" name=\\\"addVisitorForm\\\" (ngSubmit)=\\\"submitAddVisitorForm(addVisitorForm)\\\"\\n\\t\\t\\t\\t\\tnovalidate>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\" *ngIf=\\\"!isCheckout()\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Visitor Name<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Name\\\" name=\\\"visitorName\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.expectedVisitorName\\\" [disabled]=\\\"true\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Visitor Count<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Count\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorCount\\\" [(ngModel)]=\\\"visitor.expectedVisitorCount\\\" [disabled]=\\\"true\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Phone/Mobile<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" (blur)=\\\"IsvalidatePhoneNo($event.target.value)\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"phoneNo\\\" [(ngModel)]=\\\"visitor.expectedVisitorPhone\\\" [disabled]=\\\"true\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Date/Time of Visit<span class=\\\"required\\\">*</span></label>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"visitorInTime\\\" [owlDateTime]=\\\"visitorInTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[owlDateTimeTrigger]=\\\"visitorInTime\\\" placeholder=\\\"Date Time\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.expectedVisitorInTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[disabled]=\\\"true\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorInTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorInTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Actual Visitor In-time<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t <input class=\\\"form-control\\\" name=\\\"actualVisitorInTime\\\" [owlDateTime]=\\\"actualVisitorInTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[owlDateTimeTrigger]=\\\"actualVisitorInTime\\\" placeholder=\\\"Date Time\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"actualInTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[disabled]=\\\"true\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #actualVisitorInTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"actualVisitorInTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Time-out<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"visitorOutTime\\\" [owlDateTime]=\\\"visitorOutTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[owlDateTimeTrigger]=\\\"visitorOutTime\\\" placeholder=\\\"Date Time\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.expectedVisitorOutTime\\\" [min]=\\\"minExOutTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(ngModelChange)=\\\"expectedDurationChange(actualInTime, visitor.expectedVisitorOutTime)\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorOutTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorOutTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Duration<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Duration\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorDuration\\\" [(ngModel)]=\\\"expectedDuration\\\" [disabled]=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trequired>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Pass Number<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorPassNumber\\\" [(ngModel)]=\\\"visitor.passNumber\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Visit Type<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select name=\\\"visitBy\\\" id=\\\"visitBy\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"visitTypeId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(ngModelChange)=\\\"changeVisitorType(visitTypeId)\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of visitByData\\\" [value]=\\\"item.lookupValueId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Visit Category<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select name=\\\"visitByCategory\\\" id=\\\"visitByCategory\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitCategoryId\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of visitCategoryData\\\" [value]=\\\"item.lookupValueId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"isUnitVisitor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Tenant block-No<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select name=\\\"visitorblock-No\\\" id=\\\"visitorblock-No\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.apartmentBlockNumber\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of blockUnitData\\\" [value]=\\\"item.apartmentBlockNumber\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ item.apartmentBlockNumber }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"isUnitVisitor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Tenant Unit-No<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select name=\\\"visitorUnit-No\\\" id=\\\"visitorUnit-No\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.apartmentBlockUnitNumber\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of blockUnitData\\\" [value]=\\\"item.apartmentBlockUnitNumber\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ item.apartmentBlockUnitNumber }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"iscommunityVisitor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Staff Id<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Staff-id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"staffId\\\" [(ngModel)]=\\\"visitor.staffId\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Purpose<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<textarea type=\\\"text\\\" class=\\\"form-control purpose-box\\\" placeholder=\\\"Enter purpose\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorpurpose\\\" [(ngModel)]=\\\"visitor.purpose\\\" required></textarea>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\" *ngIf=\\\"isCheckout()\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Visitor Name<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Name\\\" name=\\\"visitorName\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.visitorName\\\" [disabled]='true' required>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Visitor Count<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Count\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorCount\\\" [(ngModel)]=\\\"visitor.visitorCount\\\" [disabled]='true' required>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Phone/Mobile<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" (blur)=\\\"IsvalidatePhoneNo($event.target.value)\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"phoneNo\\\" [(ngModel)]=\\\"visitor.visitorPhone\\\" [disabled]='true' required>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Visitor In-time<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"visitorInTime\\\" [owlDateTime]=\\\"visitorInTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[owlDateTimeTrigger]=\\\"visitorInTime\\\" [min]=\\\"minDate\\\" [max]=\\\"minDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Date Time\\\" [disabled]=\\\"true\\\" [(ngModel)]=\\\"visitor.visitorInTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[disabled]='true' required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorInTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorInTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Visitor Out-time<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"visitorOutTime\\\" [owlDateTime]=\\\"visitorOutTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[owlDateTimeTrigger]=\\\"visitorOutTime\\\" [min]=\\\"minOutDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Date Time\\\" [(ngModel)]=\\\"visitor.visitorOutTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(ngModelChange)=\\\"expectedDurationChange(visitor.visitorInTime, visitor.visitorOutTime)\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorOutTime ></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorOutTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Duration<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Duration\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorDuration\\\" [(ngModel)]=\\\"expectedDuration\\\" [disabled]='true' required>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Pass Number<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorPassNumber\\\" [(ngModel)]=\\\"visitor.passNumber\\\" [disabled]='true'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trequired>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Visit Type<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select name=\\\"visitBy\\\" id=\\\"visitBy\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"visitTypeId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[disabled]='true' required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of visitByData\\\" [value]=\\\"item.lookupValueId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Visit Category<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select name=\\\"visitByCategory\\\" id=\\\"visitByCategory\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitCategoryId\\\" [disabled]='true'>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of visitCategoryData\\\" [value]=\\\"item.lookupValueId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline float-right mt-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addVisitorForm.invalid\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t*ngIf=\\\"!isCheckout()\\\">Check In</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" *ngIf=\\\"isCheckout()\\\">Check Out</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t</ng-container>\\n\\t\\t\\n            <div class=\\\"message\\\" *ngIf=\\\"isVisitorAdded\\\">\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n                <div class=\\\"icon-wrapper float-left\\\">\\n                    <i-feather class=\\\"icon float-left\\\" name=\\\"check\\\" width=\\\"20\\\"></i-feather>\\n                </div>\\n                <h5 class=\\\"float-left\\\" *ngIf=\\\"!isCheckout()\\\">Visitor Checked In successfully!</h5>\\n\\t\\t\\t\\t<h5 class=\\\"float-left\\\" *ngIf=\\\"isCheckout()\\\">Visitor Checked Out successfully!</h5>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"row confirm\\\">\\n\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" (click)=\\\"navigateTo(isCheckout)\\\">Ok</button>\\n\\t\\t\\t</div>\\n            </div>\\n\\n\\n\\t\\t</div>\\n\\t</div>\\n\\n</div>\\n\\n\"","export default \"<div class=\\\"checkedout-visitor-wrapper\\\">\\n\\t\\n\\t<app-loader *ngIf=\\\"!isVisitorDataLoaded\\\"></app-loader>\\n\\n\\t\\n\\n\\t<div class=\\\"card table-card\\\" *ngIf=\\\"isVisitorDataLoaded\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All Checked-in Visitors <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"visitorData\\\" (ngModelChange)=\\\"onGlSearchFilter()\\\">\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<app-print-dropdown (outputParams) =\\\"getPrintParams($event)\\\"></app-print-dropdown>\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n  \\t\\t\\n  \\t\\t<div class=\\\"card-body p-0\\\">\\n  \\t\\t\\t\\n  \\t\\t\\t<!-- <table class=\\\"table\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('visitorName')\\\">Visitor Name <span [ngClass]=\\\"getFieldOrderBy('visitorName')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('visitorPhone')\\\">Phone Number <span [ngClass]=\\\"getFieldOrderBy('visitorPhone')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('visitorInTime')\\\">In-time <span [ngClass]=\\\"getFieldOrderBy('visitorInTime')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('visitorOutTime')\\\">Out-time <span [ngClass]=\\\"getFieldOrderBy('visitorOutTime')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('blockNo')\\\">Block No<span [ngClass]=\\\"getFieldOrderBy('blockNo')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('blockUnitNo')\\\">Unit No <span [ngClass]=\\\"getFieldOrderBy('blockUnitNo')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Action</th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let visitor of visitorListData | simpleSearch: visitorData | sort : unitFieldType: unitOrder | slice:ItemUserStartIndex:ItemUserEndIndex ; let i = index\\\">\\n\\t\\t\\t\\t      <td class=\\\"name\\\">\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\" placement=\\\"right\\\" [ngbPopover]=\\\"popContent\\\" triggers=\\\"mouseenter:mouseleave\\\">{{visitor.visitorName}}\\n\\t\\t\\t\\t      \\t<ng-template #popContent>\\n\\t\\t\\t\\t\\t\\t    <div class=\\\"pop-desp\\\">\\n\\t\\t\\t\\t\\t\\t    \\t<ul>\\n\\t\\t\\t\\t\\t\\t    \\t\\t<li>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<h5>Visitor Count</h5>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<small>{{visitor.visitorCount}}</small>\\n\\t\\t\\t\\t\\t\\t    \\t\\t</li>\\n\\t\\t\\t\\t\\t\\t    \\t\\t<li>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<h5>Expected Duration</h5>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<small>{{visitor.expectedDuration}}</small>\\n\\t\\t\\t\\t\\t\\t    \\t\\t</li>\\n\\t\\t\\t\\t\\t\\t    \\t</ul>\\n\\t\\t\\t\\t\\t\\t    </div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t      </td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{visitor.visitorPhone}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{visitor.visitorInTime | date:'MM/dd/yy, hh:mm'}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{visitor.visitorOutTime | date:'MM/dd/yy, hh:mm'}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{visitor.blockNo}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{visitor.blockUnitNo}}</td>\\n\\t\\t\\t\\t      <td>\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t      \\tplacement=\\\"top\\\" [ngbPopover]=\\\"popAddCheckOutContent\\\" triggers=\\\"mouseenter:mouseleave\\\"\\n\\t\\t\\t\\t      \\trouterLink=\\\"/ams/visitor/edit-visitor/{{visitor.visitorId}}/checkout\\\" \\n\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t\\t<img src=\\\"assets/images/checkout-icon.svg\\\" width=\\\"20\\\" />\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t<ng-template #popAddCheckOutContent>\\n\\t\\t\\t\\t      \\t\\t<div class=\\\"pop-desp\\\">\\n\\t\\t\\t\\t      \\t\\t\\t<h5>CheckOut</h5>\\n\\t\\t\\t\\t      \\t\\t</div>\\n\\t\\t\\t\\t      \\t</ng-template>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\t\\t\\t\\n\\t\\t\\t<app-pagination \\n\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t\\t</app-pagination> -->\\n\\n\\t\\t\\t<jqxGrid \\n\\t\\t\\t[theme]=\\\"'material'\\\" \\n\\t\\t\\t[width]=\\\"'100%'\\\"\\n\\t\\t\\t[rowsheight]=\\\"48\\\"\\n\\t\\t\\t[autoheight]=\\\"true\\\"\\n\\t\\t\\t[pageable]=\\\"true\\\" \\n\\t\\t\\t[filterable]=\\\"true\\\" \\n\\t\\t\\t[sortable]=\\\"true\\\" \\n\\t\\t\\t[source]=\\\"listData\\\"\\n\\t\\t\\t[columns]=\\\"columnData\\\"\\n\\t\\t\\t[columnsresize]=\\\"true\\\"\\n\\t\\t\\t[enablehover]=\\\"false\\\"\\n\\t\\t#datagrid>\\n\\t\\t</jqxGrid> \\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n\\n</div>\"","export default \"<div class=\\\"create-visitor-wrapper\\\">\\n\\t<div class=\\\"card mb-30\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>\\n    \\t\\t\\t\\t<span >Create Expected Visitor</span>\\n\\t\\t\\t\\t</h5>\\n\\t\\t\\t</div>\\n    \\t\\t<div class=\\\"float-right\\\">\\n\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" class=\\\"btn lime-green mt_5\\\" routerLink=\\\"/ams/visitor/expected-visitor\\\" routerLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t[routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\tCancel\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card-body pb-0\\\" [ngClass]=\\\"isError ? 'h-39' : 'h-0 pt-0'\\\">\\n\\t\\t\\t<app-alert-message [message]=\\\"alertMessage\\\" [isError]=\\\"isError\\\"></app-alert-message>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card-body\\\">\\n            \\n            <app-loader *ngIf=\\\"isVisitorSubmitted\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"!isVisitorSubmitted\\\">\\n\\n\\t\\t\\t\\t<form #addVisitorForm = \\\"ngForm\\\" name=\\\"addVisitorForm\\\" (ngSubmit)=\\\"submitAddVisitorForm(addVisitorForm)\\\"  novalidate>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Expected Visitor Name<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Name\\\" name=\\\"visitorName\\\" [(ngModel)]=\\\"visitor.expectedVisitorName\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Expected Visitor Count<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Count\\\" name=\\\"visitorCount\\\" [(ngModel)]=\\\"visitor.expectedVisitorCount\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Expected Phone/Mobile<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t                    <input type=\\\"number\\\" (blur)=\\\"IsvalidatePhoneNo($event.target.value)\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\" name=\\\"phoneNo\\\" [(ngModel)]=\\\"visitor.expectedVisitorPhone\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Visitor In-time<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t                    <input class=\\\"form-control\\\" name=\\\"visitorInTime\\\" [owlDateTime]=\\\"visitorInTime\\\" [owlDateTimeTrigger]=\\\"visitorInTime\\\" placeholder=\\\"Date Time\\\" [(ngModel)]=\\\"visitor.expectedVisitorInTime\\\" (ngModelChange)=\\\"expectedDurationChange()\\\"  [min]=\\\"min\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorInTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorInTime\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Expected Visitor Out-time<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t                    <input class=\\\"form-control\\\" name=\\\"visitorOutTime\\\" [owlDateTime]=\\\"visitorOutTime\\\" [owlDateTimeTrigger]=\\\"visitorOutTime\\\" placeholder=\\\"Date Time\\\" [(ngModel)]=\\\"visitor.expectedVisitorOutTime\\\" (ngModelChange)=\\\"expectedDurationChange()\\\" [min]=\\\"minOutDate\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorOutTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorOutTime\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Expected Duration<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t                    <input OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Duration\\\" name=\\\"visitorDuration\\\" [(ngModel)]=\\\"visitor.expectedDuration\\\" [disabled]=\\\"true\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Pass Number<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\" name=\\\"visitorPassNumber\\\" [(ngModel)]=\\\"visitor.passNumber\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Visit Type<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select \\n\\t\\t\\t\\t\\t\\t\\t        name=\\\"visitBy\\\" \\n\\t\\t\\t\\t\\t\\t\\t        id=\\\"visitBy\\\" \\n\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"visitTypeId\\\" (ngModelChange)=\\\"changeVisitorType(visitTypeId)\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of visitByData\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Visit Category<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select \\n\\t\\t\\t\\t\\t\\t\\t        name=\\\"visitByCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\t        id=\\\"visitByCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"visitCategoryId\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of visitCategoryData\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"isUnitVisitor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Tenant block-No<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select \\n\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorblock-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"visitorblock-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.apartmentBlockNumber\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of blockUnitData\\\" [value]=\\\"item.apartmentBlockNumber\\\">{{ item.apartmentBlockNumber }}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"isUnitVisitor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Tenant Unit-No<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t                   \\t<select \\n\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorUnit-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"visitorUnit-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.apartmentBlockUnitNumber\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of blockUnitData\\\" [value]=\\\"item.apartmentBlockUnitNumber\\\">{{ item.apartmentBlockUnitNumber }}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"iscommunityVisitor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Staff Id<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t                    <input type=\\\"text\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Staff-id\\\" name=\\\"staffId\\\" [(ngModel)]=\\\"visitor.staffId\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Purpose<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t                    <textarea  type=\\\"text\\\" class=\\\"form-control purpose-box\\\" placeholder=\\\"Enter purpose\\\" name=\\\"visitorpurpose\\\" [(ngModel)]=\\\"visitor.purpose\\\" required></textarea>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline float-right mt-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addVisitorForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t</ng-container>\\n\\t\\t\\t\\n\\t\\t</div>\\n\\t</div>\\n\\t\\n</div>\"","export default \"<div class=\\\"expected-visitor-wrapper\\\">\\n\\t\\n\\t<app-loader *ngIf=\\\"!isVisitorDataLoaded\\\"></app-loader>\\n\\n\\t\\n\\n\\t<div class=\\\"card table-card\\\" *ngIf=\\\"isVisitorDataLoaded\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All Expected Visitors <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"visitorData\\\" (ngModelChange)=\\\"onGlSearchFilter()\\\">\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<app-print-dropdown (outputParams) =\\\"getPrintParams($event)\\\"></app-print-dropdown>\\n\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\n    \\t\\t\\t\\t<a class=\\\"btn lime-green mt_5\\\"\\n    \\t\\t\\t\\trouterLink=\\\"/ams/visitor/create-expected-visitor\\\" \\n\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\"\\n\\t\\t\\t\\t\\t[state]=\\\"{ data: 'admin'}\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon plus\\\" name=\\\"plus\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Add Expected Visitor</span>\\n    \\t\\t\\t\\t</a>\\n\\n    \\t\\t\\t</li>\\n\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n  \\t\\t<div class=\\\"card-body p-0 customScroll\\\">\\n  \\t\\t\\t\\n  \\t\\t\\t<!-- <table class=\\\"table\\\" [ngClass]=\\\"isMobileView()\\\" mdbTable mdbTableScroll scrollX=\\\"true\\\" maxWidth=\\\"400\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">\\n\\t\\t\\t\\t      \\tVisitor Name\\n\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('visitorName')\\\" [ngClass]=\\\"getFieldOrderBy('visitorName')\\\"></span>\\n\\t\\t\\t\\t      \\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"columnField['visitorName']\\\" (ngModelChange)=\\\"selectColInput('visitorName')\\\" >\\n\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">\\n\\t\\t\\t\\t      \\tPhone Number\\n\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('visitorPhone')\\\" [ngClass]=\\\"getFieldOrderBy('visitorPhone')\\\"></span>\\n\\t\\t\\t\\t      \\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Phone No\\\" [(ngModel)]=\\\"columnField['visitorPhone']\\\" (ngModelChange)=\\\"selectColInput('visitorPhone')\\\" >\\n\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Expected Date/Time of Visit<span (click)=\\\"sortUnitData('visitorInTime')\\\" [ngClass]=\\\"getFieldOrderBy('visitorInTime')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Expected Time-out<span (click)=\\\"sortUnitData('visitorOutTime')\\\" [ngClass]=\\\"getFieldOrderBy('visitorOutTime')\\\"></span></th>\\n\\t\\t\\t\\t\\t  <th scope=\\\"col\\\">Visitor Type<span (click)=\\\"sortUnitData('visitorOutTime')\\\" [ngClass]=\\\"getFieldOrderBy('visitorType')\\\"></span></th>\\n\\t\\t\\t\\t\\t  <th scope=\\\"col\\\">Visitor category<span (click)=\\\"sortUnitData('visitorCategoryId_Label')\\\" [ngClass]=\\\"getFieldOrderBy('visitorCategoryId_Label')\\\"></span></th>\\n\\t\\t\\t\\t\\t  <th scope=\\\"col\\\">Tower Unit<span (click)=\\\"sortUnitData('block_Unit')\\\" [ngClass]=\\\"getFieldOrderBy('block_Unit')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Action</th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let visitor of visitorListData | simpleSearch: visitorData | sort : unitFieldType: unitOrder | slice:ItemUserStartIndex:ItemUserEndIndex ; let i = index\\\">\\n\\t\\t\\t\\t      <td class=\\\"name\\\">\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\" placement=\\\"right\\\" [ngbPopover]=\\\"popContent\\\" triggers=\\\"mouseenter:mouseleave\\\">{{visitor.expectedVisitorName}}\\n\\t\\t\\t\\t      \\t<ng-template #popContent>\\n\\t\\t\\t\\t\\t\\t    <div class=\\\"pop-desp\\\">\\n\\t\\t\\t\\t\\t\\t    \\t<ul>\\n\\t\\t\\t\\t\\t\\t    \\t\\t<li>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<h5>Visitor Count</h5>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<small>{{visitor.expectedVisitorCount}}</small>\\n\\t\\t\\t\\t\\t\\t    \\t\\t</li>\\n\\t\\t\\t\\t\\t\\t    \\t\\t<li>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<h5>Expected Duration</h5>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<small>{{visitor.expectedDuration}}</small>\\n\\t\\t\\t\\t\\t\\t    \\t\\t</li>\\n\\t\\t\\t\\t\\t\\t    \\t</ul>\\n\\t\\t\\t\\t\\t\\t    </div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t      </td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{visitor.expectedVisitorPhone}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{getTimeFormat(visitor.expectedVisitorInTime)}}</td>\\n\\t\\t\\t\\t\\t  <td class=\\\"grey\\\">{{getTimeFormat(visitor.expectedVisitorOutTime)}}</td>\\n\\t\\t\\t\\t\\t  <td class=\\\"grey\\\">{{visitor.visitTypeName}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{visitor.visitorCategoryId_Label}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{visitor.block_Unit}}</td>\\n\\t\\t\\t\\t      <td>\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t      \\tplacement=\\\"top\\\" [ngbPopover]=\\\"popAddCheckInContent\\\" triggers=\\\"mouseenter:mouseleave\\\"\\n\\t\\t\\t\\t      \\trouterLink=\\\"/ams/visitor/edit-visitor/{{visitor.expectedVisitorId}}/checkin\\\" \\n\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t\\t<img src=\\\"assets/images/checkin-icon.svg\\\" width=\\\"20\\\" />\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t<ng-template #popAddCheckInContent>\\n\\t\\t\\t\\t      \\t\\t<div class=\\\"pop-desp\\\">\\n\\t\\t\\t\\t      \\t\\t\\t<h5>CheckIn</h5>\\n\\t\\t\\t\\t      \\t\\t</div>\\n\\t\\t\\t\\t      \\t</ng-template>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table> -->\\n\\t\\t\\t\\n\\t\\t\\t<!-- <app-pagination \\n\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t\\t</app-pagination> -->\\n\\n\\t\\t\\t<jqxGrid \\n\\t\\t\\t[theme]=\\\"'material'\\\" \\n\\t\\t\\t[width]=\\\"'100%'\\\"\\n\\t\\t\\t[rowsheight]=\\\"48\\\"\\n\\t\\t\\t[autoheight]=\\\"true\\\"\\n\\t\\t\\t[pageable]=\\\"true\\\" \\n\\t\\t\\t[filterable]=\\\"true\\\" \\n\\t\\t\\t[sortable]=\\\"true\\\" \\n\\t\\t\\t[source]=\\\"listData\\\"\\n\\t\\t\\t[columns]=\\\"columnData\\\"\\n\\t\\t\\t[columnsresize]=\\\"true\\\"\\n\\t\\t\\t[enablehover]=\\\"false\\\"\\n\\t\\t#datagrid>\\n\\t\\t</jqxGrid> \\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n\\n</div>\"","export default \"<div class=\\\"visitor-history-wrapper\\\">\\n\\t\\n\\t<app-loader *ngIf=\\\"!isVisitorDataLoaded\\\"></app-loader>\\n\\n\\t\\n\\n\\t<div class=\\\"card table-card\\\" *ngIf=\\\"isVisitorDataLoaded\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All Checked-Out Visitors <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"visitorData\\\" (ngModelChange)=\\\"onGlSearchFilter()\\\">\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<app-print-dropdown (outputParams) =\\\"getPrintParams($event)\\\"></app-print-dropdown>\\n\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n  \\t\\t\\n  \\t\\t<div class=\\\"card-body p-0\\\">\\n  \\t\\t\\t\\n  \\t\\t\\t<!-- <table class=\\\"table\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('visitorName')\\\">Visitor Name <span [ngClass]=\\\"getFieldOrderBy('visitorName')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('visitorPhone')\\\">Phone Number <span [ngClass]=\\\"getFieldOrderBy('visitorPhone')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('visitorInTime')\\\">In-time <span [ngClass]=\\\"getFieldOrderBy('visitorInTime')\\\"></span></th>\\n\\t\\t\\t\\t\\t  <th scope=\\\"col\\\" (click)=\\\"sortUnitData('visitorOutTime')\\\">Out-time <span [ngClass]=\\\"getFieldOrderBy('visitorOutTime')\\\"></span></th>\\n\\t\\t\\t\\t\\t  <th scope=\\\"col\\\" (click)=\\\"sortUnitData('expectedVisitorInTime')\\\">Expected In-time <span [ngClass]=\\\"getFieldOrderBy('expectedVisitorInTime')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('expectedVisitorOutTime')\\\">Expected Out-time <span [ngClass]=\\\"getFieldOrderBy('expectedVisitorOutTime')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('blockNo')\\\">Block No<span [ngClass]=\\\"getFieldOrderBy('blockNo')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('blockUnitNo')\\\">Unit No <span [ngClass]=\\\"getFieldOrderBy('blockUnitNo')\\\"></span></th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let visitor of visitorListData | simpleSearch: visitorData | sort : unitFieldType: unitOrder | slice:ItemUserStartIndex:ItemUserEndIndex ; let i = index\\\">\\n\\t\\t\\t\\t      <td class=\\\"name\\\">\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\" placement=\\\"right\\\" [ngbPopover]=\\\"popContent\\\" triggers=\\\"mouseenter:mouseleave\\\">{{visitor.visitorName}}\\n\\t\\t\\t\\t      \\t<ng-template #popContent>\\n\\t\\t\\t\\t\\t\\t    <div class=\\\"pop-desp\\\">\\n\\t\\t\\t\\t\\t\\t    \\t<ul>\\n\\t\\t\\t\\t\\t\\t    \\t\\t<li>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<h5>Visitor Count</h5>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<small>{{visitor.visitorCount}}</small>\\n\\t\\t\\t\\t\\t\\t    \\t\\t</li>\\n\\t\\t\\t\\t\\t\\t    \\t\\t<li *ngIf=\\\"visitor.expectedVisitorDuration != null\\\">\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<h5>Expected Duration</h5>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<small>{{visitor.expectedVisitorDuration}}</small>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<h5>Actual Duration</h5>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<small>{{visitor.expectedDuration}}</small>\\n\\t\\t\\t\\t\\t\\t    \\t\\t</li>\\n\\t\\t\\t\\t\\t\\t    \\t</ul>\\n\\t\\t\\t\\t\\t\\t    </div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t      </td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{visitor.visitorPhone}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{visitor.visitorInTime | date:'MM/dd/yy, hh:mm'}}</td>\\n\\t\\t\\t\\t\\t  <td class=\\\"grey\\\">{{visitor.visitorOutTime | date:'MM/dd/yy, hh:mm'}}</td>\\n\\t\\t\\t\\t\\t  <td class=\\\"grey\\\">{{visitor.expectedVisitorInTime | date:'MM/dd/yy, hh:mm'}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{visitor.expectedVisitorOutTime | date:'MM/dd/yy, hh:mm'}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{visitor.blockNo}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{visitor.blockUnitNo}}</td>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\t\\t\\t\\n\\t\\t\\t<app-pagination \\n\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t\\t</app-pagination> -->\\n\\n\\t\\t\\t<jqxGrid \\n\\t\\t\\t[theme]=\\\"'material'\\\" \\n\\t\\t\\t[width]=\\\"'100%'\\\"\\n\\t\\t\\t[rowsheight]=\\\"48\\\"\\n\\t\\t\\t[autoheight]=\\\"true\\\"\\n\\t\\t\\t[pageable]=\\\"true\\\" \\n\\t\\t\\t[filterable]=\\\"true\\\" \\n\\t\\t\\t[sortable]=\\\"true\\\" \\n\\t\\t\\t[source]=\\\"listData\\\"\\n\\t\\t\\t[columns]=\\\"columnData\\\"\\n\\t\\t\\t[columnsresize]=\\\"true\\\"\\n\\t\\t\\t[enablehover]=\\\"false\\\"\\n\\t\\t#datagrid>\\n\\t</jqxGrid>\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n\\n</div>\"","export default \"<div class=\\\"user-report-data-wrapper\\\">\\n\\t\\n\\t<app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n\\n\\t<ng-container *ngIf=\\\"isDataLoaded\\\">\\n        <div class=\\\"relative-card ml-auto float-right\\\">\\n\\t\\t\\t<div class=\\\"relative-icon\\\">\\n\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" routerLink=\\\"/ams/visitor/reports\\\" \\n\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"icon-wrapper\\\">\\n\\t\\t\\t\\t\\t\\t<img class=\\\"svg\\\" src=\\\"assets/images/book-icon.svg\\\" width=\\\"17\\\">\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<span class=\\\"d-inline-block\\\">All Rreports</span>\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card clear form-group\\\" id=\\\"accordion\\\">\\n            <div class=\\\"card-body p-0\\\">\\n                <ul class=\\\"list-group tabs clear\\\">\\n                <li class=\\\"list-group-item\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#typeCollapseOne\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"typecollapseOne\\\">\\n                    Filter By\\n                </li>\\n                <div id=\\\"typeCollapseOne\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingOne\\\" data-parent=\\\"#accordion\\\">\\n                <div class=\\\"details\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t<form #reportsFilterForm = \\\"ngForm\\\" name=\\\"reportsFilterForm\\\" (ngSubmit)=\\\"submitReportsFilterForm(reportsFilterForm)\\\"  novalidate>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"card-header no-border\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box mb-2\\\">\\n\\t\\t\\t                   <label>Select Block No</label>\\n\\t\\t\\t                    <select \\n\\t\\t\\t\\t\\t\\t\\t        name=\\\"blockId\\\" \\n\\t\\t\\t\\t\\t\\t\\t        id=\\\"blockId\\\" \\n\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"blockId\\\">\\n\\t\\t\\t\\t\\t\\t\\t        <option [ngValue]=\\\"null\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of unitBlocksData\\\" [value]=\\\"item.apartmentBlockId\\\">{{ item.apartmentBlockNumber }}</option>\\n\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t            \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n                        <div class=\\\"col-sm-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>start Date<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"startDate\\\" [owlDateTime]=\\\"startDate\\\" [owlDateTimeTrigger]=\\\"startDate\\\" placeholder=\\\"Date Time\\\" [(ngModel)]=\\\"start_date\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #startDate></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"startDate\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t                \\t\\t</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>End Date<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"endDate\\\" [owlDateTime]=\\\"endDate\\\" [owlDateTimeTrigger]=\\\"endDate\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"end_date\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #endDate></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"endDate\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t                \\t\\t</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Visit Type</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select \\n\\t\\t\\t\\t\\t\\t\\t        name=\\\"visitBy\\\" \\n\\t\\t\\t\\t\\t\\t\\t        id=\\\"visitBy\\\" \\n\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"visitTypeId\\\">\\n\\t\\t\\t\\t\\t\\t\\t        <option [ngValue]=\\\"null\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of visitByData\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n                       \\n\\t\\t\\t\\t\\t</div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"list-inline float-right mt-4\\\">\\n                                <button  class=\\\"btn blue mr-4\\\" [disabled]=\\\"reportsFilterForm.invalid\\\">Apply Filter</button>\\n                                <button class=\\\"btn blue mr-2\\\" type=\\\"button\\\" (click)=\\\"cancel(reportsFilterForm)\\\">Clear Filter</button>\\n                            </div>\\n                        </div>\\n                      </div>\\n\\t\\t\\t\\t</div>\\n                \\n\\t\\t\\t</form>\\n\\n\\t\\t</div>\\n    </div>\\t\\n    </ul>\\n</div>\\n</div>\\n\\n\\t\\t<div class=\\\"card table-card\\\" *ngIf=\\\"isReportSubmitted\\\">\\n\\n\\t\\t\\t<div class=\\\"card-header\\\">\\n\\t    \\t\\t<div class=\\\"float-left\\\">\\n\\t    \\t\\t\\t<h5>{{pageName}} <span class=\\\"badge blue\\\">{{totalItems}}</span></h5>\\n\\t    \\t\\t</div>\\n\\t    \\t\\t<ul class=\\\"list-inline float-right\\\">\\n\\t    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n\\t    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n\\t    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"reportData\\\" (ngModelChange)=\\\"onGlSearchFilter()\\\" >\\n\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t<app-print-dropdown (outputParams) =\\\"getPrintParams($event)\\\"></app-print-dropdown>\\n\\t    \\t\\t</ul>\\n\\t  \\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"card-body p-0\\\">\\n\\t\\t\\t\\t<jqxGrid \\n\\t\\t\\t[theme]=\\\"'material'\\\" \\n\\t\\t\\t[width]=\\\"'100%'\\\"\\n\\t\\t\\t[rowsheight]=\\\"48\\\"\\n\\t\\t\\t[autoheight]=\\\"true\\\"\\n\\t\\t\\t[pageable]=\\\"true\\\" \\n\\t\\t\\t[filterable]=\\\"true\\\" \\n\\t\\t\\t[sortable]=\\\"true\\\" \\n\\t\\t\\t[source]=\\\"listData\\\"\\n\\t\\t\\t[columns]=\\\"columnData\\\"\\n\\t\\t\\t[columnsresize]=\\\"true\\\"\\n\\t\\t\\t[enablehover]=\\\"false\\\"\\n\\t\\t#datagrid>\\n\\t\\t</jqxGrid> \\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\n\\t</ng-container>\\n\\n\\n\\t\\n\\n</div>\\n\"","export default \"<div class=\\\"reports-wrapper\\\">\\n\\n\\t<app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n\\n\\t<ng-container *ngIf=\\\"isDataLoaded\\\">\\n\\n\\t\\t<h5 class=\\\"mb-3\\\">Visitor Management Reports </h5>\\n\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-sm-6 mb-20\\\" *ngFor=\\\"let report of reportDataList\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"card report-card\\\">\\n\\t\\t\\t\\t\\t\\t<a class=\\\"t-no-decor\\\" href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t\\t\\t\\trouterLink = \\\"/ams/visitor/reports/{{report.lookupValueName}}/{{report.lookupValueId}}\\\" \\n\\t\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<h6>{{report.lookupValueName}}</h6>\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>{{report.description}}</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t</ng-container>\\n\\n</div>\"","export default \"<div class=\\\"visitor-setup-wrapper\\\">\\n\\t\\n\\t<app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n\\n\\t<div class=\\\"card table-card mb-30 vehicle-type-table-card\\\" *ngIf=\\\"isDataLoaded\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>Visitor Categories <span class=\\\"badge blue\\\">{{totalItems}}</span></h5>\\n    \\t\\t\\t<p class=\\\"d-none d-md-inline-block\\\">Edit and Delete Visitor Categories</p>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"categoryData\\\" >\\n    \\t\\t\\t</li>\\n\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t<a class=\\\"btn lime-green mt_5\\\" (click)=\\\"addNewCategoryType()\\\">\\n\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon plus\\\" name=\\\"plus\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t<span>Add Category</span>\\n\\t\\t\\t\\t\\t</a>\\n\\t    \\t\\t</li>\\n\\t\\t\\t</ul>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div class=\\\"card-body p-0\\\">\\n\\t\\t\\n\\t\\t\\t<table class=\\\"table\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Sno <span [ngClass]=\\\"getFieldOrderBy('primayContact')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('lookupValueName')\\\">Visitor Category <span [ngClass]=\\\"getFieldOrderBy('lookupValueName')\\\"></span></th> \\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Action</th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let category of categoryDataList | simpleSearch: categoryData | sort : unitFieldType: unitOrder | slice:ItemStartIndex:ItemEndIndex ; let i = index\\\">\\n\\t\\t\\t\\t      <td>{{i + 1}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{category.lookupValueName}}</td> \\n\\t\\t\\t\\t      <td>\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\" class=\\\"mr-2\\\" (click)=\\\"updateCategoryType(category)\\\">\\n\\t\\t\\t\\t      \\t\\t<i-feather class=\\\"icon edit\\\" name=\\\"edit\\\"></i-feather>\\n\\t\\t\\t\\t      \\t</a>\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\" (click)=\\\"deleteCategoryType(category)\\\"><i-feather class=\\\"icon delete\\\" name=\\\"trash\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t                </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\t\\t\\t<app-pagination \\n\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t\\t</app-pagination>\\n\\t\\t</div>\\n\\n    </div>\\n\\n    <div class=\\\"card mb-30 vehicle-type-card\\\" *ngIf=\\\"isCategoryTypeNew || isCategoryTypeUpdate\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h6 *ngIf=\\\"isCategoryTypeNew\\\">Add Visitor Category</h6>\\n    \\t\\t\\t<h6 *ngIf=\\\"!isCategoryTypeNew\\\">Update Visitor Category</h6>\\n    \\t\\t</div>\\n    \\t\\t<div class=\\\"float-right\\\" (click)=\\\"removeCategoryTypeBox()\\\">\\n    \\t\\t\\t<i-feather class=\\\"icon del\\\" name=\\\"x\\\"></i-feather>\\n    \\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card-body\\\">  \\n\\t\\t\\t\\n\\t\\t\\t<!-- <app-alert-message [isError]=\\\"isError\\\"></app-alert-message> -->\\n\\n\\t\\t\\t<app-loader *ngIf=\\\"!isCategoryTypeSubmitted\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"isCategoryTypeSubmitted\\\">\\n\\n\\t\\t\\t\\t<form #addCategoryTypeForm = \\\"ngForm\\\" name=\\\"addCategoryTypeForm\\\"  (ngSubmit)=\\\"submitCategoryTypeForm(addCategoryTypeForm)\\\"  novalidate>\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\"> \\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Visitor Category*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter text\\\" name=\\\"categoryType\\\" [(ngModel)]=\\\"categoryType\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue at-input\\\" [disabled]=\\\"addCategoryTypeForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n</div>\\n\"","export default \"<router-outlet></router-outlet>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvdmlzaXRvci1jaGVja2luL3Zpc2l0b3ItY2hlY2tpbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { UserService } from 'src/app/api/controllers/User';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { VisitorService } from 'src/app/api/controllers/Visitor';\nimport { CookieService } from 'ngx-cookie-service';\nimport { SharedToasterService } from '../../../../shared/services/shared-toaster.service';\n\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-visitor-checkin',\n  templateUrl: './visitor-checkin.component.html',\n  styleUrls: ['./visitor-checkin.component.scss']\n})\nexport class VisitorCheckinComponent implements OnInit {\n\n  isVisitorSubmitted: boolean = true;\n  isVisitorAdded:boolean = false;\n  isError: boolean = false;\n  errorMessage: string = \"\";\n\n  visitor: any;\n\n  visitByData: any;\n  visitTypeId: string = \"\";\n\n  apartmentUnitId: number;\n\n  isExpectedVisitor: boolean = false;\n\n  visitorStatus: string = \"\";\n  minDate;\n  isUnitVisitor = false;\n  iscommunityVisitor = false;\n  visitCategoryData;\n  visitCategoryId;\n  blockUnitData: any;\n  actualInTime: any;\n  actualOutTime: any;\n  actualVisitorCount: any;\n  actualDuration: any;\n  expectedDuration: any;\n  minOutDate: any;\n  minExOutTime: any;\n  isValidphoneNumber:boolean = false;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private apartmentService: ApartmentService,\n    private visitorService: VisitorService,\n    private lookupService: LookupService,\n    private sharedService: SharedService,\n    private cookieService: CookieService,\n    private SharedToaster: SharedToasterService,\n  ) {\n\n    this.minDate = moment(new Date()).format('YYYY-MM-DD');\n  }\n\n\n  isCheckout() {\n    return this.visitorStatus == 'checkout' ? true : false;\n  }\n  \n  IsvalidatePhoneNo(val):boolean{\n    var retVal = true;\n      var rex =new RegExp(/^[+]?\\d+$/);\n      var isValid = rex.test(val);\n      console.log(val.length);\n      if(val.length>13){\n        retVal = false;\n        var errorDetails = {\n          msg : \"phone no length should be within 13 characters\",\n          type: \"Error\"\n         };\n         this.sharedService.setCustomAlertMessage(errorDetails);\n      }\n      if(!isValid){\n        retVal = false;\n        var errorDetails = {\n          msg : \"Kindly enter proper phoneno\",\n          type: \"Error\"\n         };\n         this.sharedService.setCustomAlertMessage(errorDetails);\n      }\n    return retVal;\n    }\n\n  submitAddVisitorForm(form) {\n\n    if(!this.IsvalidatePhoneNo(this.visitor.expectedVisitorPhone))\n   return true;\n    \n    this.isVisitorSubmitted = true;\n    this.isError = false;\n\n    if (!this.isCheckout()) {\n      this.visitor.expectedDurationInHours = this.getDurationInHours(this.actualInTime, this.visitor.expectedVisitorOutTime);\n        let visitorDetails = {\n          \"expectedVisitorId\": parseInt(this.route.params['value'].id),\n          \"apartmentUnitId\": this.apartmentUnitId,\n          \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n          \"visitorName\": this.visitor.expectedVisitorName,\n          \"visitorCount\": this.visitor.expectedVisitorCount,\n          \"visitorPhone\": this.visitor.expectedVisitorPhone.toString(),\n          \"visitorVehicleTypeId\": 1,\n          \"visitorVehicleNumber\": \"string\",\n          \"visitingPlaceId\": 1,\n          \"passNumber\": this.visitor.passNumber,\n          \"isCheckedIn\": true,\n          \"visitorInTime\": this.actualInTime,\n          \"isCheckedOut\": false,\n          \"visitorOutTime\": this.visitor.expectedVisitorOutTime,\n          \"expectedDuration\": this.visitor.expectedDurationInHours,\n          \"meetingPersonId\": 1,\n          \"meetingPersonName\": \"string\",\n          \"visitTypeId\": parseInt(this.visitTypeId),\n          \"visitorCategoryId\": parseInt(this.visitCategoryId),\n          \"visitorsOrg\": \"string\",\n          \"entryGateId\": null,\n          \"exitGateId\": null,\n          \"purpose\": this.visitor.purpose,\n          \"enteredBy\": parseInt(this.cookieService.get('userId')),\n          \"isActive\": true,\n          \"insertedBy\": parseInt(this.cookieService.get('userId')),\n          \"insertedOn\": new Date().toISOString(),\n          \"updatedBy\": parseInt(this.cookieService.get('userId')),\n          \"updatedOn\": new Date().toISOString(),\n          \"expectedVisitorInTime\": this.visitor.expectedVisitorInTime,\n          \"expectedVisitorOutTime\": this.visitor.expectedVisitorOutTime,\n          \"expectedVisitorDuration\": this.visitor.expectedDuration\n    \n      }\n        let params = {\n          visitor: visitorDetails\n        }\n\n      this.visitorService.addVisitor(params).subscribe((res: any) => {\n\n        if (res.message) {\n          this.isVisitorAdded = true;\n          // this.sharedService.setAlertMessage(\"Visitor Checked In successfully\");\n          // this.router.navigate(['/ams/visitor/expected-visitor'])\n        }\n        else {\n\n          this.isVisitorSubmitted = false;\n          this.isVisitorAdded = false;\n          this.isError = true;\n          this.errorMessage = res.errorMessage;\n        }\n\n      },\n        error => {\n\n          this.isVisitorSubmitted = false;\n          this.isVisitorAdded = false;\n          this.isError = true;\n          this.errorMessage = error;\n\n        });\n\n    }\n    else {\n\n      let visitorDetails = {\n        \"visitorId\": parseInt(this.route.params['value'].id),\n        \"checkOutTime\": '2020-05-19T07:10:33.863',\n        \"updatedBy\": parseInt(this.cookieService.get('userId')),\n      }\n      \n      this.visitorService.checkOutVisitor(visitorDetails).subscribe((res: any) => {\n\n        if (res.message) {\n          this.isVisitorAdded = true;\n          // this.sharedService.setAlertMessage(\"Visitor checked out successfully\");\n        }\n        else {\n\n          this.isVisitorSubmitted = false;\n          this.isError = true;\n          this.isVisitorAdded = false;\n          this.errorMessage = res.errorMessage;\n        }\n\n      },\n        error => {\n\n          this.isVisitorSubmitted = false;\n          this.isError = true;\n          this.errorMessage = error;\n          this.isVisitorAdded = false;\n\n        });\n\n    }\n\n  }\n\n  ngOnInit() {\n\n    this.visitor = {};\n\n    if (this.route.params['value'].id != undefined) {\n\n      this.visitorStatus = this.route.params['value'].type;\n\n      if (this.visitorStatus == 'checkout') {\n\n        this.visitorService.getVisitorById(this.route.params['value'].id).subscribe((res: any) => {\n        \n          let visitorIdParam = {\n            visitorId : this.route.params['value'].id\n          }\n  \n          this.visitorService.getVisitorById(visitorIdParam).subscribe((res:any) => {\n            this.visitor = res[0];\n\n          this.visitTypeId = this.visitor.visitTypeId;\n          this.visitCategoryId = this.visitor.visitorCategoryId;\n          this.visitor.purpose = '';\n          this.visitor.visitorOutTime = moment(new Date());\n\n          let inDate = moment(this.visitor.visitorInTime);\n          let outDate = moment(this.visitor.visitorOutTime);\n          let diffDuration = moment.duration(outDate.diff(inDate));\n          this.expectedDuration = diffDuration.days() + \" days \" + this.isSingleDigit(diffDuration.hours()) + \":\" + this.isSingleDigit(diffDuration.minutes()) + \" hours\";\n          this.isVisitorSubmitted = false;\n          this.minOutDate = new Date();\n        },\n          error => {\n\n          }\n        );\n        });\n      }\n      else if (this.visitorStatus == 'checkin') {\n        let expectedVisitorIdParam = {\n          expectedVisitorId : this.route.params['value'].id\n        }\n        this.visitorService.getExpectedVisitorById(expectedVisitorIdParam).subscribe((res: any) => {\n\n          this.visitor = res[0];\n          console.log('this.visitor', this.visitor)\n          this.visitor.purpose = '';\n          this.visitTypeId = this.visitor.visitTypeId;\n          this.visitCategoryId = this.visitor.visitorCategoryId;\n          this.actualInTime = moment(new Date());\n          this.isVisitorSubmitted = false;\n          this.minExOutTime = new Date(this.actualInTime);\n          this.expectedDuration = this.getDuration(this.actualInTime, this.visitor.expectedVisitorOutTime);\n          this.visitor.expectedDurationInHours = this.getDurationInHours(this.actualInTime, this.visitor.expectedVisitorOutTime);\n        },\n          error => {\n\n          }\n        );\n\n\n      }\n\n    }\n\n\n    let visitParams = {\n      ApartmentId: parseInt(this.cookieService.get('apartmentId')),\n      LookupTypeId: 15\n    }\n\n    //visit type\n    this.lookupService.getLookupValueByLookupTypeId(visitParams).subscribe((res: any) => {\n\n      this.visitByData = res;\n\n    },\n      error => {\n\n      }\n    );\n    let categoryParams = {\n      ApartmentId: parseInt(this.cookieService.get('apartmentId')),\n      LookupTypeId: 100\n    }    \n    //visit type\n    this.lookupService.getLookupValueByLookupTypeId(categoryParams).subscribe((res: any) => {\n\n      this.visitCategoryData = res.filter(item => {\n        return item.isActive;\n      });\n\n    },\n      error => {\n\n      }\n    );\n    let apartmentParams = {\n      userId: parseInt(this.cookieService.get('userId'))\n    }\n\n    this.apartmentService.getApartmentBlockUnitByUserId(apartmentParams).subscribe((res: any) => {\n\n      this.apartmentUnitId = res[0].apartmentBlockUnitId;\n\n    },\n      error => {\n\n      }\n    );\n    this.visitor.expectedVisitorInTime = moment(new Date());\n    this.visitor.visitorInTime = moment(new Date());\n\n    this.apartmentService.getAllApartmentBlockUnits().subscribe((res: any) => {\n\n      this.blockUnitData = res;\n\n    });\n  }\n\n  navigateTo(param) {\n    if(param){\n    this.router.navigate(['/ams/visitor/checkout']);\n    }else{\n      this.router.navigate(['/ams/visitor/expected-visitor']);\n    }\n  }\n\n  changeVisitorType(id) {\n    console.log(id);\n    let result = this.visitByData.filter(filterId => id == filterId.lookupValueId);\n    console.log(result);\n    this.isUnitVisitor = (result[0].lookupValueName == 'Unit Visitor') ? true : false;\n    this.iscommunityVisitor = (result[0].lookupValueName == \"Community Visitor\") ? true : false;\n  }\n\n  expectedDurationChange(date1, date2) {\n    if (this.minDate > moment(date1).format('YYYY-MM-DD')) {\n      this.visitor.expectedVisitorInTime = undefined;\n      this.SharedToaster.openSnackBar(\"Please Select valid Date\", '');\n      return;\n    }\n\n    if (this.minDate > moment(date2).format('YYYY-MM-DD')) {\n      this.visitor.expectedVisitorOutTime = undefined;\n      this.SharedToaster.openSnackBar(\"Please Select Out-time greater than In-time\", '');\n      return;\n    }\n   \n    if (date2) {\n      if (moment(date1).format('YYYY-MM-DD') > moment(date2).format('YYYY-MM-DD')) {\n        this.visitor.expectedVisitorOutTime = undefined;\n        this.SharedToaster.openSnackBar(\"Please Select Out-time greater than In-time\", '');\n        return;\n      }\n    }\n    this.expectedDuration = this.getDuration(date1, date2);\n    this.visitor.expectedDurationInHours = this.getDurationInHours(date1, date2);\n  }\n  getDuration(date1, date2) {\n    let inDate = moment(date1);\n    let outDate = moment(date2);\n    let diffDuration = moment.duration(outDate.diff(inDate));\n    return  diffDuration.days() + \" days \" + this.isSingleDigit(diffDuration.hours()) + \":\" + this.isSingleDigit(diffDuration.minutes()) + \" hours\";\n  }\n  getDurationInHours(date1, date2){\n    let inDate = moment(date1);\n    let outDate = moment(date2);\n    let sendDuration = moment.duration(outDate.diff(inDate));\n    let hours = sendDuration.asHours();\n    return Math.round(hours);\n  }\n  isSingleDigit(digit) {\n    if (digit <= 0) {\n      return '00';\n    } else {\n      return (digit.toString().length > 1) ? digit : '0' + digit;\n    }\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvdmlzaXRvci1jaGVja291dC92aXNpdG9yLWNoZWNrb3V0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Injector, ViewChild, HostListener } from '@angular/core';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { VisitorService } from 'src/app/api/controllers/Visitor';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ConfirmDialogModel, CommonConfirmModalComponent } from 'src/app/shared/components/common-confirm-modal/common-confirm-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport * as _ from 'underscore';\nimport * as moment from 'moment';\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-visitor-checkout',\n  templateUrl: './visitor-checkout.component.html',\n  styleUrls: ['./visitor-checkout.component.scss']\n})\nexport class VisitorCheckoutComponent implements OnInit {\n\n   visitorData:string = \"\";\n  visitorListData:any;\n\n  isVisitorDataLoaded:boolean = false;\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n\n  visitor:any;\n\n  modalService:any;\n\n  totalFilterItems:any;\n  visitTypeData:any;\n  result: string = '';\n  columnData:any;\n  gridSourceData:any;\n  listData: any;\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n\n\n  constructor(\n    private router: Router,\n    private injector: Injector,\n  \tprivate apartmentService:ApartmentService,\n    private visitorService:VisitorService,\n    private lookupService: LookupService,\n    private cookieService: CookieService,\n    public dialog: MatDialog,\n  ) { \n    this.modalService = this.injector.get(ModalService);\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  getBlockUnit(id){\n\n  \t\n    \n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  showConfirmModal(index) {\n    this.modalService.showConfirmModal(index);\n  }\n\n  getVisitorType(){\n    \n  }\n  \n  onGlSearchFilter() {\n\n    if(this.visitorData != \"\"){\n\n      let filtergroup = new jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = this.visitorData;\n      let filtercondition = 'contains';\n      let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n      filtergroup.operator = 'or';\n      filtergroup.addfilter(filter_or_operator, filterData);\n\n      this.datagrid.showfiltercolumnbackground(false);\n\n      this.columnData.forEach(item => {\n        if(item.datafield != 'Actions') {\n          this.datagrid.addfilter(item.datafield, filtergroup, true);\n        }\n      })\n\n      this.datagrid.applyfilters();\n      \n    }\n    else {\n      this.datagrid.clearfilters();\n    }\n\n  }\n\n   //print button\n  print(){\n\n    const confirmationMessage = `Are you sure, you want to Print?`;\n    const dialogData = new ConfirmDialogModel(\"Confirm Action\", confirmationMessage);\n  \n    const dialogRef = this.dialog.open(CommonConfirmModalComponent, {\n      panelClass: 'material',\n      disableClose: true,\n      data: dialogData\n    });\n  \n    dialogRef.afterClosed().subscribe(dialogResult => {\n      this.result = dialogResult;\n      if(this.result){\n        //code\n      }\n    })\n  }\n\n  @HostListener('window:navigateTo', ['$event.detail'])\n  navigateTo(detail) {\n   \n    let dataRecord = this.datagrid.getrowdata(detail.rowId);\n    let visitorId = dataRecord.visitorId;\n    this.router.navigateByUrl('/ams/visitor/edit-visitor/' + visitorId + '/checkout');\n\n  }\n\n  getPrintParams(event){\n    this.datagrid.exportdata(event, 'visitorCheckOutData');\n  }\n\n  getDateTime(val){\n    if(val != ''){\n      return moment(val).format(\"MM/DD/YY hh:mm\")\n    }else{\n      return ''\n    }\n  }\n\n  ngOnInit() {\n\n    var cellsrenderer = (row, column, value) => {\n      return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n    }\n\n    var columnrenderer = (value) => {\n      return '<div style=\"padding: 14px\">' + value + '</div>';\n    }\n\n\n    this.columnData = [{\n         text: 'Id',\n         datafield: 'serialNo',\n         width: 100,\n         pinned: true,\n         cellsrenderer: cellsrenderer,\n         renderer: columnrenderer\n      }, {\n          text: 'Visitor Name',\n          datafield: 'visitorName',\n          width: 100,\n          cellsrenderer: cellsrenderer,\n          renderer: columnrenderer\n      },{\n         text: 'Phone Number',\n         datafield: 'visitorPhone',\n         cellsrenderer: cellsrenderer,\n         minwidth: 80,\n         renderer: columnrenderer\n     }, {\n         text: 'In-time',\n         datafield: 'visitorInTime',\n         cellsrenderer: (row, column, value) => {\n          return '<div class=\"jqx-custom-inner-cell\">'+ this.getDateTime(value) +'</div>'\n        },\n         minwidth: 170,\n         renderer: columnrenderer\n     }, {\n         text: 'Out-time',\n         datafield: 'visitorOutTime',\n         cellsrenderer: (row, column, value) => {\n           console.log('value', value)\n            return '<div class=\"jqx-custom-inner-cell\">'+ this.getDateTime(value) +'</div>'\n     },\n         minwidth: 170,\n         renderer: columnrenderer\n     }, {\n         text: 'Block No',\n         datafield: 'blockNo',\n         cellsrenderer: cellsrenderer,\n         minwidth: 80,\n         renderer: columnrenderer\n     }, {\n         text: 'Unit No',\n         datafield: 'blockUnitNo',\n         cellsrenderer: cellsrenderer,\n         minwidth: 170,\n         renderer: columnrenderer\n     }, {\n        text: 'Pass No',\n        datafield: 'passNumber',\n        cellsrenderer: cellsrenderer,\n        minwidth: 80,\n        renderer: columnrenderer\n     }, {\n        text: 'Visit Type',\n        datafield: 'visitTypeName',\n        cellsrenderer: cellsrenderer,\n        minwidth: 170,\n        renderer: columnrenderer\n     }, {\n         text: 'Action',\n         cellsalign: 'center', \n         align: 'center',\n         width: 120,\n         cellsrenderer: (row: number): string => {\n          return '<div class=\"simple-actions\">'\n          +'<a href=\"javascript:void(0)\" onClick=\"navigateTo('+ row +')\" ><img src=\"assets/images/checkout-icon.svg\" width=\"20\" /> </a>'\n          +'</div>'\n      },\n         renderer: columnrenderer\n     }];\n\n\n    let visitParams = {\n      ApartmentId: parseInt(this.cookieService.get('apartmentId')),\n      LookupTypeId: 15\n    }\n\n    //get visit type\n    this.lookupService.getLookupValueByLookupTypeId(visitParams).subscribe((res:any) => {\n\n      this.visitTypeData = res;\n\n    },\n    error => {\n      \n    }\n    );\n\n    let apartmentParams = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n\n  \tthis.visitorService.getYetToCheckoutVisitorsByApartmentId(apartmentParams).subscribe((res:any) => {\n\n\t\t//filter active true items\n\n    this.visitorListData = res.filter(item => {\n      if(item.block_Unit && item.block_Unit != null){\n        let block = item.block_Unit.split(' ');\n        item.blockNo = block[0];\n        item.blockUnitNo = block[1];\n        }\n      return item.isActive && !item.isCheckedOut;\n    });\n\n    // console.log(this.visitorListData);\n\t\t\n\t\t// //get block and unit details\n\t\t// _.each(this.visitorListData, (item, index) => {\n\n    //   let apartmentBlockUnitIdParam ={\n    //     apartmentBlockUnitId: item.apartmentUnitId\n    //   }\n\n\t\t// this.apartmentService.getApartmentBlockUnitById(apartmentBlockUnitIdParam).subscribe((res:any) => {\n\n\t\t// \tthis.visitorListData[index].blockNo = res[0].apartmentBlockNumber;\n\t\t// \tthis.visitorListData[index].blockUnitNo = res[0].apartmentBlockUnitNumber;\n\n\t  //   },\n\t  //   error => {\n\t      \n\t  //   });\n\n\n    // });\n    \n    this.gridSourceData = {\n      localdata: this.visitorListData,\n      datatype: \"array\"\n    }\n\n    this.listData = new jqx.dataAdapter(this.gridSourceData);\n\n\t\tthis.totalItems = this.visitorListData.length;\n\n\t\tif(this.totalItems>this.itemLimit){\n\t\t\tthis.ItemEndIndex = this.itemLimit;\n\t\t}\n\n\t\telse {\n\t\t\tthis.ItemEndIndex = this.totalItems;\n\t\t}\n\n    this.isVisitorDataLoaded = true;\n    \n    \n    \n\t});\n\n  \t\n\n\n  \t\n\n  }\n\n}\nfunction navigateTo(row){\n  var event = new CustomEvent('navigateTo', {\n    detail: {\n        rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).navigateTo = navigateTo","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvdmlzaXRvci1jcmVhdGUvdmlzaXRvci1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { VisitorService } from 'src/app/api/controllers/Visitor';\nimport { CookieService } from 'ngx-cookie-service';\nimport { SharedToasterService } from '../../../../shared/services/shared-toaster.service';\n\nimport * as moment from 'moment';\n\n@Component({\n    selector: 'app-visitor-create',\n    templateUrl: './visitor-create.component.html',\n    styleUrls: ['./visitor-create.component.scss']\n})\nexport class VisitorCreateComponent implements OnInit {\n\n    isEditVisitor: boolean = false;\n\n    isVisitorSubmitted: boolean = false;\n    isVisitorAdded: boolean = false;\n\n    isError: boolean = false;\n    errorMessage: string = \"\";\n\n    visitor: any;\n\n    visitByData: any;\n    visitTypeId: string = \"\";\n\n    apartmentUnitId: number;\n\n    isExpectedVisitor: boolean = false;\n\n    visitorStatus: string = \"\";\n    minDate;\n    isUnitVisitor = false;\n    iscommunityVisitor = false;\n    visitCategoryData;\n    visitCategoryId;\n    blockUnitData: any;\n    min;\n    minOutDate: any;\n    isValidphoneNumber:boolean = false;\n\n    constructor(\n        private router: Router,\n        private apartmentService: ApartmentService,\n        private visitorService: VisitorService,\n        private lookupService: LookupService,\n        private sharedService: SharedService,\n        private cookieService: CookieService,\n        private SharedToaster: SharedToasterService,\n    ) {\n\n        this.minDate = moment(new Date()).format('YYYY-MM-DD');\n    }\n\n\n    isCheckout() {\n        return this.visitorStatus == 'checkout' ? true : false;\n    }  \n\n    IsvalidatePhoneNo(val):boolean{\n        var retVal = true;\n          var rex =new RegExp(/^[+]?\\d+$/);\n          var isValid = rex.test(val);\n          console.log(val.length);\n          if(val.length>13){\n            retVal = false;\n            var errorDetails = {\n              msg : \"phone no length should be within 13 characters\",\n              type: \"Error\"\n             };\n             this.sharedService.setCustomAlertMessage(errorDetails);\n          }\n          if(!isValid){\n            retVal = false;\n            var errorDetails = {\n              msg : \"Kindly enter proper phoneno\",\n              type: \"Error\"\n             };\n             this.sharedService.setCustomAlertMessage(errorDetails);\n          }\n        return retVal;\n        }\n    \n\n    submitAddVisitorForm(form) {\n\n        if(!this.IsvalidatePhoneNo(this.visitor.expectedVisitorPhone))\n        return true;\n\n        this.isVisitorSubmitted = true;\n        let visitorDetails = {\n    \t\"apartmentUnitId\": this.apartmentUnitId,\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"expectedVisitorName\": this.visitor.expectedVisitorName,\n        \"expectedVisitorCount\": this.visitor.expectedVisitorCount,\n        \"expectedVisitorPhone\": this.visitor.expectedVisitorPhone.toString(),\n        \"expectedVisitorInTime\": this.visitor.expectedVisitorInTime,\n        \"expectedVisitorOutTime\": this.visitor.expectedVisitorOutTime,\n        \"expectedDuration\": this.visitor.expectedDurationInHours,\n        \"passNumber\": this.visitor.passNumber,\n        \"meetingPersonId\": 1,\n        \"visitTypeId\": parseInt(this.visitTypeId),\n        \"visitorCategoryId\": parseInt(this.visitCategoryId),\n        \"visitorsOrg\": \"string\",\n        \"entryGateId\": null,\n        'apartmentBlockNumber': this.visitor.apartmentBlockNumber,\n        'apartmentUnitNumber': this.visitor.apartmentBlockUnitNumber,\n        \"exitGateId\": null,\n        \"purpose\": this.visitor.purpose,\n        \"enteredBy\": parseInt(this.cookieService.get('userId')),\n        \"isActive\": true,\n        \"insertedBy\": parseInt(this.cookieService.get('userId')),\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": null,\n        \"updatedOn\": null,\n      }\n\n      let params = {\n        expectedVisitor: visitorDetails\n      }\n\n    this.visitorService.addExpectedVisitor(params).subscribe((res:any) => {\n          \n        if(res.message) {\n          this.isVisitorSubmitted = true;\n          this.sharedService.setAlertMessage(\"Visitor added successfully\");\n          this.router.navigate(['/ams/visitor/expected-visitor']);\n        }\n        else {\n\n          this.isVisitorSubmitted = false;\n          this.isError = true;\n          this.errorMessage = res.errorMessage;\n        }\n\n      },\n      error => {\n        \n    \t\tthis.isVisitorSubmitted = false;\n    \t\tthis.isError = true;\n    \t\tthis.errorMessage = error;\n     \n            });\n\n    }\n\n\n    ngOnInit() {\n\n        this.visitor = {}\n\n        let params = {\n            ApartmentId: parseInt(this.cookieService.get('apartmentId')),\n            LookupTypeId: 15\n        }\n\n        //visit type\n        this.lookupService.getLookupValueByLookupTypeId(params).subscribe((res: any) => {\n\n            this.visitByData = res;\n\n        },\n            error => {\n\n            }\n        );\n\n        let visitParams = {\n            ApartmentId: parseInt(this.cookieService.get('apartmentId')),\n            LookupTypeId: 100\n        }\n\n        //visit type\n        this.lookupService.getLookupValueByLookupTypeId(visitParams).subscribe((res: any) => {\n\n            this.visitCategoryData = res.filter(item => {\n                return item.isActive;\n              });\n\n        },\n            error => {\n\n            }\n        );\n\n        let apartmentParams = {\n            userId: parseInt(this.cookieService.get('userId'))\n        }\n\n        this.apartmentService.getApartmentBlockUnitByUserId(apartmentParams).subscribe((res: any) => {\n\n            this.apartmentUnitId = res[0].apartmentBlockUnitId;\n\n        },\n            error => {\n\n            }\n        );\n        this.visitor.expectedVisitorInTime = moment(new Date());\n        this.min =  new Date(this.visitor.expectedVisitorInTime);\n        this.minOutDate= new Date(this.visitor.expectedVisitorInTime);\n        let blockParams = {\n            apartmentId: parseInt(this.cookieService.get('apartmentId'))\n        }\n\n        this.apartmentService.getApartmentBlockUnitByApartmentId(blockParams).subscribe((res: any) => {\n           \n                this.blockUnitData = res;\n                console.log('this.blockUnitData', res)\n          \n        });\n    }\n\n    changeVisitorType(id) {\n        console.log(id);\n        let result = this.visitByData.filter(filterId => id == filterId.lookupValueId);\n        console.log(result);\n        this.isUnitVisitor = (result[0].lookupValueName == 'Unit Visitor') ? true : false;\n        this.iscommunityVisitor = (result[0].lookupValueName == \"Community Visitor\") ? true : false;\n    }\n\n    expectedDurationChange() {\n        this.minOutDate= new Date(this.visitor.expectedVisitorInTime);\n        if (this.minDate > moment(this.visitor.expectedVisitorInTime).format('YYYY-MM-DD')) {\n            this.visitor.expectedVisitorInTime = undefined;\n            this.SharedToaster.openSnackBar(\"Please Select valid Date\", '');\n            return;\n        }\n\n        if (this.minDate > moment(this.visitor.expectedVisitorOutTime).format('YYYY-MM-DD')) {\n            this.visitor.expectedVisitorOutTime = undefined;\n            this.SharedToaster.openSnackBar(\"Please Select Out-time greater than In-time\", '');\n            return;\n        }\n        console.log(this.visitor.expectedVisitorOutTime);\n        if (this.visitor.expectedVisitorOutTime) {\n            if (moment(this.visitor.expectedVisitorInTime).format('YYYY-MM-DD') > moment(this.visitor.expectedVisitorOutTime).format('YYYY-MM-DD')) {\n                this.visitor.expectedVisitorOutTime = undefined;\n                this.SharedToaster.openSnackBar(\"Please Select Out-time greater than In-time\", '');\n                return;\n            }\n        }\n\n        let inDate = moment(this.visitor.expectedVisitorInTime);\n        let outDate = moment(this.visitor.expectedVisitorOutTime);\n        let diffDuration = moment.duration(outDate.diff(inDate));\n        this.visitor.expectedDuration = diffDuration.days() + \" days \" + this.isSingleDigit(diffDuration.hours()) + \":\" + this.isSingleDigit(diffDuration.minutes()) + \" hours\";\n\n        let sendDuration = moment.duration(outDate.diff(inDate));\n        let hours = sendDuration.asHours();\n        this.visitor.expectedDurationInHours = Math.round(hours);\n    }\n    isSingleDigit(digit) {\n        if (digit <= 0) {\n            return '00';\n        } else {\n            return (digit.toString().length > 1) ? digit : '0' + digit;\n        }\n\n    }\n\n}\n","export default \".customScroll {\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  cursor: pointer;\\n}\\n.customScroll table thead th {\\n  overflow: hidden !important;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9hbXMvdmlzaXRvci9jb21wb25lbnRzL3Zpc2l0b3ItZXhwZWN0ZWQtdmlzaXRvci92aXNpdG9yLWV4cGVjdGVkLXZpc2l0b3IuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvdmlzaXRvci1leHBlY3RlZC12aXNpdG9yL3Zpc2l0b3ItZXhwZWN0ZWQtdmlzaXRvci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLHlCQUFBO0tBQUEsc0JBQUE7TUFBQSxxQkFBQTtVQUFBLGlCQUFBO0VBQ0EsZUFBQTtBQ0FKO0FESUk7RUFDSSwyQkFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7QUNGUiIsImZpbGUiOiJzcmMvYXBwL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvdmlzaXRvci1leHBlY3RlZC12aXNpdG9yL3Zpc2l0b3ItZXhwZWN0ZWQtdmlzaXRvci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jdXN0b21TY3JvbGx7XG4gICAgLy8gb3ZlcmZsb3cteDogc2Nyb2xsO1xuICAgIHVzZXItc2VsZWN0OiBub25lO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB0aHtcbiAgICAgICAgLy8gbWF4LXdpZHRoOiBub25lICFpbXBvcnRhbnQ7XG4gICAgfVxuICAgIHRhYmxlIHRoZWFkIHRoe1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuICFpbXBvcnRhbnQ7XG4gICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIFxuICAgIH1cbn0iLCIuY3VzdG9tU2Nyb2xsIHtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5jdXN0b21TY3JvbGwgdGFibGUgdGhlYWQgdGgge1xuICBvdmVyZmxvdzogaGlkZGVuICFpbXBvcnRhbnQ7XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xufSJdfQ== */\"","import { Component, OnInit, Injector, HostListener, ViewChild } from '@angular/core';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { VisitorService } from 'src/app/api/controllers/Visitor';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\n\nimport * as moment from 'moment';\nimport { ConfirmDialogModel, CommonConfirmModalComponent } from 'src/app/shared/components/common-confirm-modal/common-confirm-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-visitor-expected-visitor',\n  templateUrl: './visitor-expected-visitor.component.html',\n  styleUrls: ['./visitor-expected-visitor.component.scss']\n})\nexport class VisitorExpectedVisitorComponent implements OnInit {\n\n  visitorData:string = \"\";\n  visitorListData:any;\n\n  isVisitorDataLoaded:boolean = false;\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n\n  visitor:any;\n\n  modalService:any;\n\n  totalFilterItems:any;\n  visitTypeData:any;\n  visitCategoryData:any;\n  selectedInput:string = \"\";\n  columnField: any = {};\n  result: string = '';\n  listData: any;\n  columnData:any;\n  gridSourceData:any;\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n\n\n  constructor(\n    private router: Router,\n    private injector: Injector,\n  \tprivate apartmentService:ApartmentService,\n    private visitorService:VisitorService,\n    private lookupService: LookupService,\n    private cookieService: CookieService,\n    public dialog: MatDialog,\n  ) { \n    this.modalService = this.injector.get(ModalService);\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  selectColInput(value){\n    this.selectedInput = value;\n  }\n\n  onSelectChange(event, type, name){\n\n    if(!_.isEmpty(event)){\n      this.selectedInput = type;\n      this.columnField[type] = event[name];\n    }\n    else {\n       this.columnField = {};\n    }\n    \n  }\n\n  getDateTime(val){\n    if(val != ''){\n      return moment(val).format(\"MM/DD/YY hh:mm\")\n    }else{\n      return ''\n    }\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  showConfirmModal(index) {\n    this.modalService.showConfirmModal(index);\n  }\n\n  getTimeFormat(dateTime){\n    return moment(dateTime).format(\"YYYY-MM-DD HH:mm\");\n  }\n\n  ngOnInit() {\n\n    var cellsrenderer = (row, column, value) => {\n      return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n    }\n\n    var columnrenderer = (value) => {\n      return '<div style=\"padding: 14px\">' + value + '</div>';\n    }\n\n\n    this.columnData = [{\n         text: 'Id',\n         datafield: 'serialNo',\n         width: 100,\n         pinned: true,\n         cellsrenderer: cellsrenderer,\n         renderer: columnrenderer\n      }, {\n          text: 'Visitor Name',\n          datafield: 'expectedVisitorName',\n          width: 100,\n          cellsrenderer: cellsrenderer,\n          renderer: columnrenderer\n      },{\n         text: 'Phone Number',\n         datafield: 'expectedVisitorPhone',\n         cellsrenderer: cellsrenderer,\n         minwidth: 80,\n         renderer: columnrenderer\n     }, {\n         text: 'Expected Date/Time of Visit',\n         datafield: 'expectedVisitorInTime',\n         cellsrenderer: (row, column, value) => {\n          return '<div class=\"jqx-custom-inner-cell\">'+ this.getDateTime(value) +'</div>'\n        },\n         minwidth: 170,\n         renderer: columnrenderer\n     }, {\n         text: 'Expected Time-out',\n         datafield: 'expectedVisitorOutTime',\n         cellsrenderer: (row, column, value) => {\n          return '<div class=\"jqx-custom-inner-cell\">'+ this.getDateTime(value) +'</div>'\n        },\n         minwidth: 170,\n         renderer: columnrenderer\n     }, {\n         text: 'Visit Type',\n         datafield: 'visitType_Label',\n         cellsrenderer: cellsrenderer,\n         minwidth: 80,\n         renderer: columnrenderer\n     }, {\n         text: 'Visitor category',\n         datafield: 'visitorCategoryId_Label',\n         cellsrenderer: cellsrenderer,\n         minwidth: 170,\n         renderer: columnrenderer\n     }, {\n          text: 'Tower Unit',\n          datafield: 'block_Unit',\n          cellsrenderer: cellsrenderer,\n          minwidth: 170,\n          renderer: columnrenderer \n    }, {\n         text: 'Actions',\n         cellsalign: 'center', \n         align: 'center',\n         width: 120,\n         cellsrenderer: (row: number): string => {\n          return '<div class=\"simple-actions\">'\n          +'<a href=\"javascript:void(0)\" onClick=\"navigateTo('+ row +')\" ><img src=\"assets/images/checkin-icon.svg\" width=\"20\" /> </a>'\n          +'</div>'\n      },\n         renderer: columnrenderer\n     }];\n\n  \t\n    let params = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n\n  \tthis.visitorService.getExpectedVisitorsByApartmentId(params).subscribe((res:any) => {\n\n      if(res.errorMessage){\n        this.isVisitorDataLoaded = true;\n    this.visitorListData = [];\n     \n  }else{\n    this.visitorListData = res;\n\n    console.log(\"visitorListData\", this.visitorListData[0].visitTypeId);\n       //filter active true items\n  this.visitorListData = res.filter(data => {\n    return data.isActive\n  })\n  \n  this.gridSourceData = {\n    localdata: this.visitorListData,\n    datatype: \"array\"\n  }\n\n  this.listData = new jqx.dataAdapter(this.gridSourceData);\n       \n  this.totalItems = this.visitorListData.length;\n  this.isVisitorDataLoaded = true;\n  }\n   \n    let visitParams = {\n      ApartmentId: parseInt(this.cookieService.get('apartmentId')),\n      LookupTypeId: 15\n    }\n    \n    //get visit type\n    this.lookupService.getLookupValueByLookupTypeId(visitParams).subscribe((res:any) => {\n\n      this.visitTypeData = res;\n      this.checkVisitTypeData();\n\n    },\n    error => {\n      \n    }\n    );\n      \n  },\n  error => {\n    \n  }\n  )\n   \n  }\n  getPrintParams(event){\n    this.datagrid.exportdata(event, 'expectedVisitorData');\n  }\n\n  checkVisitTypeData() {\n    this.visitTypeData.forEach(element => {\n      if(element.lookupValueId == this.visitorListData[0].visitTypeId){\n        this.visitorListData[0].visitTypeName = element.lookupValueName.toLowerCase();\n      }\n    });\n  }\n\n  @HostListener('window:navigateTo', ['$event.detail'])\n  navigateTo(detail) {\n\n    let dataRecord = this.datagrid.getrowdata(detail.rowId)\n    let expectedVisitorId = dataRecord.expectedVisitorId\n    this.router.navigateByUrl('/ams/visitor/edit-visitor/' + expectedVisitorId + '/checkin');\n\n  }\n\n  onGlSearchFilter() {\n\n    if(this.visitorData != \"\"){\n\n      let filtergroup = new jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = this.visitorData;\n      let filtercondition = 'contains';\n      let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n      filtergroup.operator = 'or';\n      filtergroup.addfilter(filter_or_operator, filterData);\n\n      this.datagrid.showfiltercolumnbackground(false);\n\n      this.columnData.forEach(item => {\n        if(item.datafield != 'Actions') {\n          this.datagrid.addfilter(item.datafield, filtergroup, true);\n        }\n      })\n\n      this.datagrid.applyfilters();\n      \n    }\n    else {\n      this.datagrid.clearfilters();\n    }\n\n  }\n\n  //print button\n  print(){\n\n  const confirmationMessage = `Are you sure, you want to Print?`;\n  const dialogData = new ConfirmDialogModel(\"Confirm Action\", confirmationMessage);\n\n  const dialogRef = this.dialog.open(CommonConfirmModalComponent, {\n    panelClass: 'material',\n    disableClose: true,\n    data: dialogData\n  });\n\n  dialogRef.afterClosed().subscribe(dialogResult => {\n    this.result = dialogResult;\n    if(this.result){\n      //code\n    }\n  })\n\n  }\n\n}\nfunction navigateTo(row){\n  var event = new CustomEvent('navigateTo', {\n    detail: {\n        rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).navigateTo = navigateTo","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvdmlzaXRvci1oaXN0b3J5L3Zpc2l0b3ItaGlzdG9yeS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Injector, HostListener, ViewChild } from '@angular/core';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { VisitorService } from 'src/app/api/controllers/Visitor';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport * as moment from 'moment';\nimport * as _ from 'underscore';\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\n\n@Component({\n  selector: 'app-visitor-hitory',\n  templateUrl: './visitor-history.component.html',\n  styleUrls: ['./visitor-history.component.scss']\n})\nexport class VisitorHistoryComponent implements OnInit {\n\n   visitorData:string = \"\";\n  visitorListData:any;\n\n  isVisitorDataLoaded:boolean = false;\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n\n  visitor:any;\n\n  modalService:any;\n\n  totalFilterItems:any;\n  visitTypeData:any;\n  columnData:any;\n  gridSourceData:any;\n  listData: any;\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n\n\n  constructor(\n    private injector: Injector,\n  \tprivate apartmentService:ApartmentService,\n    private visitorService:VisitorService,\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService: CookieService\n  ) { \n    this.modalService = this.injector.get(ModalService);\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  getBlockUnit(id){\n\n  \t\n    \n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  showConfirmModal(index) {\n    this.modalService.showConfirmModal(index);\n  }\n\n  getVisitorType(){\n    \n  }\n\n  getPrintParams(event){\n    this.datagrid.exportdata(event, 'visitorHistoryData');\n  }\n\n  onGlSearchFilter() {\n\n    if(this.visitorData != \"\"){\n\n      let filtergroup = new jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = this.visitorData;\n      let filtercondition = 'contains';\n      let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n      filtergroup.operator = 'or';\n      filtergroup.addfilter(filter_or_operator, filterData);\n\n      this.datagrid.showfiltercolumnbackground(false);\n\n      this.columnData.forEach(item => {\n        if(item.datafield != 'Actions') {\n          this.datagrid.addfilter(item.datafield, filtergroup, true);\n        }\n      })\n\n      this.datagrid.applyfilters();\n      \n    }\n    else {\n      this.datagrid.clearfilters();\n    }\n\n  }\n\n  getDateTime(val){\n    if(val != ''){\n      return moment(val).format(\"MM/DD/YY hh:mm\")\n    }else{\n      return ''\n    }\n  }\n\n  getBlock(){\n\n  }\n\n  getUnit(){\n\n  }\n\n  ngOnInit() {\n\n    var cellsrenderer = (row, column, value) => {\n      return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n    }\n\n    var columnrenderer = (value) => {\n      return '<div style=\"padding: 14px\">' + value + '</div>';\n    }\n\n\n    this.columnData = [{\n         text: 'Id',\n         datafield: 'serialNo',\n         width: 100,\n         pinned: true,\n         cellsrenderer: cellsrenderer,\n         renderer: columnrenderer\n      }, {\n          text: 'Visitor Name',\n          datafield: 'visitorName',\n          width: 100,\n          cellsrenderer: cellsrenderer,\n          renderer: columnrenderer\n      },{\n         text: 'Phone Number',\n         datafield: 'visitorPhone',\n         cellsrenderer: cellsrenderer,\n         minwidth: 80,\n         renderer: columnrenderer\n     }, {\n         text: 'In-time',\n         datafield: 'visitorInTime',\n         cellsrenderer: (row, column, value) => {\n          return '<div class=\"jqx-custom-inner-cell\">'+ this.getDateTime(value) +'</div>'\n        },\n         minwidth: 170,\n         renderer: columnrenderer\n     }, {\n         text: 'Out-time',\n         datafield: 'visitorOutTime',\n         cellsrenderer: (row, column, value) => {\n          return '<div class=\"jqx-custom-inner-cell\">'+ this.getDateTime(value) +'</div>'\n        },\n         minwidth: 170,\n         renderer: columnrenderer\n     }, {\n         text: 'Expected In-time',\n         datafield: 'expectedVisitorInTime',\n         cellsrenderer: (row, column, value) => {\n          return '<div class=\"jqx-custom-inner-cell\">'+ this.getDateTime(value) +'</div>'\n        },\n         minwidth: 80,\n         renderer: columnrenderer\n     }, {\n         text: 'Expected Out-time',\n         datafield: 'expectedVisitorOutTime',\n         cellsrenderer: (row, column, value) => {\n          return '<div class=\"jqx-custom-inner-cell\">'+ this.getDateTime(value) +'</div>'\n        },\n         minwidth: 170,\n         renderer: columnrenderer \n     }, {\n          text: 'Block No',\n          datafield: 'blockNo',\n          cellsrenderer: cellsrenderer,\n          minwidth: 170,\n          renderer: columnrenderer \n      }, {\n          text: 'Unit No',\n          datafield: 'blockUnitNo',\n          cellsrenderer: cellsrenderer,\n          minwidth: 170,\n          renderer: columnrenderer \n      }];\n\n\n    let visitTypeParams = {\n      ApartmentId: parseInt(this.cookieService.get('apartmentId')),\n      LookupTypeId: 15\n    }\n\n    //get visit type\n    this.lookupService.getLookupValueByLookupTypeId(visitTypeParams).subscribe((res:any) => {\n\n      this.visitTypeData = res;\n\n    },\n    error => {\n      \n    }\n    );\n\n    let visitListParams = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n\n  \tthis.visitorService.getVisitorsByApartmentId(visitListParams).subscribe((res:any) => {\n\n\t\t//filter active true items\n\n    this.visitorListData = res.filter(item => {\n      if(item.block_Unit && item.block_Unit != null){\n      let block = item.block_Unit.split(' ');\n      item.blockNo = block[0];\n      item.blockUnitNo = block[1];\n      }\n      return item.isActive && item.isCheckedOut;\n\n    });\n\n    // console.log(this.visitorListData);\n\t\t\n\t\t// //get block and unit details\n\t\t// _.each(this.visitorListData, (item, index) => {\n\t\t// this.apartmentService.getApartmentBlockUnitById(item.apartmentUnitId).subscribe((res:any) => {\n\n\t\t// \tthis.visitorListData[index].blockNo = res[0].apartmentBlockNumber;\n\t\t// \tthis.visitorListData[index].blockUnitNo = res[0].apartmentBlockUnitNumber;\n\n\t  //   },\n\t  //   error => {\n\t      \n\t  //   });\n\n\n    // });\n    \n    this.gridSourceData = {\n      localdata: this.visitorListData,\n      datatype: \"array\"\n    }\n\n    this.listData = new jqx.dataAdapter(this.gridSourceData);\n         \n\t\tthis.totalItems = this.visitorListData.length;\n\t\tthis.isVisitorDataLoaded = true;\n\n\t\tthis.totalItems = this.visitorListData.length;\n\n\t\tif(this.totalItems>this.itemLimit){\n\t\t\tthis.ItemEndIndex = this.itemLimit;\n\t\t}\n\n\t\telse {\n\t\t\tthis.ItemEndIndex = this.totalItems;\n\t\t}\n\n    this.isVisitorDataLoaded = true;\n    \n    \n    \n\t});\n\n  \t\n\n\n  \t\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvdmlzaXRvci1yZXBvcnRzL3Zpc2l0b3ItcmVwb3J0cy1kYXRhL3Zpc2l0b3ItcmVwb3J0cy1kYXRhLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SharedService } from '../../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { UserService } from 'src/app/api/controllers/User';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport moment from 'moment';\nimport { VisitorService } from 'src/app/api/controllers/Visitor';\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\n@Component({\n    selector: 'app-visitor-reports-data',\n    templateUrl: './visitor-reports-data.component.html',\n    styleUrls: ['./visitor-reports-data.component.scss']\n})\nexport class VisitorReportsDataComponent implements OnInit {\n    pageName: string = \"\";\n    reportsDataList: any;\n    visitorReportData: any;\n    totalItems: any;\n    isDataLoaded: boolean = false;\n    unitBlocksData: any;\n    blockId = null;\n    blockNo: string = \"\";\n    end_date = null;\n    start_date = null;\n    visitByData: any;\n    visitTypeId = null;\n    listData: any;\n    columnData:any;\n    gridSourceData:any;\n    reportData:any;\n    isReportSubmitted:boolean = false;\n    @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n    \n    constructor(\n        private router: Router, \n        private route: ActivatedRoute, \n        private apartmentService: ApartmentService, \n        private visitorService: VisitorService,\n        private lookupService: LookupService, \n        private cookieService: CookieService) \n        { }\n    \n    \n    isMobileView() {\n        return window.innerWidth <= 767 ? 'table-responsive' : '';\n    }\n\n    getPrintParams(event){\n        this.datagrid.exportdata(event, 'VisitorReportsData');\n      }\n    \n    \n    getDate(date) {\n        return moment(date).format(\"MM-DD-YYYY\");\n    }\n    submitReportsFilterForm() {\n        let params = {\n            ApartmentID : parseInt(this.cookieService.get('apartmentId')),\n            ApartmentBlockID : parseInt(this.blockId),\n            StartDate : this.getDate(this.start_date),\n            EndDate : this.getDate(this.end_date),\n            VisitType : parseInt(this.visitTypeId)\n        }\n        this.getDetails(params);\n    }\n\n    getDetails(params){\n        let serviceName;\n        \n        let id = parseInt(this.route.params['value'].id);\n        if(id == 365){\n            serviceName = this.visitorService.getReportsForVisitorsCheckedInMultiFilter(params)\n        }else if(id == 366){\n            serviceName = this.visitorService.getReportsForVisitorsCheckedOutnMultiFilter(params)\n        }else if(id == 367){\n            serviceName = this.visitorService.getReportsForExpectedVisitorsMultiFilter(params)\n        }\n        serviceName.subscribe((res:any) => {\n              \n            if(res.errorMessage){\n            this.reportsDataList = [];\n             \n          }else{\n            this.reportsDataList = res;\n                     \n           this.gridSourceData = {\n            localdata: this.reportsDataList,\n            datatype: \"array\"\n          }\n        \n          this.listData = new jqx.dataAdapter(this.gridSourceData);\n          this.isReportSubmitted = true;\n    \n          }},\n          error => {\n           \n         \n                });\n    \n    }\n\n    getDateTime(val){\n        if(val != ''){\n          return moment(val).format(\"MM/DD/YY hh:mm\")\n        }else{\n          return ''\n        }\n      }\n\n      onGlSearchFilter() {\n\n        if(this.reportData != \"\"){\n    \n          let filtergroup = new jqx.filter();\n          let filter_or_operator = 1;\n          let filtervalue = this.reportData;\n          let filtercondition = 'contains';\n          let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n          filtergroup.operator = 'or';\n          filtergroup.addfilter(filter_or_operator, filterData);\n    \n          this.datagrid.showfiltercolumnbackground(false);\n    \n          this.columnData.forEach(item => {\n            if(item.datafield != 'Actions') {\n              this.datagrid.addfilter(item.datafield, filtergroup, true);\n            }\n          })\n    \n          this.datagrid.applyfilters();\n          \n        }\n        else {\n          this.datagrid.clearfilters();\n        }\n    \n      }\n    \n      cancel(form){\n          form.reset();\n     }\n    \n    ngOnInit() {\n        this.pageName = this.route.params['value'].name;\n        let unitBlockParams = {\n            apartmentId: parseInt(this.cookieService.get('apartmentId'))\n        };\n        this.apartmentService.getApartmentBlockByApartmentId(unitBlockParams).subscribe((res: any) => {\n            this.unitBlocksData = res;\n        });\n        let visitParams = {\n            ApartmentId: parseInt(this.cookieService.get('apartmentId')),\n            LookupTypeId: 15\n        }\n\n        //visit type\n        this.lookupService.getLookupValueByLookupTypeId(visitParams).subscribe((res: any) => {\n\n            this.visitByData = res;\n\n        },\n            error => {\n\n            }\n        );\n        this.isDataLoaded = true;\n\n        var cellsrenderer = (row, column, value) => {\n            return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n          }\n      \n          var columnrenderer = (value) => {\n            return '<div style=\"padding: 14px\">' + value + '</div>';\n          }\n      \n      \n          this.columnData = [{\n               text: 'Id',\n               datafield: 'serialNo',\n               width: 100,\n               pinned: true,\n               cellsrenderer: cellsrenderer,\n               renderer: columnrenderer\n            }, {\n                text: 'Visitor Name',\n                datafield: 'visitorName',\n                width: 100,\n                cellsrenderer: cellsrenderer,\n                renderer: columnrenderer\n            },{\n               text: 'Phone Number',\n               datafield: 'visitorPhone',\n               cellsrenderer: cellsrenderer,\n               minwidth: 80,\n               renderer: columnrenderer\n           }, {\n               text: 'Date/Time of Visit',\n               datafield: 'checkInDateTime',\n               cellsrenderer: (row, column, value) => {\n                return '<div class=\"jqx-custom-inner-cell\">'+ this.getDateTime(value) +'</div>'\n              },\n               minwidth: 170,\n               renderer: columnrenderer\n           }, {\n               text: 'Time-out',\n               datafield: 'checkOutDateTime',\n               cellsrenderer: (row, column, value) => {\n                return '<div class=\"jqx-custom-inner-cell\">'+ this.getDateTime(value) +'</div>'\n              },\n               minwidth: 170,\n               renderer: columnrenderer\n           }, {\n               text: 'Visit Type',\n               datafield: 'visitType',\n               cellsrenderer: cellsrenderer,\n               minwidth: 80,\n               renderer: columnrenderer\n           },{\n            text: 'Block No',\n            datafield: 'blockNo',\n            cellsrenderer: cellsrenderer,\n            minwidth: 170,\n            renderer: columnrenderer \n            }, {\n                text: 'Unit No',\n                datafield: 'unitNo',\n                cellsrenderer: cellsrenderer,\n                minwidth: 170,\n                renderer: columnrenderer \n            }];\n     \n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvdmlzaXRvci1yZXBvcnRzL3Zpc2l0b3ItcmVwb3J0cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-visitor-reports',\n  templateUrl: './visitor-reports.component.html',\n  styleUrls: ['./visitor-reports.component.scss']\n})\nexport class VisitorReportsComponent implements OnInit {\n\n  reportDataList:any;\n\n  isDataLoaded:boolean = false;\n\n  constructor(\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) { }\n\n  ngOnInit() {\n\n    let details = {\n      ApartmentId: parseInt(this.cookieService.get('apartmentId')),\n      LookupTypeId: 87, //lookuptypeid for report\n      MenuName: 'VisitorManagement'\n    }\n\n    this.lookupService.getLookupValuesByApartmentIdLookupTypeIdMenuName(details).subscribe((res:any) => {\n\n      //this.reportDataList = res;\n      this.reportDataList = [\n        { lookupValueName: 'List of Checked In Visitors', description: 'Provides the list of visitors checked-in for the specified duration', lookupValueId: 365 },\n        { lookupValueName: 'List of Checked out Visitors', description: 'Provides the list of visitors checked-out for the specified duration', lookupValueId: 366 },\n        { lookupValueName: 'List of Expected Visitors', description: 'Gives the list of visitors who are expected to check-in during the mentioned duration', lookupValueId: 367 }\n        ]\n\n      this.isDataLoaded = true;\n\n    })\n\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvdmlzaXRvci1zZXR1cC92aXNpdG9yLXNldHVwLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Injector } from '@angular/core';\n\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmDialogModel, CommonConfirmModalComponent } from 'src/app/shared/components/common-confirm-modal/common-confirm-modal.component';\n\n@Component({\n  selector: 'app-visitor-setup',\n  templateUrl: './visitor-setup.component.html',\n  styleUrls: ['./visitor-setup.component.scss']\n})\nexport class VisitorSetupComponent implements OnInit {\n\n  isDataLoaded: boolean = false;\n  isCategoryTypeSubmitted: boolean = true;\n\n  ItemStartIndex: any = 0;\n  ItemEndIndex: any;\n  totalItems: any;\n  itemLimit: any = 10;\n\n  unitFieldType: string = \"unitno\";\n  unitOrder: boolean = true;\n\n  isMobile: boolean = false;\n\n  categoryData: any;\n  categoryDataList: any;\n\n  isCategoryTypeNew: boolean = false;\n  isCategoryTypeUpdate: boolean = false;\n\n  categoryType: string = \"\";\n  categoryUpdateId: number = 0;\n\n  isError: boolean = false;\n  alertMessage: boolean = false;\n\n  modalService: any;\n\n  result: string = '';\n\n  constructor(\n    private injector: Injector,\n    private lookupService: LookupService,\n    public dialog: MatDialog,\n    private sharedService: SharedService,\n    private cookieService: CookieService\n  ) {\n    this.modalService = this.injector.get(ModalService);\n  }\n\n  getIndexParams(event) {\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type) {\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if (this.unitFieldType == type) {\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  addNewCategoryType() {\n\n    this.isCategoryTypeNew = true;\n    this.isCategoryTypeUpdate = false;\n\n    setTimeout(() => {\n\n      var elem = document.querySelector('.vehicle-type-card');\n      var scrollTo = elem.getBoundingClientRect().top - 100;\n\n      window.scroll({\n        top: scrollTo,\n        behavior: 'smooth'\n      });\n\n    }, 100);\n\n  }\n\n  updateCategoryType(item) {\n\n    this.isCategoryTypeUpdate = true;\n    this.isCategoryTypeNew = false;\n    this.categoryType = item.lookupValueName;\n    this.categoryUpdateId = item.lookupValueId;\n\n    setTimeout(() => {\n\n      var elem = document.querySelector('.vehicle-type-card');\n      var scrollTo = elem.getBoundingClientRect().top - 100;\n\n      window.scroll({\n        top: scrollTo,\n        behavior: 'smooth'\n      });\n\n    }, 100);\n\n  }\n\n  deleteCategoryType(item) {\n    this.modalService.showConfirmModal(item);\n    // delete item\n    this.sharedService.unitlistdeleteindexcast.subscribe(item => {\n\n      if (item != null) {\n\n        this.isDataLoaded = false;\n\n        var params = {\n          lookupValueId: item.lookupValueId,\n          updateUserId: parseInt(this.cookieService.get('userId'))\n        }\n\n        this.lookupService.deleteLookupvalue(params).subscribe((res: any) => {\n\n          this.categoryDataList = this.categoryDataList.filter((type) => type.lookupValueId !== item.lookupValueId);\n          this.sharedService.setUnitListDeleteIndex(null);\n          this.isDataLoaded = true;\n\n        });\n        var errorDetails = {\n          msg: 'Visitor category deleted successfully',\n          type: \"Success\"\n        };\n        this.sharedService.setCustomAlertMessage(errorDetails);\n\n      }\n\n    });\n  }\n\n  removeCategoryTypeBox() {\n\n    this.isCategoryTypeNew = false;\n    this.isCategoryTypeUpdate = false;\n    this.isError = false;\n\n    setTimeout(() => {\n\n      var elem = document.querySelector('.vehicle-type-table-card');\n      var scrollTo = elem.getBoundingClientRect().top - 100;\n\n      window.scroll({\n        top: scrollTo,\n        behavior: 'smooth'\n      });\n\n    }, 100);\n\n  }\n\n  submitCategoryTypeForm(form) {\n\n    const confirmationMessage = `Are you sure you want to save this settings?`;\n    const dialogData = new ConfirmDialogModel(\"Confirm Action\", confirmationMessage);\n\n    const dialogRef = this.dialog.open(CommonConfirmModalComponent, {\n      panelClass: 'material',\n      disableClose: true,\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe(dialogResult => {\n      this.result = dialogResult;\n      if (this.result) {\n        //code\n        this.isCategoryTypeSubmitted = false;\n        if (this.isCategoryTypeNew) {\n\n          let details = {\n\n            \"lookupTypeId\": 100,\n            \"lookupValueName\": this.categoryType,\n            \"description\": 'Visitor Category',\n            \"isActive\": true,\n            \"insertedBy\": parseInt(this.cookieService.get('userId')),\n            \"insertedOn\": new Date().toISOString(),\n            \"updatedBy\": null,\n            \"updatedOn\": null\n\n          }\n\n          let params = {\n            lookupvalue: details\n          }\n\n          this.lookupService.addLookupValue(params).subscribe((res: any) => {\n\n            if (res.message) {\n              \n              this.sharedService.setAlertMessage(\"Visitor Category added successfully\");\n              this.isCategoryTypeNew = false;\n              this.isCategoryTypeSubmitted = true;\n              this.isDataLoaded = false;\n              let categoryParams = {\n                ApartmentId: parseInt(this.cookieService.get('apartmentId')),\n                LookupTypeId: 100\n              }\n\n              this.lookupService.getLookupValueByLookupTypeId(categoryParams).subscribe((res: any) => {\n                this.isDataLoaded = true;\n                this.categoryDataList = res.filter(item => {\n                  return item.isActive;\n                });\n                \n                \n                this.totalItems = this.categoryDataList.length;\n\n                if (this.totalItems > this.itemLimit) {\n                  this.ItemEndIndex = this.itemLimit;\n                }\n                else {\n                  this.ItemEndIndex = this.totalItems;\n                }\n                this.isDataLoaded = true;\n              });\n\n\n            }\n            else {\n              this.isDataLoaded = true;\n              this.isCategoryTypeSubmitted = true;\n              this.isError = true;\n              this.alertMessage = res.errorMessage;\n              var errorDetails = {\n                msg: this.alertMessage,\n                type: \"Error\"\n              };\n              this.sharedService.setCustomAlertMessage(errorDetails);\n            }\n\n          });\n\n        }\n\n        else {\n\n          let details = {\n\n            \"lookupValueId\": this.categoryUpdateId,\n            \"lookupTypeId\": 100,\n            \"lookupValueName\": this.categoryType,\n            \"description\": this.categoryType,\n            \"isActive\": true,\n            \"insertedBy\": 0,\n            \"insertedOn\": \"2019-11-20T16:51:24.105Z\",\n            \"updatedBy\": parseInt(this.cookieService.get('userId')),\n            \"updatedOn\": \"2019-11-20T16:51:24.105Z\"\n\n          }\n\n          let params = {\n            lookupvalue: details\n          }\n\n          this.lookupService.updateLookupValue(params).subscribe((res: any) => {\n\n            if (res.message) {\n\n              let categoryParams = {\n                ApartmentId: parseInt(this.cookieService.get('apartmentId')),\n                LookupTypeId: 100\n              }\n\n              this.lookupService.getLookupValueByLookupTypeId(categoryParams).subscribe((res: any) => {\n                this.isCategoryTypeUpdate = false;\n                this.isCategoryTypeSubmitted = true;\n                this.sharedService.setAlertMessage(\"Visitor Category updated successfully\");\n\n                this.categoryDataList = res.filter(item => {\n                  return item.isActive;\n                });\n\n              });\n            }\n            else {\n              this.isCategoryTypeSubmitted = true;\n              this.isError = true;\n              this.alertMessage = res.errorMessage;\n              var errorDetails = {\n                msg: this.alertMessage,\n                type: \"Error\"\n              };\n              this.sharedService.setCustomAlertMessage(errorDetails);\n            }\n\n          });\n\n        }\n\n      }\n      else{\n        this.isCategoryTypeSubmitted = true;\n      }\n    })\n\n\n\n\n\n  }\n\n  ngOnInit() {\n\n    let categoryListParams = {\n      ApartmentId: parseInt(this.cookieService.get('apartmentId')),\n      LookupTypeId: 100\n    }\n\n    this.lookupService.getLookupValueByLookupTypeId(categoryListParams).subscribe((res: any) => {\n\n      this.categoryDataList = res.filter(item => {\n        return item.isActive;\n      });\n\n      this.totalItems = this.categoryDataList.length;\n\n      if (this.totalItems > this.itemLimit) {\n        this.ItemEndIndex = this.itemLimit;\n      }\n      else {\n        this.ItemEndIndex = this.totalItems;\n      }\n\n      this.isDataLoaded = true;\n    });\n\n  }\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from '../.././auth.guard';\n\nimport { VisitorComponent } from './visitor.component';\nimport { VisitorSetupComponent } from './components/visitor-setup/visitor-setup.component';\nimport { VisitorCheckinComponent } from './components/visitor-checkin/visitor-checkin.component';\nimport { VisitorCheckoutComponent } from './components/visitor-checkout/visitor-checkout.component';\nimport { VisitorExpectedVisitorComponent } from './components/visitor-expected-visitor/visitor-expected-visitor.component';\nimport { VisitorReportsComponent } from './components/visitor-reports/visitor-reports.component';\nimport { VisitorCreateComponent } from './components/visitor-create/visitor-create.component';\nimport { VisitorHistoryComponent } from './components/visitor-history/visitor-history.component';\nimport { CheckinVisitorComponent } from './components/checkin-visitor/checkin-visitor.component';\nimport { VisitorReportsDataComponent } from './components/visitor-reports/visitor-reports-data/visitor-reports-data.component';\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: 'settings', pathMatch: 'full'},\n\t{ path: 'settings', component: VisitorSetupComponent},\n\t{ path: 'checkin', component: CheckinVisitorComponent},\n\t{ path: 'expected-visitor', component: VisitorExpectedVisitorComponent},\n\t{ path: 'add-visitor', component: VisitorCheckinComponent},\n\t{ path: 'edit-visitor/:id/:type', component: VisitorCheckinComponent},\n\t{ path: 'checkout', component: VisitorCheckoutComponent},\n\t{ path: 'reports', component: VisitorReportsComponent },\n\t{ path: 'reports/:name/:id', component: VisitorReportsDataComponent },\n\t{ path: 'create-expected-visitor', component: VisitorCreateComponent },\n\t{ path: 'history', component: VisitorHistoryComponent },\n\t{ path: '**', redirectTo: 'settings', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class VisitorRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy92aXNpdG9yL3Zpc2l0b3IuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-visitor',\n  templateUrl: './visitor.component.html',\n  styleUrls: ['./visitor.component.scss']\n})\nexport class VisitorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VisitorRoutingModule } from './visitor-routing.module';\n\nimport { SharedModule } from '../../shared/shared.module';\nimport { VisitorComponent } from './visitor.component';\nimport { VisitorSetupComponent } from './components/visitor-setup/visitor-setup.component';\nimport { VisitorCheckinComponent } from './components/visitor-checkin/visitor-checkin.component';\nimport { VisitorCheckoutComponent } from './components/visitor-checkout/visitor-checkout.component';\nimport { VisitorExpectedVisitorComponent } from './components/visitor-expected-visitor/visitor-expected-visitor.component';\nimport { VisitorReportsComponent } from './components/visitor-reports/visitor-reports.component';\nimport { VisitorCreateComponent } from './components/visitor-create/visitor-create.component';\nimport { VisitorHistoryComponent } from './components/visitor-history/visitor-history.component';\nimport { VisitorReportsDataComponent } from './components/visitor-reports/visitor-reports-data/visitor-reports-data.component';\n\n@NgModule({\n  declarations: [\n\t  VisitorComponent,\n\t  VisitorSetupComponent,\n\t  VisitorCheckinComponent,\n\t  VisitorCheckoutComponent,\n\t  VisitorExpectedVisitorComponent,\n    VisitorReportsComponent,\n    VisitorCreateComponent,\n    VisitorHistoryComponent,\n    VisitorReportsDataComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    VisitorRoutingModule\n  ],\n  bootstrap: [ VisitorComponent ]\n})\nexport class VisitorModule { }\n"]}