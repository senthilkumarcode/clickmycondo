{"version":3,"sources":["webpack:///src/app/ams/visitor/components/checkin-visitor/checkin-visitor.component.html","webpack:///src/app/ams/visitor/components/visitor-checkin/visitor-checkin.component.html","webpack:///src/app/ams/visitor/components/visitor-checkout/visitor-checkout.component.html","webpack:///src/app/ams/visitor/components/visitor-create/visitor-create.component.html","webpack:///src/app/ams/visitor/components/visitor-expected-visitor/visitor-expected-visitor.component.html","webpack:///src/app/ams/visitor/components/visitor-history/visitor-history.component.html","webpack:///src/app/ams/visitor/components/visitor-reports/visitor-reports.component.html","webpack:///src/app/ams/visitor/components/visitor-setup/visitor-setup.component.html","webpack:///src/app/ams/visitor/visitor.component.html","webpack:///src/app/ams/visitor/components/checkin-visitor/checkin-visitor.component.scss","webpack:///src/app/ams/visitor/components/checkin-visitor/checkin-visitor.component.ts","webpack:///src/app/ams/visitor/components/visitor-checkin/visitor-checkin.component.scss","webpack:///src/app/ams/visitor/components/visitor-checkin/visitor-checkin.component.ts","webpack:///src/app/ams/visitor/components/visitor-checkout/visitor-checkout.component.scss","webpack:///src/app/ams/visitor/components/visitor-checkout/visitor-checkout.component.ts","webpack:///src/app/ams/visitor/components/visitor-create/visitor-create.component.scss","webpack:///src/app/ams/visitor/components/visitor-create/visitor-create.component.ts","webpack:///src/app/ams/visitor/components/visitor-expected-visitor/visitor-expected-visitor.component.scss","webpack:///src/app/ams/visitor/components/visitor-expected-visitor/visitor-expected-visitor.component.ts","webpack:///src/app/ams/visitor/components/visitor-history/visitor-history.component.scss","webpack:///src/app/ams/visitor/components/visitor-history/visitor-history.component.ts","webpack:///src/app/ams/visitor/components/visitor-reports/visitor-reports.component.scss","webpack:///src/app/ams/visitor/components/visitor-reports/visitor-reports.component.ts","webpack:///src/app/ams/visitor/components/visitor-setup/visitor-setup.component.scss","webpack:///src/app/ams/visitor/components/visitor-setup/visitor-setup.component.ts","webpack:///src/app/ams/visitor/visitor-routing.module.ts","webpack:///src/app/ams/visitor/visitor.component.scss","webpack:///src/app/ams/visitor/visitor.component.ts","webpack:///src/app/ams/visitor/visitor.module.ts","webpack:///src/app/shared/services/shared-toaster.service.ts"],"names":["CheckinVisitorComponent","router","route","userService","apartmentService","visitorService","lookupService","sharedService","cookieService","SharedToaster","isEditVisitor","isVisitorSubmitted","isVisitorAdded","isError","errorMessage","visitTypeId","isExpectedVisitor","isUnitVisitor","iscommunityVisitor","minDate","Date","format","form","visitorDetails","apartmentUnitId","parseInt","get","visitor","expectedVisitorName","expectedVisitorCount","expectedVisitorPhone","passNumber","expectedVisitorInTime","expectedDurationInHours","visitCategoryId","purpose","params","addVisitor","subscribe","res","message","setAlertMessage","error","visitParams","LookupTypeId","getLookupValueByLookupTypeId","visitByData","visitCategoryParams","visitCategoryData","filter","item","isActive","cateogoryParams","userId","getApartmentBlockUnitByUserId","apartmentBlockUnitId","getAllApartmentBlockUnits","blockUnitData","id","console","log","result","filterId","lookupValueId","lookupValueName","undefined","openSnackBar","expectedVisitorOutTime","inDate","outDate","diffDuration","diff","expectedDuration","days","isSingleDigit","hours","minutes","sendDuration","asHours","Math","round","digit","toString","length","selector","template","VisitorCheckinComponent","visitorStatus","isCheckout","actualInTime","expectedVisitor","addExpectedVisitor","navigate","checkOutVisitor","type","getVisitorById","visitorIdParam","visitorId","visitorCategoryId","visitorOutTime","visitorInTime","expectedVisitorIdParam","expectedVisitorId","getExpectedVisitorById","categoryParams","apartmentParams","date1","date2","getDuration","getDurationInHours","VisitorCheckoutComponent","injector","visitorData","isVisitorDataLoaded","unitFieldType","unitOrder","ItemStartIndex","itemLimit","modalService","event","ItemEndIndex","window","innerWidth","index","showConfirmModal","visitTypeData","apartmentId","getYetToCheckoutVisitorsByApartmentId","visitorListData","isCheckedOut","apartmentBlockUnitIdParam","getApartmentBlockUnitById","blockNo","apartmentBlockNumber","blockUnitNo","apartmentBlockUnitNumber","totalItems","VisitorCreateComponent","blockParams","getApartmentBlockUnitByApartmentId","VisitorExpectedVisitorComponent","dialog","selectedInput","columnField","value","name","dateTime","getExpectedVisitorsByApartmentId","data","checkVisitTypeData","checkVisitCategoryData","forEach","element","visitTypeName","toLowerCase","visitCategoryName","confirmationMessage","dialogData","dialogRef","open","panelClass","disableClose","afterClosed","dialogResult","VisitorHistoryComponent","visitTypeParams","visitListParams","getVisitorsByApartmentId","VisitorReportsComponent","isDataLoaded","details","ApartmentId","MenuName","getLookupValuesByApartmentIdLookupTypeIdMenuName","reportDataList","VisitorSetupComponent","isCategoryTypeSubmitted","isMobile","isCategoryTypeNew","isCategoryTypeUpdate","categoryType","categoryUpdateId","alertMessage","setTimeout","elem","document","querySelector","scrollTo","getBoundingClientRect","top","scroll","behavior","unitlistdeleteindexcast","updateUserId","deleteLookupvalue","categoryDataList","setUnitListDeleteIndex","errorDetails","msg","setCustomAlertMessage","lookupvalue","addLookupValue","updateLookupValue","categoryListParams","routes","path","redirectTo","pathMatch","component","VisitorRoutingModule","imports","forChild","exports","VisitorComponent","VisitorModule","declarations","bootstrap","SharedToasterService","snackBar","action","duration","providedIn"],"mappings":"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","file":"visitor-visitor-module-es5.js","sourcesContent":["export default \"<div class=\\\"checkin-visitor-wrapper\\\">\\n\\t<div class=\\\"card mb-30\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>\\n    \\t\\t\\t\\t<span >Visitor Checkin</span>\\n    \\t\\t\\t</h5>\\n    \\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card-body\\\">\\n            \\n            <app-loader *ngIf=\\\"isVisitorSubmitted\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"!isVisitorSubmitted\\\">\\n\\n\\t\\t\\t\\t<form #addVisitorForm = \\\"ngForm\\\" name=\\\"addVisitorForm\\\" (ngSubmit)=\\\"submitAddVisitorForm(addVisitorForm)\\\"  novalidate>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Visitor Name*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Name\\\" name=\\\"visitorName\\\" [(ngModel)]=\\\"visitor.expectedVisitorName\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Visitor Count*</label>\\n\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Count\\\" name=\\\"visitorCount\\\" [(ngModel)]=\\\"visitor.expectedVisitorCount\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Phone/Mobile*</label>\\n\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\" name=\\\"phoneNo\\\" [(ngModel)]=\\\"visitor.expectedVisitorPhone\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>In-time*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t                    <input class=\\\"form-control\\\" name=\\\"visitorInTime\\\" [owlDateTime]=\\\"visitorInTime\\\" [owlDateTimeTrigger]=\\\"visitorInTime\\\" placeholder=\\\"Date Time\\\" [(ngModel)]=\\\"visitor.expectedVisitorInTime\\\" (ngModelChange)=\\\"expectedDurationChange()\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorInTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorInTime\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Out-time*</label>\\n\\t\\t\\t                    <input class=\\\"form-control\\\" name=\\\"visitorOutTime\\\" [owlDateTime]=\\\"visitorOutTime\\\" [owlDateTimeTrigger]=\\\"visitorOutTime\\\" placeholder=\\\"Date Time\\\" [(ngModel)]=\\\"visitor.expectedVisitorOutTime\\\" (ngModelChange)=\\\"expectedDurationChange()\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorOutTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorOutTime\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Duration*</label>\\n\\t\\t\\t                    <input OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Duration\\\" name=\\\"visitorDuration\\\" [(ngModel)]=\\\"visitor.expectedDuration\\\" [disabled]=\\\"true\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Pass Number*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\" name=\\\"visitorPassNumber\\\" [(ngModel)]=\\\"visitor.passNumber\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Visit Type*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select \\n\\t\\t\\t\\t\\t\\t\\t        name=\\\"visitBy\\\" \\n\\t\\t\\t\\t\\t\\t\\t        id=\\\"visitBy\\\" \\n\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"visitTypeId\\\" (ngModelChange)=\\\"changeVisitorType(visitTypeId)\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of visitByData\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Visit Category*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select \\n\\t\\t\\t\\t\\t\\t\\t        name=\\\"visitByCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\t        id=\\\"visitByCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"visitCategoryId\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of visitCategoryData\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"isUnitVisitor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Tenant block-No*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select \\n\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorblock-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"visitorblock-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.apartmentBlockNumber\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of blockUnitData\\\" [value]=\\\"item.apartmentBlockNumber\\\">{{ item.apartmentBlockNumber }}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"isUnitVisitor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Tenant Unit-No*</label>\\n\\t\\t\\t                   \\t<select \\n\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorUnit-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"visitorUnit-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.apartmentBlockUnitNumber\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of blockUnitData\\\" [value]=\\\"item.apartmentBlockUnitNumber\\\">{{ item.apartmentBlockUnitNumber }}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"iscommunityVisitor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Staff Id*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Staff-id\\\" name=\\\"staffId\\\" [(ngModel)]=\\\"visitor.staffId\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Purpose</label>\\n\\t\\t\\t                    <textarea  type=\\\"text\\\" class=\\\"form-control purpose-box\\\" placeholder=\\\"Enter purpose\\\" name=\\\"visitorpurpose\\\" [(ngModel)]=\\\"visitor.purpose\\\"></textarea>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline float-right mt-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addVisitorForm.invalid\\\">Check In</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t</ng-container>\\n\\t\\t\\t\\n\\t\\t</div>\\n\\t</div>\\n\\t\\n</div>\"","export default \"<div class=\\\"checkin-visitor-wrapper\\\">\\n\\t<div class=\\\"card mb-30\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n\\t\\t\\t\\t<h5>\\n\\t\\t\\t\\t\\t<span *ngIf=\\\"!isCheckout()\\\">Edit Expected Visitor</span>\\n\\t\\t\\t\\t\\t<span *ngIf=\\\"isCheckout()\\\">Check Out</span>\\n\\t\\t\\t\\t</h5>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"float-right\\\">\\n\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" routerLink=\\\"/ams/visitor/expected-visitor\\\" routerLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t[routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t<i-feather class=\\\"icon back\\\" name=\\\"chevron-left\\\"></i-feather>\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card-body\\\">\\n\\n\\t\\t\\t<app-alert-message [message]=\\\"errorMessage\\\" [isAlert]=\\\"isError\\\"></app-alert-message>\\n\\n\\t\\t\\t<app-loader *ngIf=\\\"isVisitorSubmitted\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"!isVisitorSubmitted\\\">\\n\\n\\t\\t\\t\\t<form #addVisitorForm=\\\"ngForm\\\" name=\\\"addVisitorForm\\\" (ngSubmit)=\\\"submitAddVisitorForm(addVisitorForm)\\\"\\n\\t\\t\\t\\t\\tnovalidate>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\" *ngIf=\\\"!isCheckout()\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Visitor Name*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Name\\\" name=\\\"visitorName\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.expectedVisitorName\\\" [disabled]=\\\"true\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Visitor Count*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Count\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorCount\\\" [(ngModel)]=\\\"visitor.expectedVisitorCount\\\" [disabled]=\\\"true\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Phone/Mobile*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"phoneNo\\\" [(ngModel)]=\\\"visitor.expectedVisitorPhone\\\" [disabled]=\\\"true\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Visitor In-time*</label>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"visitorInTime\\\" [owlDateTime]=\\\"visitorInTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[owlDateTimeTrigger]=\\\"visitorInTime\\\" placeholder=\\\"Date Time\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.expectedVisitorInTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[disabled]=\\\"true\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorInTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorInTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Actual Visitor In-time*</label>\\n\\t\\t\\t\\t\\t\\t\\t <input class=\\\"form-control\\\" name=\\\"actualVisitorInTime\\\" [owlDateTime]=\\\"actualVisitorInTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[owlDateTimeTrigger]=\\\"actualVisitorInTime\\\" placeholder=\\\"Date Time\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"actualInTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[disabled]=\\\"true\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #actualVisitorInTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"actualVisitorInTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Visitor Out-time*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"visitorOutTime\\\" [owlDateTime]=\\\"visitorOutTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[owlDateTimeTrigger]=\\\"visitorOutTime\\\" placeholder=\\\"Date Time\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.expectedVisitorOutTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(ngModelChange)=\\\"expectedDurationChange(actualInTime, visitor.expectedVisitorOutTime)\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorOutTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorOutTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Duration*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Duration\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorDuration\\\" [(ngModel)]=\\\"expectedDuration\\\" [disabled]=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trequired>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Pass Number*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorPassNumber\\\" [(ngModel)]=\\\"visitor.passNumber\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Visit Type*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select name=\\\"visitBy\\\" id=\\\"visitBy\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"visitTypeId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(ngModelChange)=\\\"changeVisitorType(visitTypeId)\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of visitByData\\\" [value]=\\\"item.lookupValueId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Visit Category*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select name=\\\"visitByCategory\\\" id=\\\"visitByCategory\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitCategoryId\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of visitCategoryData\\\" [value]=\\\"item.lookupValueId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"isUnitVisitor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Tenant block-No*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select name=\\\"visitorblock-No\\\" id=\\\"visitorblock-No\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.apartmentBlockNumber\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of blockUnitData\\\" [value]=\\\"item.apartmentBlockNumber\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ item.apartmentBlockNumber }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"isUnitVisitor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Tenant Unit-No*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select name=\\\"visitorUnit-No\\\" id=\\\"visitorUnit-No\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.apartmentBlockUnitNumber\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of blockUnitData\\\" [value]=\\\"item.apartmentBlockUnitNumber\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ item.apartmentBlockUnitNumber }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"iscommunityVisitor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Staff Id*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Staff-id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"staffId\\\" [(ngModel)]=\\\"visitor.staffId\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Purpose</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<textarea type=\\\"text\\\" class=\\\"form-control purpose-box\\\" placeholder=\\\"Enter purpose\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorpurpose\\\" [(ngModel)]=\\\"visitor.purpose\\\"></textarea>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\" *ngIf=\\\"isCheckout()\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Visitor Name*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Name\\\" name=\\\"visitorName\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.visitorName\\\" [disabled]='true' required>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Visitor Count*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Count\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorCount\\\" [(ngModel)]=\\\"visitor.visitorCount\\\" [disabled]='true' required>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Phone/Mobile*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"phoneNo\\\" [(ngModel)]=\\\"visitor.visitorPhone\\\" [disabled]='true' required>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Visitor In-time*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"visitorInTime\\\" [owlDateTime]=\\\"visitorInTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[owlDateTimeTrigger]=\\\"visitorInTime\\\" [min]=\\\"minDate\\\" [max]=\\\"minDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Date Time\\\" [disabled]=\\\"true\\\" [(ngModel)]=\\\"visitor.visitorInTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[disabled]='true' required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorInTime [min]=\\\"minDate\\\"></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorInTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Visitor Out-time</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"visitorOutTime\\\" [owlDateTime]=\\\"visitorOutTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[owlDateTimeTrigger]=\\\"visitorOutTime\\\" [min]=\\\"minDate\\\" [max]=\\\"minDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Date Time\\\" [(ngModel)]=\\\"visitor.visitorOutTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(ngModelChange)=\\\"expectedDurationChange(visitor.visitorInTime, visitor.visitorOutTime)\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorOutTime [min]=\\\"minDate\\\"></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorOutTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Duration*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Duration\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorDuration\\\" [(ngModel)]=\\\"expectedDuration\\\" [disabled]='true' required>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Pass Number*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorPassNumber\\\" [(ngModel)]=\\\"visitor.passNumber\\\" [disabled]='true'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trequired>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Visit Type*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select name=\\\"visitBy\\\" id=\\\"visitBy\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"visitTypeId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[disabled]='true' required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of visitByData\\\" [value]=\\\"item.lookupValueId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Visit Category*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select name=\\\"visitByCategory\\\" id=\\\"visitByCategory\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitCategoryId\\\" [disabled]='true'>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of visitCategoryData\\\" [value]=\\\"item.lookupValueId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline float-right mt-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addVisitorForm.invalid\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t*ngIf=\\\"!isCheckout()\\\">Check In</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" *ngIf=\\\"isCheckout()\\\">Check Out</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t</ng-container>\\n\\t\\t\\n\\t\\t</div>\\n\\t</div>\\n\\n</div>\\n\\n\"","export default \"<div class=\\\"checkedout-visitor-wrapper\\\">\\n\\t\\n\\t<app-loader *ngIf=\\\"!isVisitorDataLoaded\\\"></app-loader>\\n\\n\\t\\n\\n\\t<div class=\\\"card table-card\\\" *ngIf=\\\"isVisitorDataLoaded\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All Checked-in Visitors <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"visitorData\\\" >\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n    \\t\\t\\t\\t<a class=\\\"btn l-blue mt_5\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Print</span>\\n    \\t\\t\\t\\t</a>\\n    \\t\\t\\t</li>\\n\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n  \\t\\t\\n  \\t\\t<div class=\\\"card-body p-0\\\">\\n  \\t\\t\\t\\n  \\t\\t\\t<table class=\\\"table\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('visitorName')\\\">Visitor Name <span [ngClass]=\\\"getFieldOrderBy('visitorName')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('visitorPhone')\\\">Phone Number <span [ngClass]=\\\"getFieldOrderBy('visitorPhone')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('visitorInTime')\\\">In-time <span [ngClass]=\\\"getFieldOrderBy('visitorInTime')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('visitorOutTime')\\\">Out-time <span [ngClass]=\\\"getFieldOrderBy('visitorOutTime')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('blockNo')\\\">Block No<span [ngClass]=\\\"getFieldOrderBy('blockNo')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('blockUnitNo')\\\">Unit No <span [ngClass]=\\\"getFieldOrderBy('blockUnitNo')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Action</th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let visitor of visitorListData | simpleSearch: visitorData | sort : unitFieldType: unitOrder | slice:ItemUserStartIndex:ItemUserEndIndex ; let i = index\\\">\\n\\t\\t\\t\\t      <td class=\\\"name\\\">\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\" placement=\\\"right\\\" [ngbPopover]=\\\"popContent\\\" triggers=\\\"mouseenter:mouseleave\\\">{{visitor.visitorName}}\\n\\t\\t\\t\\t      \\t<ng-template #popContent>\\n\\t\\t\\t\\t\\t\\t    <div class=\\\"pop-desp\\\">\\n\\t\\t\\t\\t\\t\\t    \\t<ul>\\n\\t\\t\\t\\t\\t\\t    \\t\\t<li>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<h5>Visitor Count</h5>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<small>{{visitor.visitorCount}}</small>\\n\\t\\t\\t\\t\\t\\t    \\t\\t</li>\\n\\t\\t\\t\\t\\t\\t    \\t\\t<li>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<h5>Expected Duration</h5>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<small>{{visitor.expectedDuration}}</small>\\n\\t\\t\\t\\t\\t\\t    \\t\\t</li>\\n\\t\\t\\t\\t\\t\\t    \\t</ul>\\n\\t\\t\\t\\t\\t\\t    </div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t      </td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{visitor.visitorPhone}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{visitor.visitorInTime | date:'MM/dd/yy, hh:mm'}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{visitor.visitorOutTime | date:'MM/dd/yy, hh:mm'}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{visitor.blockNo}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{visitor.blockUnitNo}}</td>\\n\\t\\t\\t\\t      <td>\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t      \\tplacement=\\\"top\\\" [ngbPopover]=\\\"popAddCheckOutContent\\\" triggers=\\\"mouseenter:mouseleave\\\"\\n\\t\\t\\t\\t      \\trouterLink=\\\"/ams/visitor/edit-visitor/{{visitor.visitorId}}/checkout\\\" \\n\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t\\t<img src=\\\"assets/images/checkout-icon.svg\\\" width=\\\"20\\\" />\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t<ng-template #popAddCheckOutContent>\\n\\t\\t\\t\\t      \\t\\t<div class=\\\"pop-desp\\\">\\n\\t\\t\\t\\t      \\t\\t\\t<h5>CheckOut</h5>\\n\\t\\t\\t\\t      \\t\\t</div>\\n\\t\\t\\t\\t      \\t</ng-template>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\t\\t\\t\\n\\t\\t\\t<app-pagination \\n\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t\\t</app-pagination>\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n\\n</div>\"","export default \"<div class=\\\"create-visitor-wrapper\\\">\\n\\t<div class=\\\"card mb-30\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>\\n    \\t\\t\\t\\t<span >Create Expected Visitor</span>\\n    \\t\\t\\t</h5>\\n    \\t\\t</div>\\n    \\t\\t<div class=\\\"float-right\\\">\\n    \\t\\t\\t<a href=\\\"javascript:void(0)\\\" routerLink=\\\"/ams/visitor/expected-visitor\\\" \\n\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t<i-feather class=\\\"icon back\\\" name=\\\"chevron-left\\\"></i-feather>\\n\\t\\t\\t\\t</a>\\n    \\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card-body\\\">\\n            \\n            <app-loader *ngIf=\\\"isVisitorSubmitted\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"!isVisitorSubmitted\\\">\\n\\n\\t\\t\\t\\t<form #addVisitorForm = \\\"ngForm\\\" name=\\\"addVisitorForm\\\" (ngSubmit)=\\\"submitAddVisitorForm(addVisitorForm)\\\"  novalidate>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Expected Visitor Name*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Name\\\" name=\\\"visitorName\\\" [(ngModel)]=\\\"visitor.expectedVisitorName\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Expected Visitor Count*</label>\\n\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Count\\\" name=\\\"visitorCount\\\" [(ngModel)]=\\\"visitor.expectedVisitorCount\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Expected Phone/Mobile*</label>\\n\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\" name=\\\"phoneNo\\\" [(ngModel)]=\\\"visitor.expectedVisitorPhone\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Visitor In-time*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t                    <input class=\\\"form-control\\\" name=\\\"visitorInTime\\\" [owlDateTime]=\\\"visitorInTime\\\" [owlDateTimeTrigger]=\\\"visitorInTime\\\" placeholder=\\\"Date Time\\\" [(ngModel)]=\\\"visitor.expectedVisitorInTime\\\" (ngModelChange)=\\\"expectedDurationChange()\\\" [disabled]='true' required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorInTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorInTime\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Expected Visitor Out-time*</label>\\n\\t\\t\\t                    <input class=\\\"form-control\\\" name=\\\"visitorOutTime\\\" [owlDateTime]=\\\"visitorOutTime\\\" [owlDateTimeTrigger]=\\\"visitorOutTime\\\" placeholder=\\\"Date Time\\\" [(ngModel)]=\\\"visitor.expectedVisitorOutTime\\\" (ngModelChange)=\\\"expectedDurationChange()\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorOutTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorOutTime\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Expected Duration*</label>\\n\\t\\t\\t                    <input OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Duration\\\" name=\\\"visitorDuration\\\" [(ngModel)]=\\\"visitor.expectedDuration\\\" [disabled]=\\\"true\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Pass Number*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\" name=\\\"visitorPassNumber\\\" [(ngModel)]=\\\"visitor.passNumber\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Visit Type*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select \\n\\t\\t\\t\\t\\t\\t\\t        name=\\\"visitBy\\\" \\n\\t\\t\\t\\t\\t\\t\\t        id=\\\"visitBy\\\" \\n\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"visitTypeId\\\" (ngModelChange)=\\\"changeVisitorType(visitTypeId)\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of visitByData\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Expected Visit Category*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select \\n\\t\\t\\t\\t\\t\\t\\t        name=\\\"visitByCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\t        id=\\\"visitByCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"visitCategoryId\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of visitCategoryData\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"isUnitVisitor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Tenant block-No*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select \\n\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorblock-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"visitorblock-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.apartmentBlockNumber\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of blockUnitData\\\" [value]=\\\"item.apartmentBlockNumber\\\">{{ item.apartmentBlockNumber }}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"isUnitVisitor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Tenant Unit-No*</label>\\n\\t\\t\\t                   \\t<select \\n\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorUnit-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"visitorUnit-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.apartmentBlockUnitNumber\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of blockUnitData\\\" [value]=\\\"item.apartmentBlockUnitNumber\\\">{{ item.apartmentBlockUnitNumber }}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"iscommunityVisitor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Staff Id*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Staff-id\\\" name=\\\"staffId\\\" [(ngModel)]=\\\"visitor.staffId\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Purpose</label>\\n\\t\\t\\t                    <textarea  type=\\\"text\\\" class=\\\"form-control purpose-box\\\" placeholder=\\\"Enter purpose\\\" name=\\\"visitorpurpose\\\" [(ngModel)]=\\\"visitor.purpose\\\"></textarea>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline float-right mt-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addVisitorForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t</ng-container>\\n\\t\\t\\t\\n\\t\\t</div>\\n\\t</div>\\n\\t\\n</div>\"","export default \"<div class=\\\"expected-visitor-wrapper\\\">\\n\\t\\n\\t<app-loader *ngIf=\\\"!isVisitorDataLoaded\\\"></app-loader>\\n\\n\\t\\n\\n\\t<div class=\\\"card table-card\\\" *ngIf=\\\"isVisitorDataLoaded\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All Expected Visitors <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"visitorData\\\" >\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n    \\t\\t\\t\\t<a class=\\\"btn l-blue mt_5\\\" (click) = \\\"print()\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Export</span>\\n    \\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\n    \\t\\t\\t\\t<a class=\\\"btn lime-green mt_5\\\"\\n    \\t\\t\\t\\trouterLink=\\\"/ams/visitor/create-expected-visitor\\\" \\n\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\"\\n\\t\\t\\t\\t\\t[state]=\\\"{ data: 'admin'}\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon plus\\\" name=\\\"plus\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Add Expected Visitor</span>\\n    \\t\\t\\t\\t</a>\\n\\n    \\t\\t\\t</li>\\n\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n  \\t\\t<div class=\\\"card-body p-0 customScroll\\\">\\n  \\t\\t\\t\\n  \\t\\t\\t<table class=\\\"table\\\" [ngClass]=\\\"isMobileView()\\\" mdbTable mdbTableScroll scrollX=\\\"true\\\" maxWidth=\\\"400\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">\\n\\t\\t\\t\\t      \\tVisitor Name\\n\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('visitorName')\\\" [ngClass]=\\\"getFieldOrderBy('visitorName')\\\"></span>\\n\\t\\t\\t\\t      \\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"columnField['visitorName']\\\" (ngModelChange)=\\\"selectColInput('visitorName')\\\" >\\n\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">\\n\\t\\t\\t\\t      \\tPhone Number\\n\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('visitorPhone')\\\" [ngClass]=\\\"getFieldOrderBy('visitorPhone')\\\"></span>\\n\\t\\t\\t\\t      \\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Phone No\\\" [(ngModel)]=\\\"columnField['visitorPhone']\\\" (ngModelChange)=\\\"selectColInput('visitorPhone')\\\" >\\n\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Expected Date/Time of Visit<span (click)=\\\"sortUnitData('visitorInTime')\\\" [ngClass]=\\\"getFieldOrderBy('visitorInTime')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Expected Time-out<span (click)=\\\"sortUnitData('visitorOutTime')\\\" [ngClass]=\\\"getFieldOrderBy('visitorOutTime')\\\"></span></th>\\n\\t\\t\\t\\t\\t  <th scope=\\\"col\\\">Visitor Type<span (click)=\\\"sortUnitData('visitorOutTime')\\\" [ngClass]=\\\"getFieldOrderBy('visitorType')\\\"></span></th>\\n\\t\\t\\t\\t\\t  <th scope=\\\"col\\\">Visitor category<span (click)=\\\"sortUnitData('visitorCategoryId_Label')\\\" [ngClass]=\\\"getFieldOrderBy('visitorCategoryId_Label')\\\"></span></th>\\n\\t\\t\\t\\t\\t  <th scope=\\\"col\\\">Tower Unit<span (click)=\\\"sortUnitData('block_Unit')\\\" [ngClass]=\\\"getFieldOrderBy('block_Unit')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Action</th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let visitor of visitorListData | simpleSearch: visitorData | sort : unitFieldType: unitOrder | slice:ItemUserStartIndex:ItemUserEndIndex ; let i = index\\\">\\n\\t\\t\\t\\t      <td class=\\\"name\\\">\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\" placement=\\\"right\\\" [ngbPopover]=\\\"popContent\\\" triggers=\\\"mouseenter:mouseleave\\\">{{visitor.expectedVisitorName}}\\n\\t\\t\\t\\t      \\t<ng-template #popContent>\\n\\t\\t\\t\\t\\t\\t    <div class=\\\"pop-desp\\\">\\n\\t\\t\\t\\t\\t\\t    \\t<ul>\\n\\t\\t\\t\\t\\t\\t    \\t\\t<li>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<h5>Visitor Count</h5>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<small>{{visitor.expectedVisitorCount}}</small>\\n\\t\\t\\t\\t\\t\\t    \\t\\t</li>\\n\\t\\t\\t\\t\\t\\t    \\t\\t<li>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<h5>Expected Duration</h5>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<small>{{visitor.expectedDuration}}</small>\\n\\t\\t\\t\\t\\t\\t    \\t\\t</li>\\n\\t\\t\\t\\t\\t\\t    \\t</ul>\\n\\t\\t\\t\\t\\t\\t    </div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t      </td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{visitor.expectedVisitorPhone}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{getTimeFormat(visitor.expectedVisitorInTime)}}</td>\\n\\t\\t\\t\\t\\t  <td class=\\\"grey\\\">{{getTimeFormat(visitor.expectedVisitorOutTime)}}</td>\\n\\t\\t\\t\\t\\t  <td class=\\\"grey\\\">{{visitor.visitTypeName}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{visitor.visitorCategoryId_Label}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{visitor.block_Unit}}</td>\\n\\t\\t\\t\\t      <td>\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t      \\tplacement=\\\"top\\\" [ngbPopover]=\\\"popAddCheckInContent\\\" triggers=\\\"mouseenter:mouseleave\\\"\\n\\t\\t\\t\\t      \\trouterLink=\\\"/ams/visitor/edit-visitor/{{visitor.expectedVisitorId}}/checkin\\\" \\n\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t\\t<img src=\\\"assets/images/checkin-icon.svg\\\" width=\\\"20\\\" />\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t<ng-template #popAddCheckInContent>\\n\\t\\t\\t\\t      \\t\\t<div class=\\\"pop-desp\\\">\\n\\t\\t\\t\\t      \\t\\t\\t<h5>CheckIn</h5>\\n\\t\\t\\t\\t      \\t\\t</div>\\n\\t\\t\\t\\t      \\t</ng-template>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\t\\t\\t\\n\\t\\t\\t<app-pagination \\n\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t\\t</app-pagination>\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n\\n</div>\"","export default \"<div class=\\\"visitor-history-wrapper\\\">\\n\\t\\n\\t<app-loader *ngIf=\\\"!isVisitorDataLoaded\\\"></app-loader>\\n\\n\\t\\n\\n\\t<div class=\\\"card table-card\\\" *ngIf=\\\"isVisitorDataLoaded\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All Checked-Out Visitors <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"visitorData\\\" >\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n    \\t\\t\\t\\t<a class=\\\"btn l-blue mt_5\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Print</span>\\n    \\t\\t\\t\\t</a>\\n    \\t\\t\\t</li>\\n\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n  \\t\\t\\n  \\t\\t<div class=\\\"card-body p-0\\\">\\n  \\t\\t\\t\\n  \\t\\t\\t<table class=\\\"table\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('visitorName')\\\">Visitor Name <span [ngClass]=\\\"getFieldOrderBy('visitorName')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('visitorPhone')\\\">Phone Number <span [ngClass]=\\\"getFieldOrderBy('visitorPhone')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('visitorInTime')\\\">In-time <span [ngClass]=\\\"getFieldOrderBy('visitorInTime')\\\"></span></th>\\n\\t\\t\\t\\t\\t  <th scope=\\\"col\\\" (click)=\\\"sortUnitData('visitorOutTime')\\\">Out-time <span [ngClass]=\\\"getFieldOrderBy('visitorOutTime')\\\"></span></th>\\n\\t\\t\\t\\t\\t  <th scope=\\\"col\\\" (click)=\\\"sortUnitData('expectedVisitorInTime')\\\">Expected In-time <span [ngClass]=\\\"getFieldOrderBy('expectedVisitorInTime')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('expectedVisitorOutTime')\\\">Expected Out-time <span [ngClass]=\\\"getFieldOrderBy('expectedVisitorOutTime')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('blockNo')\\\">Block No<span [ngClass]=\\\"getFieldOrderBy('blockNo')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('blockUnitNo')\\\">Unit No <span [ngClass]=\\\"getFieldOrderBy('blockUnitNo')\\\"></span></th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let visitor of visitorListData | simpleSearch: visitorData | sort : unitFieldType: unitOrder | slice:ItemUserStartIndex:ItemUserEndIndex ; let i = index\\\">\\n\\t\\t\\t\\t      <td class=\\\"name\\\">\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\" placement=\\\"right\\\" [ngbPopover]=\\\"popContent\\\" triggers=\\\"mouseenter:mouseleave\\\">{{visitor.visitorName}}\\n\\t\\t\\t\\t      \\t<ng-template #popContent>\\n\\t\\t\\t\\t\\t\\t    <div class=\\\"pop-desp\\\">\\n\\t\\t\\t\\t\\t\\t    \\t<ul>\\n\\t\\t\\t\\t\\t\\t    \\t\\t<li>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<h5>Visitor Count</h5>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<small>{{visitor.visitorCount}}</small>\\n\\t\\t\\t\\t\\t\\t    \\t\\t</li>\\n\\t\\t\\t\\t\\t\\t    \\t\\t<li *ngIf=\\\"visitor.expectedVisitorDuration != null\\\">\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<h5>Expected Duration</h5>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<small>{{visitor.expectedVisitorDuration}}</small>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<h5>Actual Duration</h5>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t<small>{{visitor.expectedDuration}}</small>\\n\\t\\t\\t\\t\\t\\t    \\t\\t</li>\\n\\t\\t\\t\\t\\t\\t    \\t</ul>\\n\\t\\t\\t\\t\\t\\t    </div>\\n\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t      </td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{visitor.visitorPhone}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{visitor.visitorInTime | date:'MM/dd/yy, hh:mm'}}</td>\\n\\t\\t\\t\\t\\t  <td class=\\\"grey\\\">{{visitor.visitorOutTime | date:'MM/dd/yy, hh:mm'}}</td>\\n\\t\\t\\t\\t\\t  <td class=\\\"grey\\\">{{visitor.expectedVisitorInTime | date:'MM/dd/yy, hh:mm'}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{visitor.expectedVisitorOutTime | date:'MM/dd/yy, hh:mm'}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{visitor.blockNo}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey text-capitalize\\\">{{visitor.blockUnitNo}}</td>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\t\\t\\t\\n\\t\\t\\t<app-pagination \\n\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t\\t</app-pagination>\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n\\n</div>\"","export default \"<div class=\\\"reports-wrapper\\\">\\n\\n\\t<app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n\\n\\t<ng-container *ngIf=\\\"isDataLoaded\\\">\\n\\n\\t\\t<h5 class=\\\"mb-3\\\">Helpdesk reports </h5>\\n\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-sm-6 mb-20\\\" *ngFor=\\\"let report of reportDataList\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"card report-card\\\">\\n\\t\\t\\t\\t\\t\\t<a class=\\\"t-no-decor\\\" href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t\\t\\t\\trouterLink = \\\"{{report.menuName}}/{{report.lookupValueID}}\\\" \\n\\t\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<h6>{{report.lookupValueName}}</h6>\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>{{report.description}}</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t</ng-container>\\n\\n</div>\"","export default \"<div class=\\\"visitor-setup-wrapper\\\">\\n\\t\\n\\t<app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n\\n\\t<div class=\\\"card table-card mb-30 vehicle-type-table-card\\\" *ngIf=\\\"isDataLoaded\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>Visitor Categories <span class=\\\"badge blue\\\">{{totalItems}}</span></h5>\\n    \\t\\t\\t<p class=\\\"d-none d-md-inline-block\\\">Edit and Delete Visitor Categories</p>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"categoryData\\\" >\\n    \\t\\t\\t</li>\\n\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t<a class=\\\"btn lime-green mt_5\\\" (click)=\\\"addNewCategoryType()\\\">\\n\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon plus\\\" name=\\\"plus\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t<span>Add Category</span>\\n\\t\\t\\t\\t\\t</a>\\n\\t    \\t\\t</li>\\n\\t\\t\\t</ul>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div class=\\\"card-body p-0\\\">\\n\\t\\t\\n\\t\\t\\t<table class=\\\"table\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Sno <span [ngClass]=\\\"getFieldOrderBy('primayContact')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('lookupValueName')\\\">Visitor Category <span [ngClass]=\\\"getFieldOrderBy('lookupValueName')\\\"></span></th> \\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Action</th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let category of categoryDataList | simpleSearch: categoryData | sort : unitFieldType: unitOrder | slice:ItemStartIndex:ItemEndIndex ; let i = index\\\">\\n\\t\\t\\t\\t      <td>{{i + 1}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{category.lookupValueName}}</td> \\n\\t\\t\\t\\t      <td>\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\" class=\\\"mr-2\\\" (click)=\\\"updateCategoryType(category)\\\">\\n\\t\\t\\t\\t      \\t\\t<i-feather class=\\\"icon edit\\\" name=\\\"edit\\\"></i-feather>\\n\\t\\t\\t\\t      \\t</a>\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\" (click)=\\\"deleteCategoryType(category)\\\"><i-feather class=\\\"icon delete\\\" name=\\\"trash\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t                </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\t\\t\\t<app-pagination \\n\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t\\t</app-pagination>\\n\\t\\t</div>\\n\\n    </div>\\n\\n    <div class=\\\"card mb-30 vehicle-type-card\\\" *ngIf=\\\"isCategoryTypeNew || isCategoryTypeUpdate\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h6 *ngIf=\\\"isCategoryTypeNew\\\">Add Visitor Category</h6>\\n    \\t\\t\\t<h6 *ngIf=\\\"!isCategoryTypeNew\\\">Update Visitor Category</h6>\\n    \\t\\t</div>\\n    \\t\\t<div class=\\\"float-right\\\" (click)=\\\"removeCategoryTypeBox()\\\">\\n    \\t\\t\\t<i-feather class=\\\"icon del\\\" name=\\\"x\\\"></i-feather>\\n    \\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card-body\\\">  \\n\\t\\t\\t\\n\\t\\t\\t<!-- <app-alert-message [isError]=\\\"isError\\\"></app-alert-message> -->\\n\\n\\t\\t\\t<app-loader *ngIf=\\\"!isCategoryTypeSubmitted\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"isCategoryTypeSubmitted\\\">\\n\\n\\t\\t\\t\\t<form #addCategoryTypeForm = \\\"ngForm\\\" name=\\\"addCategoryTypeForm\\\"  (ngSubmit)=\\\"submitCategoryTypeForm(addCategoryTypeForm)\\\"  novalidate>\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\"> \\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Visitor Category*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter text\\\" name=\\\"categoryType\\\" [(ngModel)]=\\\"categoryType\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue at-input\\\" [disabled]=\\\"addCategoryTypeForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n</div>\\n\"","export default \"<router-outlet></router-outlet>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvY2hlY2tpbi12aXNpdG9yL2NoZWNraW4tdmlzaXRvci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { UserService } from 'src/app/api/controllers/User';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { VisitorService } from 'src/app/api/controllers/Visitor';\nimport { CookieService } from 'ngx-cookie-service';\nimport { SharedToasterService } from '../../../../shared/services/shared-toaster.service';\n\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-checkin-visitor',\n  templateUrl: './checkin-visitor.component.html',\n  styleUrls: ['./checkin-visitor.component.scss']\n})\nexport class CheckinVisitorComponent implements OnInit {\n\n  isEditVisitor:boolean = false;\n  isVisitorSubmitted:boolean = false;\n  isVisitorAdded:boolean = false;\n  isError:boolean = false;\n  errorMessage:string = \"\";\n  visitor:any;\n  visitByData:any;\n  visitTypeId:string = \"\";\n  apartmentUnitId:number;\n  isExpectedVisitor:boolean = false;\n  minDate;\n  isUnitVisitor = false;\n  iscommunityVisitor = false;\n  visitCategoryData;\n  visitCategoryId;\n  blockUnitData: any;\n\n  constructor(\n  \tprivate router: Router,\n    private route: ActivatedRoute,\n    private userService:UserService,\n    private apartmentService:ApartmentService,\n    private visitorService:VisitorService,\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService,\n    private SharedToaster:SharedToasterService,\n  ) {\n\n    this.minDate = moment(new Date()).format('YYYY-MM-DD');\n   }\n\n\n   submitAddVisitorForm(form) {\n\n  \tthis.isVisitorSubmitted = true;\n    this.isError = false;\n\n        let visitorDetails = {\n      \n          \"apartmentUnitId\": this.apartmentUnitId,\n          \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n          \"visitorName\": this.visitor.expectedVisitorName,\n          \"visitorCount\": this.visitor.expectedVisitorCount,\n          \"visitorPhone\": this.visitor.expectedVisitorPhone,\n          \"visitorVehicleTypeId\": 1,\n          \"visitorVehicleNumber\": \"string\",\n          \"visitingPlaceId\": 1,\n          \"passNumber\": this.visitor.passNumber,\n          \"isCheckedIn\": true,\n          \"visitorInTime\": this.visitor.expectedVisitorInTime,\n          \"isCheckedOut\": false,\n          \"visitorOutTime\": null,\n          \"expectedDuration\": this.visitor.expectedDurationInHours,\n          \"meetingPersonId\": 1,\n          \"meetingPersonName\": \"string\",\n          \"visitTypeId\": parseInt(this.visitTypeId),\n          \"visitorCategoryId\": parseInt(this.visitCategoryId),\n          \"visitorsOrg\": \"string\",\n          \"entryGateId\": null,\n          \"exitGateId\": null,\n          \"purpose\": this.visitor.purpose,\n          \"enteredBy\": parseInt(this.cookieService.get('userId')),\n          \"isActive\": true,\n          \"insertedBy\": parseInt(this.cookieService.get('userId')),\n          \"insertedOn\": \"2019-11-18T17:08:51.188Z\",\n          \"updatedBy\": parseInt(this.cookieService.get('userId')),\n          \"updatedOn\": \"2019-11-18T17:08:51.188Z\",\n          \"expectedVisitorId\": null,\n          \"expectedVisitorInTime\": null,\n          \"expectedVisitorOutTime\": null,\n          \"expectedVisitorDuration\": null\n\n      }\n\n      let params = {\n        visitor: visitorDetails\n      }\n\n        this.visitorService.addVisitor(params).subscribe((res:any) => {\n        \n          if(res.message) {\n            this.sharedService.setAlertMessage(\"Visitor Checked In successfully\");\n            this.visitor = {}\n            this.isVisitorSubmitted = false;\n          }\n          else {\n\n            this.isVisitorSubmitted = false;\n            this.isError = true;\n            this.errorMessage = res.errorMessage;\n          }\n\n        },\n        error => {\n          \n          this.isVisitorSubmitted = false;\n          this.isError = true;\n          this.errorMessage = error;\n\n        });\n\n      }\n  \n  ngOnInit() {\n    \n    this.visitor = {};\n    \n    let visitParams = {\n      LookupTypeId: 15\n    }\n\n       //visit type\n    this.lookupService.getLookupValueByLookupTypeId(visitParams).subscribe((res:any) => {\n          \n      this.visitByData = res;\n\n    },\n    error => {\n      \n    }\n    );\n\n    let visitCategoryParams = {\n      LookupTypeId: 100\n    }\n\n    //visit type\n    this.lookupService.getLookupValueByLookupTypeId(visitCategoryParams).subscribe((res:any) => {\n          \n      this.visitCategoryData = res.filter(item => {\n        return item.isActive;\n      });\n\n    },\n    error => {\n      \n    }\n    );\n\n    let cateogoryParams = {\n      userId: parseInt(this.cookieService.get('userId'))\n    }\n\n\tthis.apartmentService.getApartmentBlockUnitByUserId(cateogoryParams).subscribe((res:any) => {\n\n\t\tthis.apartmentUnitId = res[0].apartmentBlockUnitId;\n\n\t},\n\terror => {\n\n\t}\n  );\n  this.visitor.expectedVisitorInTime = moment(new Date());\n  \n  this.apartmentService.getAllApartmentBlockUnits().subscribe((res:any) => {\n\n    this.blockUnitData = res;\n    \n  });\n  }\n\n  changeVisitorType(id){\n    console.log(id);\n    let result = this.visitByData.filter(filterId => id == filterId.lookupValueId);\n    console.log(result);\n    this.isUnitVisitor = (result[0].lookupValueName == 'Unit Visitor') ? true : false;\n    this.iscommunityVisitor  = (result[0].lookupValueName == \"Community Visitor\") ? true : false;\n  }\n\n  expectedDurationChange(){\n    if(this.minDate > moment(this.visitor.expectedVisitorInTime).format('YYYY-MM-DD')){\n      this.visitor.expectedVisitorInTime = undefined;\n      this.SharedToaster.openSnackBar(\"Please Select valid Date\",'');\n      return;\n    }\n    \n    if(this.minDate > moment(this.visitor.expectedVisitorOutTime).format('YYYY-MM-DD')){\n      this.visitor.expectedVisitorOutTime = undefined;\n      this.SharedToaster.openSnackBar(\"Please Select Out-time greater than In-time\",'');\n      return;\n    }\n    console.log(this.visitor.expectedVisitorOutTime);\n    if(this.visitor.expectedVisitorOutTime){\n      if(moment(this.visitor.expectedVisitorInTime).format('YYYY-MM-DD') > moment(this.visitor.expectedVisitorOutTime).format('YYYY-MM-DD')){\n        this.visitor.expectedVisitorOutTime = undefined;\n        this.SharedToaster.openSnackBar(\"Please Select Out-time greater than In-time\",'');\n        return;\n      }\n    }\n    \n    let inDate = moment(this.visitor.expectedVisitorInTime);\n    let outDate = moment(this.visitor.expectedVisitorOutTime);\n    let diffDuration = moment.duration(outDate.diff(inDate));\n    this.visitor.expectedDuration = diffDuration.days()+\" days \"+this.isSingleDigit(diffDuration.hours())+\":\"+ this.isSingleDigit(diffDuration.minutes())+\" hours\";\n\n    let sendDuration = moment.duration(outDate.diff(inDate));\n    let hours = sendDuration.asHours();\n    this.visitor.expectedDurationInHours = Math.round(hours);\n  }\n  isSingleDigit(digit){\n    if(digit <= 0){\n      return '00';\n    }else{\n      return (digit.toString().length > 1) ? digit : '0'+digit;\n    }\n    \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvdmlzaXRvci1jaGVja2luL3Zpc2l0b3ItY2hlY2tpbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { UserService } from 'src/app/api/controllers/User';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { VisitorService } from 'src/app/api/controllers/Visitor';\nimport { CookieService } from 'ngx-cookie-service';\nimport { SharedToasterService } from '../../../../shared/services/shared-toaster.service';\n\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-visitor-checkin',\n  templateUrl: './visitor-checkin.component.html',\n  styleUrls: ['./visitor-checkin.component.scss']\n})\nexport class VisitorCheckinComponent implements OnInit {\n\n  isVisitorSubmitted: boolean = false;\n  isError: boolean = false;\n  errorMessage: string = \"\";\n\n  visitor: any;\n\n  visitByData: any;\n  visitTypeId: string = \"\";\n\n  apartmentUnitId: number;\n\n  isExpectedVisitor: boolean = false;\n\n  visitorStatus: string = \"\";\n  minDate;\n  isUnitVisitor = false;\n  iscommunityVisitor = false;\n  visitCategoryData;\n  visitCategoryId;\n  blockUnitData: any;\n  actualInTime: any;\n  actualOutTime: any;\n  actualVisitorCount: any;\n  actualDuration: any;\n  expectedDuration: any;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private apartmentService: ApartmentService,\n    private visitorService: VisitorService,\n    private lookupService: LookupService,\n    private sharedService: SharedService,\n    private cookieService: CookieService,\n    private SharedToaster: SharedToasterService,\n  ) {\n\n    this.minDate = moment(new Date()).format('YYYY-MM-DD');\n  }\n\n\n  isCheckout() {\n    return this.visitorStatus == 'checkout' ? true : false;\n  }\n\n  submitAddVisitorForm(form) {\n\n    this.isVisitorSubmitted = true;\n    this.isError = false;\n\n    if (!this.isCheckout()) {\n\n      let visitorDetails = {\n        \"expectedVisitorId\": this.route.params['value'].id,\n        \"apartmentUnitId\": this.apartmentUnitId,\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"expectedVisitorName\": this.visitor.expectedVisitorName,\n        \"expectedVisitorCount\": this.visitor.expectedVisitorCount,\n        \"expectedVisitorPhone\": this.visitor.expectedVisitorPhone.toString(),\n        \"expectedVisitorInTime\": this.visitor.expectedVisitorInTime,\n        \"expectedVisitorOutTime\": this.visitor.expectedVisitorOutTime,\n        \"visitorInTime\": this.actualInTime,\n        \"visitorOutTime\": null,\n        \"expectedDuration\": this.visitor.expectedDurationInHours,\n        \"expectedVisitorDuration\": null,\n        \"meetingPersonId\": 1,\n        \"visitTypeId\": parseInt(this.visitTypeId),\n        \"expectedVisitorsOrg\": \"string\",\n        \"entryGateId\": null,\n        \"exitGateId\": null,\n        \"purpose\": this.visitor.purpose,\n        \"enteredBy\": parseInt(this.cookieService.get('userId')),\n        \"isActive\": true,\n        \"insertedBy\":0,\n        \"insertedOn\": \"2019-11-18T15:27:41.030Z\",\n        \"updatedBy\": parseInt(this.cookieService.get('userId')),\n        \"updatedOn\": \"2019-11-18T15:27:41.030Z\",\n        \"isCheckedIn\": true,\n        \"isCheckedOut\": false,\n        }\n        let params = {\n          expectedVisitor: visitorDetails\n        }\n\n      this.visitorService.addExpectedVisitor(params).subscribe((res: any) => {\n\n        if (res.message) {\n          this.sharedService.setAlertMessage(\"Visitor Checked In successfully\");\n          this.router.navigate(['/ams/visitor/expected-visitor'])\n        }\n        else {\n\n          this.isVisitorSubmitted = false;\n\n          this.isError = true;\n          this.errorMessage = res.errorMessage;\n        }\n\n      },\n        error => {\n\n          this.isVisitorSubmitted = false;\n          this.isError = true;\n          this.errorMessage = error;\n\n        });\n\n    }\n    else {\n\n      let visitorDetails = {\n        \"visitorId\": parseInt(this.route.params['value'].id),\n        \"checkOutTime\": '2020-05-19T07:10:33.863',\n        \"updatedBy\": parseInt(this.cookieService.get('userId')),\n      }\n      \n      this.visitorService.checkOutVisitor(visitorDetails).subscribe((res: any) => {\n\n        if (res.message) {\n          this.sharedService.setAlertMessage(\"Visitor checked out successfully\");\n          this.router.navigate(['/ams/visitor/checkout'])\n        }\n        else {\n\n          this.isVisitorSubmitted = false;\n          this.isError = true;\n          this.errorMessage = res.errorMessage;\n        }\n\n      },\n        error => {\n\n          this.isVisitorSubmitted = false;\n          this.isError = true;\n          this.errorMessage = error;\n\n        });\n\n    }\n\n  }\n\n  ngOnInit() {\n\n    this.visitor = {};\n\n    if (this.route.params['value'].id != undefined) {\n\n      this.visitorStatus = this.route.params['value'].type;\n\n      if (this.visitorStatus == 'checkout') {\n\n        this.visitorService.getVisitorById(this.route.params['value'].id).subscribe((res: any) => {\n        \n          let visitorIdParam = {\n            visitorId : this.route.params['value'].id\n          }\n  \n          this.visitorService.getVisitorById(visitorIdParam).subscribe((res:any) => {\n            this.visitor = res[0];\n\n          this.visitTypeId = this.visitor.visitTypeId;\n          this.visitCategoryId = this.visitor.visitorCategoryId;\n          this.visitor.purpose = '';\n          this.visitor.visitorOutTime = moment(new Date());\n\n          let inDate = moment(this.visitor.visitorInTime);\n          let outDate = moment(this.visitor.visitorOutTime);\n          let diffDuration = moment.duration(outDate.diff(inDate));\n          this.expectedDuration = diffDuration.days() + \" days \" + this.isSingleDigit(diffDuration.hours()) + \":\" + this.isSingleDigit(diffDuration.minutes()) + \" hours\";\n        },\n          error => {\n\n          }\n        );\n        });\n      }\n      else if (this.visitorStatus == 'checkin') {\n        let expectedVisitorIdParam = {\n          expectedVisitorId : this.route.params['value'].id\n        }\n        this.visitorService.getExpectedVisitorById(expectedVisitorIdParam).subscribe((res: any) => {\n\n          this.visitor = res[0];\n          console.log('this.visitor', this.visitor)\n          this.visitor.purpose = '';\n          this.visitTypeId = this.visitor.visitTypeId;\n          this.visitCategoryId = this.visitor.visitorCategoryId;\n          this.actualInTime = moment(new Date());\n        },\n          error => {\n\n          }\n        );\n\n\n      }\n\n    }\n\n\n    let visitParams = {\n      LookupTypeId: 15\n    }\n\n    //visit type\n    this.lookupService.getLookupValueByLookupTypeId(visitParams).subscribe((res: any) => {\n\n      this.visitByData = res;\n\n    },\n      error => {\n\n      }\n    );\n    let categoryParams = {\n      LookupTypeId: 100\n    }    \n    //visit type\n    this.lookupService.getLookupValueByLookupTypeId(categoryParams).subscribe((res: any) => {\n\n      this.visitCategoryData = res.filter(item => {\n        return item.isActive;\n      });\n\n    },\n      error => {\n\n      }\n    );\n    let apartmentParams = {\n      userId: parseInt(this.cookieService.get('userId'))\n    }\n\n    this.apartmentService.getApartmentBlockUnitByUserId(apartmentParams).subscribe((res: any) => {\n\n      this.apartmentUnitId = res[0].apartmentBlockUnitId;\n\n    },\n      error => {\n\n      }\n    );\n    this.visitor.expectedVisitorInTime = moment(new Date());\n    this.visitor.visitorInTime = moment(new Date());\n\n    this.apartmentService.getAllApartmentBlockUnits().subscribe((res: any) => {\n\n      this.blockUnitData = res;\n\n    });\n  }\n\n  changeVisitorType(id) {\n    console.log(id);\n    let result = this.visitByData.filter(filterId => id == filterId.lookupValueId);\n    console.log(result);\n    this.isUnitVisitor = (result[0].lookupValueName == 'Unit Visitor') ? true : false;\n    this.iscommunityVisitor = (result[0].lookupValueName == \"Community Visitor\") ? true : false;\n  }\n\n  expectedDurationChange(date1, date2) {\n    if (this.minDate > moment(date1).format('YYYY-MM-DD')) {\n      this.visitor.expectedVisitorInTime = undefined;\n      this.SharedToaster.openSnackBar(\"Please Select valid Date\", '');\n      return;\n    }\n\n    if (this.minDate > moment(date2).format('YYYY-MM-DD')) {\n      this.visitor.expectedVisitorOutTime = undefined;\n      this.SharedToaster.openSnackBar(\"Please Select Out-time greater than In-time\", '');\n      return;\n    }\n   \n    if (date2) {\n      if (moment(date1).format('YYYY-MM-DD') > moment(date2).format('YYYY-MM-DD')) {\n        this.visitor.expectedVisitorOutTime = undefined;\n        this.SharedToaster.openSnackBar(\"Please Select Out-time greater than In-time\", '');\n        return;\n      }\n    }\n    this.expectedDuration = this.getDuration(date1, date2);\n    this.visitor.expectedDurationInHours = this.getDurationInHours(date1, date2);\n  }\n  getDuration(date1, date2) {\n    let inDate = moment(date1);\n    let outDate = moment(date2);\n    let diffDuration = moment.duration(outDate.diff(inDate));\n    return  diffDuration.days() + \" days \" + this.isSingleDigit(diffDuration.hours()) + \":\" + this.isSingleDigit(diffDuration.minutes()) + \" hours\";\n  }\n  getDurationInHours(date1, date2){\n    let inDate = moment(date1);\n    let outDate = moment(date2);\n    let sendDuration = moment.duration(outDate.diff(inDate));\n    let hours = sendDuration.asHours();\n    return Math.round(hours);\n  }\n  isSingleDigit(digit) {\n    if (digit <= 0) {\n      return '00';\n    } else {\n      return (digit.toString().length > 1) ? digit : '0' + digit;\n    }\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvdmlzaXRvci1jaGVja291dC92aXNpdG9yLWNoZWNrb3V0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Injector } from '@angular/core';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { VisitorService } from 'src/app/api/controllers/Visitor';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-visitor-checkout',\n  templateUrl: './visitor-checkout.component.html',\n  styleUrls: ['./visitor-checkout.component.scss']\n})\nexport class VisitorCheckoutComponent implements OnInit {\n\n   visitorData:string = \"\";\n  visitorListData:any;\n\n  isVisitorDataLoaded:boolean = false;\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n\n  visitor:any;\n\n  modalService:any;\n\n  totalFilterItems:any;\n  visitTypeData:any;\n\n\n  constructor(\n    private injector: Injector,\n  \tprivate apartmentService:ApartmentService,\n    private visitorService:VisitorService,\n    private lookupService: LookupService,\n    private cookieService: CookieService\n  ) { \n    this.modalService = this.injector.get(ModalService);\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  getBlockUnit(id){\n\n  \t\n    \n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  showConfirmModal(index) {\n    this.modalService.showConfirmModal(index);\n  }\n\n  getVisitorType(){\n    \n  }\n\n\n\n  ngOnInit() {\n\n    let visitParams = {\n      LookupTypeId: 15\n    }\n\n    //get visit type\n    this.lookupService.getLookupValueByLookupTypeId(visitParams).subscribe((res:any) => {\n\n      this.visitTypeData = res;\n\n    },\n    error => {\n      \n    }\n    );\n\n    let apartmentParams = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n\n  \tthis.visitorService.getYetToCheckoutVisitorsByApartmentId(apartmentParams).subscribe((res:any) => {\n\n\t\t//filter active true items\n\n    this.visitorListData = res.filter(item => {\n      return item.isActive && !item.isCheckedOut;\n    });\n\n    // console.log(this.visitorListData);\n\t\t\n\t\t//get block and unit details\n\t\t_.each(this.visitorListData, (item, index) => {\n\n      let apartmentBlockUnitIdParam ={\n        apartmentBlockUnitId: item.apartmentUnitId\n      }\n\n\t\tthis.apartmentService.getApartmentBlockUnitById(apartmentBlockUnitIdParam).subscribe((res:any) => {\n\n\t\t\tthis.visitorListData[index].blockNo = res[0].apartmentBlockNumber;\n\t\t\tthis.visitorListData[index].blockUnitNo = res[0].apartmentBlockUnitNumber;\n\n\t    },\n\t    error => {\n\t      \n\t    });\n\n\n\t\t});\n\n\t\tthis.totalItems = this.visitorListData.length;\n\n\t\tif(this.totalItems>this.itemLimit){\n\t\t\tthis.ItemEndIndex = this.itemLimit;\n\t\t}\n\n\t\telse {\n\t\t\tthis.ItemEndIndex = this.totalItems;\n\t\t}\n\n    this.isVisitorDataLoaded = true;\n    \n    \n    \n\t});\n\n  \t\n\n\n  \t\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvdmlzaXRvci1jcmVhdGUvdmlzaXRvci1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { VisitorService } from 'src/app/api/controllers/Visitor';\nimport { CookieService } from 'ngx-cookie-service';\nimport { SharedToasterService } from '../../../../shared/services/shared-toaster.service';\n\nimport * as moment from 'moment';\n\n@Component({\n    selector: 'app-visitor-create',\n    templateUrl: './visitor-create.component.html',\n    styleUrls: ['./visitor-create.component.scss']\n})\nexport class VisitorCreateComponent implements OnInit {\n\n    isEditVisitor: boolean = false;\n\n    isVisitorSubmitted: boolean = false;\n    isVisitorAdded: boolean = false;\n\n    isError: boolean = false;\n    errorMessage: string = \"\";\n\n    visitor: any;\n\n    visitByData: any;\n    visitTypeId: string = \"\";\n\n    apartmentUnitId: number;\n\n    isExpectedVisitor: boolean = false;\n\n    visitorStatus: string = \"\";\n    minDate;\n    isUnitVisitor = false;\n    iscommunityVisitor = false;\n    visitCategoryData;\n    visitCategoryId;\n    blockUnitData: any;\n\n    constructor(\n        private router: Router,\n        private apartmentService: ApartmentService,\n        private visitorService: VisitorService,\n        private lookupService: LookupService,\n        private sharedService: SharedService,\n        private cookieService: CookieService,\n        private SharedToaster: SharedToasterService,\n    ) {\n\n        this.minDate = moment(new Date()).format('YYYY-MM-DD');\n    }\n\n\n    isCheckout() {\n        return this.visitorStatus == 'checkout' ? true : false;\n    }\n\n    submitAddVisitorForm(form) {\n\n        this.isVisitorSubmitted = true;\n        let visitorDetails = {\n    \t\"apartmentUnitId\": this.apartmentUnitId,\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"expectedVisitorName\": this.visitor.expectedVisitorName,\n        \"expectedVisitorCount\": this.visitor.expectedVisitorCount,\n        \"expectedVisitorPhone\": this.visitor.expectedVisitorPhone.toString(),\n        \"expectedVisitorInTime\": this.visitor.expectedVisitorInTime,\n        \"expectedVisitorOutTime\": this.visitor.expectedVisitorOutTime,\n        \"expectedDuration\": this.visitor.expectedDurationInHours,\n        \"passNumber\": this.visitor.passNumber,\n        \"meetingPersonId\": 1,\n        \"visitTypeId\": parseInt(this.visitTypeId),\n        \"visitCategoryId\": parseInt(this.visitCategoryId),\n        \"visitorsOrg\": \"string\",\n        \"entryGateId\": null,\n        'apartmentBlockNumber': this.visitor.apartmentBlockNumber,\n        'apartmentUnitNumber': this.visitor.apartmentBlockUnitNumber,\n        \"exitGateId\": null,\n        \"purpose\": this.visitor.purpose,\n        \"enteredBy\": parseInt(this.cookieService.get('userId')),\n        \"isActive\": true,\n        \"insertedBy\": parseInt(this.cookieService.get('userId')),\n        \"insertedOn\": \"2019-11-18T17:08:51.188Z\",\n        \"updatedBy\": 0,\n        \"updatedOn\": \"2019-11-18T17:08:51.188Z\",\n      }\n\n      let params = {\n        expectedVisitor: visitorDetails\n      }\n\n    this.visitorService.addExpectedVisitor(params).subscribe((res:any) => {\n          \n        if(res.message) {\n          this.isVisitorSubmitted = true;\n          this.sharedService.setAlertMessage(\"Visitor added successfully\");\n          this.router.navigate(['/ams/visitor/expected-visitor']);\n        }\n        else {\n\n          this.isVisitorSubmitted = false;\n          this.isError = true;\n          this.errorMessage = res.errorMessage;\n        }\n\n      },\n      error => {\n        \n    \t\tthis.isVisitorSubmitted = false;\n    \t\tthis.isError = true;\n    \t\tthis.errorMessage = error;\n     \n            });\n\n    }\n\n\n    ngOnInit() {\n\n        this.visitor = {}\n\n        let params = {\n            LookupTypeId: 15\n        }\n\n        //visit type\n        this.lookupService.getLookupValueByLookupTypeId(params).subscribe((res: any) => {\n\n            this.visitByData = res;\n\n        },\n            error => {\n\n            }\n        );\n\n        let visitParams = {\n            LookupTypeId: 100\n        }\n\n        //visit type\n        this.lookupService.getLookupValueByLookupTypeId(visitParams).subscribe((res: any) => {\n\n            this.visitCategoryData = res.filter(item => {\n                return item.isActive;\n              });\n\n        },\n            error => {\n\n            }\n        );\n\n        let apartmentParams = {\n            userId: parseInt(this.cookieService.get('userId'))\n        }\n\n        this.apartmentService.getApartmentBlockUnitByUserId(apartmentParams).subscribe((res: any) => {\n\n            this.apartmentUnitId = res[0].apartmentBlockUnitId;\n\n        },\n            error => {\n\n            }\n        );\n        this.visitor.expectedVisitorInTime = moment(new Date());\n\n        let blockParams = {\n            apartmentId: parseInt(this.cookieService.get('apartmentId'))\n        }\n\n        this.apartmentService.getApartmentBlockUnitByApartmentId(blockParams).subscribe((res: any) => {\n           \n                this.blockUnitData = res;\n                console.log('this.blockUnitData', res)\n          \n        });\n    }\n\n    changeVisitorType(id) {\n        console.log(id);\n        let result = this.visitByData.filter(filterId => id == filterId.lookupValueId);\n        console.log(result);\n        this.isUnitVisitor = (result[0].lookupValueName == 'Unit Visitor') ? true : false;\n        this.iscommunityVisitor = (result[0].lookupValueName == \"Community Visitor\") ? true : false;\n    }\n\n    expectedDurationChange() {\n        if (this.minDate > moment(this.visitor.expectedVisitorInTime).format('YYYY-MM-DD')) {\n            this.visitor.expectedVisitorInTime = undefined;\n            this.SharedToaster.openSnackBar(\"Please Select valid Date\", '');\n            return;\n        }\n\n        if (this.minDate > moment(this.visitor.expectedVisitorOutTime).format('YYYY-MM-DD')) {\n            this.visitor.expectedVisitorOutTime = undefined;\n            this.SharedToaster.openSnackBar(\"Please Select Out-time greater than In-time\", '');\n            return;\n        }\n        console.log(this.visitor.expectedVisitorOutTime);\n        if (this.visitor.expectedVisitorOutTime) {\n            if (moment(this.visitor.expectedVisitorInTime).format('YYYY-MM-DD') > moment(this.visitor.expectedVisitorOutTime).format('YYYY-MM-DD')) {\n                this.visitor.expectedVisitorOutTime = undefined;\n                this.SharedToaster.openSnackBar(\"Please Select Out-time greater than In-time\", '');\n                return;\n            }\n        }\n\n        let inDate = moment(this.visitor.expectedVisitorInTime);\n        let outDate = moment(this.visitor.expectedVisitorOutTime);\n        let diffDuration = moment.duration(outDate.diff(inDate));\n        this.visitor.expectedDuration = diffDuration.days() + \" days \" + this.isSingleDigit(diffDuration.hours()) + \":\" + this.isSingleDigit(diffDuration.minutes()) + \" hours\";\n\n        let sendDuration = moment.duration(outDate.diff(inDate));\n        let hours = sendDuration.asHours();\n        this.visitor.expectedDurationInHours = Math.round(hours);\n    }\n    isSingleDigit(digit) {\n        if (digit <= 0) {\n            return '00';\n        } else {\n            return (digit.toString().length > 1) ? digit : '0' + digit;\n        }\n\n    }\n\n}\n","export default \".customScroll {\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  cursor: pointer;\\n}\\n.customScroll table thead th {\\n  overflow: hidden !important;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9hbXMvdmlzaXRvci9jb21wb25lbnRzL3Zpc2l0b3ItZXhwZWN0ZWQtdmlzaXRvci92aXNpdG9yLWV4cGVjdGVkLXZpc2l0b3IuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvdmlzaXRvci1leHBlY3RlZC12aXNpdG9yL3Zpc2l0b3ItZXhwZWN0ZWQtdmlzaXRvci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLHlCQUFBO0tBQUEsc0JBQUE7TUFBQSxxQkFBQTtVQUFBLGlCQUFBO0VBQ0EsZUFBQTtBQ0FKO0FESUk7RUFDSSwyQkFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7QUNGUiIsImZpbGUiOiJzcmMvYXBwL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvdmlzaXRvci1leHBlY3RlZC12aXNpdG9yL3Zpc2l0b3ItZXhwZWN0ZWQtdmlzaXRvci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jdXN0b21TY3JvbGx7XG4gICAgLy8gb3ZlcmZsb3cteDogc2Nyb2xsO1xuICAgIHVzZXItc2VsZWN0OiBub25lO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB0aHtcbiAgICAgICAgLy8gbWF4LXdpZHRoOiBub25lICFpbXBvcnRhbnQ7XG4gICAgfVxuICAgIHRhYmxlIHRoZWFkIHRoe1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuICFpbXBvcnRhbnQ7XG4gICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIFxuICAgIH1cbn0iLCIuY3VzdG9tU2Nyb2xsIHtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5jdXN0b21TY3JvbGwgdGFibGUgdGhlYWQgdGgge1xuICBvdmVyZmxvdzogaGlkZGVuICFpbXBvcnRhbnQ7XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xufSJdfQ== */\"","import { Component, OnInit, Injector, HostListener } from '@angular/core';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { VisitorService } from 'src/app/api/controllers/Visitor';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\n\nimport * as moment from 'moment';\nimport { ConfirmDialogModel, CommonConfirmModalComponent } from 'src/app/shared/components/common-confirm-modal/common-confirm-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-visitor-expected-visitor',\n  templateUrl: './visitor-expected-visitor.component.html',\n  styleUrls: ['./visitor-expected-visitor.component.scss']\n})\nexport class VisitorExpectedVisitorComponent implements OnInit {\n\n  visitorData:string = \"\";\n  visitorListData:any;\n\n  isVisitorDataLoaded:boolean = false;\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n\n  visitor:any;\n\n  modalService:any;\n\n  totalFilterItems:any;\n  visitTypeData:any;\n  visitCategoryData:any;\n\n  selectedInput:string = \"\";\n  columnField: any = {};\n  result: string = '';\n\n  constructor(\n    private injector: Injector,\n  \tprivate apartmentService:ApartmentService,\n    private visitorService:VisitorService,\n    private lookupService: LookupService,\n    private cookieService: CookieService,\n    public dialog: MatDialog,\n  ) { \n    this.modalService = this.injector.get(ModalService);\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  selectColInput(value){\n    this.selectedInput = value;\n  }\n\n  onSelectChange(event, type, name){\n\n    if(!_.isEmpty(event)){\n      this.selectedInput = type;\n      this.columnField[type] = event[name];\n    }\n    else {\n       this.columnField = {};\n    }\n    \n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  showConfirmModal(index) {\n    this.modalService.showConfirmModal(index);\n  }\n\n  getTimeFormat(dateTime){\n    return moment(dateTime).format(\"YYYY-MM-DD HH:mm\");\n  }\n\n  ngOnInit() {\n\n    let params = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n\n  \tthis.visitorService.getExpectedVisitorsByApartmentId(params).subscribe((res:any) => {\n\n      this.visitorListData = res;\n\n      console.log(\"visitorListData\", this.visitorListData[0].visitTypeId);\n\n\t\t//filter active true items\n\t\tthis.visitorListData = res.filter(data => {\n\t\t\treturn data.isActive\n\t\t})\n\n\t\t\n\t\t//get block and unit details\n\t\t_.each(this.visitorListData, (item, index) => {\n\n      let apartmentBlockUnitIdParam = {\n        apartmentBlockUnitId : item.apartmentUnitId\n      }\n\t\tthis.apartmentService.getApartmentBlockUnitById(apartmentBlockUnitIdParam).subscribe((res:any) => {\n\n\t\t\tthis.visitorListData[index].blockNo = res[0].apartmentBlockNumber;\n      this.visitorListData[index].blockUnitNo = res[0].apartmentBlockUnitNumber;\n      // console.log(res[0]);\n\n\t    },\n\t    error => {\n\t      \n\t    });\n\n\n    });\n\n    let visitParams = {\n      LookupTypeId: 15\n    }\n    \n    //get visit type\n    this.lookupService.getLookupValueByLookupTypeId(visitParams).subscribe((res:any) => {\n\n      this.visitTypeData = res;\n      this.checkVisitTypeData();\n\n    },\n    error => {\n      \n    }\n    );\n\n    let categoryParams = {\n      LookupTypeId: 100\n    }\n\n    //get visit category\n    this.lookupService.getLookupValueByLookupTypeId(categoryParams).subscribe((res:any) => {\n      this.visitCategoryData = res.filter(data => {\n        return data.isActive\n      });\n      this.checkVisitCategoryData();\n    },\n    error => {\n      \n    }\n    );\n\n    \n\t\tthis.totalItems = this.visitorListData.length;\n\n\t\tif(this.totalItems>this.itemLimit){\n\t\t\tthis.ItemEndIndex = this.itemLimit;\n\t\t}\n\n\t\telse {\n\t\t\tthis.ItemEndIndex = this.totalItems;\n\t\t}\n\n\t\tthis.isVisitorDataLoaded = true;\n    \n    \n\t});\n\n  \n  }\n  \n  checkVisitTypeData() {\n    this.visitTypeData.forEach(element => {\n      if(element.lookupValueId == this.visitorListData[0].visitTypeId){\n        this.visitorListData[0].visitTypeName = element.lookupValueName.toLowerCase();\n      }\n    });\n  }\n  checkVisitCategoryData(){\n    console.log(this.visitorListData[0]);\n    this.visitCategoryData.forEach(element => {\n      if(element.lookupValueId == this.visitorListData[0].visitorCategoryId){\n        this.visitorListData[0].visitCategoryName = element.lookupValueName.toLowerCase();\n      }\n    });\n  }\n\n  //print button\n  print(){\n\n  const confirmationMessage = `Are you sure, you want to Print?`;\n  const dialogData = new ConfirmDialogModel(\"Confirm Action\", confirmationMessage);\n\n  const dialogRef = this.dialog.open(CommonConfirmModalComponent, {\n    panelClass: 'material',\n    disableClose: true,\n    data: dialogData\n  });\n\n  dialogRef.afterClosed().subscribe(dialogResult => {\n    this.result = dialogResult;\n    if(this.result){\n      //code\n    }\n  })\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvdmlzaXRvci1oaXN0b3J5L3Zpc2l0b3ItaGlzdG9yeS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Injector, HostListener } from '@angular/core';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { VisitorService } from 'src/app/api/controllers/Visitor';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-visitor-hitory',\n  templateUrl: './visitor-history.component.html',\n  styleUrls: ['./visitor-history.component.scss']\n})\nexport class VisitorHistoryComponent implements OnInit {\n\n   visitorData:string = \"\";\n  visitorListData:any;\n\n  isVisitorDataLoaded:boolean = false;\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n\n  visitor:any;\n\n  modalService:any;\n\n  totalFilterItems:any;\n  visitTypeData:any;\n\n\n  constructor(\n    private injector: Injector,\n  \tprivate apartmentService:ApartmentService,\n    private visitorService:VisitorService,\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService: CookieService\n  ) { \n    this.modalService = this.injector.get(ModalService);\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  getBlockUnit(id){\n\n  \t\n    \n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  showConfirmModal(index) {\n    this.modalService.showConfirmModal(index);\n  }\n\n  getVisitorType(){\n    \n  }\n\n\n\n  ngOnInit() {\n\n    let visitTypeParams = {\n      LookupTypeId: 15\n    }\n\n    //get visit type\n    this.lookupService.getLookupValueByLookupTypeId(visitTypeParams).subscribe((res:any) => {\n\n      this.visitTypeData = res;\n\n    },\n    error => {\n      \n    }\n    );\n\n    let visitListParams = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n\n  \tthis.visitorService.getVisitorsByApartmentId(visitListParams).subscribe((res:any) => {\n\n\t\t//filter active true items\n\n    this.visitorListData = res.filter(item => {\n      return item.isActive && item.isCheckedOut;\n    });\n\n    // console.log(this.visitorListData);\n\t\t\n\t\t//get block and unit details\n\t\t_.each(this.visitorListData, (item, index) => {\n\t\tthis.apartmentService.getApartmentBlockUnitById(item.apartmentUnitId).subscribe((res:any) => {\n\n\t\t\tthis.visitorListData[index].blockNo = res[0].apartmentBlockNumber;\n\t\t\tthis.visitorListData[index].blockUnitNo = res[0].apartmentBlockUnitNumber;\n\n\t    },\n\t    error => {\n\t      \n\t    });\n\n\n\t\t});\n\n\t\tthis.totalItems = this.visitorListData.length;\n\n\t\tif(this.totalItems>this.itemLimit){\n\t\t\tthis.ItemEndIndex = this.itemLimit;\n\t\t}\n\n\t\telse {\n\t\t\tthis.ItemEndIndex = this.totalItems;\n\t\t}\n\n    this.isVisitorDataLoaded = true;\n    \n    \n    \n\t});\n\n  \t\n\n\n  \t\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvdmlzaXRvci1yZXBvcnRzL3Zpc2l0b3ItcmVwb3J0cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-visitor-reports',\n  templateUrl: './visitor-reports.component.html',\n  styleUrls: ['./visitor-reports.component.scss']\n})\nexport class VisitorReportsComponent implements OnInit {\n\n  reportDataList:any;\n\n  isDataLoaded:boolean = false;\n\n  constructor(\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) { }\n\n  ngOnInit() {\n\n    let details = {\n      ApartmentId: parseInt(this.cookieService.get('apartmentId')),\n      LookupTypeId: 87, //lookuptypeid for report\n      MenuName: 'VisitorManagement'\n    }\n\n    this.lookupService.getLookupValuesByApartmentIdLookupTypeIdMenuName(details).subscribe((res:any) => {\n\n      this.reportDataList = res;\n\n      this.isDataLoaded = true;\n\n    })\n\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvdmlzaXRvci1zZXR1cC92aXNpdG9yLXNldHVwLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Injector } from '@angular/core';\n\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmDialogModel, CommonConfirmModalComponent } from 'src/app/shared/components/common-confirm-modal/common-confirm-modal.component';\n\n@Component({\n  selector: 'app-visitor-setup',\n  templateUrl: './visitor-setup.component.html',\n  styleUrls: ['./visitor-setup.component.scss']\n})\nexport class VisitorSetupComponent implements OnInit {\n\n  isDataLoaded: boolean = false;\n  isCategoryTypeSubmitted: boolean = true;\n\n  ItemStartIndex: any = 0;\n  ItemEndIndex: any;\n  totalItems: any;\n  itemLimit: any = 10;\n\n  unitFieldType: string = \"unitno\";\n  unitOrder: boolean = true;\n\n  isMobile: boolean = false;\n\n  categoryData: any;\n  categoryDataList: any;\n\n  isCategoryTypeNew: boolean = false;\n  isCategoryTypeUpdate: boolean = false;\n\n  categoryType: string = \"\";\n  categoryUpdateId: number = 0;\n\n  isError: boolean = false;\n  alertMessage: boolean = false;\n\n  modalService: any;\n\n  result: string = '';\n\n  constructor(\n    private injector: Injector,\n    private lookupService: LookupService,\n    public dialog: MatDialog,\n    private sharedService: SharedService,\n    private cookieService: CookieService\n  ) {\n    this.modalService = this.injector.get(ModalService);\n  }\n\n  getIndexParams(event) {\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type) {\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if (this.unitFieldType == type) {\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  addNewCategoryType() {\n\n    this.isCategoryTypeNew = true;\n    this.isCategoryTypeUpdate = false;\n\n    setTimeout(() => {\n\n      var elem = document.querySelector('.vehicle-type-card');\n      var scrollTo = elem.getBoundingClientRect().top - 100;\n\n      window.scroll({\n        top: scrollTo,\n        behavior: 'smooth'\n      });\n\n    }, 100);\n\n  }\n\n  updateCategoryType(item) {\n\n    this.isCategoryTypeUpdate = true;\n    this.isCategoryTypeNew = false;\n    this.categoryType = item.lookupValueName;\n    this.categoryUpdateId = item.lookupValueId;\n\n    setTimeout(() => {\n\n      var elem = document.querySelector('.vehicle-type-card');\n      var scrollTo = elem.getBoundingClientRect().top - 100;\n\n      window.scroll({\n        top: scrollTo,\n        behavior: 'smooth'\n      });\n\n    }, 100);\n\n  }\n\n  deleteCategoryType(item) {\n    this.modalService.showConfirmModal(item);\n    // delete item\n    this.sharedService.unitlistdeleteindexcast.subscribe(item => {\n\n      if (item != null) {\n\n        this.isDataLoaded = false;\n\n        var params = {\n          lookupValueId: item.lookupValueId,\n          updateUserId: parseInt(this.cookieService.get('userId'))\n        }\n\n        this.lookupService.deleteLookupvalue(params).subscribe((res: any) => {\n\n          this.categoryDataList = this.categoryDataList.filter((type) => type.lookupValueId !== item.lookupValueId);\n          this.sharedService.setUnitListDeleteIndex(null);\n          this.isDataLoaded = true;\n\n        });\n        var errorDetails = {\n          msg: 'Visitor category deleted successfully',\n          type: \"Success\"\n        };\n        this.sharedService.setCustomAlertMessage(errorDetails);\n\n      }\n\n    });\n  }\n\n  removeCategoryTypeBox() {\n\n    this.isCategoryTypeNew = false;\n    this.isCategoryTypeUpdate = false;\n    this.isError = false;\n\n    setTimeout(() => {\n\n      var elem = document.querySelector('.vehicle-type-table-card');\n      var scrollTo = elem.getBoundingClientRect().top - 100;\n\n      window.scroll({\n        top: scrollTo,\n        behavior: 'smooth'\n      });\n\n    }, 100);\n\n  }\n\n  submitCategoryTypeForm(form) {\n\n    const confirmationMessage = `Are you sure you want to save this settings?`;\n    const dialogData = new ConfirmDialogModel(\"Confirm Action\", confirmationMessage);\n\n    const dialogRef = this.dialog.open(CommonConfirmModalComponent, {\n      panelClass: 'material',\n      disableClose: true,\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe(dialogResult => {\n      this.result = dialogResult;\n      if (this.result) {\n        //code\n        this.isCategoryTypeSubmitted = false;\n\n        if (this.isCategoryTypeNew) {\n\n          let details = {\n\n            \"lookupTypeId\": 100,\n            \"lookupValueName\": this.categoryType,\n            \"description\": 'Visitor Category',\n            \"isActive\": true,\n            \"insertedBy\": parseInt(this.cookieService.get('userId')),\n            \"insertedOn\": \"2019-11-20T16:51:24.105Z\",\n            \"updatedBy\": 0,\n            \"updatedOn\": \"2019-11-20T16:51:24.105Z\"\n\n          }\n\n          let params = {\n            lookupvalue: details\n          }\n\n          this.lookupService.addLookupValue(params).subscribe((res: any) => {\n\n            if (res.message) {\n\n              let categoryParams = {\n                LookupTypeId: 100\n              }\n\n              this.lookupService.getLookupValueByLookupTypeId(categoryParams).subscribe((res: any) => {\n                this.isCategoryTypeNew = false;\n                this.isCategoryTypeSubmitted = true;\n                this.sharedService.setAlertMessage(\"Visitor Category added successfully\");\n                this.categoryDataList = res.filter(item => {\n                  return item.isActive;\n                });\n              });\n\n\n            }\n            else {\n              this.isCategoryTypeSubmitted = true;\n              this.isError = true;\n              this.alertMessage = res.errorMessage;\n              var errorDetails = {\n                msg: this.alertMessage,\n                type: \"Error\"\n              };\n              this.sharedService.setCustomAlertMessage(errorDetails);\n            }\n\n          });\n\n        }\n\n        else {\n\n          let details = {\n\n            \"lookupValueId\": this.categoryUpdateId,\n            \"lookupTypeId\": 100,\n            \"lookupValueName\": this.categoryType,\n            \"description\": this.categoryType,\n            \"isActive\": true,\n            \"insertedBy\": 0,\n            \"insertedOn\": \"2019-11-20T16:51:24.105Z\",\n            \"updatedBy\": parseInt(this.cookieService.get('userId')),\n            \"updatedOn\": \"2019-11-20T16:51:24.105Z\"\n\n          }\n\n          let params = {\n            lookupvalue: details\n          }\n\n          this.lookupService.updateLookupValue(params).subscribe((res: any) => {\n\n            if (res.message) {\n\n              let categoryParams = {\n                LookupTypeId: 100\n              }\n\n              this.lookupService.getLookupValueByLookupTypeId(categoryParams).subscribe((res: any) => {\n                this.isCategoryTypeUpdate = false;\n                this.isCategoryTypeSubmitted = true;\n                this.sharedService.setAlertMessage(\"Visitor Category updated successfully\");\n\n                this.categoryDataList = res.filter(item => {\n                  return item.isActive;\n                });\n\n              });\n            }\n            else {\n              this.isCategoryTypeSubmitted = true;\n              this.isError = true;\n              this.alertMessage = res.errorMessage;\n              var errorDetails = {\n                msg: this.alertMessage,\n                type: \"Error\"\n              };\n              this.sharedService.setCustomAlertMessage(errorDetails);\n            }\n\n          });\n\n        }\n\n      }\n      else{\n        this.isCategoryTypeSubmitted = true;\n      }\n    })\n\n\n\n\n\n  }\n\n  ngOnInit() {\n\n    let categoryListParams = {\n      LookupTypeId: 100\n    }\n\n    this.lookupService.getLookupValueByLookupTypeId(categoryListParams).subscribe((res: any) => {\n\n      this.categoryDataList = res.filter(item => {\n        return item.isActive;\n      });\n\n      this.totalItems = this.categoryDataList.length;\n\n      if (this.totalItems > this.itemLimit) {\n        this.ItemEndIndex = this.itemLimit;\n      }\n      else {\n        this.ItemEndIndex = this.totalItems;\n      }\n\n      this.isDataLoaded = true;\n    });\n\n  }\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from '../.././auth.guard';\n\nimport { VisitorComponent } from './visitor.component';\nimport { VisitorSetupComponent } from './components/visitor-setup/visitor-setup.component';\nimport { VisitorCheckinComponent } from './components/visitor-checkin/visitor-checkin.component';\nimport { VisitorCheckoutComponent } from './components/visitor-checkout/visitor-checkout.component';\nimport { VisitorExpectedVisitorComponent } from './components/visitor-expected-visitor/visitor-expected-visitor.component';\nimport { VisitorReportsComponent } from './components/visitor-reports/visitor-reports.component';\nimport { VisitorCreateComponent } from './components/visitor-create/visitor-create.component';\nimport { VisitorHistoryComponent } from './components/visitor-history/visitor-history.component';\nimport { CheckinVisitorComponent } from './components/checkin-visitor/checkin-visitor.component';\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: 'settings', pathMatch: 'full'},\n\t{ path: 'settings', component: VisitorSetupComponent},\n\t{ path: 'checkin', component: CheckinVisitorComponent},\n\t{ path: 'expected-visitor', component: VisitorExpectedVisitorComponent},\n\t{ path: 'add-visitor', component: VisitorCheckinComponent},\n\t{ path: 'edit-visitor/:id/:type', component: VisitorCheckinComponent},\n\t{ path: 'checkout', component: VisitorCheckoutComponent},\n\t{ path: 'reports', component: VisitorReportsComponent },\n\t{ path: 'create-expected-visitor', component: VisitorCreateComponent },\n\t{ path: 'history', component: VisitorHistoryComponent },\n\t{ path: '**', redirectTo: 'settings', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class VisitorRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy92aXNpdG9yL3Zpc2l0b3IuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-visitor',\n  templateUrl: './visitor.component.html',\n  styleUrls: ['./visitor.component.scss']\n})\nexport class VisitorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VisitorRoutingModule } from './visitor-routing.module';\n\nimport { SharedModule } from '../../shared/shared.module';\nimport { VisitorComponent } from './visitor.component';\nimport { VisitorSetupComponent } from './components/visitor-setup/visitor-setup.component';\nimport { VisitorCheckinComponent } from './components/visitor-checkin/visitor-checkin.component';\nimport { VisitorCheckoutComponent } from './components/visitor-checkout/visitor-checkout.component';\nimport { VisitorExpectedVisitorComponent } from './components/visitor-expected-visitor/visitor-expected-visitor.component';\nimport { VisitorReportsComponent } from './components/visitor-reports/visitor-reports.component';\nimport { VisitorCreateComponent } from './components/visitor-create/visitor-create.component';\nimport { VisitorHistoryComponent } from './components/visitor-history/visitor-history.component';\nimport { CheckinVisitorComponent } from './components/checkin-visitor/checkin-visitor.component';\n\n@NgModule({\n  declarations: [\n\t  VisitorComponent,\n\t  VisitorSetupComponent,\n\t  VisitorCheckinComponent,\n\t  VisitorCheckoutComponent,\n\t  VisitorExpectedVisitorComponent,\n    VisitorReportsComponent,\n    VisitorCreateComponent,\n    VisitorHistoryComponent,\n    CheckinVisitorComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    VisitorRoutingModule\n  ],\n  bootstrap: [ VisitorComponent ]\n})\nexport class VisitorModule { }\n","import { Injectable } from '@angular/core';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedToasterService {\n\n  constructor(public snackBar: MatSnackBar) { }\n\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n}\n"]}