{"version":3,"sources":["./node_modules/ngx-cookie-service/__ivy_ngcc__/fesm2015/ngx-cookie-service.js","./src/app/modules/ams/profile-settings/components/add-property-dialog/add-property-dialog.component.html","./src/app/modules/ams/profile-settings/components/add-property-dialog/add-property-dialog.component.scss","./src/app/modules/ams/profile-settings/components/add-property-dialog/add-property-dialog.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACkE;AAChD;;AAEtB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,yEAAiB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F;AAC1F;AACA;AACA;AACA,2EAA2E;AAC3E;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA,wDAAwD,KAAK;AAC7D;AACA;AACA;AACA,oCAAoC;AACpC;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,EAAE,UAAU;AAC9D,oDAAoD,kCAAkC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,iCAAiC,sDAAe,CAAC,wDAAQ,GAAG,sDAAe,CAAC,yDAAW,GAAG;AAClJ;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,OAAO,4DAAc,gBAAgB,OAAO,oDAAM,SAAS,yDAAW,IAAI;AAC/E;AACA,sBAAsB,wEAAkB,EAAE,4CAA4C,0BAA0B,8DAAQ,CAAC,wDAAQ,GAAG,8DAAQ,CAAC,yDAAW,GAAG,EAAE,4CAA4C;AACzM,gBAAgB,wDAAU,GAAG,q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","file":"default~modules-ams-my-property-my-property-module~modules-ams-profile-settings-profile-settings-module-es2015.js","sourcesContent":["import { __decorate, __param } from 'tslib';\nimport { Inject, InjectionToken, PLATFORM_ID, ɵɵdefineInjectable, ɵɵinject, Injectable } from '@angular/core';\nimport { isPlatformBrowser, DOCUMENT } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nlet CookieService = class CookieService {\n    constructor(\n    // The type `Document` may not be used here. Although a fix is on its way,\n    // we will go with `any` for now to support Angular 2.4.x projects.\n    // Issue: https://github.com/angular/angular/issues/12631\n    // Fix: https://github.com/angular/angular/pull/14894\n    document, \n    // Get the `PLATFORM_ID` so we can check if we're in a browser.\n    platformId) {\n        this.document = document;\n        this.platformId = platformId;\n        this.documentIsAccessible = isPlatformBrowser(this.platformId);\n    }\n    /**\n     * @param name Cookie name\n     * @returns boolean - whether cookie with specified name exists\n     */\n    check(name) {\n        if (!this.documentIsAccessible) {\n            return false;\n        }\n        name = encodeURIComponent(name);\n        const regExp = this.getCookieRegExp(name);\n        const exists = regExp.test(this.document.cookie);\n        return exists;\n    }\n    /**\n     * @param name Cookie name\n     * @returns property value\n     */\n    get(name) {\n        if (this.documentIsAccessible && this.check(name)) {\n            name = encodeURIComponent(name);\n            const regExp = this.getCookieRegExp(name);\n            const result = regExp.exec(this.document.cookie);\n            return this.safeDecodeURIComponent(result[1]);\n        }\n        else {\n            return '';\n        }\n    }\n    /**\n     * @returns all the cookies in json\n     */\n    getAll() {\n        if (!this.documentIsAccessible) {\n            return {};\n        }\n        const cookies = {};\n        const document = this.document;\n        if (document.cookie && document.cookie !== '') {\n            document.cookie.split(';').forEach((currentCookie) => {\n                const [cookieName, cookieValue] = currentCookie.split('=');\n                cookies[this.safeDecodeURIComponent(cookieName.replace(/^ /, ''))] = this.safeDecodeURIComponent(cookieValue);\n            });\n        }\n        return cookies;\n    }\n    /**\n     * @param name     Cookie name\n     * @param value    Cookie value\n     * @param expires  Number of days until the cookies expires or an actual `Date`\n     * @param path     Cookie path\n     * @param domain   Cookie domain\n     * @param secure   Secure flag\n     * @param sameSite OWASP samesite token `Lax`, `None`, or `Strict`. Defaults to `Lax`\n     */\n    set(name, value, expires, path, domain, secure, sameSite = 'Lax') {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        let cookieString = encodeURIComponent(name) + '=' + encodeURIComponent(value) + ';';\n        if (expires) {\n            if (typeof expires === 'number') {\n                const dateExpires = new Date(new Date().getTime() + expires * 1000 * 60 * 60 * 24);\n                cookieString += 'expires=' + dateExpires.toUTCString() + ';';\n            }\n            else {\n                cookieString += 'expires=' + expires.toUTCString() + ';';\n            }\n        }\n        if (path) {\n            cookieString += 'path=' + path + ';';\n        }\n        if (domain) {\n            cookieString += 'domain=' + domain + ';';\n        }\n        if (secure === false && sameSite === 'None') {\n            secure = true;\n            console.warn(`[ngx-cookie-service] Cookie ${name} was forced with secure flag because sameSite=None.` +\n                `More details : https://github.com/stevermeister/ngx-cookie-service/issues/86#issuecomment-597720130`);\n        }\n        if (secure) {\n            cookieString += 'secure;';\n        }\n        cookieString += 'sameSite=' + sameSite + ';';\n        this.document.cookie = cookieString;\n    }\n    /**\n     * @param name   Cookie name\n     * @param path   Cookie path\n     * @param domain Cookie domain\n     */\n    delete(name, path, domain, secure, sameSite = 'Lax') {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        this.set(name, '', new Date('Thu, 01 Jan 1970 00:00:01 GMT'), path, domain, secure, sameSite);\n    }\n    /**\n     * @param path   Cookie path\n     * @param domain Cookie domain\n     */\n    deleteAll(path, domain, secure, sameSite = 'Lax') {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        const cookies = this.getAll();\n        for (const cookieName in cookies) {\n            if (cookies.hasOwnProperty(cookieName)) {\n                this.delete(cookieName, path, domain, secure, sameSite);\n            }\n        }\n    }\n    /**\n     * @param name Cookie name\n     * @returns property RegExp\n     */\n    getCookieRegExp(name) {\n        const escapedName = name.replace(/([\\[\\]\\{\\}\\(\\)\\|\\=\\;\\+\\?\\,\\.\\*\\^\\$])/gi, '\\\\$1');\n        return new RegExp('(?:^' + escapedName + '|;\\\\s*' + escapedName + ')=(.*?)(?:;|$)', 'g');\n    }\n    safeDecodeURIComponent(encodedURIComponent) {\n        try {\n            return decodeURIComponent(encodedURIComponent);\n        }\n        catch (_a) {\n            // probably it is not uri encoded. return as is\n            return encodedURIComponent;\n        }\n    }\n};\nCookieService.ɵfac = function CookieService_Factory(t) { return new (t || CookieService)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(PLATFORM_ID)); };\nCookieService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: InjectionToken, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\n];\nCookieService.ɵprov = ɵɵdefineInjectable({ factory: function CookieService_Factory() { return new CookieService(ɵɵinject(DOCUMENT), ɵɵinject(PLATFORM_ID)); }, token: CookieService, providedIn: \"root\" });\nCookieService = __decorate([ __param(0, Inject(DOCUMENT)),\n    __param(1, Inject(PLATFORM_ID))\n], CookieService);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CookieService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.InjectionToken, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\n\n/*\n * Public API Surface of ngx-cookie-service\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CookieService };\n\n//# sourceMappingURL=ngx-cookie-service.js.map","export default \"<condo-card>\\n    <div CondoCardHeader>\\n        <div class=\\\"d-flex\\\">\\n            <h4>Add Property</h4>\\n        </div>\\n    </div>\\n    <div CondoCardBody>\\n        <div class=\\\"p-5\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-12\\\">\\n                    <div class=\\\"input-box\\\">\\n                        <label>Node Id</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" disabled [ngModel]=\\\"addPropertyParam.nodeId\\\"\\n                            name=\\\"nodeId\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-12\\\">\\n                    <div class=\\\"input-box\\\">\\n                        <label>POI Id</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" disabled [ngModel]=\\\"addPropertyParam.propertyPoiid\\\"\\n                            name=\\\"propertyPoiid\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12 mt-3 \\\">\\n                    <div class=\\\"select-box\\\">\\n                        <label>Property Type</label>\\n                        <select [(ngModel)]=\\\"addPropertyParam.propertyPoitype\\\" (change)=\\\"selectPropertyType()\\\"\\n                            name=\\\"propertyPoitype\\\" class=\\\"form-control\\\">\\n                            <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                            <option *ngFor=\\\"let item of propertyTypeList\\\" value=\\\"{{item.lookupValueId}}\\\">\\n                                {{item.lookupValueName}}</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12 mt-3\\\"\\n                    *ngIf=\\\"addPropertyParam.propertyPoitype == 318\\\">\\n                    <div class=\\\"select-box\\\">\\n                        <label>Units</label>\\n                        <select [(ngModel)]=\\\"addPropertyParam.blockUnitId\\\" name=\\\"blockUnitId\\\" class=\\\"form-control\\\">\\n                            <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                            <option *ngFor=\\\"let item of unitList\\\" value=\\\"{{item.apartmentBlockUnitId}}\\\">\\n                                {{item.apartmentBlockUnitNumber}}</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12 mt-3\\\"\\n                    *ngIf=\\\"addPropertyParam.propertyPoitype == 320\\\">\\n                    <div class=\\\"select-box\\\">\\n                        <label>Facility Type</label>\\n                        <select [(ngModel)]=\\\"addPropertyParam.facilityId\\\" name=\\\"facilityId\\\" class=\\\"form-control\\\">\\n                            <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                            <option *ngFor=\\\"let item of facilityList\\\" value=\\\"{{item.apartmentFacilityId}}\\\">\\n                                {{item.facilityName}}\\n                            </option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12 mt-3\\\"\\n                    *ngIf=\\\"addPropertyParam.propertyPoitype == 319\\\">\\n                    <div class=\\\"select-box\\\">\\n                        <label>Asset Category</label>\\n                        <select [(ngModel)]=\\\"assetCategory\\\" name=\\\"assetCategory\\\" (change)=\\\"getAssetSubCategory()\\\"\\n                            class=\\\"form-control\\\">\\n                            <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                            <option *ngFor=\\\"let item of assetCategoryList\\\" value=\\\"{{item.id}}\\\">{{item.name}}</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12 mt-3\\\"\\n                    *ngIf=\\\"addPropertyParam.propertyPoitype == 319 && assetCategory\\\">\\n                    <div class=\\\"select-box\\\">\\n                        <label>Asset Sub Category</label>\\n                        <select [(ngModel)]=\\\"assetSubCategory\\\" name=\\\"assetSubCategory\\\" (change)=\\\"selectAsset()\\\"\\n                            class=\\\"form-control\\\">\\n                            <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                            <option *ngFor=\\\"let item of assetSubCategoryList\\\" value=\\\"{{item.id}}\\\">{{item.name}}</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12 mt-3\\\"\\n                    *ngIf=\\\"addPropertyParam.propertyPoitype == 319 && assetCategory && assetSubCategory\\\">\\n                    <div class=\\\"select-box\\\">\\n                        <label>Asset</label>\\n                        <select [(ngModel)]=\\\"addPropertyParam.assetId\\\" name=\\\"assetId\\\" class=\\\"form-control\\\">\\n                            <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                            <option *ngFor=\\\"let item of assetList\\\" value=\\\"{{item.assetId}}\\\">{{item.assetName}}</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12 mt-3\\\">\\n                    <div class=\\\"select-box\\\">\\n                        <label>Infrastrcuture</label>\\n                        <select [(ngModel)]=\\\"addPropertyParam.infrastructureId\\\" name=\\\"infrastructureId\\\"\\n                            class=\\\"form-control\\\">\\n                            <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12 mt-3\\\">\\n                    <div class=\\\"select-box\\\">\\n                        <label>Operational Maintanance</label>\\n                        <select [(ngModel)]=\\\"addPropertyParam.opMaintenanceId\\\" name=\\\"opMaintenanceId\\\"\\n                            class=\\\"form-control\\\">\\n                            <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                        </select>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12 d-flex justify-content-end mt-3\\\">\\n                    <button mat-flat-button mat-dialog-close>Cancel</button>\\n                    <button mat-flat-button [color]=\\\"'primary'\\\" (click)=\\\"addProperty()\\\">Submit</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</condo-card>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3Byb2ZpbGUtc2V0dGluZ3MvY29tcG9uZW50cy9hZGQtcHJvcGVydHktZGlhbG9nL2FkZC1wcm9wZXJ0eS1kaWFsb2cuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { FacilityService } from 'src/app/api/controllers/Facility';\nimport { PropertyManagerService } from 'src/app/api/controllers/PropertyManager';\nimport { AssetService } from 'src/app/api/controllers/Asset';\n\n@Component({\n  selector: 'app-add-property-dialog',\n  templateUrl: './add-property-dialog.component.html',\n  styleUrls: ['./add-property-dialog.component.scss']\n})\nexport class AddPropertyDialogComponent implements OnInit {\n\n  public propertyTypeList: Array<any> = [];\n  public unitList: Array<any> = [];\n  public facilityList: Array<any> = [];\n  public assetCategoryList: Array<any> = [];\n  public assetSubCategoryList: Array<any> = [];\n  public assetList: Array<any> = [];\n  public assetRawList: Array<any> = [];\n  public assetCategory: any;\n  public assetSubCategory: any;\n  public addPropertyParam = {\n    \"propertyPoiid\": 0,\n    \"propertyPoitype\": 0,\n    \"nodeId\": 0,\n    \"x\": 0,\n    \"y\": 0,\n    \"id\": 0,\n    \"blockUnitId\": null,\n    \"assetId\": null,\n    \"facilityId\": null,\n    \"infrastructureId\": null,\n    \"opMaintenanceId\": null,\n    \"apartmentId\": Number(this.cookieService.get('apartmentId')),\n    \"isActive\": true,\n    \"insertedBy\": null,\n    \"insertedOn\": \"2020-07-06T14:48:10.120Z\",\n    \"updatedBy\": null,\n    \"updatedOn\": \"2020-07-06T14:48:10.120Z\"\n  }\n  constructor(\n    private lookupService: LookupService,\n    private apartmentService: ApartmentService,\n    private facilityService: FacilityService,\n    private cookieService: CookieService,\n    private propertyService: PropertyManagerService,\n    private assetService: AssetService,\n    public dialogRef: MatDialogRef<AddPropertyDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    for (const key in this.data) {\n      if(this.addPropertyParam.hasOwnProperty(key)){\n        this.addPropertyParam[key] = this.data[key];\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    console.log('........',this.addPropertyParam);\n    this.getPropertyType();\n  }\n\n\n\n  getPropertyType() {\n    let getLookUpParam = {\n      ApartmentId: Number(this.cookieService.get('apartmentId')),\n      LookupTypeId: 196\n    }\n    this.lookupService.getLookupValueByLookupTypeId(getLookUpParam).subscribe(\n      (resp: any) => {\n        this.propertyTypeList = resp;\n      },\n      error => {\n\n      }\n    )\n  }\n\n  selectPropertyType() {\n    switch (Number(this.addPropertyParam.propertyPoitype)) {\n      case 316:\n\n        break;\n      case 318:\n        this.getUnitList();\n        break;\n      case 319:\n        this.getAssetCategory();\n        this.getAsset();\n        break;\n      case 320:\n        this.getFacilityList();\n        break;\n      case 321:\n\n        break;\n      case 322:\n\n        break;\n\n\n      default:\n        break;\n    }\n  }\n\n  getUnitList() {\n    let getUnitParam = {\n      apartmentBlockId: this.data.apartmentBlockId\n    }\n    this.apartmentService.getApartmentBlockUnitByBlockId(getUnitParam).subscribe(\n      (resp: any) => {\n        this.unitList = resp;\n      }\n    )\n  }\n\n  getFacilityList() {\n    let getFacilityParam = {\n      apartmentId: Number(this.cookieService.get('apartmentId'))\n    }\n    this.facilityService.getApartmentFacilitiesByApartmentId(getFacilityParam).subscribe(\n      (resp: any) => {\n        this.facilityList = resp;\n      }\n    )\n  }\n\n  getAssetCategory() {\n    let queryParamBase = {\n      apartmentId: Number(this.cookieService.get('apartmentId')),\n      lookupTypeId: 19,\n      subCategoryLookupTypeId: 68,\n    };\n    this.lookupService.getSubcategory(queryParamBase).subscribe((res: any) => {\n      if (res) {\n        this.assetCategoryList = res ? res : [];\n      }\n    });\n  }\n\n  getAssetSubCategory() {\n    this.assetCategoryList.filter(key => {\n      if (key.id == this.assetCategory) {\n        this.assetSubCategoryList = key.subCategory;\n      }\n    })\n  }\n\n  getAsset() {\n    let getAllAsset = {\n      apartmentId: Number(this.cookieService.get('apartmentId'))\n    }\n    this.assetService.getAllAssetByApartmentId(getAllAsset).subscribe(\n      (resp: any) => {\n        this.assetRawList = resp;\n      }\n    )\n  }\n\n  selectAsset() {\n    this.assetRawList.filter(key => {\n      if (key.assetSubcategoryId == this.assetSubCategory) {\n        this.assetList.push(key);\n      }\n    })\n  }\n\n  assignUnitData(poiId){\n    let unitData:any = new Object();\n    unitData['type'] = \"318\";\n    unitData['poiId'] = poiId;\n    this.unitList.filter(key =>{\n      if(key.apartmentBlockUnitId == this.addPropertyParam.blockUnitId){\n        for (const item in key) {\n          if(key[item] === true && key[item] != null){\n            unitData[item] = item;\n          }\n        }\n      }\n    })\n    delete unitData.isActive;\n    this.dialogRef.close(unitData);\n  }\n\n  addProperty() {\n    this.addPropertyParam.insertedOn = new Date().toISOString();\n    this.addPropertyParam.updatedOn = new Date().toISOString();\n    this.addPropertyParam.insertedBy = parseInt(this.cookieService.get('userId'));\n    let addProperty = {\n      propertyPoi: this.addPropertyParam\n    }\n    this.propertyService.addPropertyPoi(addProperty).subscribe(\n      (resp:any) => {\n        if(resp && resp.message){\n          switch (this.addPropertyParam.propertyPoitype) {\n            case 316:\n      \n              break;\n            case 318:\n              this.assignUnitData(resp.message);\n              break;\n            case 319:\n             \n              break;\n            case 320:\n              break;\n            case 321:\n      \n              break;\n            case 322:\n      \n              break;\n      \n      \n            default:\n              break;\n          }\n        }\n      }\n    )\n  }\n\n  updateProperty() {\n    this.addPropertyParam.updatedOn = new Date().toISOString();\n    let addProperty = {\n      propertyPoi: this.addPropertyParam\n    }\n    this.propertyService.updatePropertyPoi(addProperty).subscribe(\n      resp => {\n\n      }\n    )\n  }\n\n}\n"],"sourceRoot":"webpack:///"}