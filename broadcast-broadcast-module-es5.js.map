{"version":3,"sources":["webpack:///src/app/ams/broadcast/components/broadcast-announcements/broadcast-announcements.component.html","webpack:///src/app/ams/broadcast/components/broadcast-group-assignment/broadcast-group-assignment.component.html","webpack:///src/app/ams/broadcast/components/broadcast-history/broadcast-history.component.html","webpack:///src/app/ams/broadcast/components/broadcast-removeuser/broadcast-removeuser.component.html","webpack:///src/app/ams/broadcast/components/broadcast-sendmessage/broadcast-sendmessage.component.html","webpack:///src/app/ams/broadcast/components/broadcast-setup/broadcast-setup.component.html","webpack:///src/app/ams/broadcast/components/broadcastgroup-setup/broadcastgroup-setup.component.html","webpack:///src/app/ams/broadcast/broadcast-routing.module.ts","webpack:///src/app/ams/broadcast/broadcast.module.ts","webpack:///src/app/ams/broadcast/components/broadcast-announcements/broadcast-announcements.component.scss","webpack:///src/app/ams/broadcast/components/broadcast-announcements/broadcast-announcements.component.ts","webpack:///src/app/ams/broadcast/components/broadcast-group-assignment/broadcast-group-assignment.component.scss","webpack:///src/app/ams/broadcast/components/broadcast-group-assignment/broadcast-group-assignment.component.ts","webpack:///src/app/ams/broadcast/components/broadcast-history/broadcast-history.component.scss","webpack:///src/app/ams/broadcast/components/broadcast-history/broadcast-history.component.ts","webpack:///src/app/ams/broadcast/components/broadcast-removeuser/broadcast-removeuser.component.scss","webpack:///src/app/ams/broadcast/components/broadcast-removeuser/broadcast-removeuser.component.ts","webpack:///src/app/ams/broadcast/components/broadcast-sendmessage/broadcast-sendmessage.component.scss","webpack:///src/app/ams/broadcast/components/broadcast-sendmessage/broadcast-sendmessage.component.ts","webpack:///src/app/ams/broadcast/components/broadcast-setup/broadcast-setup.component.scss","webpack:///src/app/ams/broadcast/components/broadcast-setup/broadcast-setup.component.ts","webpack:///src/app/ams/broadcast/components/broadcastgroup-setup/broadcastgroup-setup.component.scss","webpack:///src/app/ams/broadcast/components/broadcastgroup-setup/broadcastgroup-setup.component.ts"],"names":["routes","path","redirectTo","pathMatch","component","BroadcastRoutingModule","imports","forChild","exports","BroadcastModule","declarations","BroadcastAnnouncementsComponent","broadcastService","sharedService","cookieService","userService","staffService","apartmentService","injector","images","map","n","imagePath","modalService","get","apartmentID","parseInt","getAllCategory","getAllBroadcastMessage","getAllGroupCategory","apartmentId","getBroadCastMessageCategories","subscribe","res","allCategory","getAllBroadCastGroupCategory","broadCastGroupCategory","groupcategoryId","groupcategory","filter","obj","broadCastGroupCategoryId","groupName","name","data","item","broadCastMessageCategoryId","undefined","length","broadCastMessageCategory1","allUser","userId","firstName","users$","getAllUsers","allBroadCastmessages$","pipe","users","getAllBroadcastMessages","broadCastMessages","forEach","element","broadCastGroupcategoryId","CategoryName","getCategoryName","broadcastMessageCategoryId","getGroupCategoryName","UserName","getUserName","broadcastBy","broadCastBased","interestGroupBased","selector","template","BroadcastGroupAssignmentComponent","subject","groupCategorySetting","dropdownSettings","blockdropdownSettings","roleTypedropdownSettings","roleDropdownSettings","usersDropdownSettings","roleTypeArr","roleCategory","apartmentBlock","filterOptions","myControl","loginUserId","groupUsercategory","getUsers","assignUsers","getAllApartmentBlockList","singleSelection","enableSearchFilter","labelKey","primaryKey","groupBy","enableFilterSelectAll","autoPosition","maxHeight","getInterestGroupUsers","dropdownList","roleIds","Array","prototype","call","selectedItems","value","join","roleids","blockIds","apartmentBlockId","blockids","searchText","getUsersByKeyword","userFullName","userName","roleName","apartmentBlockNumber","apartmentBlockUnitNumber","userFullDetail","roleId","apartmentBlockUnitId","allUsers","error","console","log","evt","target","filteredUsers","event","ItemStartIndex","ItemEndIndex","type","unitFieldType","unitOrder","window","innerWidth","getApartmentBlockByApartmentId","usersToInsert","counter","isLast","insertGroupUser","roleID","apartmentBlockID","apartmentBlockUnitID","push","unitId","categoryUsers","interestGroupUsers","tempAssignUsers","tempUsers","isFound","obj2","interestGroup","blockIdArr","apartmentBlockIds","split","includes","toString","roleTypeId","RoleTypeId","roleIdArr","RoleIds","params","getUsersByFilter","mapGroupUserForm","broadCastGroupCategoryID","userIds","broadCastGroupCategoryUser","Date","toISOString","isEdit","broadCastGroupCategoryUserID","insertedBy","insertedOn","updatedBy","updatedOn","serialNumber","serialNo","broadcast","upsertBroadCastGroupCategoryUser","message","setAlertMessage","reset","blockId","removeRole","getBroadCastGroupCategoryUser","isDataLoaded","totalItems","itemLimit","BroadcastHistoryComponent","lookupService","bcData","getAllType","getAllBroadcastGroups","allgroup","LookupTypeId","getLookupValueByLookupTypeId","allType","lookupValueId","lookupValueName","modeIds","broadcastModeString","modeIdsArr","substring","BroadCastMode","getBroadCastMode","broadcastModeIds","BroadcastRemoveuserComponent","getAllGoupUsers","user","broadCastGroupCategoryUserId","deleteBy","deleteBroadCastGroupCategoryUser","allGroupUser","currentUser","getUser","role","block","unit","groupCategory","getGroupCategory","apartmentBlockList","groupCategoryid","BroadcastSendmessageComponent","broadCastdropdownSettings","staffCategoryMap","Map","staffSubCategoryMap","staffCategory","staffSubCategory","broadCastCategory","condition","broadModeArr","allBroadcastMessageGroup","isFlashNotice","editorPlacehorder","IsBroadcast","getAllRoleTypesList","selectedTab","selectInterestGroup","updateUsers","getUsersByApartmentId","selectedGroup","bool","id","allcategory","ckeditor","broadCastModeArr","getAllRoleTypes","ApartmentId","getApartmentRolesByRoleTypeId","condtionRequired","conditinArr","getUserIds$","isStaff","toLowerCase","getStaffCategoryByRole","temp","category","set","addStaffCategory","items","getstaffCategories","removeStaffCategory","removeSubStaffCategory","getSubStaffCategoryByCategory","addSubStaffCategory","getStaffSubCategories","removeAllStaffCategories","removeAllSubStaffCategories","list","removeSubStaffCategories","conditionIds","staffcategoryIds","staffSubCategoryIds","form","broadCastGroupCategoryIDs","broadcastMessage","broadCastParams","sourceBroadCastMessage_model","addBroadCastMessage","ClearFormData","BroadcastSetupComponent","dialog","errorMessage","isError","string","unitlistdeleteindexcast","index","broadcastId","allBroadcastCategory","deleteBroadCastCategory","splice","setUnitListDeleteIndex","showConfirmModal","isActive","broadcastCategory","broadCastMessageCategory","upsertBroadCastMessageCategory","BroadcastgroupSetupComponent","isLiving","isPrimaryContact","privilageCategory","allBroadcastGroupCategory","deleteBroadCastGroupCategory","allRoleTypesList","allApartmentBlockList","roleType","allApartmentRolesList","parentId","privilegeArr","privilege","privileges","broadcastGroupCategory","description","addBroadCastGroupCategory"],"mappings":"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","file":"broadcast-broadcast-module-es5.js","sourcesContent":["export default \"<div class=\\\"broadcast-removeuser-wrapper\\\">\\n    <mat-tab-group dynamicHeight> -->\\n                   <mat-tab label=\\\"BroadCast Based\\\">\\n    <ngb-carousel *ngIf=\\\"images\\\" >\\n        <ng-template ngbSlide *ngFor=\\\"let broadCastMessage of broadCastBased\\\">\\n          <div class=\\\"picsum-img-wrapper\\\">\\n            <img [src]=\\\"imagePath\\\" alt=\\\"Random first slide\\\">\\n           \\n          </div>\\n          <div class=\\\"carousel-caption1\\\">\\n            <h5> {{broadCastMessage.CategoryName}}</h5>\\n          </div>\\n          <div class=\\\"carousel-caption2\\\"> \\n            <h5><b> {{broadCastMessage.subject}}</b> </h5>\\n          </div>\\n          <div class=\\\"carousel-caption3\\\">\\n            <h5>Posted By: {{broadCastMessage.UserName}}</h5>\\n            </div>\\n        </ng-template>\\n        <!-- <ng-template ngbSlide>\\n          <div class=\\\"picsum-img-wrapper\\\">\\n            <img [src]=\\\"imagePath\\\" alt=\\\"Random second slide\\\">\\n          </div>\\n          <div class=\\\"carousel-caption\\\">\\n            <h3>Second slide label</h3>\\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\\n          </div>\\n        </ng-template>\\n        <ng-template ngbSlide>\\n          <div class=\\\"picsum-img-wrapper\\\">\\n            <img [src]=\\\"imagePath\\\" alt=\\\"Random third slide\\\">\\n          </div>\\n          <div class=\\\"carousel-caption\\\">\\n            <h3>Third slide label</h3>\\n            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\\n          </div>\\n        </ng-template> -->\\n      </ngb-carousel>\\n </mat-tab>\\n                            <mat-tab label=\\\"Interest Group Based \\\"> \\n                              <ngb-carousel *ngIf=\\\"images\\\" >\\n                                <ng-template ngbSlide *ngFor=\\\"let broadCastMessage of interestGroupBased\\\">\\n                                  <div class=\\\"picsum-img-wrapper\\\">\\n                                    <img [src]=\\\"imagePath\\\" alt=\\\"Random first slide\\\">\\n                                   \\n                                  </div>\\n                                  <div class=\\\"carousel-caption1\\\">\\n                                    <h5> {{broadCastMessage.CategoryName}}</h5>\\n                                  </div>\\n                                  <div class=\\\"carousel-caption2\\\"> \\n                                    <h5><b> {{broadCastMessage.subject}}</b> </h5>\\n                                  </div>\\n                                  <div class=\\\"carousel-caption3\\\">\\n                                    <h5>Posted By: {{broadCastMessage.UserName}}</h5>\\n                                    </div>\\n                                </ng-template>\\n                                \\n                              </ngb-carousel> </mat-tab>\\n                            \\n                           </mat-tab-group> \\n    </div>\\n\"","export default \"<div class=\\\"broadcastgroupAssignment-setup-wrapper\\\">\\n        <div  class=\\\"card clear form-group\\\" id=\\\"mapaccordion\\\" >\\n    <div class=\\\"card-body\\\">\\n        <ul class=\\\"list-group  clear\\\">\\n            <li class=\\\"list-group-item\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#typeCollapseMap\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"typecollapseOne\\\">\\n                <h5>Assign Users to Interest Group</h5>  \\n            </li>\\n            <div id=\\\"typeCollapseMap\\\"  aria-labelledby=\\\"headingOne\\\" data-parent=\\\"#mapaccordion\\\">\\n                <div class=\\\"details\\\">\\n                    <app-alert-message [message]=\\\"errorMessage\\\" [isAlert]=\\\"isError\\\"></app-alert-message>\\n                    <form #mapGroupUserForm = \\\"ngForm\\\" name=\\\"mapGroupUserForm\\\" (ngSubmit)=\\\"submitMapGroupUserForm(mapGroupUserForm)\\\"  novalidate>\\n                    <div class=\\\"row mt-4\\\">\\n                        <div class=\\\"col-sm-4\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"input-box\\\">\\n                                        <label>Interest Group Category*</label>\\n                                        <angular2-multiselect [data]=\\\"broadCastGroupCategory.dropdownList\\\" name=\\\"groupTypeDropDown\\\"\\n                                             [(ngModel)]=\\\"broadCastGroupCategory.selectedItems\\\"\\n                                         (onSelect)=\\\"getUsersBycategory($event)\\\" (onDeSelect)=\\\"removeCategory()\\\" (onDeSelectAll)=\\\"removeCategory()\\\"   [settings]=\\\"groupCategorySetting\\\"  required>\\n                                        </angular2-multiselect>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                            <!-- <div  class=\\\"col-sm-4\\\"> \\n                                <div class=\\\"select-box\\\">                             \\n                                    <label>Role Type</label>\\n                                    <angular2-multiselect [data]=\\\"roleTypeArr.dropdownList\\\" name=\\\"roleTypeDropDown\\\"\\n                                       [(ngModel)]=\\\"roleTypeArr.selectedItems\\\"\\n                                       [settings]=\\\"roleTypedropdownSettings\\\" (onSelect)=\\\"getAppartmentRole($event)\\\"\\n                                        (onDeSelect)=\\\"removeRole($event)\\\" (onDeSelectAll)=\\\"removeRole($event)\\\"\\n                                    ></angular2-multiselect>\\n                                 </div>\\n                              </div> -->\\n                                <div  class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"select-box\\\">\\n                                        <label> Role</label>\\n                                        <angular2-multiselect [data]=\\\"roleCategory.dropdownList\\\" name=\\\"roleDropDown\\\"\\n                                            [(ngModel)]=\\\"roleCategory.selectedItems\\\"\\n                                            [settings]=\\\"roleDropdownSettings\\\" \\n                                            (onSelect)='updateUsers()' (onDeSelect)='updateUsers()'\\n                                             (onSelectAll)=\\\"updateUsers()\\\"  (onDeSelectAll)=\\\"updateUsers()\\\">    \\n                                        </angular2-multiselect>\\n                                    </div>  \\n                                </div>                        \\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div  class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"select-box\\\">\\n                                        <label>Appartment Block</label>\\n                                        <angular2-multiselect [data]=\\\"apartmentBlock.dropdownList\\\" name=\\\"blockdropdown\\\"\\n                                            [(ngModel)]=\\\"apartmentBlock.selectedItems\\\"\\n                                             [settings]=\\\"blockdropdownSettings\\\"\\n                                            (onSelect)='updateUsers()' (onDeSelect)='updateUsers()'\\n                                             (onSelectAll)=\\\"updateUsers()\\\"  (onDeSelectAll)=\\\"updateUsers()\\\">\\n                                        </angular2-multiselect>\\n                                    </div>  \\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div  class=\\\"col-sm-12\\\"> \\n                                    <div class=\\\"select-box\\\">                             \\n                                        <label>Users*</label>\\n                                        <angular2-multiselect [data]=\\\"users.dropdownList\\\" name=\\\"userTypeDropDown\\\"\\n                                            [(ngModel)]=\\\"users.selectedItems\\\"\\n                                             [settings]=\\\"usersDropdownSettings\\\"  required\\n                                        ></angular2-multiselect>\\n                                    </div>\\n                                 </div>                     \\n                             \\n                            </div>\\n                            <!-- <div class=\\\"row\\\">\\n                                <div  class=\\\"col-sm-12\\\"> \\n                                    <div class=\\\"select-box\\\"> \\n                                       <label>Users *</label>\\n          <input type=\\\"text\\\" placeholder=\\\"serach user\\\" matInput   (keyup)=\\\"search($event)\\\" />\\n    <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n      <mat-option *ngFor=\\\"let option of filteredUsers\\\" [value]=\\\"option\\\">\\n        {{option.userName}}\\n      </mat-option>\\n    </mat-autocomplete>\\n   </div>\\n                                 </div>                     \\n                             \\n                            </div> -->\\n\\n\\n                        </div>\\n            <div class=\\\"col-sm-2\\\">\\n                <div class=\\\"row\\\">\\n                    <div  class=\\\"col-sm-8\\\">\\n                        <div class=\\\"select-box\\\" style=\\\"transform: translateY(120px);\\\">                         \\n                            <button  type=\\\"button\\\" class=\\\"btn\\\" [disabled]=\\\"mapGroupUserForm.invalid\\\" > \\n                                <label class=\\\"assignBtn\\\"> Assign</label>\\n                                <i class=\\\"fa fa-long-arrow-right\\\" style=\\\"font-size:60px;\\\" (click)='assignUser()' aria-hidden=\\\"true\\\"></i>\\n                            </button>\\n                        </div>  \\n                    </div> \\n                </div>\\n                \\n            </div>\\n            <div class=\\\"col-sm-4\\\">\\n           <div class=\\\"row mt-3\\\">\\n             <div class=\\\"col-sm-12\\\" style=\\\"border: 1px solid #cccccc;height: 320px;\\\">\\n                 <li *ngFor=\\\"let user of assignUsers\\\">\\n                        {{ user.userFullName }}\\n                      </li>\\n                \\n             </div>\\n           </div>\\n\\n             </div>\\n           </div>\\n                \\n             \\n          \\n            \\n        \\n          \\n            \\n            <!-- <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-12\\\">\\n                <div class=\\\"list-inline float-right mt-4\\\">\\n                   \\n                    <button type=\\\"button\\\" class=\\\"btn blue mr-4\\\"  (click)=\\\"Cancel()\\\">Cancel</button>\\n                    <button type=\\\"submit\\\" class=\\\"btn blue mr-2\\\" [disabled]=\\\"mapGroupUserForm.invalid\\\">Submit</button>\\n                   \\n                </div>\\n              </div>\\n            </div> -->\\n                   </form>\\n\\n        </div>\\n        </div>\\t\\n        </ul>\\n    </div>\\n        </div>              \\n\\n        <!-- <div class=\\\"card card-table\\\">\\n            <div class=\\\"card-header\\\">\\n            <div class=\\\"float-left\\\">\\n                <h5>Interest Group Users <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n            </div>\\n            <ul class=\\\"list-inline\\\">\\n                <li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n                    <i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"bcData\\\" >\\n                </li>\\n            \\n            </ul>\\n            </div>\\n\\n            <app-filter-box *ngIf=\\\"isDataLoaded\\\" [totalItems]=\\\"totalFilterItems\\\" class=\\\"d-sm-block d-none\\\"></app-filter-box>\\n\\n            <div class=\\\"card-body p-0\\\">\\n\\n            <table class=\\\"table shrink-table\\\" [ngClass]=\\\"isMobileView()\\\">\\n                <thead>\\n                    <tr>\\n                    <th width=\\\"15%\\\" (click)=\\\"sortUnitData('broadCastGroupCategoryID')\\\">Category ID<span [ngClass]=\\\"getFieldOrderBy('broadCastGroupCategoryID')\\\"></span></th>\\n                    <th width=\\\"30%\\\" (click)=\\\"sortUnitData('UserIDs')\\\">Broadcast Category <span [ngClass]=\\\"getFieldOrderBy('UserIDs')\\\"></span></th>\\n                    <th width=\\\"45%\\\" (click)=\\\"sortUnitData('RoleTypeId')\\\">Description <span [ngClass]=\\\"getFieldOrderBy('RoleTypeId')\\\"></span></th>\\n                    <th width=\\\"10%\\\">Action</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr *ngFor=\\\"let category of interestGroupUsers| orderBy : unitFieldType: unitOrder | slice:ItemStartIndex:ItemEndIndex | simpleSearch: bcData ; let i = index\\\">\\n                    <td class=\\\"name\\\">{{category.broadCastGroupCategoryID}}</td>\\n                    <td class=\\\"grey\\\">{{category.UserIDs}}</td>\\n                    <td class=\\\"grey\\\">{{category.RoleTypeId}}</td>\\n                    <td class=\\\"grey\\\">\\n                \\n                        <a class=\\\"\\\" (click)=\\\"updateData(category)\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#typeCollapseOne\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"typecollapseOne\\\"><i-feather class=\\\"icon edit\\\" name=\\\"edit\\\"></i-feather></a>&nbsp;\\n                        <a class=\\\"\\\" (click)=\\\"showConfirmModal(i)\\\"><i-feather class=\\\"icon delete\\\" name=\\\"trash\\\"></i-feather></a>\\n                    </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n\\n            <app-pagination \\n                [totalItems]=\\\"totalItems\\\"  \\n                [ItemStartIndex]=\\\"ItemStartIndex\\\"\\n                [ItemEndIndex] = \\\"ItemEndIndex\\\"\\n                [itemLimit] = \\\"itemLimit\\\"\\n                (outputParams) = \\\"getIndexParams($event)\\\">\\t\\n            </app-pagination>\\n        </div>\\n        </div> -->\\n</div>\\n\"","export default \"\\n<div class=\\\"broadcast-view-wrapper\\\">\\n\\n\\t<app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n\\n\\t<div class=\\\"card card-table\\\">\\n\\t\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>Broadcast History <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"bcData\\\" >\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<!-- <li class=\\\"list-inline-item\\\">\\n    \\t\\t\\t\\t<a class=\\\"btn l-blue mt_5\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Print</span>\\n    \\t\\t\\t\\t</a>\\n    \\t\\t\\t</li> -->\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n\\n  \\t\\t<app-filter-box *ngIf=\\\"isDataLoaded\\\" [totalItems]=\\\"totalFilterItems\\\" class=\\\"d-sm-block d-none\\\"></app-filter-box>\\n\\n  \\t\\t<div class=\\\"card-body p-0\\\">\\n\\n        <table class=\\\"table shrink-table\\\" [ngClass]=\\\"isMobileView()\\\">\\n            <thead>\\n                <tr>\\n                <th scope=\\\"col\\\" (click)=\\\"sortUnitData('broadcastOn')\\\">BroadCast ON <span [ngClass]=\\\"getFieldOrderBy('broadcastOn')\\\"></span></th>\\n                <th scope=\\\"col\\\" (click)=\\\"sortUnitData('broadcastMessageCategoryId')\\\">Broadcast Category <span [ngClass]=\\\"getFieldOrderBy('broadcastMessageCategoryId')\\\"></span></th>\\n                <th scope=\\\"col\\\" (click)=\\\"sortUnitData('subject')\\\">Subject <span [ngClass]=\\\"getFieldOrderBy('subject')\\\"></span></th>\\n                <th scope=\\\"col\\\" (click)=\\\"sortUnitData('broadcastModeIds')\\\">Broadcast Type <span [ngClass]=\\\"getFieldOrderBy('broadcastModeIds')\\\"></span></th>\\n                <th scope=\\\"col\\\" (click)=\\\"sortUnitData('broadcastBy')\\\">Posted By <span [ngClass]=\\\"getFieldOrderBy('broadcastBy')\\\"></span></th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let broadcast of broadCastMessages | orderBy : unitFieldType: unitOrder | slice:ItemStartIndex:ItemEndIndex | simpleSearch: bcData ; let i = index\\\">\\n                <td class=\\\"name\\\">{{broadcast.broadcastOn | date:'dd-MM-yyyy HH:MM'}}</td>\\n                <td class=\\\"grey\\\">{{broadcast.CategoryName}}</td>\\n                <td class=\\\"grey\\\">{{broadcast.subject}}</td>\\n                <td class=\\\"grey\\\">{{broadcast.BroadCastMode}}</td>\\n                <td class=\\\"grey\\\">{{broadcast.UserName}}</td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    \\n        <app-pagination \\n            [totalItems]=\\\"totalItems\\\"  \\n            [ItemStartIndex]=\\\"ItemStartIndex\\\"\\n            [ItemEndIndex] = \\\"ItemEndIndex\\\"\\n            [itemLimit] = \\\"itemLimit\\\"\\n            (outputParams) = \\\"getIndexParams($event)\\\">\\t\\n        </app-pagination>\\n    </div>\\n</div>\\n</div>\\n\\n  \\n\"","export default \"<div class=\\\"broadcast-removeuser-wrapper\\\">\\n    <div class=\\\"card card-table\\\">\\n        <div class=\\\"card-header\\\">\\n        <div class=\\\"float-left\\\">\\n            <h5>Broadcast Category <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n        </div>\\n        <ul class=\\\"list-inline\\\">\\n            <li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n                <i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"bcData\\\" >\\n            </li>\\n            <!-- <li class=\\\"list-inline-item\\\">\\n                <a class=\\\"btn l-blue mt_5\\\">\\n                    <i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n                    <span>Print</span>\\n                </a>\\n            </li> -->\\n        </ul>\\n        </div>\\n    \\n        <app-filter-box *ngIf=\\\"isDataLoaded\\\" [totalItems]=\\\"totalFilterItems\\\" class=\\\"d-sm-block d-none\\\"></app-filter-box>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-4 mt-3\\\">\\n                <div class=\\\"input-box m-4\\\">\\n                    <h5>Interest Group Category*</h5>\\n                    <angular2-multiselect [data]=\\\"broadCastGroupCategory.dropdownList\\\" name=\\\"groupTypeDropDown\\\"\\n                         [(ngModel)]=\\\"broadCastGroupCategory.selectedItems\\\" (onSelect)=\\\"getUsersBycategory($event)\\\"\\n                         (onDeSelect)=\\\"deSelectCategory()\\\"  (onDeSelectAll)=\\\"deSelectCategory()\\\"\\n                         [settings]=\\\"groupCategorySetting\\\"  required>\\n                    </angular2-multiselect>\\n                </div>\\n            </div>\\n        </div>\\n          <div class=\\\"card-body p-0 mt-3\\\">\\n\\n    \\n        <table class=\\\"table shrink-table\\\" [ngClass]=\\\"isMobileView()\\\">\\n            <thead>\\n                <tr>\\n                <th width=\\\"20%\\\" (click)=\\\"sortUnitData('groupCategory')\\\">Interest Group<span [ngClass]=\\\"getFieldOrderBy('groupCategory')\\\"></span></th>\\n                <th width=\\\"20%\\\" (click)=\\\"sortUnitData('roleId')\\\">Role<span [ngClass]=\\\"getFieldOrderBy('roleId')\\\"></span></th>\\n                <th width=\\\"10%\\\" (click)=\\\"sortUnitData('blockId')\\\">Block <span [ngClass]=\\\"getFieldOrderBy('blockId')\\\"></span></th>\\n                <th width=\\\"10%\\\" (click)=\\\"sortUnitData('unitId')\\\">Unit <span [ngClass]=\\\"getFieldOrderBy('unitId')\\\"></span></th>\\n                <th width=\\\"30%\\\" (click)=\\\"sortUnitData('userId')\\\">User <span [ngClass]=\\\"getFieldOrderBy('userId')\\\"></span></th>\\n                <th width=\\\"10%\\\">Action</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let groupUser of allGroupUser | orderBy : unitFieldType: unitOrder | slice:ItemStartIndex:ItemEndIndex | simpleSearch: bcData ; let i = index\\\">\\n                <td class=\\\"name\\\">{{groupUser.groupCategory}}</td>\\n                <td class=\\\"name\\\">{{groupUser.role}}</td>\\n                <td class=\\\"grey\\\">{{groupUser.block}}</td>\\n                <td class=\\\"grey\\\">{{groupUser.unit}}</td>\\n                <td class=\\\"grey\\\">{{groupUser.user}}</td>\\n                <td class=\\\"grey\\\">\\n                <button type=\\\"button\\\" class=\\\"btn blue mr-4\\\"  (click)=\\\"removeUser(groupUser)\\\">Remove</button>\\n                </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    \\n        <app-pagination \\n            [totalItems]=\\\"totalItems\\\"  \\n            [ItemStartIndex]=\\\"ItemStartIndex\\\"\\n            [ItemEndIndex] = \\\"ItemEndIndex\\\"\\n            [itemLimit] = \\\"itemLimit\\\"\\n            (outputParams) = \\\"getIndexParams($event)\\\">\\t\\n        </app-pagination>\\n    </div>\\n    </div>\\n\\n</div>\\n\"","export default \"<div class=\\\"broadcast-message-wrapper\\\">\\n\\t\\n    <div class=\\\"card clear form-group\\\">\\n        <div class=\\\"card-header\\\">\\n            <div class=\\\"float-left\\\">\\n                <h5>\\n                    <span>Broadcast Message</span>\\n                </h5>\\n            </div>\\n            <div class=\\\"float-right\\\">\\n                <!-- <a href=\\\"javascript:void(0)\\\" \\n                routerLink=\\\"/ams/work-permit/settings/approval\\\" \\n                routerLinkActive=\\\"active\\\"\\n                [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n                    <i-feather class=\\\"icon back\\\" name=\\\"chevron-left\\\"></i-feather>\\n                </a> -->\\n            </div>\\n        </div>\\n        \\n        <div class=\\\"card-body\\\">\\n    \\n        <!-- <app-alert-message [message]=\\\"errorMessage\\\" [isAlert]=\\\"isError\\\"></app-alert-message> -->\\n        <!-- <ng-container *ngIf=\\\"!isBroadCastSubmitted\\\"> -->\\n        <ng-container>\\n        <form #createBroadcastMessageForm = \\\"ngForm\\\" name=\\\"createBroadcastMessageForm\\\" (ngSubmit)=\\\"submitCreateBroadcastMessageForm(createBroadcastMessageForm)\\\"  novalidate>\\n        \\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-10 offset-sm-1\\\">\\n                <!-- <mat-tab-group dynamicHeight> -->\\n                    <!-- <mat-tab label=\\\"Role Based\\\"> -->\\n\\n                        <ul class=\\\"nav nav-tabs nav-fill\\\" id=\\\"nav-tab\\\" role=\\\"tablist\\\">\\n                            \\n                            <li ><a class=\\\"nav-item nav-link active\\\" id=\\\"nav-menu1-tab\\\" data-toggle=\\\"tab\\\" role=\\\"tab\\\" href=\\\"#menu1\\\" (click)=\\\"currentTab('role')\\\">Role Based</a></li>\\n                            <li><a class=\\\"nav-item nav-link\\\" id=\\\"nav-menu2-tab\\\" data-toggle=\\\"tab\\\" role=\\\"tab\\\" href=\\\"#menu2\\\" (click)=\\\"currentTab('interest')\\\">Interest Group based</a></li>\\n                            \\n                          </ul>\\n                          <div class=\\\"tab-content\\\" id=\\\"nav-tabContent\\\">\\n\\n                            <div id=\\\"menu1\\\" role=\\\"tabpanel\\\" ria-labelledby=\\\"nav-menu1-tab\\\" class=\\\"tab-pane show active\\\">\\n\\n                                <div class=\\\"row\\\"> \\n                                    <div  class=\\\"col-sm-4\\\">\\n                                     <div class=\\\"select-box\\\">\\n                                         <label>Role Type</label>\\n                                         <angular2-multiselect [data]=\\\"roleTypeArr.dropdownList\\\" name=\\\"roleTypeDropDown\\\"\\n                                         [(ngModel)]=\\\"roleTypeArr.selectedItems\\\"\\n                                         [settings]=\\\"roleTypedropdownSettings\\\" (onSelect)=\\\"getAppartmentRole($event)\\\"\\n                                         (onDeSelect)=\\\"removeRole($event)\\\" (onDeSelectAll)=\\\"removeRole($event)\\\"></angular2-multiselect>\\n                                     </div>  \\n                                     </div>\\n                                     <div  class=\\\"col-sm-4\\\">\\n                                        <div class=\\\"select-box\\\">\\n                                            <label>Apartment Block</label>\\n                                            <angular2-multiselect [data]=\\\"apartmentBlock.dropdownList\\\" name=\\\"blockdropdown\\\"\\n                                            [(ngModel)]=\\\"apartmentBlock.selectedItems\\\"\\n                                            [settings]=\\\"blockdropdownSettings\\\"\\n                                            (onSelect)=\\\"updateUsers()\\\"\\n                                            ></angular2-multiselect>\\n                                        </div>  \\n                                            </div>\\n                                            <div  class=\\\"col-sm-4\\\">\\n                                                <div class=\\\"select-box\\\">\\n                                                    <label>Conditions</label>\\n                                                    <angular2-multiselect [data]=\\\"condition.dropdownList\\\" name=\\\"conditiondropdown\\\"\\n                                                    [(ngModel)]=\\\"condition.selectedItems\\\"\\n                                                    [settings]=\\\"roleDropdownSettings\\\" \\n                                                    (onSelect)=\\\"updateUsers()\\\"\\n                                                    ></angular2-multiselect>\\n                                                </div>  \\n                                             </div>\\n                                        </div>\\n                                    <div class=\\\"row\\\"> \\n                                            <div  class=\\\"col-sm-4\\\">\\n                                             <div class=\\\"select-box\\\">\\n                                                 <label>Role</label>\\n                                                 <angular2-multiselect [data]=\\\"roleCategory.dropdownList\\\" name=\\\"roleDropDown\\\"\\n                                                 [(ngModel)]=\\\"roleCategory.selectedItems\\\"\\n                                                 [settings]=\\\"roleDropdownSettings\\\"\\n                                                 (onSelect)=\\\"getstaffCategories($event)\\\"  (onDeSelect)=\\\"removeStaffCategories($event)\\\"\\n                                                 (onSelectAll)=\\\"getAllStaffCategories($event)\\\"  (onDeSelectAll)=\\\"removeAllStaffCategories($event)\\\"\\n                                                 >\\n                                                  \\n                                                </angular2-multiselect>\\n                                             </div>  \\n                                                 </div>\\n                                                 <div  class=\\\"col-sm-4\\\" *ngIf=\\\"this.roleCategory.selectedItems.length>0 && isStaff\\\">\\n                                                    <div class=\\\"select-box\\\">\\n                                                        <label>Staff Category</label>\\n                                                        <angular2-multiselect [data]=\\\"staffCategory.dropdownList\\\" name=\\\"staffDropDown\\\"\\n                                                        [(ngModel)]=\\\"staffCategory.selectedItems\\\"\\n                                                        [settings]=\\\"dropdownSettings\\\"\\n                                                        (onSelect)=\\\"getStaffSubCategories($event)\\\" (onDeSelect)=\\\"removeSubStaffCategories($event)\\\"\\n                                                        (onSelectAll)=\\\"getAllSubStaffCategories($event)\\\"  (onDeSelectAll)=\\\"removeAllSubStaffCategories($event)\\\" \\n                                                         (onGroupDeSelect)=\\\"getGroupSubStaffCategories($event)\\\"       (onGroupSelect)=\\\"removeGroupSubStaffCategories($event)\\\"                                >\\n                                                    </angular2-multiselect>\\n                                                    </div>  \\n                                                        </div>\\n                                                        <div  class=\\\"col-sm-4\\\" *ngIf=\\\"this.staffCategory.selectedItems.length>0\\\">\\n                                                            <div class=\\\"select-box\\\">\\n                                                                <label>Staff SubCategory</label>\\n                                                                <angular2-multiselect [data]=\\\"staffSubCategory.dropdownList\\\" name=\\\"subStaffDropDown\\\"\\n                                                                [(ngModel)]=\\\"staffSubCategory.selectedItems\\\"\\n                                                                [settings]=\\\"dropdownSettings\\\"\\n                                                                (onSelect)=\\\"updateUsers()\\\"        (onDeSelect)=\\\"updateUsers()\\\"\\n                                                                (onSelectAll)=\\\"updateUsers()\\\"     (onDeSelectAll)=\\\"updateUsers()\\\" \\n                                                                (onGroupDeSelect)=\\\"updateUsers()\\\" (onGroupSelect)=\\\"updateUsers()\\\"   \\n                                                                ></angular2-multiselect>\\n                                                            </div>  \\n                                                                </div>\\n                                                </div>\\n                                             <!-- </mat-tab>\\n                            <mat-tab label=\\\"Interest Group Based \\\"> \\n                                \\n                                Content 2 </mat-tab>\\n                            \\n                           </mat-tab-group>  -->\\n                                </div>  \\n                        <div id=\\\"menu2\\\" role=\\\"tabpanel\\\" ria-labelledby=\\\"nav-menu2-tab\\\" class=\\\"tab-pane \\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"input-box\\\">\\n                                        <label>Interest Group Category*</label>\\n                                        <angular2-multiselect [data]=\\\"broadCastGroupCategory.dropdownList\\\" name=\\\"groupTypeDropDown\\\"\\n                                        [(ngModel)]=\\\"broadCastGroupCategory.selectedItems\\\"\\n                                        [settings]=\\\"groupCategorySetting\\\"  (onSelect)=\\\"selectInterestGroup($event)\\\" \\n                                        (onDeSelect)=\\\"removeInterestGroup($event)\\\" required></angular2-multiselect>\\n                                    </div>\\n                                    </div>\\n                                </div>\\n                          </div>\\n\\n                          \\n\\n                          </div>\\n\\n                        \\n                       \\n                                <div class=\\\"row recipentsDiv\\\" > \\n                                    <div class=\\\"col-sm-12\\\">\\n                                       <label>Recipients</label>\\n                                        <div  class=\\\"col-sm-12 box\\\" >\\n                                     <label *ngFor=\\\"let user of users\\\" >\\n                                         {{user.firstName+\\\" \\\"+user.middleName+\\\" \\\"+user.lastName+\\\",\\\"}}\\n                                     </label>\\n\\n                                         </div> \\n                                    </div> \\n                                </div>\\n                 \\n                <div class=\\\"row\\\"> \\n                    <div  class=\\\"col-sm-4\\\" *ngIf=\\\"IsBroadcast\\\">\\n                     <div class=\\\"select-box\\\">\\n                         <label>Broadcast Category*</label>\\n                         <angular2-multiselect  [data]=\\\"broadCastCategory.dropdownList\\\" name=\\\"broadcastDropDown\\\"\\n                         [(ngModel)]=\\\"broadCastCategory.selectedItems\\\"\\n                         [settings]=\\\"broadCastdropdownSettings\\\" (onSelect)=\\\"categoryChange($event)\\\" required></angular2-multiselect>\\n                     </div>  \\n                   </div>\\n                   <div  class=\\\"col-sm-4\\\">\\n                    <div class=\\\"select-box\\\">\\n                        <label>Broadcast Mode*</label>\\n                        <angular2-multiselect  [data]=\\\"broadModeArr.dropdownList\\\" name=\\\"BroadCastModeDropDown\\\"\\n                        [(ngModel)]=\\\"broadModeArr.selectedItems\\\"\\n                        [settings]=\\\"roleDropdownSettings\\\"  required></angular2-multiselect>\\n                    </div> \\n                </div>\\n                \\n                   <div class=\\\"col-sm-12\\\">\\n                        <div class=\\\"input-box\\\">\\n                            <label>Subject*</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control form-group\\\" placeholder=\\\"Enter\\\" name=\\\"subject\\\" [(ngModel)]=\\\"message.subject\\\" required>\\n                            <quill-editor\\n                                class=\\\"quill-editor\\\"\\n                                name=\\\"ckeditor\\\"\\n                                [placeholder]=\\\"editorPlacehorder\\\"\\n                                [(ngModel)]=\\\"message.ckeditor\\\"\\n                                (onContentChanged)=\\\"onContentChanged($event)\\\">\\n                            </quill-editor>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"col-sm-12\\\">\\n                      <ul class=\\\"list-inline float-right mt-4\\\">\\n                        <li class=\\\"list-inline-item\\\">\\n                          <button class=\\\"btn blue mr-2\\\" (click)=\\\"ClearFormData()\\\">Cancel</button>\\n                          <button class=\\\"btn blue mr-2\\\" [disabled]=\\\"createBroadcastMessageForm.invalid\\\">Submit</button>\\n                        </li>\\n                      </ul>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        \\n      </form>\\n    </ng-container>\\n  </div>\\n</div>\\n</div>\"","export default \"\\n<div class=\\\"broadcast-setup-wrapper\\\">\\n    \\n    <div class=\\\"card clear form-group\\\" id=\\\"accordion\\\">\\n\\t\\t<div class=\\\"card-body p-0\\\">\\n\\t\\t\\t<ul class=\\\"list-group tabs clear\\\">\\n\\t\\t\\t<li class=\\\"list-group-item\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#typeCollapseOne\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"typecollapseOne\\\">\\n\\t\\t\\t\\t{{(!isEdit)?'Add':'Update'}} Broadcast category\\n\\t\\t\\t</li>\\n\\t\\t\\t<div id=\\\"typeCollapseOne\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingOne\\\" data-parent=\\\"#accordion\\\">\\n\\t\\t\\t<div class=\\\"details\\\">\\n\\n            <app-alert-message [message]=\\\"errorMessage\\\" [isAlert]=\\\"isError\\\"></app-alert-message>\\n            <form #createBroadcastCategoryForm = \\\"ngForm\\\" name=\\\"createBroadcastCategoryForm\\\" (ngSubmit)=\\\"UpsertBroadcastMessageCategory(createBroadcastCategoryForm)\\\"  novalidate>\\n                <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-6\\\">\\n                    <div class=\\\"input-box\\\">\\n                        <label>Broadcast Category*</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"broadCastMessageCategory1\\\" [(ngModel)]=\\\"category.broadCastMessageCategory1\\\" required>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-12\\\">\\n                    <div class=\\\"input-box\\\">\\n                        <label>Description Template</label>\\n                        <quill-editor\\n                            class=\\\"quill-editor\\\"\\n                            name=\\\"ckeditor\\\"\\n                            [placeholder]=\\\"editorPlacehorder\\\"\\n                            [(ngModel)]=\\\"category.template\\\"\\n                            (onContentChanged)=\\\"onContentChanged($event)\\\">\\n                        </quill-editor>\\n                        <!-- <textarea class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"template\\\" [(ngModel)]=\\\"category.template\\\" required></textarea> -->\\n                    </div>\\n                </div>\\n                </div>\\n        \\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-12\\\">\\n                    <div class=\\\"list-inline float-right mt-4\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn blue mr-4\\\"  (click)=\\\"Cancel()\\\">Cancel</button>\\n                        <button class=\\\"btn blue mr-2\\\" [disabled]=\\\"createBroadcastCategoryForm.invalid\\\" *ngIf=\\\"!isEdit\\\">Submit</button>\\n                        <button class=\\\"btn blue mr-2\\\" [disabled]=\\\"createBroadcastCategoryForm.invalid\\\" *ngIf=\\\"isEdit\\\">Update</button>\\n                    </div>\\n                  </div>\\n                </div>\\n            </form>\\n\\n\\t\\t\\t</div>\\n\\t\\t\\t</div>\\t\\n\\t\\t\\t</ul>\\n\\t\\t</div>\\n    </div>\\n    \\n\\n<div class=\\\"card card-table\\\">\\n    <div class=\\\"card-header\\\">\\n    <div class=\\\"float-left\\\">\\n        <h5>Broadcast Category <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    </div>\\n    <ul class=\\\"list-inline\\\">\\n        <li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n            <i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"bcData\\\" >\\n        </li>\\n        <!-- <li class=\\\"list-inline-item\\\">\\n            <a class=\\\"btn l-blue mt_5\\\">\\n                <i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n                <span>Print</span>\\n            </a>\\n        </li> -->\\n    </ul>\\n    </div>\\n\\n    <app-filter-box *ngIf=\\\"isDataLoaded\\\" [totalItems]=\\\"totalFilterItems\\\" class=\\\"d-sm-block d-none\\\"></app-filter-box>\\n\\n  \\t<div class=\\\"card-body p-0\\\">\\n\\n    <table class=\\\"table shrink-table\\\" [ngClass]=\\\"isMobileView()\\\">\\n        <thead>\\n            <tr>\\n            <th width=\\\"15%\\\" (click)=\\\"sortUnitData('broadCastMessageCategoryId')\\\">Category ID<span [ngClass]=\\\"getFieldOrderBy('broadCastMessageCategoryId')\\\"></span></th>\\n            <th width=\\\"30%\\\" (click)=\\\"sortUnitData('broadCastMessageCategory1')\\\">Broadcast Category <span [ngClass]=\\\"getFieldOrderBy('broadCastMessageCategory1')\\\"></span></th>\\n            <th width=\\\"45%\\\" (click)=\\\"sortUnitData('template')\\\">Description <span [ngClass]=\\\"getFieldOrderBy('template')\\\"></span></th>\\n            <th width=\\\"10%\\\">Action</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr *ngFor=\\\"let category of allBroadcastCategory | orderBy : unitFieldType: unitOrder | slice:ItemStartIndex:ItemEndIndex | simpleSearch: bcData ; let i = index\\\">\\n            <td class=\\\"name\\\">{{category.broadCastMessageCategoryId}}</td>\\n            <td class=\\\"grey\\\">{{category.broadCastMessageCategory1}}</td>\\n            <td class=\\\"grey\\\">{{category.template}}</td>\\n            <td class=\\\"grey\\\">\\n          \\n                <a class=\\\"\\\" (click)=\\\"updateData(category)\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#typeCollapseOne\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"typecollapseOne\\\"><i-feather class=\\\"icon edit\\\" name=\\\"edit\\\"></i-feather></a>&nbsp;\\n                <a class=\\\"\\\" (click)=\\\"showConfirmModal(i)\\\"><i-feather class=\\\"icon delete\\\" name=\\\"trash\\\"></i-feather></a>\\n            </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n\\n    <app-pagination \\n        [totalItems]=\\\"totalItems\\\"  \\n        [ItemStartIndex]=\\\"ItemStartIndex\\\"\\n        [ItemEndIndex] = \\\"ItemEndIndex\\\"\\n        [itemLimit] = \\\"itemLimit\\\"\\n        (outputParams) = \\\"getIndexParams($event)\\\">\\t\\n    </app-pagination>\\n</div>\\n</div>\\n\\n</div>\\n\"","export default \"\\n\\n<div class=\\\"broadcastgroup-setup-wrapper\\\">\\n    \\n    <div class=\\\"card clear form-group\\\" id=\\\"accordion\\\">\\n\\t\\t<div class=\\\"card-body p-0\\\">\\n\\t\\t\\t<ul class=\\\"list-group  clear\\\">\\n\\t\\t\\t<li class=\\\"list-group-item\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#typeCollapseOne\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"typecollapseOne\\\">\\n\\t\\t\\t\\t<h5>{{(!isEdit)?'Add':'Update'}} Interest Group</h5>\\n\\t\\t\\t</li>\\n\\t\\t\\t<div id=\\\"typeCollapseOne\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingOne\\\" data-parent=\\\"#accordion\\\">\\n\\t\\t\\t<div class=\\\"details\\\">\\n\\n            <app-alert-message [message]=\\\"errorMessage\\\" [isAlert]=\\\"isError\\\"></app-alert-message>\\n            <form #createBroadcastGroupCategoryForm = \\\"ngForm\\\" name=\\\"createBroadcastGroupCategoryForm\\\" (ngSubmit)=\\\"submitcreateBroadcastGroupCategoryForm(createBroadcastGroupCategoryForm)\\\"  novalidate>\\n                <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-6\\\">\\n                    <div class=\\\"input-box\\\">\\n                       <label> Interest Group Name*</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Group Name\\\" name=\\\"groupName\\\" [(ngModel)]=\\\"groupCategory.groupName\\\" required>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6\\\">\\n                    <div class=\\\"input-box\\\">\\n                        <label>Priviledge*</label>\\n                        <angular2-multiselect  [data]=\\\"privilageCategory.dropdownList\\\" name=\\\"privilegeModeDropDown\\\"\\n                [(ngModel)]=\\\"privilageCategory.selectedItems\\\"\\n                [settings]=\\\"dropdownSettings\\\"  required></angular2-multiselect>                    </div>\\n                </div>\\n            </div>\\n                <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                    <div class=\\\"input-box\\\">\\n                        <label>Description</label>\\n                        <!-- <quill-editor\\n                            class=\\\"quill-editor\\\"\\n                            name=\\\"ckeditor\\\"\\n                            [placeholder]=\\\"editorPlacehorder\\\"\\n                            [(ngModel)]=\\\"groupCategory.comment\\\"\\n                            (onContentChanged)=\\\"onContentChanged($event)\\\">\\n                        </quill-editor> -->\\n                        <textarea class=\\\"form-control\\\" rows=5 placeholder=\\\"Enter Description\\\" name=\\\"description\\\" [(ngModel)]=\\\"groupCategory.description\\\"></textarea>\\n                        <!-- <textarea class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"template\\\" [(ngModel)]=\\\"category.template\\\" required></textarea> -->\\n                    </div>\\n                </div>\\n                </div>\\n        <div class=\\\"row\\\">\\n            <!-- <div *ngIf=\\\"(groupCategory.parentId!=null) || (!isEdit)\\\" class=\\\"col-sm-6\\\">\\n                <div class=\\\"select-box\\\">\\n                    <label>Parent Category</label>\\n                    <select \\n                        name=\\\"parentId\\\" \\n                        id=\\\"parentId\\\" \\n                        class=\\\"form-control\\\"\\n                        [(ngModel)]=\\\"groupCategory.parentId\\\"  (ngModelChange)=\\\"getParent(groupCategory.parentId)\\\" >\\n                        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                         <option *ngFor=\\\"let item of parentCategoryList\\\" [value]=\\\"item.value\\\">{{ item.name }}</option>\\n                     </select>\\n                </div>\\n             </div> -->\\n            <!-- <div class=\\\"col-sm-6\\\">\\n                <div class=\\\"input-box radio-box\\\">\\n                    <label>Authorize*</label>\\n                    \\n                </div>\\n                <div class=\\\"form-check recur-check float-left mr-4\\\">\\n                    <input type=\\\"checkbox\\\" id=\\\"isUser\\\" [(ngModel)]=\\\"groupCategory.isUser\\\" name=\\\"isUser\\\" value=\\\"1\\\" class=\\\"form-check-input\\\">\\n                    <label for=\\\"isUser\\\" class=\\\"form-check-label tiny\\\">User</label>\\n                </div>\\n                <div class=\\\"form-check recur-check float-left mr-4\\\">\\n                    <input type=\\\"checkbox\\\" id=\\\"isAdmin\\\" [(ngModel)]=\\\"groupCategory.isUser\\\" name=\\\"isAdmin\\\" value=\\\"2\\\" class=\\\"form-check-input\\\">\\n                    <label for=\\\"isAdmin\\\" class=\\\"form-check-label tiny\\\">Admin</label>\\n                </div>\\n\\n                \\n            </div>  -->\\n            \\n            </div>\\n        \\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-12\\\">\\n                    <div class=\\\"list-inline float-right mt-4\\\">\\n                       \\n                        <button type=\\\"button\\\" class=\\\"btn blue mr-4\\\"  (click)=\\\"Cancel()\\\">Cancel</button>\\n                        <button type=\\\"submit\\\" class=\\\"btn blue mr-2\\\" [disabled]=\\\"createBroadcastGroupCategoryForm.invalid\\\" *ngIf=\\\"!isEdit\\\">Submit</button>\\n                        <button type=\\\"submit\\\" class=\\\"btn blue mr-2\\\" [disabled]=\\\"createBroadcastGroupCategoryForm.invalid\\\" *ngIf=\\\"isEdit\\\">Update</button>\\n                    </div>\\n                  </div>\\n                </div>\\n            </form>\\n\\n\\t\\t\\t</div>\\n\\t\\t\\t</div>\\t\\n\\t\\t\\t</ul>\\n\\t\\t</div>\\n    </div>\\n    \\n\\n <div class=\\\"card card-table\\\">\\n    <div class=\\\"card-header\\\" >\\n    <div class=\\\"float-left\\\">\\n        <h5>Interest Group  <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    </div>\\n    <ul class=\\\"list-inline\\\">\\n        <li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n            <i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"bcData\\\" >\\n        </li>\\n       \\n    </ul>\\n    </div>\\n\\n    <app-filter-box *ngIf=\\\"isDataLoaded\\\" [totalItems]=\\\"totalFilterItems\\\" class=\\\"d-sm-block d-none\\\"></app-filter-box>\\n\\n  \\t<div class=\\\"card-body p-0\\\">\\n\\n    <table class=\\\"table shrink-table\\\" [ngClass]=\\\"isMobileView()\\\">\\n        <thead>\\n            <tr>\\n            <th width=\\\"10%\\\" (click)=\\\"sortUnitData('serialNo')\\\">Serial NO<span [ngClass]=\\\"getFieldOrderBy('serialNo')\\\"></span></th>\\n            <th width=\\\"30%\\\" (click)=\\\"sortUnitData('groupName')\\\">Broadcast Group Category <span [ngClass]=\\\"getFieldOrderBy('groupName')\\\"></span></th>\\n            <th width=\\\"20%\\\" (click)=\\\"sortUnitData('description')\\\">Description <span [ngClass]=\\\"getFieldOrderBy('description')\\\"></span></th>\\n            <th width=\\\"30%\\\" (click)=\\\"sortUnitData('privilege')\\\">Privilege <span [ngClass]=\\\"getFieldOrderBy('privilege')\\\"></span></th>\\n            <th width=\\\"10%\\\">Action</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr *ngFor=\\\"let groupCategory of allBroadcastGroupCategory | orderBy : unitFieldType: unitOrder | slice:ItemStartIndex:ItemEndIndex | simpleSearch: bcData ; let i = index\\\">\\n            <td class=\\\"name\\\">{{groupCategory.serialNo}}</td>\\n            <td class=\\\"grey\\\">{{groupCategory.groupName}}</td>\\n            <td class=\\\"grey\\\">{{groupCategory.description}}</td>\\n            <td class=\\\"grey\\\">{{groupCategory.privilege}}</td>\\n            \\n            <td class=\\\"grey\\\">\\n                <a class=\\\"\\\" (click)=\\\"updateData(groupCategory)\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#typeCollapseOne\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"typecollapseOne\\\"><i-feather class=\\\"icon edit\\\" name=\\\"edit\\\"></i-feather></a>&nbsp;\\n                <a class=\\\"\\\" (click)=\\\"showConfirmModal(i)\\\"><i-feather class=\\\"icon delete\\\" name=\\\"trash\\\"></i-feather></a>\\n            </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n\\n    <app-pagination \\n        [totalItems]=\\\"totalItems\\\"  \\n        [ItemStartIndex]=\\\"ItemStartIndex\\\"\\n        [ItemEndIndex] = \\\"ItemEndIndex\\\"\\n        [itemLimit] = \\\"itemLimit\\\"\\n        (outputParams) = \\\"getIndexParams($event)\\\">\\t\\n    </app-pagination>\\n</div>\\n<!-- </div>\\n\\n</div> -->\\n\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BroadcastSetupComponent } from './components/broadcast-setup/broadcast-setup.component';\nimport { BroadcastHistoryComponent } from './components/broadcast-history/broadcast-history.component';\nimport { BroadcastSendmessageComponent } from './components/broadcast-sendmessage/broadcast-sendmessage.component';\nimport {BroadcastgroupSetupComponent} from './components/broadcastgroup-setup/broadcastgroup-setup.component'\nimport {BroadcastGroupAssignmentComponent} from './components/broadcast-group-assignment/broadcast-group-assignment.component'\nimport {BroadcastRemoveuserComponent} from './components/broadcast-removeuser/broadcast-removeuser.component'\nimport { BroadcastAnnouncementsComponent } from './components/broadcast-announcements/broadcast-announcements.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'setup', pathMatch: 'full'},\n  { path: 'setup', component: BroadcastSetupComponent},\n  { path: 'groupsetup',component:BroadcastgroupSetupComponent},\n  { path: 'sendmessage', component: BroadcastSendmessageComponent},\n  { path: 'assignusers', component: BroadcastGroupAssignmentComponent},\n  { path: 'removeusers', component: BroadcastRemoveuserComponent},\n  { path: 'announcements', component: BroadcastAnnouncementsComponent},\n  { path: 'history', component: BroadcastHistoryComponent},\n  { path: '**', redirectTo: 'setup', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BroadcastRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../../shared/shared.module';\nimport { BroadcastRoutingModule } from './broadcast-routing.module';\nimport { BroadcastSetupComponent } from './components/broadcast-setup/broadcast-setup.component';\nimport { BroadcastHistoryComponent } from './components/broadcast-history/broadcast-history.component';\nimport { BroadcastSendmessageComponent } from './components/broadcast-sendmessage/broadcast-sendmessage.component';\nimport { BroadcastgroupSetupComponent } from './components/broadcastgroup-setup/broadcastgroup-setup.component';\nimport {AngularMultiSelectModule} from \"angular2-multiselect-dropdown\";\nimport { BroadcastGroupAssignmentComponent } from './components/broadcast-group-assignment/broadcast-group-assignment.component';\nimport { BroadcastRemoveuserComponent } from './components/broadcast-removeuser/broadcast-removeuser.component';\nimport { BroadcastAnnouncementsComponent } from './components/broadcast-announcements/broadcast-announcements.component';\n\n@NgModule({\n  declarations: [BroadcastSetupComponent, BroadcastHistoryComponent, BroadcastSendmessageComponent,\n     BroadcastgroupSetupComponent,BroadcastGroupAssignmentComponent, BroadcastRemoveuserComponent, BroadcastAnnouncementsComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    BroadcastRoutingModule,\n    AngularMultiSelectModule \n  ]\n})\nexport class BroadcastModule { }\n","export default \".broadcast-removeuser-wrapper {\\n  margin-left: 100px;\\n  margin-right: 121px;\\n}\\n.broadcast-removeuser-wrapper .carousel-caption1 {\\n  position: absolute;\\n  right: 10%;\\n  top: 50px;\\n  left: -30%;\\n  z-index: 10;\\n  padding-top: 20px;\\n  padding-bottom: 20px;\\n  text-align: center;\\n}\\n.broadcast-removeuser-wrapper .carousel-caption2 {\\n  position: absolute;\\n  right: 26%;\\n  top: 100px;\\n  left: 10%;\\n  z-index: 10;\\n  padding-top: 20px;\\n  padding-bottom: 20px;\\n  text-align: center;\\n}\\n.broadcast-removeuser-wrapper .carousel-caption3 {\\n  position: absolute;\\n  right: 15%;\\n  bottom: 107px;\\n  left: 10%;\\n  z-index: 10;\\n  padding-top: 20px;\\n  padding-bottom: 20px;\\n  color: #fff;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9hbXMvYnJvYWRjYXN0L2NvbXBvbmVudHMvYnJvYWRjYXN0LWFubm91bmNlbWVudHMvYnJvYWRjYXN0LWFubm91bmNlbWVudHMuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Ftcy9icm9hZGNhc3QvY29tcG9uZW50cy9icm9hZGNhc3QtYW5ub3VuY2VtZW50cy9icm9hZGNhc3QtYW5ub3VuY2VtZW50cy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0VBQ0EsbUJBQUE7QUNDSjtBREFJO0VBQ0ksa0JBQUE7RUFDQSxVQUFBO0VBQ0EsU0FBQTtFQUNBLFVBQUE7RUFDQSxXQUFBO0VBQ0EsaUJBQUE7RUFDQSxvQkFBQTtFQUNBLGtCQUFBO0FDRVI7QURBSTtFQUNJLGtCQUFBO0VBQ0EsVUFBQTtFQUNBLFVBQUE7RUFDQSxTQUFBO0VBQ0EsV0FBQTtFQUNBLGlCQUFBO0VBQ0Esb0JBQUE7RUFDQSxrQkFBQTtBQ0VSO0FEQUk7RUFDSSxrQkFBQTtFQUNBLFVBQUE7RUFDQSxhQUFBO0VBQ0EsU0FBQTtFQUNBLFdBQUE7RUFDQSxpQkFBQTtFQUNBLG9CQUFBO0VBQ0EsV0FBQTtFQUNBLGtCQUFBO0FDRVIiLCJmaWxlIjoic3JjL2FwcC9hbXMvYnJvYWRjYXN0L2NvbXBvbmVudHMvYnJvYWRjYXN0LWFubm91bmNlbWVudHMvYnJvYWRjYXN0LWFubm91bmNlbWVudHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnJvYWRjYXN0LXJlbW92ZXVzZXItd3JhcHBlcntcbiAgICBtYXJnaW4tbGVmdDogMTAwcHg7IFxuICAgIG1hcmdpbi1yaWdodDogMTIxcHg7XG4gICAgLmNhcm91c2VsLWNhcHRpb24xe1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHJpZ2h0OiAxMCU7XG4gICAgICAgIHRvcDogNTBweDtcbiAgICAgICAgbGVmdDogLTMwJTtcbiAgICAgICAgei1pbmRleDogMTA7XG4gICAgICAgIHBhZGRpbmctdG9wOiAyMHB4O1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIH1cbiAgICAuY2Fyb3VzZWwtY2FwdGlvbjJ7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgcmlnaHQ6IDI2JTtcbiAgICAgICAgdG9wOiAxMDBweDtcbiAgICAgICAgbGVmdDogMTAlO1xuICAgICAgICB6LWluZGV4OiAxMDtcbiAgICAgICAgcGFkZGluZy10b3A6IDIwcHg7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAyMHB4O1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgfVxuICAgIC5jYXJvdXNlbC1jYXB0aW9uM3tcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICByaWdodDogMTUlO1xuICAgICAgICBib3R0b206MTA3cHg7XG4gICAgICAgIGxlZnQ6IDEwJTtcbiAgICAgICAgei1pbmRleDogMTA7XG4gICAgICAgIHBhZGRpbmctdG9wOiAyMHB4O1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG59IiwiLmJyb2FkY2FzdC1yZW1vdmV1c2VyLXdyYXBwZXIge1xuICBtYXJnaW4tbGVmdDogMTAwcHg7XG4gIG1hcmdpbi1yaWdodDogMTIxcHg7XG59XG4uYnJvYWRjYXN0LXJlbW92ZXVzZXItd3JhcHBlciAuY2Fyb3VzZWwtY2FwdGlvbjEge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAxMCU7XG4gIHRvcDogNTBweDtcbiAgbGVmdDogLTMwJTtcbiAgei1pbmRleDogMTA7XG4gIHBhZGRpbmctdG9wOiAyMHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMjBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmJyb2FkY2FzdC1yZW1vdmV1c2VyLXdyYXBwZXIgLmNhcm91c2VsLWNhcHRpb24yIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMjYlO1xuICB0b3A6IDEwMHB4O1xuICBsZWZ0OiAxMCU7XG4gIHotaW5kZXg6IDEwO1xuICBwYWRkaW5nLXRvcDogMjBweDtcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5icm9hZGNhc3QtcmVtb3ZldXNlci13cmFwcGVyIC5jYXJvdXNlbC1jYXB0aW9uMyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IDE1JTtcbiAgYm90dG9tOiAxMDdweDtcbiAgbGVmdDogMTAlO1xuICB6LWluZGV4OiAxMDtcbiAgcGFkZGluZy10b3A6IDIwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAyMHB4O1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufSJdfQ== */\"","import { Component, OnInit ,Injector} from '@angular/core';\n\n\nimport { BroadcastService } from 'src/app/api/controllers/broadcast';\nimport { UserService } from 'src/app/api/controllers/user';\nimport { ApartmentService } from 'src/app/api/controllers/apartment';\nimport { StaffService } from 'src/app/api/controllers/staff';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\nimport {concatMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-broadcast-announcements',\n  templateUrl: './broadcast-announcements.component.html',\n  styleUrls: ['./broadcast-announcements.component.scss']\n})\n\nexport class BroadcastAnnouncementsComponent implements OnInit {\n  images = [944, 1011, 984].map((n) => `https://picsum.photos/id/${n}/900/500`);\n  imagePath=\"../../../../../assets/images/announcement_background.jpeg\";\n  modalService:any;\n \n  constructor(\n    public broadcastService: BroadcastService,\n    private sharedService:SharedService,\n    private cookieService:CookieService,\n    private userService:UserService,\n    private staffService:StaffService,\n    private apartmentService:ApartmentService,\n    private injector: Injector,\n  ) { \n\n    this.modalService = this.injector.get(ModalService);\n  }\n  apartmentID:any;\n  ngOnInit(): void {\n    this.apartmentID=parseInt(this.cookieService.get('apartmentId'));\n    this.getAllCategory();\n    this.getAllBroadcastMessage();\n    this.getAllGroupCategory();\n  \n  }\n  broadCastMessages:any;\n  allUser:any;\n  allCategory:any;\n   //Get All Category\n   getAllCategory(){\n\n    let apartmentID = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n    this.broadcastService.getBroadCastMessageCategories(apartmentID).subscribe((res:any) => {\n      this.allCategory = res;\n    })\n  }\n  broadCastGroupCategory:any;\n  getAllGroupCategory(){\n    this.broadcastService.getAllBroadCastGroupCategory(this.apartmentID).subscribe((res:any) => {\n      this.broadCastGroupCategory= res;  \n    });\n  }\n  getGroupCategoryName(groupcategoryId){\n   let groupcategory= this.broadCastGroupCategory.filter(function(obj){\n    return obj.broadCastGroupCategoryId==groupcategoryId;\n    });\n  return  groupcategory[0].groupName;\n  }\n  getCategoryName(name){\n    var data = _.filter( this.allCategory, function( item ) {\n      if(item.broadCastMessageCategoryId === name)\n        return item;\n      } );\n\n      if(data === undefined || data === null || data.length == 0){\n        return '';\n      }\n      else {\n        return data[0].broadCastMessageCategory1;\n      }\n  }\n  getUserName(name){\n    var data = _.filter( this.allUser, function( item ) {\n      if(item.userId === name)\n        return item;\n      } );\n\n      if(data === undefined || data === null || data.length == 0){\n        return '';\n      }\n      else {\n        return data[0].firstName;\n      }\n  }\n  broadCastBased:any;\n  interestGroupBased:any;\n  getAllBroadcastMessage(){\n    let apartmentId= parseInt(this.cookieService.get('apartmentId'));\n    var users$=this.userService.getAllUsers();\n  var allBroadCastmessages$= users$.pipe(\n     concatMap((users:any) =>{\n       this.allUser = users;\n\n       let apartmentID = {\n        apartmentId: parseInt(this.cookieService.get('apartmentId'))\n      }\n       return  this.broadcastService.getAllBroadcastMessages(apartmentID);\n     } )\n    );\n    \n   \n     allBroadCastmessages$.subscribe(\n                 (res:any)=>{\n                     this.broadCastMessages=res;\n                     this.broadCastMessages.forEach(element => {\n                       if(element.broadCastGroupcategoryId==null)\n                       { \n                         element.CategoryName=this.getCategoryName(element.broadcastMessageCategoryId);\n\n                       }else{\n                        element.CategoryName=this.getGroupCategoryName(element.broadCastGroupcategoryId);\n\n                       }\n                      \n                       element.UserName=this.getUserName(element.broadcastBy);\n                     });\n               this.broadCastBased=this.broadCastMessages.filter(function(obj){\n                       return obj.broadCastGroupcategoryId==null;\n                     });\n                     this.interestGroupBased=this.broadCastMessages.filter(function(obj){\n                      return obj.broadCastGroupcategoryId!=null;\n                    });\n                    \n                 }\n \n     );\n     \n   }\n}\n","export default \".broadcastgroupAssignment-setup-wrapper .card {\\n  overflow: visible !important;\\n}\\n.broadcastgroupAssignment-setup-wrapper .card .card-body {\\n  overflow: visible !important;\\n}\\n.broadcastgroupAssignment-setup-wrapper .assignBtn {\\n  position: absolute;\\n  top: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9hbXMvYnJvYWRjYXN0L2NvbXBvbmVudHMvYnJvYWRjYXN0LWdyb3VwLWFzc2lnbm1lbnQvYnJvYWRjYXN0LWdyb3VwLWFzc2lnbm1lbnQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Ftcy9icm9hZGNhc3QvY29tcG9uZW50cy9icm9hZGNhc3QtZ3JvdXAtYXNzaWdubWVudC9icm9hZGNhc3QtZ3JvdXAtYXNzaWdubWVudC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDSTtFQUNJLDRCQUFBO0FDQVI7QURFSTtFQUNJLDRCQUFBO0FDQVI7QURFSTtFQUNJLGtCQUFBO0VBQ0EsTUFBQTtBQ0FSIiwiZmlsZSI6InNyYy9hcHAvYW1zL2Jyb2FkY2FzdC9jb21wb25lbnRzL2Jyb2FkY2FzdC1ncm91cC1hc3NpZ25tZW50L2Jyb2FkY2FzdC1ncm91cC1hc3NpZ25tZW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJyb2FkY2FzdGdyb3VwQXNzaWdubWVudC1zZXR1cC13cmFwcGVye1xuICAgIC5jYXJke1xuICAgICAgICBvdmVyZmxvdzp2aXNpYmxlICFpbXBvcnRhbnQ7XG4gICAgfVxuICAgIC5jYXJkIC5jYXJkLWJvZHkge1xuICAgICAgICBvdmVyZmxvdzogdmlzaWJsZSFpbXBvcnRhbnQ7XG4gICAgfVxuICAgIC5hc3NpZ25CdG57XG4gICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICB0b3A6MDtcbiAgICB9XG59IiwiLmJyb2FkY2FzdGdyb3VwQXNzaWdubWVudC1zZXR1cC13cmFwcGVyIC5jYXJkIHtcbiAgb3ZlcmZsb3c6IHZpc2libGUgIWltcG9ydGFudDtcbn1cbi5icm9hZGNhc3Rncm91cEFzc2lnbm1lbnQtc2V0dXAtd3JhcHBlciAuY2FyZCAuY2FyZC1ib2R5IHtcbiAgb3ZlcmZsb3c6IHZpc2libGUgIWltcG9ydGFudDtcbn1cbi5icm9hZGNhc3Rncm91cEFzc2lnbm1lbnQtc2V0dXAtd3JhcHBlciAuYXNzaWduQnRuIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG59Il19 */\"","import { Component, OnInit ,Injector} from '@angular/core';\n\nimport { BroadcastService } from 'src/app/api/controllers/broadcast';\nimport { UserService } from 'src/app/api/controllers/user';\nimport { ApartmentService } from 'src/app/api/controllers/apartment';\nimport { StaffService } from 'src/app/api/controllers/staff';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { Subject, Observable } from 'rxjs';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-broadcast-group-assignment',\n  templateUrl: './broadcast-group-assignment.component.html',\n  styleUrls: ['./broadcast-group-assignment.component.scss']\n})\nexport class BroadcastGroupAssignmentComponent implements OnInit {\n  filteredUsers:Observable<any>;\n  filteredOptions:Observable<string[]>;\n  subject = new Subject();\n  ItemStartIndex:any;\n  unitFieldType:any;\n  ItemEndIndex:any;\n  unitOrder:any;\n  modalService:any;\n  interestGroupUsers:any;\n  allUsers:any;\n  loginUserId:number;\n  groupUsercategory:any;\n  groupCategorySetting={};\n  users={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n  };\n  apartmentID:any;\n  isLast:boolean;\n  assignUsers:any[];\n  dropdownSettings={};\n  blockdropdownSettings={}\n  roleTypedropdownSettings={}\n  roleDropdownSettings={};\n  usersDropdownSettings={};\n  isEdit:any;\n  roleTypeArr={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n  };\n  broadCastGroupCategory={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n  };\n  \n  roleCategory={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n\n  };\n  apartmentBlock={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n    };\n    filterOptions={\n      \"roleids\":null,\n      \"apartmentId\":0,\n      \"blockids\":null,\n      \"searchText\":\"\"\n    }\n    myControl: FormControl = new FormControl();\n    roleids:any;\n    blockids:any;\n  constructor(\n    public broadcastService: BroadcastService,\n    private sharedService:SharedService,\n    private cookieService:CookieService,\n    private userService:UserService,\n    private staffService:StaffService,\n    private apartmentService:ApartmentService,\n    private injector: Injector,\n  ) { \n\n    this.modalService = this.injector.get(ModalService);\n  }\n\n  ngOnInit(): void {\n    // this.message={};\n    this.loginUserId=parseInt(this.cookieService.get('userId'));\n    this.groupUsercategory={};\n    this.apartmentID=parseInt(this.cookieService.get('apartmentId'));\n    this.getUsers();\n    this.assignUsers=[];\n   // this.getAllUsers();\n    //this.getAllRoleTypesList();\n    this.getAllApartmentBlockList();\n    this.getAllGroupCategory();\n    this.dropdownSettings={\n      singleSelection: false, \n      enableSearchFilter: true,\n      labelKey: 'name',\n      primaryKey: 'value',\n      groupBy:\"category\",\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    }; \n    this.groupCategorySetting={\n      singleSelection: true, \n      enableSearchFilter: true,\n      labelKey: 'groupName',\n      primaryKey: 'broadCastGroupCategoryId',\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    }; \n    this.roleDropdownSettings={\n      singleSelection: false, \n      enableSearchFilter: true,\n      labelKey: 'name',\n      primaryKey: 'value',\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    }; \n    this.usersDropdownSettings={\n      singleSelection: false, \n      enableSearchFilter: true,\n      labelKey: 'userFullName',\n      primaryKey: 'userFullDetail',\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    }; \n    this.blockdropdownSettings={\n      singleSelection: false,\n      primaryKey: 'apartmentBlockId',\n      labelKey: 'apartmentBlockNumber',\n      enableSearchFilter: true,\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    }; \n    \n    this.roleTypedropdownSettings={\n      singleSelection: true,\n      primaryKey: 'value',\n      labelKey: 'name',\n      enableSearchFilter: true,\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    };\n    this.getInterestGroupUsers(); \n    this.roleCategory.dropdownList=[{\"name\":\"Tenant\",\"value\":2},{\"name\":\"Owner\",\"value\":4}];\n    \n    // this.filteredOptions = this.myControl.valueChanges\n    // .pipe(\n    //   startWith(''),\n    //   map(val => this.filter(val))\n    // );\n    \n    // this.subject.pipe(\n    //   debounceTime(1000),\n    //   map(searchText =>{\n        \n    //     this.userService.getUserBykeyword(this.filterOptions);\n    //      })).subscribe((res:any)=>{\n    //       this.filteredUsers =res; \n    //       console.log(this.filteredUsers);\n    //      },\n    //      error=>console.log(error)\n    //      );\n    \n  \n  }\n//   filter(val: string): any[] {\n//     if(val.length>2){\n//       this.filterOptions.apartmentId=this.apartmentID;\n//       let roleIds= Array.prototype.map.call(this.roleCategory.selectedItems,function(item){ return item.value}).join(\",\");\n//     if(roleIds.length>0)\n//     {\n//       this.filterOptions.roleids=roleIds;\n//     }\n      \n//     let blockIds=Array.prototype.map.call(this.apartmentBlock.selectedItems,function(item){ return item.apartmentBlockId}).join(\",\");\n//     if(blockIds.length>0)\n//     {\n//     this.filterOptions.blockids= blockIds\n//     }\n//    this.filterOptions.searchText=val;\n//   this.userService.getUserBykeyword(this.filterOptions).subscribe((res:any)=>{\n//      this.filteredUsers =res; \n//     },\n//     error=>console.log(error)\n//     );\n\n\n//     }\n    \n//  }\ngetUsers(){\n  this.filterOptions.apartmentId=this.apartmentID;\n  let roleIds= Array.prototype.map.call(this.roleCategory.selectedItems,function(item){ return item.value}).join(\",\");\n      if(roleIds.length>0)\n      {\n        this.filterOptions.roleids=roleIds;\n      }\n        \n      let blockIds=Array.prototype.map.call(this.apartmentBlock.selectedItems,function(item){ return item.apartmentBlockId}).join(\",\");\n      if(blockIds.length>0)\n      {\n      this.filterOptions.blockids= blockIds\n      }\n     this.filterOptions.searchText=null;\n\n\n    this.userService.getUsersByKeyword(this.filterOptions).subscribe((res:any)=>{\n       \n       res.forEach(element => {\n        element.userFullName=element.userName+\" \"+element.roleName+\" \"+element.apartmentBlockNumber+\" \"+element.apartmentBlockUnitNumber;\n        element.userFullDetail=element.userId+\" \"+element.roleId+\" \"+element.apartmentBlockId+\" \"+element.apartmentBlockUnitId;\n      }); \n      this.allUsers=res;\n      this.users.dropdownList =res; \n      },\n      error=>console.log(error)\n      );\n}\n  search(evt) {\n    \n    // const searchText = evt.target.value\n    // if(searchText.length>2)\n    //     this.subject.next(searchText)\n const searchText = evt.target.value\n    if(searchText.length>2)\n    {\n      this.filterOptions.apartmentId=this.apartmentID;\n      let roleIds= Array.prototype.map.call(this.roleCategory.selectedItems,function(item){ return item.value}).join(\",\");\n    if(roleIds.length>0)\n    {\n      this.filterOptions.roleids=roleIds;\n    }\n      \n    let blockIds=Array.prototype.map.call(this.apartmentBlock.selectedItems,function(item){ return item.apartmentBlockId}).join(\",\");\n    if(blockIds.length>0)\n    {\n    this.filterOptions.blockids= blockIds\n    }\n   this.filterOptions.searchText=evt.target.value;\n  this.userService.getUsersByKeyword(this.filterOptions).subscribe((res:any)=>{\n     this.filteredUsers =res; \n    },\n    error=>console.log(error)\n    );\n\n\n    }\n    \n}\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n//   getAllRoleTypesList(){\n//     this.userService.getAllRoleTypes().subscribe((res:any) => {\n    \n//      this.roleTypeArr.dropdownList=res.filter(function(obj){\n//            return [\"OWNER\",\"TENANT\"].includes(obj.name.toUpperCase())\n\n//      });\n//   });\n// }\n    // getAppartmentRole(item){\n   \n    //   this.roleCategory.selectedItems=[];\n    //  // this.staffCategory.selectedItems=[];\n    //  let parms={\n    //   'RoleTypeId': item.value,\n    //   \"ApartmentId\": this.apartmentID\n    //  }\n     \n    //   this.userService.getApartmentRolesByRoleTypeID(parms).subscribe((res:any) => {\n        \n    //     this.roleCategory.dropdownList=res;\n        \n    //        this.updateUsers();\n    //     });\n  \n    // }\n    getAllApartmentBlockList(){\n      this.apartmentService.getApartmentBlockByApartmentId(this.apartmentID).subscribe((res:any) => {\n       this.apartmentBlock.dropdownList=res;\n     \n    });\n    }\n    // getAllUsers(){\n    //   this.userService.getUsersByApartmentId(this.apartmentID).subscribe(\n    //     (res)=>{\n    //       this.allUsers=res;\n    //       this.updateUsers();\n    //     }\n    //   );\n    // }\n\n    assignUser(){\n      let usersToInsert=this.users.selectedItems;\n      let counter=0;\n      usersToInsert.forEach(element => {\n        counter++;\n        this.isLast=counter==usersToInsert.length;\n        this.insertGroupUser(element.userId,element.roleID,element.apartmentBlockID,element.apartmentBlockUnitID);\n        this.assignUsers.push(element);\n        this.users.dropdownList=this.users.dropdownList.filter(function(obj){\n           return obj.userId!==element.userId  || obj.roleID!==element.roleID || obj.apartmentBlockID!==element.apartmentBlockID ||obj.unitId!==element.apartmentBlockUnitID ; \n        });\n        \n      });\n      this.users.selectedItems=[];\n      \n  }\n    getUsersBycategory(item){\n     let categoryUsers=this.interestGroupUsers.filter(function(obj){\n         return obj.broadCastGroupCategoryId==item.broadCastGroupCategoryId;\n      });\n      let tempAssignUsers=[];\n      let tempUsers=[...this.allUsers];\n      categoryUsers.forEach(element => {\n        tempUsers.forEach(obj => {\n        let isFound= obj.userId==element.userId && obj.roleID==element.roleId && obj.apartmentBlockID==element.apartmentBlockId && obj.apartmentBlockUnitID==element.unitId ;\n     if(isFound)\n     {\n      tempAssignUsers.push(obj);\n      tempUsers=tempUsers.filter(function(obj2){\n            return obj!==obj2;\n      });\n     }\n      });\n      });\n      this.users.dropdownList=[...tempUsers];\n      this.assignUsers=[...tempAssignUsers];\n    }\n    removeCategory(){\n      this.users.dropdownList=this.allUsers;\n      this.assignUsers=[];\n      this.users.selectedItems=[];\n    }\n    updateData(interestGroup){\n      //ApartmentBlockIDs\n      //interestGroup\n       let blockIdArr= interestGroup.apartmentBlockIds.split(',');\n       if(blockIdArr.length>0){\n        this.apartmentBlock.selectedItems=this.apartmentBlock.dropdownList.filter(function(element)\n        {\n        return  blockIdArr.includes(element.apartmentBlockId.toString());\n        });\n         }\n         let roleTypeId= interestGroup.RoleTypeId;\n         if(roleTypeId>0){\n          this.roleTypeArr.selectedItems=this.roleTypeArr.dropdownList.filter(function(element)\n          {\n          return  element.value===roleTypeId;\n          });\n           }\n         let roleIdArr= interestGroup.RoleIds.split(',');\n         if(roleIdArr.length>0){\n          this.roleCategory.selectedItems=this.roleCategory.dropdownList.filter(function(element)\n          {\n          return  roleIdArr.includes(element.value.toString());\n          });\n           }\n       }\n      \n\n    // updateUsers(){\n    //   //this.tempUsers=[...this.allUsers];\n    //   this.getUserIds$().subscribe((res:any)=>{\n    //      if(res.length>0){\n    //      let fiterUsers =this.allUsers.filter(function(obj){\n    //       if(res.includes(obj.userId))\n    //       {\n    //         obj.fullName=obj.firstName+' '+obj.middleName+' '+obj.lastName;\n    //         return obj;\n    //       }\n\n    //     });\n    //     this.users.dropdownList=fiterUsers;\n    //     }else{\n    //       this.users.dropdownList=[];\n    //     }\n    //     console.log( this.users.dropdownList);\n    //   });\n    // }\n    getUserIds$(){\n      let roleIds= Array.prototype.map.call(this.roleCategory.selectedItems,function(item){ return item.value}).join(\",\");\n      let blockIds= Array.prototype.map.call(this.apartmentBlock.selectedItems,function(item){ return item.apartmentBlockId}).join(\",\");\n  let params={\n    'roleIds':roleIds,\n    'conditionIds':\"\",\n    'appartmentbBlockIds':blockIds,\n    'apartmentId':this.apartmentID,\n    'staffcategoryIds':\"\",\n    'staffSubCategoryIds':''\n  }   \n\n      return this.userService.getUsersByFilter(params);\n    }\n    \n    submitMapGroupUserForm(mapGroupUserForm){\n\n      let broadCastGroupCategoryID= Array.prototype.map.call(this.broadCastGroupCategory.selectedItems,function(item){ return item.broadCastGroupCategoryId}).join(\",\");\n      let roleTypeId= Array.prototype.map.call(this.roleTypeArr.selectedItems,function(item){ return item.value}).join(\",\");\n      let roleIds= Array.prototype.map.call(this.roleCategory.selectedItems,function(item){ return item.value}).join(\",\");\n      let blockIds= Array.prototype.map.call(this.apartmentBlock.selectedItems,function(item){ return item.apartmentBlockId}).join(\",\");\n      let userIds= Array.prototype.map.call(this.users.selectedItems,function(item){ return item.userId}).join(\",\");\n  \n      let broadCastGroupCategoryUser={\n      'broadCastGroupCategoryUserID':0,\n      'broadCastGroupCategoryID'  :broadCastGroupCategoryID,\n      'userIDs'                   :userIds,\n      'roleTypeId'                :roleTypeId ,\n      'roleIDs'                   :roleIds,\n      'apartmentBlockIDs'         :blockIds,\n      'isActive'                  :true,\n      'insertedBy'                :parseInt(this.cookieService.get('userId')),\n      'insertedOn'                :new Date().toISOString(),\n      'updatedBy'                 :null,\n      'updatedOn'                 :null,\n      'apartmentID'               :this.apartmentID,\n      'serialNumber'              :0,\n       }\n       if(this.isEdit){\n        broadCastGroupCategoryUser.broadCastGroupCategoryUserID= this.groupUsercategory.broadCastGroupCategoryUserID;\n        broadCastGroupCategoryUser.insertedBy=this.groupUsercategory.insertedBy;\n        broadCastGroupCategoryUser.insertedOn=this.groupUsercategory.insertedOn;\n        broadCastGroupCategoryUser.updatedBy=this.loginUserId;\n        broadCastGroupCategoryUser.updatedOn=new Date().toISOString();\n        broadCastGroupCategoryUser.serialNumber=this.groupUsercategory.serialNo;\n      }\n\n      let broadcast = {\n        broadcast: broadCastGroupCategoryUser\n      }\n\n       this.broadcastService.upsertBroadCastGroupCategoryUser(broadcast).subscribe((res:any) => {\n        if(res.message) {\n          if(this.isEdit)\n          {\n            this.sharedService.setAlertMessage(\"Interest groups mapping to user updated successfully\");\n          }\n         else{\n          this.sharedService.setAlertMessage(\"Interest groups mapping to user added successfully\");\n          }\n       //   this.getAllCategory();\n          this.groupUsercategory = {};\n          this.isEdit = false;\n          this.reset();\n          this.getInterestGroupUsers();\n        }\n      });\n      \n    }\n    insertGroupUser(userId,roleId,blockId,unitId){\n      let broadCastGroupCategoryID= Array.prototype.map.call(this.broadCastGroupCategory.selectedItems,function(item){ return item.broadCastGroupCategoryId}).join(\",\");\n      \n      let broadCastGroupCategoryUser={\n      'broadCastGroupCategoryUserID':0,\n      'broadCastGroupCategoryID'  :broadCastGroupCategoryID,\n      'userID'                   :userId,\n      'roleID'                   :roleId,\n      'apartmentBlockID'         :blockId,\n      'unitID'                   :unitId,\n      'isActive'                  :true,\n      'insertedBy'                :parseInt(this.cookieService.get('userId')),\n      'insertedOn'                :new Date().toISOString(),\n      'updatedBy'                 :null,\n      'updatedOn'                 :null,\n      'apartmentID'               :this.apartmentID,\n      'serialNumber'              :0\n       };\n\n       let broadcast = {\n        broadcast: broadCastGroupCategoryUser\n      }\n\n      this.broadcastService.upsertBroadCastGroupCategoryUser(broadcast).subscribe((res:any) => {\n        if(res.message) {\n          if(this.isLast)\n          {\n           this.sharedService.setAlertMessage(\"Interest groups mapping to user(s) added successfully\");\n           this.isLast = false;\n          }\n      \n          \n        \n        }\n      });\n      \n    }\n\n    removeRole(){\n      this.roleCategory.dropdownList=[];\n      this.roleCategory.selectedItems=[];\n      this.users.selectedItems=[];\n    }\n    reset(){\n      this.removeRole();\n      this.apartmentBlock.selectedItems=[];\n      this.roleTypeArr.selectedItems=[];\n      this.broadCastGroupCategory.selectedItems=[];\n    }\n    //Get Category Type\n  getAllGroupCategory(){\n    \n    this.broadcastService.getAllBroadCastGroupCategory(this.apartmentID).subscribe((res:any) => {\n      this.broadCastGroupCategory.dropdownList= res;  \n    });\n  }\n  totalItems:any;\n  isDataLoaded:any;\n  itemLimit:any;\n  getInterestGroupUsers(){\n    this.broadcastService.getBroadCastGroupCategoryUser(this.apartmentID).subscribe((res:any) => {\n      this.interestGroupUsers= res;\n      this.isDataLoaded = true;\n      this.totalItems = this.interestGroupUsers.length;\n      if(this.totalItems>this.itemLimit){\n        this.ItemEndIndex = this.itemLimit;\n      }\n      else {\n        this.ItemEndIndex = this.totalItems;\n      }\n     });\n  }\n  }\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9icm9hZGNhc3QvY29tcG9uZW50cy9icm9hZGNhc3QtaGlzdG9yeS9icm9hZGNhc3QtaGlzdG9yeS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\nimport { BroadcastService } from 'src/app/api/controllers/broadcast';\nimport { LookupService } from 'src/app/api/controllers/lookup';\nimport { UserService } from 'src/app/api/controllers/user';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport {concatMap} from \"rxjs/operators\";\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-broadcast-history',\n  templateUrl: './broadcast-history.component.html',\n  styleUrls: ['./broadcast-history.component.scss']\n})\nexport class BroadcastHistoryComponent implements OnInit {\n\n\n  allBroadcast:any;\n  allgroup:any;\n  allCategory:any;\n  allType:any;\n  allUser:any;\n  isDataLoaded:boolean = false;\n  broadCastMessages:any;\n  bcData:string = \"\";\n\n  unitFieldType:string = \"broadcastOn\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n  totalFilterItems:any;\n\n  constructor(\n    public broadcastService: BroadcastService,\n    private sharedService:SharedService,\n    public lookupService: LookupService,\n    public userService: UserService,\n    private cookieService:CookieService\n    ) { }\n\n    getIndexParams(event){\n      this.ItemStartIndex = event.ItemStartIndex;\n      this.ItemEndIndex = event.ItemEndIndex;\n    }\n  \n    sortUnitData(type){\n      this.unitFieldType = type;\n      this.unitOrder = !this.unitOrder;\n    }\n  \n    getFieldOrderBy(type) {\n      if(this.unitFieldType == type){\n        return this.unitOrder ? 'asc' : 'desc';\n      }\n      else return '';\n    }\n  \n    isMobileView() {\n      return window.innerWidth <= 767 ? 'table-responsive' : '';\n    }\n\n  ngOnInit() {\n    //this.getAllUser();\n   // this.getAllGroup();\n    this.getAllCategory();\n    this.getAllType();\n    \n    this.getAllBroadcastMessage();\n  }\n  \n\n  //Get All Group\n  getAllGroup(){\n    this.broadcastService.getAllBroadcastGroups().subscribe((res:any) => {\n      this.allgroup = res;\n    })\n  }\n\n  //Get All Category\n  getAllCategory(){\n\n    let apartmentID = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n\n    this.broadcastService.getBroadCastMessageCategories(apartmentID).subscribe((res:any) => {\n      this.allCategory = res;\n    })\n  }\n\n  \n\n  //Get All Type\n  getAllType(){\n\n    let params = {\n      LookupTypeId: 11\n    }\n\n    this.lookupService.getLookupValueByLookupTypeId(params).subscribe((res:any) => {\n      this.allType = res;\n    })\n  }\n  \n\n  // getGroupName(name){\n  //   var data = _.filter( this.allgroup, function( item ) {\n  //     if(item.broadcastGroupId === name)\n  //       return item;\n  //     } );\n\n  //     if(data === undefined || data === null || data.length == 0){\n  //       return '';\n  //     }\n  //     else {\n  //       return data[0].groupName;\n  //     }\n  // }\n\n  getCategoryName(name){\n    var data = _.filter( this.allCategory, function( item ) {\n      if(item.broadCastMessageCategoryId === name)\n        return item;\n      } );\n\n      if(data === undefined || data === null || data.length == 0){\n        return '';\n      }\n      else {\n        return data[0].broadCastMessageCategory1;\n      }\n  }\n\n  getTypeName(name){\n    var data = _.filter( this.allType, function( item ) {\n      if(item.lookupValueId === name)\n        return item;\n      } );\n\n      if(data === undefined || data === null || data.length == 0){\n        return '';\n      }\n      else {\n        return data[0].lookupValueName;\n      }\n  }\n\n  getUserName(name){\n    var data = _.filter( this.allUser, function( item ) {\n      if(item.userId === name)\n        return item;\n      } );\n\n      if(data === undefined || data === null || data.length == 0){\n        return '';\n      }\n      else {\n        return data[0].firstName;\n      }\n  }\n  getBroadCastMode(modeIds){\n  \n   if(modeIds.length>0)\n   {\n    var broadcastModeString=\"\";\n var modeIdsArr=modeIds.split(',');\n if(modeIdsArr.length>0){\n  modeIdsArr.forEach(element => {\n    if(element==\"40\")\n    {\n      broadcastModeString=broadcastModeString+\"General SMS,\";\n    }\n    if(element==\"41\")\n    {\n      broadcastModeString=broadcastModeString+\"Whatsapp,\";\n    }\n    if(element==\"42\")\n    {\n      broadcastModeString=broadcastModeString+\"Email,\";\n    }\n   });\n  return broadcastModeString=broadcastModeString.substring(0,broadcastModeString.length-1);\n }\n\n   }\n  }\n  \n  getAllBroadcastMessage(){\n    let apartmentID = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n\n   var users$=this.userService.getAllUsers();\n var allBroadCastmessages$= users$.pipe(\n    concatMap((users:any) =>{\n      this.allUser = users;\n      return  this.broadcastService.getAllBroadcastMessages(apartmentID);\n    } )\n   );\n   \n\n    allBroadCastmessages$.subscribe(\n                (res:any)=>{\n                    this.broadCastMessages=res;\n                    this.broadCastMessages.forEach(element => {\n                      element.CategoryName=this.getCategoryName(element.broadcastMessageCategoryId);\n                      element.BroadCastMode=this.getBroadCastMode(element.broadcastModeIds);\n                      element.UserName=this.getUserName(element.broadcastBy);\n                    });\n                    this.isDataLoaded = true;\n                     this.totalItems = this.broadCastMessages.length;\n                      if(this.totalItems>this.itemLimit){\n                        this.ItemEndIndex = this.itemLimit;\n                      }\n                      else {\n                        this.ItemEndIndex = this.totalItems;\n                      }\n                }\n\n    );\n    \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9icm9hZGNhc3QvY29tcG9uZW50cy9icm9hZGNhc3QtcmVtb3ZldXNlci9icm9hZGNhc3QtcmVtb3ZldXNlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit ,Injector} from '@angular/core';\n\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { BroadcastService } from 'src/app/api/controllers/broadcast';\nimport { UserService } from 'src/app/api/controllers/user';\nimport { ApartmentService } from 'src/app/api/controllers/apartment';\nimport { StaffService } from 'src/app/api/controllers/staff';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport * as _ from 'underscore';\n\n\n@Component({\n  selector: 'app-broadcast-removeuser',\n  templateUrl: './broadcast-removeuser.component.html',\n  styleUrls: ['./broadcast-removeuser.component.scss']\n})\nexport class BroadcastRemoveuserComponent implements OnInit {\n  broadCastGroupCategory={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n  };\n  modalService:any;\n  groupCategorySetting:any;\n  ItemStartIndex:any;\n  unitFieldType:any;\n  ItemEndIndex:any;\n  unitOrder:any;\n  filterOptions={\n    \"roleids\":null,\n    \"apartmentId\":0,\n    \"blockids\":null,\n    \"searchText\":\"\"\n  }\n  constructor(\n    public broadcastService: BroadcastService,\n    private sharedService:SharedService,\n    private cookieService:CookieService,\n    private userService:UserService,\n    private staffService:StaffService,\n    private apartmentService:ApartmentService,\n    private injector: Injector,\n  ) { \n\n    this.modalService = this.injector.get(ModalService);\n  }\n  allGroupUser:any;\n  loginUserId:any;\n  apartmentID:any;\n  apartmentBlockList:any;\n  ngOnInit(): void {\n    this.loginUserId=parseInt(this.cookieService.get('userId'));\n    this.apartmentID=parseInt(this.cookieService.get('apartmentId'));\n    this.groupCategorySetting={\n      singleSelection: true, \n      enableSearchFilter: true,\n      labelKey: 'groupName',\n      primaryKey: 'broadCastGroupCategoryId',\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    };\n    this.getAllGroupCategory();\n    this.getAllApartmentBlockList();\n    this.getUsers();\n    this.getAllGoupUsers();\n    \n  }\n  // getUsers(Item){\n  //   //get All user based on apartmentId and broadCastGroupCategoryId\n  //   let params={\n  //     \"aparmentId\":this.apartmentID,\n  //     \"broadCastGroupCategoryId\":Item.broadCastGroupCategoryId\n  //   }\n  //  // this.allGroupUser=this.broadcastService.getBroadCastGroupCategoryUserResponse()\n  // }\nremoveUser(user){\n  var params = {\n    broadCastGroupCategoryUserId: user.broadCastGroupCategoryUserId,\n    deleteBy: this.loginUserId\n  }\n  this.broadcastService.deleteBroadCastGroupCategoryUser(params).subscribe(\n    (res:any)=>{\n      this.sharedService.setAlertMessage(\"User has been removed from interest group successfully\");\n      this.allGroupUser= this.allGroupUser.filter(function(obj){\n               return obj.broadCastGroupCategoryUserId!==user.broadCastGroupCategoryUserId;\n      });\n      this.interestGroupUsers=  this.interestGroupUsers.filter(function(obj){\n        return obj.broadCastGroupCategoryUserId!==user.broadCastGroupCategoryUserId;\n});\n    }\n  )\n}\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n  interestGroupUsers:any;\n  getAllGoupUsers(){\n    this.broadcastService.getBroadCastGroupCategoryUser(this.apartmentID).subscribe((res:any) => {\n      this.interestGroupUsers= res;\n      this.interestGroupUsers.forEach(element => {\n        let currentUser=this.getUser(element.userId,element.roleId,element.apartmentBlockId,element.unitId);\n        element.role=currentUser.roleName;\n        element.block=currentUser.apartmentBlockNumber;\n        element.unit=currentUser.apartmentBlockUnitNumber;\n        element.user=currentUser.userName;\n        element.groupCategory= this.getGroupCategory(element.broadCastGroupCategoryId);\n      });\n      this.allGroupUser=this.interestGroupUsers;\n      });\n  }\n  getUser(userId,roleId,apartmentBlockId,unitId){\n   let users=  this.allUsers.filter(function(obj){\n      return  obj.userId==userId && obj.roleID==roleId && obj.apartmentBlockID==apartmentBlockId && obj.apartmentBlockUnitID==unitId ;\n     });\n  return users[0];\n  }\n  allUsers:any;\n  getUsers(){\n    this.filterOptions.apartmentId=this.apartmentID;\n     this.filterOptions.searchText=null;\n      this.userService.getUsersByKeyword(this.filterOptions).subscribe((res:any)=>{\n         this.allUsers=res;\n    \n        },\n        error=>console.log(error)\n        );\n  }\n\n  getAllApartmentBlockList(){\n    this.apartmentService.getApartmentBlockByApartmentId(this.apartmentID).subscribe((res:any) => {\n     this.apartmentBlockList=res;\n   \n  });\n  }\n  getGroupCategory(groupCategoryid){\n  let groupCategory=  this.broadCastGroupCategory.dropdownList.filter(function(obj){\n      return obj.broadCastGroupCategoryId==groupCategoryid;\n    });\n   return groupCategory[0].groupName;\n  }\n  //Get Category Type\n  getAllGroupCategory(){\n    \n    this.broadcastService.getAllBroadCastGroupCategory(this.apartmentID).subscribe((res:any) => {\n      this.broadCastGroupCategory.dropdownList= res;  \n    });\n  }\ndeSelectCategory(){\n  this.allGroupUser=this.interestGroupUsers;\n}\n  getUsersBycategory(item){\n    let categoryUsers=this.interestGroupUsers.filter(function(obj){\n        return obj.broadCastGroupCategoryId==item.broadCastGroupCategoryId;\n     });\n     this.allGroupUser=categoryUsers;\n   }\n}\n","export default \".broadcast-message-wrapper .nav-tabs .nav-item.show .nav-link, .broadcast-message-wrapper .nav-tabs .nav-link.active {\\n  color: #0062cc;\\n  background-color: transparent;\\n  border-color: transparent transparent #f3f3f3;\\n  border-bottom: 3px solid !important;\\n  font-size: 16px;\\n  font-weight: bold;\\n}\\n.broadcast-message-wrapper .tab-content > .active {\\n  margin-top: 18px;\\n}\\n.broadcast-message-wrapper angular2-multiselect {\\n  font-family: \\\"Lato\\\", sans-serif;\\n  font-weight: 400;\\n  letter-spacing: 0.3px;\\n  -webkit-font-smoothing: inherit;\\n  -moz-osx-font-smoothing: inherit;\\n  font-size: 1.2rem !important;\\n}\\n.broadcast-message-wrapper .selected-list .c-list .c-token {\\n  font-size: 1.2rem !important;\\n}\\n.broadcast-message-wrapper .c-btn {\\n  font-size: 1.2rem !important;\\n}\\n.broadcast-message-wrapper .recipentsDiv {\\n  margin-bottom: 10px;\\n}\\n.broadcast-message-wrapper .recipentsDiv .box {\\n  border: 1px solid #ccc;\\n  height: 150px;\\n  overflow-y: auto;\\n}\\n.broadcast-message-wrapper .recipentsDiv .box label {\\n  margin-right: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9hbXMvYnJvYWRjYXN0L2NvbXBvbmVudHMvYnJvYWRjYXN0LXNlbmRtZXNzYWdlL2Jyb2FkY2FzdC1zZW5kbWVzc2FnZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYW1zL2Jyb2FkY2FzdC9jb21wb25lbnRzL2Jyb2FkY2FzdC1zZW5kbWVzc2FnZS9icm9hZGNhc3Qtc2VuZG1lc3NhZ2UuY29tcG9uZW50LnNjc3MiLCIvVXNlcnMvc2VudGhpbGt1bWFyc2VldGhhcmFtYW4vRG9jdW1lbnRzL3dvcmtzL2NsaWNrbXljb25kby9hcHAtbmc5L3NyYy9zY3NzL2ZvbnRzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0U7RUFDRSxjQUFBO0VBQ0EsNkJBQUE7RUFDQSw2Q0FBQTtFQUNBLG1DQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0FDRko7QURJQTtFQUNFLGdCQUFBO0FDRkY7QURJRTtFRStDQSwrQkFBQTtFQUNBLGdCQUFBO0VBQ0EscUJBQUE7RUFDQSwrQkFBQTtFQUNBLGdDQUFBO0VGakRNLDRCQUFBO0FDRVI7QURDSTtFQUNFLDRCQUFBO0FDQ047QURFSTtFQUNFLDRCQUFBO0FDQU47QURFSTtFQUNFLG1CQUFBO0FDQU47QURDTTtFQUNFLHNCQUFBO0VBQ0EsYUFBQTtFQUNBLGdCQUFBO0FDQ1I7QURBUTtFQUNFLGtCQUFBO0FDRVYiLCJmaWxlIjoic3JjL2FwcC9hbXMvYnJvYWRjYXN0L2NvbXBvbmVudHMvYnJvYWRjYXN0LXNlbmRtZXNzYWdlL2Jyb2FkY2FzdC1zZW5kbWVzc2FnZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCIuLi8uLi8uLi8uLi8uLi9zY3NzL2ZvbnRzLnNjc3NcIjtcblxuLmJyb2FkY2FzdC1tZXNzYWdlLXdyYXBwZXJ7XG4gIC5uYXYtdGFicyAubmF2LWl0ZW0uc2hvdyAubmF2LWxpbmssIC5uYXYtdGFicyAubmF2LWxpbmsuYWN0aXZlIHtcbiAgICBjb2xvcjogIzAwNjJjYztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICNmM2YzZjM7XG4gICAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICFpbXBvcnRhbnQ7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuLnRhYi1jb250ZW50Pi5hY3RpdmUgeyAgXG4gIG1hcmdpbi10b3A6IDE4cHg7XG59XG4gIGFuZ3VsYXIyLW11bHRpc2VsZWN0e1xuICAgICAgQGluY2x1ZGUgIGRlc3AtcmVndWxhcjtcbiAgICAgICAgZm9udC1zaXplOiAxLjJyZW0gIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICAuc2VsZWN0ZWQtbGlzdCAuYy1saXN0IC5jLXRva2Vue1xuICAgICAgZm9udC1zaXplOiAxLjJyZW0gIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICAuYy1idG57XG4gICAgICBmb250LXNpemU6IDEuMnJlbSAhaW1wb3J0YW50O1xuICAgIH1cbiAgICAucmVjaXBlbnRzRGl2e1xuICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICAgIC5ib3h7XG4gICAgICAgIGJvcmRlcjoxcHggc29saWQgI2NjYztcbiAgICAgICAgaGVpZ2h0OjE1MHB4O1xuICAgICAgICBvdmVyZmxvdy15OmF1dG87XG4gICAgICAgIGxhYmVse1xuICAgICAgICAgIG1hcmdpbi1yaWdodDoxMHB4O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgXG59IiwiLmJyb2FkY2FzdC1tZXNzYWdlLXdyYXBwZXIgLm5hdi10YWJzIC5uYXYtaXRlbS5zaG93IC5uYXYtbGluaywgLmJyb2FkY2FzdC1tZXNzYWdlLXdyYXBwZXIgLm5hdi10YWJzIC5uYXYtbGluay5hY3RpdmUge1xuICBjb2xvcjogIzAwNjJjYztcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgI2YzZjNmMztcbiAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICFpbXBvcnRhbnQ7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uYnJvYWRjYXN0LW1lc3NhZ2Utd3JhcHBlciAudGFiLWNvbnRlbnQgPiAuYWN0aXZlIHtcbiAgbWFyZ2luLXRvcDogMThweDtcbn1cbi5icm9hZGNhc3QtbWVzc2FnZS13cmFwcGVyIGFuZ3VsYXIyLW11bHRpc2VsZWN0IHtcbiAgZm9udC1mYW1pbHk6IFwiTGF0b1wiLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsZXR0ZXItc3BhY2luZzogMC4zcHg7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGluaGVyaXQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBpbmhlcml0O1xuICBmb250LXNpemU6IDEuMnJlbSAhaW1wb3J0YW50O1xufVxuLmJyb2FkY2FzdC1tZXNzYWdlLXdyYXBwZXIgLnNlbGVjdGVkLWxpc3QgLmMtbGlzdCAuYy10b2tlbiB7XG4gIGZvbnQtc2l6ZTogMS4ycmVtICFpbXBvcnRhbnQ7XG59XG4uYnJvYWRjYXN0LW1lc3NhZ2Utd3JhcHBlciAuYy1idG4ge1xuICBmb250LXNpemU6IDEuMnJlbSAhaW1wb3J0YW50O1xufVxuLmJyb2FkY2FzdC1tZXNzYWdlLXdyYXBwZXIgLnJlY2lwZW50c0RpdiB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG4uYnJvYWRjYXN0LW1lc3NhZ2Utd3JhcHBlciAucmVjaXBlbnRzRGl2IC5ib3gge1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICBoZWlnaHQ6IDE1MHB4O1xuICBvdmVyZmxvdy15OiBhdXRvO1xufVxuLmJyb2FkY2FzdC1tZXNzYWdlLXdyYXBwZXIgLnJlY2lwZW50c0RpdiAuYm94IGxhYmVsIHtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xufSIsIlxuQGltcG9ydCBcInZhcmlhYmxlc1wiO1xuXG5AbWl4aW4gcHVibGljLWxpZ2h0IHtcbiAgZm9udC1mYW1pbHk6ICdQb3BwaW5zJywgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbn1cblxuQG1peGluIHB1YmxpYy1yZWd1bGFyIHtcbiAgZm9udC1mYW1pbHk6ICdQb3BwaW5zJywgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbn1cblxuQG1peGluIHB1YmxpYy1tZWRpdW0ge1xuICBmb250LWZhbWlseTogJ1BvcHBpbnMnLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNTAwO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xufVxuXG5AbWl4aW4gcHVibGljLWJvbGQge1xuICBmb250LWZhbWlseTogJ1BvcHBpbnMnLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNjAwO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xufVxuXG5AbWl4aW4gaGVhZC1saWdodCB7XG4gIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGluaGVyaXQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBpbmhlcml0O1xufVxuXG5AbWl4aW4gaGVhZC1yZWd1bGFyIHtcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuM3B4O1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBpbmhlcml0O1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogaW5oZXJpdDtcbn1cblxuQG1peGluIGhlYWQtbWVkaXVtIHtcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMnB4O1xufVxuXG5AbWl4aW4gaGVhZC1ib2xkIHtcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuM3B4O1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBpbmhlcml0O1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogaW5oZXJpdDtcbn1cblxuQG1peGluIGRlc3AtcmVndWxhciB7XG4gIGZvbnQtZmFtaWx5OiAnTGF0bycsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxldHRlci1zcGFjaW5nOiAwLjNweDsgICBcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogaW5oZXJpdDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGluaGVyaXQ7XG59XG5cbkBtaXhpbiBkZXNwLW1lZGl1bSB7XG4gIGZvbnQtZmFtaWx5OiAnTGF0bycsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGxldHRlci1zcGFjaW5nOiAwLjNweDtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG59XG5cbkBtaXhpbiBmdC1jYWxjKCRwaXhlbHMpIHtcbiAgZm9udC1zaXplOiAoICRwaXhlbHMgLyAkZnQtYmFzZSApICsgcmVtO1xufVxuIl19 */\"","import { Component, OnInit ,Injector} from '@angular/core';\n\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { BroadcastService } from 'src/app/api/controllers/broadcast';\nimport { UserService } from 'src/app/api/controllers/user';\nimport { ApartmentService } from 'src/app/api/controllers/apartment';\nimport { StaffService } from 'src/app/api/controllers/staff';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport * as _ from 'underscore';\n\n\n@Component({\n  selector: 'app-broadcast-sendmessage',\n  templateUrl: './broadcast-sendmessage.component.html',\n  styleUrls: ['./broadcast-sendmessage.component.scss']\n})\nexport class BroadcastSendmessageComponent implements OnInit {\n  IsBroadcast:boolean;\n  message:any;\n  allcategory:any;\n  apartmentID:any;\n  modalService:any;\n  roleType:any;\n  condtionRequired:boolean;\n  dropdownSettings={};\n  blockdropdownSettings={}\n  roleTypedropdownSettings={}\n  broadCastdropdownSettings={}\n  groupCategorySetting={}\n  roleDropdownSettings={};\n  staffCategoryMap=new Map();\n  staffSubCategoryMap=new Map();\n  isStaff:boolean;\n  users:any;\n  allUsers:any;\n  selectedTab:string;\n  roleTypeArr={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n  };\n  \n  roleCategory={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n\n  };\n  staffCategory={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n\n  };\n  staffSubCategory={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n\n  };\n  broadCastCategory={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n\n  };\napartmentBlock={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n    };\n condition={\n      \"dropdownList\":[],\n      \"selectedItems\":[]\n      };\n     \n      broadModeArr={\n        \"dropdownList\":[],\n        \"selectedItems\":[]\n      };\n      broadCastGroupCategory={\n        \"dropdownList\":[],\n        \"selectedItems\":[]\n      };\n  allBroadcastMessageGroup = [];\n  interestGroupUsers:any;\n  isFlashNotice:boolean=false;\n\n  editorPlacehorder:string = \"\";\n\n  constructor(\n    public broadcastService: BroadcastService,\n    private sharedService:SharedService,\n    private cookieService:CookieService,\n    private userService:UserService,\n    private staffService:StaffService,\n    private apartmentService:ApartmentService,\n    private injector: Injector,\n  ) { \n\n    this.modalService = this.injector.get(ModalService);\n  }\n\n  onContentChanged(event){\n    \n  }\n\n  ngOnInit() {\n    \n    this.message={};\n    this.IsBroadcast=true;\n    this.apartmentID=parseInt(this.cookieService.get('apartmentId'));\n    this.getAllUsers();\n    this.getAllCategory();\n    this.getAllRoleTypesList();\n    this.getAllApartmentBlockList();\n    this.getAllGroupCategory();\n    this.getInterestGroupUsers();\n    this.groupCategorySetting={\n      singleSelection: true, \n      enableSearchFilter: true,\n      labelKey: 'groupName',\n      primaryKey: 'broadCastGroupCategoryId',\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    }; \n    this.dropdownSettings={\n      singleSelection: false, \n      enableSearchFilter: true,\n      labelKey: 'name',\n      primaryKey: 'value',\n      groupBy:\"category\",\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    }; \n    this.roleDropdownSettings={\n      singleSelection: false, \n      enableSearchFilter: true,\n      labelKey: 'name',\n      primaryKey: 'value',\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    }; \n    this.blockdropdownSettings={\n      singleSelection: false,\n      primaryKey: 'apartmentBlockId',\n      labelKey: 'apartmentBlockNumber',\n      enableSearchFilter: true,\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    }; \n    \n    this.roleTypedropdownSettings={\n      singleSelection: true,\n      primaryKey: 'value',\n      labelKey: 'name',\n      enableSearchFilter: true,\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    }; \n    this.broadCastdropdownSettings={\n      singleSelection: true,\n      primaryKey: 'broadCastMessageCategoryId',\n      labelKey: 'broadCastMessageCategory1',\n      enableSearchFilter: true,\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    };\n    \n  }\n\n  currentTab(item){\n    this.selectedTab=item;\n    if(this.selectedTab=='interest'){\n     // this.users=[];\n      this.IsBroadcast=false;\n      if(this.broadCastGroupCategory.selectedItems.length>0)\n      {\n        this.selectInterestGroup(this.broadCastGroupCategory.selectedItems[0]);\n      }else{\n        this.users=[];\n      }\n      \n    }\n    if(this.selectedTab=='role'){\n      this.updateUsers();\n      this.IsBroadcast=true;\n    }\n  }\n  getAllUsers(){\n    this.userService.getUsersByApartmentId(this.apartmentID).subscribe(\n      (res)=>{\n        this.allUsers=res;\n        this.updateUsers();\n      }\n    );\n  }\n  selectInterestGroup(item){\nlet selectedGroup=this.interestGroupUsers.filter(function(element){\n  return element.broadCastGroupCategoryId==item.broadCastGroupCategoryId;\n});\nif(selectedGroup.length>0)\n{\n  let userIds=[];\n  selectedGroup.forEach(element => {\n    userIds.push(element.userId);\n  });\n  if(userIds.length>0){\n    this.users=this.allUsers.filter(function(obj){\n    return userIds.includes(obj.userId);\n  });\n  }else{\n    this.users=[];\n  }\n}else{\n  this.users=[];\n}\n \n  }\n  removeInterestGroup(item){\n    this.users=[];\n  }\n  //broadCastGroupCategoryId\n  flashNotice(bool){\n    \n    this.isFlashNotice = bool;\n  }\n  categoryChange(item){\n    \n    let id = parseInt(item.broadCastMessageCategoryId);\n    var data = _.filter( this.allcategory, function( item ) {\n      if(item.broadCastMessageCategoryId === id)\n        return item;\n      } );\n\n      if(data === undefined || data === null || data.length == 0){\n        this.message.ckeditor = '';\n      }\n      else {\n        this.message.ckeditor = data[0].template;\n      }\n  }\n\n  getAllApartmentBlockList(){\n    this.apartmentService.getApartmentBlockByApartmentId(this.apartmentID).subscribe((res:any) => {\n     this.apartmentBlock.dropdownList=res;\n     var broadCastModeArr=[{\"name\":\"General SMS\",\"value\":40},\n    {\"name\":\"Whatsapp\",\"value\":41},\n    {\"name\":\"Email\",\"value\":42}];\n    this.broadModeArr.dropdownList=broadCastModeArr;\n  });\n  }\n  //Get All Broadcast Category\n  getAllCategory(){\n    let apartmentID = parseInt(this.cookieService.get('apartmentId'));\n    this.broadcastService.getBroadCastMessageCategories(this.apartmentID).subscribe((res:any) => {\n      this.allcategory = res;\n      this.broadCastCategory.dropdownList=res;\n      })\n  }\n  getAllRoleTypesList(){\n    this.userService.getAllRoleTypes().subscribe((res:any) => {\n     this.roleTypeArr.dropdownList=res;\n  });\n}\n\n\n  getAppartmentRole(item){\n   \n    this.roleCategory.selectedItems=[];\n    this.staffCategory.selectedItems=[];\n    var params={\n      RoleTypeId: item.value,\n      ApartmentId: this.apartmentID\n    }\n    this.userService.getApartmentRolesByRoleTypeId(params).subscribe((res:any) => {\n      this.condtionRequired=parseInt(item.value)==2 || parseInt(item.value)==4;;\n      this.roleCategory.dropdownList=res;\n      let conditinArr=[{\"name\":\"IsLiving\",\"value\":1}\n                       ,{\"name\":\"IsPrimaryContact\",\"value\":2}];\n      if(this.condtionRequired){\n        this.condition.dropdownList=conditinArr;\n      }\n         else{\n          this.condition.dropdownList=[];\n          this.condition.selectedItems=[];\n         }\n         this.updateUsers();\n      });\n\n  }\n  updateUsers(){\n    //this.tempUsers=[...this.allUsers];\n    this.getUserIds$().subscribe((res:any)=>{\n       if(res.length>0){\n        this.users=this.allUsers.filter(function(obj){\n        return res.includes(obj.userId);\n      });\n      }else{\n        this.users=[];\n      }\n      \n    });\n  }\n  getAllGroupCategory(){\n    \n    this.broadcastService.getAllBroadCastGroupCategory(this.apartmentID).subscribe((res:any) => {\n      this.broadCastGroupCategory.dropdownList= res;\n     \n    });\n  }\n  getInterestGroupUsers(){\n    this.broadcastService.getBroadCastGroupCategoryUser(this.apartmentID).subscribe((res:any) => {\n      this.interestGroupUsers= res;\n    });\n  }\n  getstaffCategories(item){\n    this.isStaff=this.roleTypeArr.selectedItems[0].name.toLowerCase()==\"staff\";\n    if(this.isStaff)\n    {\n      \n      if(this.staffCategoryMap.get(item.value)==undefined){\n        let params={\n          'roleId':item.value,\n          'apartmentId':this.apartmentID\n        }\n        \n        this.staffService.getStaffCategoryByRole(params).subscribe((res:any) => {\n        let temp=[...this.staffCategory.dropdownList];\n          res.forEach(element => {\n            element.category=item.name;\n            temp.push(element);\n          });\n          this.staffCategoryMap.set(item.value,res);\n          this.staffCategory.dropdownList=temp;\n          this.updateUsers();\n         });\n         }else{\n          let temp=[...this.staffCategory.dropdownList];\n        let addStaffCategory= this.staffCategoryMap.get(item.value);\n        addStaffCategory.forEach(element => {\n          temp.push(element);\n            });\n            this.staffCategory.dropdownList=temp;\n            \n      }\n     \n\n      }\n      this.updateUsers();\n   }\n\n   getAllStaffCategories(items){\n     items.forEach(element => {\n      this.getstaffCategories(element);\n     });\n     \n   }\n   removeAllStaffCategories(items){\n    this.roleCategory.selectedItems=[];\n    this.staffCategory.dropdownList=[];\n    this.staffCategory.selectedItems=[];\n    this.updateUsers();\n  }\n\n\nremoveStaffCategories(item){\n \n    if(this.roleTypeArr.selectedItems[0].name.toLowerCase()==\"staff\")\n    {\n     \n         let removeStaffCategory= this.staffCategoryMap.get(item.value);\n         removeStaffCategory.forEach(element => {\n             this.staffCategory.dropdownList=this.staffCategory.dropdownList.filter(function(obj){\n               return obj.value!==element.value;\n             });\n            });\n    \n    }\n    this.updateUsers();\n}\nremoveSubStaffCategories(item){\n       let removeSubStaffCategory= this.staffSubCategoryMap.get(item.value);\n         removeSubStaffCategory.forEach(element => {\n             this.staffSubCategory.dropdownList=this.staffSubCategory.dropdownList.filter(function(obj){\n               return obj.value!==element.value;\n             });\n            });\n            this.updateUsers();\n  }\n  getStaffSubCategories(item){\n     if(this.staffSubCategoryMap.get(item.value)==undefined){\n       let params={\n        'categoryId':item.value,\n        'apartmentId':this.apartmentID\n       }\n        this.staffService.getSubStaffCategoryByCategory(params).subscribe((res:any) => {\n          let temp=[...this.staffSubCategory.dropdownList];\n          res.forEach(element => {\n            element.category=item.name;\n            temp.push(element);\n          });\n          this.staffSubCategoryMap.set(item.value,res);\n          this.staffSubCategory.dropdownList=temp;\n          this.updateUsers();\n         });\n         \n      }else{\n        \n        let addSubStaffCategory= this.staffSubCategoryMap.get(item.value);\n        let temp=[...this.staffSubCategory.dropdownList];\n        addSubStaffCategory.forEach(element => {\n          temp.push(element);\n            });\n            this.staffSubCategory.dropdownList=temp;\n            this.updateUsers();\n      }\n      \n  }\n\n  getAllSubStaffCategories(items){\n    items.forEach(element => {\n     this.getStaffSubCategories(element);\n    });   \n  }\nremoveRole(item){\nthis.roleCategory.dropdownList=[];\nthis.condition.dropdownList=[];\nthis.condition.selectedItems=[];\nthis.removeAllStaffCategories([]);\nthis.removeAllSubStaffCategories([]);\n}\n\n  removeAllSubStaffCategories(items){\n   this.staffSubCategory.dropdownList=[];\n   this.staffCategory.selectedItems=[];\n   this.updateUsers();\n }\n removeGroupSubStaffCategories(items){\n  items.list.forEach(element => {\n      this.removeSubStaffCategories(element);\n     });\n     this.updateUsers();\n}\ngetGroupSubStaffCategories(items){\n  items.list.forEach(element => {\n      this.getStaffSubCategories(element);\n     });\n     this.updateUsers();\n}\n\n\ngetUserIds$(){\n  let roleIds= Array.prototype.map.call(this.roleCategory.selectedItems,function(item){ return item.value}).join(\",\");\n  let blockIds= Array.prototype.map.call(this.apartmentBlock.selectedItems,function(item){ return item.apartmentBlockId}).join(\",\");\n  let conditionIds= Array.prototype.map.call(this.condition.selectedItems,function(item){ return item.value}).join(\",\");\n  let staffcategoryIds= Array.prototype.map.call(this.staffCategory.selectedItems,function(item){ return item.value}).join(\",\");\n  let staffSubCategoryIds= Array.prototype.map.call(this.staffSubCategory.selectedItems,function(item){ return item.value}).join(\",\");\n  let params={\n    'roleIds':roleIds,\n    'conditionIds':conditionIds,\n    'appartmentbBlockIds':blockIds,\n    'apartmentId':this.apartmentID,\n    'staffcategoryIds':staffcategoryIds,\n    'staffSubCategoryIds':staffSubCategoryIds\n  }  \n  return this.userService.getUsersByFilter(params);\n}\n  //Submit Category\n  submitCreateBroadcastMessageForm(form){\n    let broadCastGroupCategoryIDs= Array.prototype.map.call(this.broadCastGroupCategory.selectedItems,function(item){ return item.broadCastGroupCategoryId}).join(\",\");      \n    let broadcastModeIds= Array.prototype.map.call(this.broadModeArr.selectedItems,function(item){ return item.value}).join(\",\");\n    var broadcastMessage={\n          \"broadCastMessageId\": 0,\n          \"apartmentId\": this.apartmentID,\n          \"subject\": this.message.subject,\n          \"broadcastMessage1\": this.message.ckeditor,\n          \"broadcastBy\": parseInt(this.cookieService.get('userId')),\n          \"broadcastOn\": new Date().toISOString(),\n          \"broadcastMessageCategoryId\":0,\n          \"broadcastModeIds\": broadcastModeIds,\n          \"broadCastGroupcategoryId\": null,\n          \"userIds\":null ,\n          \"isReadAllowed\": false,\n          \"isLater\": true,\n          \"laterDate\": null,\n          \"isFlashNotice\": this.isFlashNotice,\n          \"isActive\": true,\n          \"insertedBy\": parseInt(this.cookieService.get('userId')),\n          \"insertedOn\": new Date().toISOString(),\n          \"updatedBy\": null,\n          \"updatedOn\": null,\n          \"serialNo\":0,\n          \"description\":\"\",\n          \"filterId\":null\n\n        }\n        // var addBoradcastMessage$;\n        if(this.selectedTab=='interest'){\n          broadcastMessage.broadCastGroupcategoryId=parseInt(broadCastGroupCategoryIDs);\n          broadcastMessage.broadcastMessageCategoryId=null;\n          // broadcastMessage.userIds= Array.prototype.map.call(this.users,function(item){ return item.userId}).join(\",\");\n          // addBoradcastMessage$=  this.broadcastService.addBroadCastMessage(broadcastMessage);\n        }\n        if(this.selectedTab=='role'){\n          broadcastMessage.broadcastMessageCategoryId=this.broadCastCategory.selectedItems[0].broadCastMessageCategoryId;\n          broadcastMessage.broadCastGroupcategoryId=null;\n          // var userId$=this.getUserIds$();\n          //  addBoradcastMessage$=userId$.pipe(\n          //     concatMap((userIds:any) =>{\n          //       if(userIds.length==0)\n          //       {\n          //         this.modalService.showErrorModal(\"No such Users exists to broadcast message.\");\n          //         return never();\n          //       }\n          //     broadcastMessage.userIds=userIds.join(',');\n          //      return  this.broadcastService.addBroadCastMessage(broadcastMessage);\n          //     } )\n          //   )\n            \n             \n        }\n        broadcastMessage.userIds= Array.prototype.map.call(this.users,function(item){ return item.userId}).join(\",\");\n        \n        let broadCastParams = {\n          sourceBroadCastMessage_model: broadcastMessage\n        }\n\n        this.broadcastService.addBroadCastMessage(broadCastParams).subscribe((res:any) => {\n          if(res.message) {\n            this.sharedService.setAlertMessage(\"Broadcast Message sent successfully\");\n           this.ClearFormData();\n          }\n        });\n           // this.updateUsers();\n        }\n  ClearFormData(){\n    this.message = {};\n    this.roleTypeArr.selectedItems=[];\n    this.broadCastCategory.selectedItems=[];\n    this.apartmentBlock.selectedItems=[];\n    this.broadModeArr.selectedItems=[];\n    this.broadCastGroupCategory.selectedItems=[];\n    this.removeRole([]);\n    if(this.selectedTab=='role'){\n      this.users=[...this.allUsers];\n    }\n    if(this.selectedTab=='interest'){\n      this.users=[];\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9icm9hZGNhc3QvY29tcG9uZW50cy9icm9hZGNhc3Qtc2V0dXAvYnJvYWRjYXN0LXNldHVwLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Injector } from '@angular/core';\n\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BroadcastService } from 'src/app/api/controllers/broadcast';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-broadcast-setup',\n  templateUrl: './broadcast-setup.component.html',\n  styleUrls: ['./broadcast-setup.component.scss']\n})\nexport class BroadcastSetupComponent implements OnInit {\n\n  category:any;\n  loginUserId:number;\n  apartmentId:number;\n  isDataLoaded:boolean = false;\n\n  bcData:string = \"\";\n  modalService:any;\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n  totalFilterItems:any;\n\n  isEdit:boolean = false;\n\n  //Get all work type\n  allBroadcastCategory:any;\n\n  errorMessage:string = \"\";\n  isError:boolean = false;\n\n  editorPlacehorder;string = \"\";\n\n  constructor(\n    private injector: Injector,\n    public dialog: MatDialog,\n  \tprivate broadcastService: BroadcastService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) {\n    this.modalService = this.injector.get(ModalService);\n   }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  onContentChanged(event){\n    \n  }\n\n  ngOnInit() {\n    this.loginUserId=parseInt(this.cookieService.get('userId'));\n    this.apartmentId=parseInt(this.cookieService.get('apartmentId'));\n    this.category = {};\n    this.getAllCategory();\n\n    // delete category\n    this.sharedService.unitlistdeleteindexcast.subscribe( index => {\n      if(index != null){\n        var params = {\n          broadcastId: this.allBroadcastCategory[index].broadCastMessageCategoryId,\n          deleteBy: this.loginUserId\n        }\n        this.isDataLoaded = false;\n        this.broadcastService.deleteBroadCastCategory(params).subscribe((res:any) => {\n          this.allBroadcastCategory.splice(index, 1);\n          this.totalItems = this.allBroadcastCategory.length;\n          this.isDataLoaded = true;\n          this.sharedService.setUnitListDeleteIndex(null);\n        }, error => {\n          console.log(error);\n        });\n      }\n    });\n  }\n\n  showConfirmModal(index) {\n    this.modalService.showConfirmModal(index);\n  }\n\n  //Update Data\n  updateData(data){\n    this.category = data;\n    this.isEdit = true;\n  }\n\n  //Get Category Type\n  getAllCategory(){\n    \n    let params = {\n      apartmentId: this.apartmentId\n    }\n\n    this.broadcastService.getBroadCastMessageCategories(params).subscribe((res:any) => {\n      var allBroadcastCategory = res;\n      //filter active true items\n      this.allBroadcastCategory = allBroadcastCategory.filter(data => {\n        return data.isActive\n      })\n      this.isDataLoaded = true;\n      this.totalItems = this.allBroadcastCategory.length;\n      if(this.totalItems>this.itemLimit){\n        this.ItemEndIndex = this.itemLimit;\n      }\n      else {\n        this.ItemEndIndex = this.totalItems;\n      }\n    })\n  }\n//Cancel\nCancel(){\n  this.category = {};\n  this.isEdit = false;\n}\n  //Insert/Update Category\n  UpsertBroadcastMessageCategory(form){\n\n    let broadcastCategory={\n      \"broadCastMessageCategoryId\": 0,\n      \"apartmentId\": this.apartmentId,\n      \"broadCastMessageCategory1\": this.category.broadCastMessageCategory1,\n      \"template\":  this.category.template,\n      \"comments\": \"string\",\n      \"isActive\": true,\n      \"insertedBy\": this.loginUserId,\n      \"insertedOn\": new Date().toISOString(),\n      \"updatedBy\": null,\n      \"updatedOn\": null,\n      \"serialNo\":0\n    }\n if(this.isEdit){\n      broadcastCategory.broadCastMessageCategoryId= this.category.broadCastMessageCategoryId;\n      broadcastCategory.insertedBy=this.category.insertedBy;\n      broadcastCategory.insertedOn=this.category.insertedOn;\n      broadcastCategory.updatedBy=this.loginUserId;\n      broadcastCategory.updatedOn=new Date().toISOString();\n      broadcastCategory.serialNo=this.category.serialNo;\n    }\n\n    let broadCastMessageCategory = {\n      broadCastMessageCategory: broadcastCategory\n    }\n\n    this.broadcastService.upsertBroadCastMessageCategory(broadCastMessageCategory).subscribe((res:any) => {\n      if(res.message) {\n        if(this.isEdit)\n        {\n          this.sharedService.setAlertMessage(\"Broadcast category updated successfully\");\n        }\n       else{\n        this.sharedService.setAlertMessage(\"Broadcast category added successfully\");\n        }\n        this.getAllCategory();\n        this.category = {};\n        this.isEdit = false;\n      }\n    });\n\n  }\n\n}\n","export default \".broadcastgroup-setup-wrapper #typeCollapseOne li {\\n  background-color: white !important;\\n}\\n.broadcastgroup-setup-wrapper angular2-multiselect {\\n  font-family: \\\"Lato\\\", sans-serif;\\n  font-weight: 400;\\n  letter-spacing: 0.3px;\\n  -webkit-font-smoothing: inherit;\\n  -moz-osx-font-smoothing: inherit;\\n  font-size: 1.2rem !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9hbXMvYnJvYWRjYXN0L2NvbXBvbmVudHMvYnJvYWRjYXN0Z3JvdXAtc2V0dXAvYnJvYWRjYXN0Z3JvdXAtc2V0dXAuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Ftcy9icm9hZGNhc3QvY29tcG9uZW50cy9icm9hZGNhc3Rncm91cC1zZXR1cC9icm9hZGNhc3Rncm91cC1zZXR1cC5jb21wb25lbnQuc2NzcyIsIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL3Njc3MvZm9udHMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJRztFQUNLLGtDQUFBO0FDSFI7QURLSTtFRXNERiwrQkFBQTtFQUNBLGdCQUFBO0VBQ0EscUJBQUE7RUFDQSwrQkFBQTtFQUNBLGdDQUFBO0VGeERRLDRCQUFBO0FDQ1YiLCJmaWxlIjoic3JjL2FwcC9hbXMvYnJvYWRjYXN0L2NvbXBvbmVudHMvYnJvYWRjYXN0Z3JvdXAtc2V0dXAvYnJvYWRjYXN0Z3JvdXAtc2V0dXAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiLi4vLi4vLi4vLi4vLi4vc2Nzcy9mb250cy5zY3NzXCI7XG5AaW1wb3J0IFwiLi4vLi4vLi4vLi4vLi4vc2Nzcy92YXJpYWJsZXMuc2Nzc1wiO1xuLmJyb2FkY2FzdGdyb3VwLXNldHVwLXdyYXBwZXJ7XG5cbiAgICN0eXBlQ29sbGFwc2VPbmUgbGl7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6d2hpdGUhaW1wb3J0YW50O1xuICAgICAgfVxuICAgIGFuZ3VsYXIyLW11bHRpc2VsZWN0e1xuICAgICAgICBAaW5jbHVkZSAgZGVzcC1yZWd1bGFyO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMS4ycmVtICFpbXBvcnRhbnQ7XG4gICAgXG4gICAgICB9XG59XG5cbiIsIi5icm9hZGNhc3Rncm91cC1zZXR1cC13cmFwcGVyICN0eXBlQ29sbGFwc2VPbmUgbGkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50O1xufVxuLmJyb2FkY2FzdGdyb3VwLXNldHVwLXdyYXBwZXIgYW5ndWxhcjItbXVsdGlzZWxlY3Qge1xuICBmb250LWZhbWlseTogXCJMYXRvXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxldHRlci1zcGFjaW5nOiAwLjNweDtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogaW5oZXJpdDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogMS4ycmVtICFpbXBvcnRhbnQ7XG59IiwiXG5AaW1wb3J0IFwidmFyaWFibGVzXCI7XG5cbkBtaXhpbiBwdWJsaWMtbGlnaHQge1xuICBmb250LWZhbWlseTogJ1BvcHBpbnMnLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogMzAwO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xufVxuXG5AbWl4aW4gcHVibGljLXJlZ3VsYXIge1xuICBmb250LWZhbWlseTogJ1BvcHBpbnMnLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNDAwO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xufVxuXG5AbWl4aW4gcHVibGljLW1lZGl1bSB7XG4gIGZvbnQtZmFtaWx5OiAnUG9wcGlucycsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG59XG5cbkBtaXhpbiBwdWJsaWMtYm9sZCB7XG4gIGZvbnQtZmFtaWx5OiAnUG9wcGlucycsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG59XG5cbkBtaXhpbiBoZWFkLWxpZ2h0IHtcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogaW5oZXJpdDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGluaGVyaXQ7XG59XG5cbkBtaXhpbiBoZWFkLXJlZ3VsYXIge1xuICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsZXR0ZXItc3BhY2luZzogMC4zcHg7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGluaGVyaXQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBpbmhlcml0O1xufVxuXG5AbWl4aW4gaGVhZC1tZWRpdW0ge1xuICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNTAwO1xuICBsZXR0ZXItc3BhY2luZzogMC4ycHg7XG59XG5cbkBtaXhpbiBoZWFkLWJvbGQge1xuICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNjAwO1xuICBsZXR0ZXItc3BhY2luZzogMC4zcHg7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGluaGVyaXQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBpbmhlcml0O1xufVxuXG5AbWl4aW4gZGVzcC1yZWd1bGFyIHtcbiAgZm9udC1mYW1pbHk6ICdMYXRvJywgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuM3B4OyAgIFxuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBpbmhlcml0O1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogaW5oZXJpdDtcbn1cblxuQG1peGluIGRlc3AtbWVkaXVtIHtcbiAgZm9udC1mYW1pbHk6ICdMYXRvJywgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuM3B4O1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbiAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcbn1cblxuQG1peGluIGZ0LWNhbGMoJHBpeGVscykge1xuICBmb250LXNpemU6ICggJHBpeGVscyAvICRmdC1iYXNlICkgKyByZW07XG59XG4iXX0= */\"","import { Component, OnInit, Injector } from '@angular/core';\n\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BroadcastService } from 'src/app/api/controllers/broadcast';\nimport { UserService } from 'src/app/api/controllers/user';\nimport { ApartmentService } from 'src/app/api/controllers/apartment';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-broadcastgroup-setup',\n  templateUrl: './broadcastgroup-setup.component.html',\n  styleUrls: ['./broadcastgroup-setup.component.scss']\n})\nexport class BroadcastgroupSetupComponent implements OnInit {\n groupCategoryUser:any[];\n \n \n allApartmentBlockList:any;\n  apartmentBlockId: number;\n  isLiving?:boolean=null;\n  isPrimaryContact?:boolean=null;\n  isDataLoaded:boolean = false;\n  apartmentID:number;\n  selectdedRole:number;\n  bcData:string = \"\";\n  modalService:any;\n  allRoleTypesList:any;\n  allApartmentRolesList:any;\n  allUsers:any;\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = false;\n  roleType:number;\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 20;\n  totalFilterItems:any;\n  privilageCategory={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n\n  };\n  groupCategory:any;\n  isEdit:boolean = false;\n\n  //Get all work type\n  allBroadcastGroupCategory:any;\n  userId:any;\n  errorMessage:string = \"\";\n  isError:boolean = false;\n  dropdownSettings={};\n  editorPlacehorder;string = \"\";\n\n  constructor(\n    private injector: Injector,\n    public dialog: MatDialog,\n  \tprivate broadcastService: BroadcastService,\n    private sharedService:SharedService,\n    private cookieService:CookieService,\n    private userService:UserService,\n    private apartmentService:ApartmentService\n  ) {\n    this.modalService = this.injector.get(ModalService);\n   }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'desc' : 'asc';\n    }\n    else return '';\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  onContentChanged(event){\n    \n  }\n\n  ngOnInit() {\n    this.groupCategory = {};\n    this.apartmentID= parseInt(this.cookieService.get('apartmentId'));\n    this.userId= parseInt(this.cookieService.get('userId'))\n    //this.getParentCategoryList();\n    this.getAllGroupCategory();\n    this.getAllApartmentBlockList();\n    this.getAllRoleTypesList();\n    this.dropdownSettings={\n      singleSelection: false,\n      labelKey: 'name',\n      primaryKey: 'value',\n      enableFilterSelectAll: false,\n      autoPosition: false\n    };\n    ///delete category\n    this.sharedService.unitlistdeleteindexcast.subscribe( index => {\n      if(index != null){\n        var params = {\n          broadCastGroupCategoryId: this.allBroadcastGroupCategory[index].broadCastGroupCategoryId,\n          deleteBy:this.userId\n        }\n        this.isDataLoaded = false;\n        this.broadcastService.deleteBroadCastGroupCategory(params).subscribe((res:any) => {\n          this.allBroadcastGroupCategory.splice(index, 1);\n          this.totalItems = this.allBroadcastGroupCategory.length;\n          this.isDataLoaded = true;\n          this.sharedService.setUnitListDeleteIndex(null);\n        }, error => {\n          console.log(error);\n        });\n      }\n    });\n\n    this.privilageCategory.dropdownList=[{\"name\":\"All\",\"value\":1},\n    {\"name\":\"Admin\",\"value\":2}];\n  }\n  \n  getAllRoleTypesList(){\n    this.userService.getAllRoleTypes().subscribe((res:any) => {\n     this.allRoleTypesList= res;\n\n  });\n}\ngetAllApartmentBlockList(){\n\n  let params = {\n    apartmentId: this.apartmentID\n  }\n\n  this.apartmentService.getApartmentBlockByApartmentId(params).subscribe((res:any) => {\n   this.allApartmentBlockList= res;\n\n});\n}\n\n\n\n\ngetAppartmentRole(){\n  var params={\n    RoleTypeId: this.roleType,\n    ApartmentId: this.apartmentID\n  }\n  this.userService.getApartmentRolesByRoleTypeId(params).subscribe((res:any) => {\n   this.allApartmentRolesList= res;\n\n});\n}\n\n  getParent(parentId){\n\n  }\n  showConfirmModal(index) {\n    this.modalService.showConfirmModal(index);\n  }\n\n  //Update Data\n  updateData(data){\n    let privilegeArr=data.privilege.split(',');\n    this.privilageCategory.selectedItems=this.privilageCategory.dropdownList.filter(function(obj){\n     return privilegeArr.includes(obj.name);\n    });\n    this.groupCategory = data;\n    this.isEdit = true;\n  }\n\n  //Get Category Type\n  getAllGroupCategory(){\n\n    let params = {\n      apartmentId: this.apartmentID\n    }\n\n    this.broadcastService.getAllBroadCastGroupCategory(params).subscribe((res:any) => {\n      var allBroadcastGroupCategory = res;\n     \n      //filter active true items\n      this.allBroadcastGroupCategory = allBroadcastGroupCategory.filter(data => {\n        return data.isActive\n      });\n      \n      this.isDataLoaded = true;\n      this.totalItems = this.allBroadcastGroupCategory.length;\n      if(this.totalItems>this.itemLimit){\n        this.ItemEndIndex = this.itemLimit;\n      }\n      else {\n        this.ItemEndIndex = this.totalItems;\n      }\n    })\n  }\n\n  //Submit Category\n  submitcreateBroadcastGroupCategoryForm(form){\n\n    let privileges=Array.prototype.map.call(this.privilageCategory.selectedItems,function(item){ return item.name}).join(\",\");\n    let broadcastGroupCategory={\n      \"broadCastGroupCategoryId\": 0,\n      \"apartmentId\": this.apartmentID,\n      \"groupName\": this.groupCategory.groupName,\n      \"description\": this.groupCategory.description,\n      \"privilege\":privileges,\n      \"isActive\": true,\n      \"insertedBy\":this.userId,\n      \"insertedOn\": new Date().toISOString(),\n      \"updatedBy\": null,\n      \"updatedOn\": null,\n      \"serialNo\":0\n    }\n    if(this.isEdit){\n      broadcastGroupCategory.broadCastGroupCategoryId=this.groupCategory.broadCastGroupCategoryId\n      broadcastGroupCategory.insertedBy= this.groupCategory.insertedBy;\n      broadcastGroupCategory.insertedOn= this.groupCategory.insertedOn;\n      broadcastGroupCategory.updatedBy=this.userId;\n      broadcastGroupCategory.updatedOn=new Date().toISOString();\n      broadcastGroupCategory.serialNo= this.groupCategory.serialNo;\n      }\n\n    let params = {\n      broadcast: broadcastGroupCategory\n    }\n\n    this.broadcastService.addBroadCastGroupCategory(params).subscribe((res:any) => {\n      if(res.message) {\n        if(this.isEdit)\n        {\n          this.sharedService.setAlertMessage(\"Broadcast category updated successfully\");\n        }else{\n          this.sharedService.setAlertMessage(\"Broadcast Group category added successfully\");\n        }\n        this.getAllGroupCategory();\n        this.groupCategory = {};\n        this.privilageCategory.selectedItems=[];\n      }\n    });\n\n  }\n//Cancel\nCancel(){\n  this.groupCategory = {};\n  this.isEdit = false;\n}\n}\n"]}