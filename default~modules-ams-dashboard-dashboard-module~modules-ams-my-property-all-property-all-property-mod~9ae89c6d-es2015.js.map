{"version":3,"sources":["./src/app/api/controllers/DashBoard.ts"],"names":[],"mappings":"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","file":"default~modules-ams-dashboard-dashboard-module~modules-ams-my-property-all-property-all-property-mod~9ae89c6d-es2015.js","sourcesContent":["/* tslint:disable:max-line-length */\n/**\n * v1\n * AMS API\n * undefined\n */\n\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nexport interface GetDashTotalunitsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashTotalTowersbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashTotalownersbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashTotalTenantsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashTotalAdminsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashTotalStaffbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashUnapprovedUsersPendingAdminbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashUnapprovedUsersPendingusersbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashOpencommticketsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashOpenpersonalticketsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashHighpriorityopenpersonalTicketsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashHighpriorityopenCommunityTicketsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashOpenPersonalAgedTicketsbyApartmentIDbyDaysParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  date?: string;\n  /** format: int32 */\n  noOfDays?: number;\n}\n\nexport interface GetDashOpenCommunityAgedTicketsbyApartmentIDbyDaysParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  date?: string;\n  /** format: int32 */\n  noOfDays?: number;\n}\n\nexport interface GetDashUnassignedpersonalTicketsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n}\n\nexport interface GetDashUnassignedCommunityTicketsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n}\n\nexport interface GetDashinProgressPanicAlertsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n}\n\nexport interface GetDashOpenPanicAlertsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n}\n\nexport interface GetDashVisitorsCheckedinbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  startDate?: string;\n  /** format: date-time */\n  EndDate?: string;\n}\n\nexport interface GetDashVisitorsCheckedouttodaybyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashVisitorsNotcheckedtodaybyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashunapprovedmoveinbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  date?: string;\n}\n\nexport interface GetDashunapprovedmoveoutbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  date?: string;\n}\n\nexport interface GetDashupcomingmoveinApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashupcomingmoveoutApprovedbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashuptotalparkingslotsbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashuptotalparkingslotsunassignedbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashufacilitybookingunapprovedbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashufacilitybookingapprovedtodaybyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashlistupcomingmeetingbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashlistBroadcastsentbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetDashTotalamtbilledcustomersthismonthbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashTotalamtreceivedcustomersthismonthbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashpaymentdefaultersasoftodayybyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashcreditnoteappliedbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashWPapprovalpendingbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetDashWPupcomingbyApartmentIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetUDashVehiclecountbyblockunituserParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockunituserId?: number;\n}\n\nexport interface GetUDashTotalpetstbyblockunituserParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockunituserId?: number;\n}\n\nexport interface GetUDashPrivateStaffbyblockunituserParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockunituserId?: number;\n}\n\nexport interface GetUDashOpenticektsbyblockunituserParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockunituserId?: number;\n}\n\nexport interface GetUDashOpenticektsbyblockunituserTicketpriorityParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockunituserId?: number;\n  /** format: int32 */\n  priority?: number;\n}\n\nexport interface GetUDashVisitorcheckedinbyblockunituserParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockUnitId?: number;\n  /** format: date-time */\n  startDate?: string;\n  /** format: date-time */\n  EndDate?: string;\n  /** format: int32 */\n  blockUnitUserId?: number;\n}\n\nexport interface GetUDashVisitorNoTcheckeddoubyblockunitIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockUnitId?: number;\n  /** format: int32 */\n  blockUnitUserId?: number;\n}\n\nexport interface GetUDashTotalparkingbyblockunitIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockUnitId?: number;\n  /** format: int32 */\n  blockUnitUserId?: number;\n}\n\nexport interface GetUDapprovedfacilittbookingbyblockunitIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockUnitUserID?: number;\n}\n\nexport interface GetUDashWaterunitsbyblockunitIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockUnitUserID?: number;\n  /** format: int32 */\n  BlockUnitId?: number;\n}\n\nexport interface GetUDashCurrentViolationsbyblockunituserIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockUnitUserID?: number;\n  /** format: int32 */\n  BlockUnitId?: number;\n  /** format: date-time */\n  fromDate?: string;\n  /** format: date-time */\n  toDate?: string;\n}\n\nexport interface GetUDashActiveWorkpermitbyblockunituserIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  blockUnitUserID?: number;\n  /** format: int32 */\n  BlockUnitId?: number;\n}\n\nexport interface GetVehicleNumberbyStaffIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  staffId?: number;\n}\n\nexport interface GetTicketsassignedtouserbyUserIdParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  UserID?: number;\n  /** format: int32 */\n  TicketType?: number;\n  /** format: int32 */\n  Priority?: number;\n}\n\nexport interface GetassetsownedParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  staffId?: number;\n}\n\nexport interface GetAssetsassignedformaintenanceParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetLowinventorystockParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  staffId?: number;\n}\n\nexport interface GetfacilityeventstodayParams {\n  /** format: int32 */\n  apartmentId?: number;\n}\n\nexport interface GetStaffSalaryParams {\n  /** format: int32 */\n  apartmentId?: number;\n  /** format: int32 */\n  staffId?: number;\n}\n\n@Injectable()\nexport class DashBoardService {\n  constructor(private http: HttpClient) {}\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashTotalunitsbyApartmentID */\n  getDashTotalunitsbyApartmentId(params: GetDashTotalunitsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashTotalunitsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashTotalTowersbyApartmentID */\n  getDashTotalTowersbyApartmentId(params: GetDashTotalTowersbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashTotalTowersbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashTotalownersbyApartmentID */\n  getDashTotalownersbyApartmentId(params: GetDashTotalownersbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashTotalownersbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashTotalTenantsbyApartmentID */\n  getDashTotalTenantsbyApartmentId(params: GetDashTotalTenantsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashTotalTenantsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashTotalAdminsbyApartmentID */\n  getDashTotalAdminsbyApartmentId(params: GetDashTotalAdminsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashTotalAdminsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashTotalStaffbyApartmentID */\n  getDashTotalStaffbyApartmentId(params: GetDashTotalStaffbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashTotalStaffbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashUnapprovedUsersPendingAdminbyApartmentID */\n  getDashUnapprovedUsersPendingAdminbyApartmentId(params: GetDashUnapprovedUsersPendingAdminbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashUnapprovedUsersPendingAdminbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashUnapprovedUsersPendingusersbyApartmentID */\n  getDashUnapprovedUsersPendingusersbyApartmentId(params: GetDashUnapprovedUsersPendingusersbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashUnapprovedUsersPendingusersbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashOpencommticketsbyApartmentID */\n  getDashOpencommticketsbyApartmentId(params: GetDashOpencommticketsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashOpencommticketsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashOpenpersonalticketsbyApartmentID */\n  getDashOpenpersonalticketsbyApartmentId(params: GetDashOpenpersonalticketsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashOpenpersonalticketsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashHighpriorityopenpersonalTicketsbyApartmentID */\n  getDashHighpriorityopenpersonalTicketsbyApartmentId(params: GetDashHighpriorityopenpersonalTicketsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashHighpriorityopenpersonalTicketsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashHighpriorityopenCommunityTicketsbyApartmentID */\n  getDashHighpriorityopenCommunityTicketsbyApartmentId(params: GetDashHighpriorityopenCommunityTicketsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashHighpriorityopenCommunityTicketsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashOpenPersonalAgedTicketsbyApartmentIDbyDays */\n  getDashOpenPersonalAgedTicketsbyApartmentIDbyDays(params: GetDashOpenPersonalAgedTicketsbyApartmentIDbyDaysParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      date: params.date,\n      noOfDays: params.noOfDays,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashOpenPersonalAgedTicketsbyApartmentIDbyDays`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashOpenCommunityAgedTicketsbyApartmentIDbyDays */\n  getDashOpenCommunityAgedTicketsbyApartmentIDbyDays(params: GetDashOpenCommunityAgedTicketsbyApartmentIDbyDaysParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      date: params.date,\n      noOfDays: params.noOfDays,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashOpenCommunityAgedTicketsbyApartmentIDbyDays`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashUnassignedpersonalTicketsbyApartmentID */\n  getDashUnassignedpersonalTicketsbyApartmentId(params: GetDashUnassignedpersonalTicketsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashUnassignedpersonalTicketsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashUnassignedCommunityTicketsbyApartmentID */\n  getDashUnassignedCommunityTicketsbyApartmentId(params: GetDashUnassignedCommunityTicketsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashUnassignedCommunityTicketsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashinProgressPanicAlertsbyApartmentID */\n  getDashinProgressPanicAlertsbyApartmentId(params: GetDashinProgressPanicAlertsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashinProgressPanicAlertsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashOpenPanicAlertsbyApartmentID */\n  getDashOpenPanicAlertsbyApartmentId(params: GetDashOpenPanicAlertsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashOpenPanicAlertsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashVisitorsCheckedinbyApartmentID */\n  getDashVisitorsCheckedinbyApartmentId(params: GetDashVisitorsCheckedinbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      startDate: params.startDate,\n      EndDate: params.EndDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashVisitorsCheckedinbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashVisitorsCheckedouttodaybyApartmentID */\n  getDashVisitorsCheckedouttodaybyApartmentId(params: GetDashVisitorsCheckedouttodaybyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashVisitorsCheckedouttodaybyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashVisitorsNotcheckedtodaybyApartmentID */\n  getDashVisitorsNotcheckedtodaybyApartmentId(params: GetDashVisitorsNotcheckedtodaybyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashVisitorsNotcheckedtodaybyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashunapprovedmoveinbyApartmentID */\n  getDashunapprovedmoveinbyApartmentId(params: GetDashunapprovedmoveinbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      date: params.date,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashunapprovedmoveinbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashunapprovedmoveoutbyApartmentID */\n  getDashunapprovedmoveoutbyApartmentId(params: GetDashunapprovedmoveoutbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      date: params.date,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashunapprovedmoveoutbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashupcomingmoveinApartmentID */\n  getDashupcomingmoveinApartmentId(params: GetDashupcomingmoveinApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashupcomingmoveinApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashupcomingmoveoutApprovedbyApartmentID */\n  getDashupcomingmoveoutApprovedbyApartmentId(params: GetDashupcomingmoveoutApprovedbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashupcomingmoveoutApprovedbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashuptotalparkingslotsbyApartmentID */\n  getDashuptotalparkingslotsbyApartmentId(params: GetDashuptotalparkingslotsbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashuptotalparkingslotsbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashuptotalparkingslotsunassignedbyApartmentID */\n  getDashuptotalparkingslotsunassignedbyApartmentId(params: GetDashuptotalparkingslotsunassignedbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashuptotalparkingslotsunassignedbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashufacilitybookingunapprovedbyApartmentID */\n  getDashufacilitybookingunapprovedbyApartmentId(params: GetDashufacilitybookingunapprovedbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashufacilitybookingunapprovedbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashufacilitybookingapprovedtodaybyApartmentID */\n  getDashufacilitybookingapprovedtodaybyApartmentId(params: GetDashufacilitybookingapprovedtodaybyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashufacilitybookingapprovedtodaybyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashlistupcomingmeetingbyApartmentID */\n  getDashlistupcomingmeetingbyApartmentId(params: GetDashlistupcomingmeetingbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashlistupcomingmeetingbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashlistBroadcastsentbyApartmentID */\n  getDashlistBroadcastsentbyApartmentId(params: GetDashlistBroadcastsentbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashlistBroadcastsentbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashTotalamtbilledcustomersthismonthbyApartmentID */\n  getDashTotalamtbilledcustomersthismonthbyApartmentId(params: GetDashTotalamtbilledcustomersthismonthbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashTotalamtbilledcustomersthismonthbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashTotalamtreceivedcustomersthismonthbyApartmentID */\n  getDashTotalamtreceivedcustomersthismonthbyApartmentId(params: GetDashTotalamtreceivedcustomersthismonthbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashTotalamtreceivedcustomersthismonthbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashpaymentdefaultersasoftodayybyApartmentID */\n  getDashpaymentdefaultersasoftodayybyApartmentId(params: GetDashpaymentdefaultersasoftodayybyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashpaymentdefaultersasoftodayybyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashcreditnoteappliedbyApartmentID */\n  getDashcreditnoteappliedbyApartmentId(params: GetDashcreditnoteappliedbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashcreditnoteappliedbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashWPapprovalpendingbyApartmentID */\n  getDashWPapprovalpendingbyApartmentId(params: GetDashWPapprovalpendingbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashWPapprovalpendingbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetDashWPupcomingbyApartmentID */\n  getDashWPupcomingbyApartmentId(params: GetDashWPupcomingbyApartmentIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetDashWPupcomingbyApartmentID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/getUDashVehiclecountbyblockunituser */\n  getUDashVehiclecountbyblockunituser(params: GetUDashVehiclecountbyblockunituserParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockunituserId: params.blockunituserId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/getUDashVehiclecountbyblockunituser`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashTotalpetstbyblockunituser */\n  getUDashTotalpetstbyblockunituser(params: GetUDashTotalpetstbyblockunituserParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockunituserId: params.blockunituserId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashTotalpetstbyblockunituser`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashPrivateStaffbyblockunituser */\n  getUDashPrivateStaffbyblockunituser(params: GetUDashPrivateStaffbyblockunituserParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockunituserId: params.blockunituserId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashPrivateStaffbyblockunituser`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashOpenticektsbyblockunituser */\n  getUDashOpenticektsbyblockunituser(params: GetUDashOpenticektsbyblockunituserParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockunituserId: params.blockunituserId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashOpenticektsbyblockunituser`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashOpenticektsbyblockunituserTicketpriority */\n  getUDashOpenticektsbyblockunituserTicketpriority(params: GetUDashOpenticektsbyblockunituserTicketpriorityParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockunituserId: params.blockunituserId,\n      priority: params.priority,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashOpenticektsbyblockunituserTicketpriority`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashVisitorcheckedinbyblockunituser */\n  getUDashVisitorcheckedinbyblockunituser(params: GetUDashVisitorcheckedinbyblockunituserParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockUnitId: params.blockUnitId,\n      startDate: params.startDate,\n      EndDate: params.EndDate,\n      blockUnitUserId: params.blockUnitUserId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashVisitorcheckedinbyblockunituser`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashVisitorNOTcheckeddoubyblockunitID */\n  getUDashVisitorNoTcheckeddoubyblockunitId(params: GetUDashVisitorNoTcheckeddoubyblockunitIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockUnitId: params.blockUnitId,\n      blockUnitUserId: params.blockUnitUserId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashVisitorNOTcheckeddoubyblockunitID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashTotalparkingbyblockunitID */\n  getUDashTotalparkingbyblockunitId(params: GetUDashTotalparkingbyblockunitIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockUnitId: params.blockUnitId,\n      blockUnitUserId: params.blockUnitUserId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashTotalparkingbyblockunitID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDapprovedfacilittbookingbyblockunitID */\n  getUDapprovedfacilittbookingbyblockunitId(params: GetUDapprovedfacilittbookingbyblockunitIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockUnitUserID: params.blockUnitUserID,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDapprovedfacilittbookingbyblockunitID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashWaterunitsbyblockunitID */\n  getUDashWaterunitsbyblockunitId(params: GetUDashWaterunitsbyblockunitIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockUnitUserID: params.blockUnitUserID,\n      BlockUnitId: params.BlockUnitId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashWaterunitsbyblockunitID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashCurrentViolationsbyblockunituserID */\n  getUDashCurrentViolationsbyblockunituserId(params: GetUDashCurrentViolationsbyblockunituserIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockUnitUserID: params.blockUnitUserID,\n      BlockUnitId: params.BlockUnitId,\n      fromDate: params.fromDate,\n      toDate: params.toDate,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashCurrentViolationsbyblockunituserID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetUDashActiveWorkpermitbyblockunituserID */\n  getUDashActiveWorkpermitbyblockunituserId(params: GetUDashActiveWorkpermitbyblockunituserIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      blockUnitUserID: params.blockUnitUserID,\n      BlockUnitId: params.BlockUnitId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetUDashActiveWorkpermitbyblockunituserID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetVehicleNumberbyStaffID */\n  getVehicleNumberbyStaffId(params: GetVehicleNumberbyStaffIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      staffId: params.staffId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetVehicleNumberbyStaffID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetTicketsassignedtouserbyUserID */\n  getTicketsassignedtouserbyUserId(params: GetTicketsassignedtouserbyUserIdParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      UserID: params.UserID,\n      TicketType: params.TicketType,\n      Priority: params.Priority,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetTicketsassignedtouserbyUserID`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/Getassetsowned */\n  getassetsowned(params: GetassetsownedParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      staffId: params.staffId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/Getassetsowned`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetAssetsassignedformaintenance */\n  getAssetsassignedformaintenance(params: GetAssetsassignedformaintenanceParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetAssetsassignedformaintenance`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetLowinventorystock */\n  getLowinventorystock(params: GetLowinventorystockParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      staffId: params.staffId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetLowinventorystock`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/Getfacilityeventstoday */\n  getfacilityeventstoday(params: GetfacilityeventstodayParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/Getfacilityeventstoday`, {params: queryParams});\n  }\n\n  /** http://undefined/swagger/swagger-ui.html#!/DashBoard/GetStaffSalary */\n  getStaffSalary(params: GetStaffSalaryParams): Observable<void> {\n    const queryParamBase = {\n      apartmentId: params.apartmentId,\n      staffId: params.staffId,\n    };\n\n    let queryParams = new HttpParams();\n    Object.entries(queryParamBase).forEach(([key, value]: [string, any]) => {\n      if (value !== undefined) {\n        if (typeof value === 'string') queryParams = queryParams.set(key, value);\n        else if (Array.isArray(value)) value.forEach(v => queryParams = queryParams.append(key, v));\n        else queryParams = queryParams.set(key, JSON.stringify(value));\n      }\n    });\n\n    return this.http.get<void>(`/api/DashBoard/GetStaffSalary`, {params: queryParams});\n  }\n}\n"],"sourceRoot":"webpack:///"}