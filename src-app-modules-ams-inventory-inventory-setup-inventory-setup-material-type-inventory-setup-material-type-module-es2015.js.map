{"version":3,"sources":["./src/app/modules/ams/inventory/inventory-setup/inventory-setup-material-type/inventory-setup-material-type.component.html","./src/app/modules/ams/inventory/inventory-setup/inventory-setup-material-type/inventory-setup-material-type-routing.module.ts","./src/app/modules/ams/inventory/inventory-setup/inventory-setup-material-type/inventory-setup-material-type.component.scss","./src/app/modules/ams/inventory/inventory-setup/inventory-setup-material-type/inventory-setup-material-type.component.ts","./src/app/modules/ams/inventory/inventory-setup/inventory-setup-material-type/inventory-setup-material-type.module.ts"],"names":[],"mappings":"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","file":"src-app-modules-ams-inventory-inventory-setup-inventory-setup-material-type-inventory-setup-material-type-module-es2015.js","sourcesContent":["export default \"\\n<div class=\\\"inventory-setup-material-type-wrapper\\\">\\n\\n    <app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n\\n    <ng-container *ngIf=\\\"isError\\\">\\n\\n        <!-- Message -->\\n       <condo-message *ngIf=\\\"message\\\" [appearance]=\\\"message.appearance\\\" [showIcon]=\\\"message.showIcon\\\" [type]=\\\"message.type\\\" [@shake]=\\\"message.shake\\\">\\n         {{message.content}}\\n       </condo-message>\\n\\n      </ng-container>\\n\\n    <ng-container *ngIf=\\\"isDataLoaded\\\">\\n\\n        <condo-card>\\n            <div CondoCardHeader>\\n                <div class=\\\"d-flex\\\">\\n                    <div>\\n                        <h4>All Material Type</h4>\\n                        <p class=\\\"text-secondary\\\">{{materialList?.length}} Items</p>\\n                    </div>\\n                    <div class=\\\"ml-auto d-none d-md-block mr-3\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control  \\\" placeholder=\\\"Search...\\\" name=\\\"searchType\\\"\\n                            [(ngModel)]=\\\"searchType\\\">\\n                    </div>\\n                </div>\\n            </div>\\n            <div CondoCardBody>\\n                <form>\\n                    <table class=\\\"table\\\" [ngClass]=\\\"isMobileView()\\\">\\n                        <thead>\\n                            <tr>\\n                                <th scope=\\\"col\\\" (click)=\\\"sortUnitData('lookupValueName')\\\">Material Type Name\\n                                    <span [ngClass]=\\\"getFieldOrderBy('lookupValueName')\\\"></span></th>\\n                                <th scope=\\\"col\\\" (click)=\\\"sortUnitData('description')\\\">Descripition\\n                                    <span [ngClass]=\\\"getFieldOrderBy('description')\\\"></span></th>\\n                                <th scope=\\\"col\\\">Action</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <ng-container>\\n                                <tr class=\\\"create-box-shadow\\\">\\n                                    <td>\\n                                        <div class=\\\"input-box\\\">\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"typeName\\\"\\n                                                [(ngModel)]=\\\"typeRow.lookupValueName\\\">\\n                                        </div>\\n                                    </td>\\n                                    <td>\\n                                        <div class=\\\"input-box\\\">\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"descrip\\\"\\n                                                [(ngModel)]=\\\"typeRow.description\\\">\\n                                        </div>\\n                                    </td>\\n                                    <td>\\n                                        <mat-icon class=\\\"mt-4 p-1\\\" svgIcon=\\\"mat_outline:save\\\"\\n                                            [ngClass]=\\\"!typeRow.lookupValueName || !typeRow.description ?'custom-icon-disabled':''\\\"\\n                                            (click)=\\\"addMaterialType(typeRow)\\\"></mat-icon>\\n                                    </td>\\n                                </tr>\\n                            </ng-container>\\n                            <ng-container\\n                                *ngFor=\\\"let typeList of materialList | simpleSearch: searchType;let materialIndex=index\\\">\\n                                <tr>\\n                                    <td>\\n                                        <span\\n                                            [ngClass]=\\\"currMaterialIndex == materialIndex?'d-none':''\\\">{{typeList.lookupValueName}}</span>\\n    \\n                                        <div class=\\\"input-box\\\" *ngIf=\\\"currMaterialIndex == materialIndex\\\">\\n    \\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lookupValueName\\\"\\n                                                [(ngModel)]=\\\"typeList.lookupValueName\\\">\\n                                        </div>\\n                                    </td>\\n                                    <td>\\n                                        <span [ngClass]=\\\"currMaterialIndex == materialIndex?'d-none':''\\\">\\n                                            {{typeList.description}}\\n                                        </span>\\n    \\n                                        <div class=\\\"input-box\\\" *ngIf=\\\"currMaterialIndex == materialIndex\\\">\\n    \\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"description\\\"\\n                                                [(ngModel)]=\\\"typeList.description\\\">\\n                                        </div>\\n                                    </td>\\n                                    <td>\\n                                        <div class=\\\"d-flex  align-items-center\\\">\\n    \\n                                            <span\\n                                                [ngClass]=\\\"currMaterialIndex == materialIndex?'d-none':''\\\">\\n                                                <mat-icon [svgIcon]=\\\"'feather:edit'\\\" class=\\\"pt-2\\\"\\n                                                    (click)=\\\"currMaterialIndex = materialIndex;setCurrentData(typeList)\\\"></mat-icon>\\n                                            </span>\\n                                            <div class=\\\"pt-3 d-flex\\\">\\n                                                <mat-icon class=\\\"pt-1\\\" svgIcon=\\\"mat_outline:save\\\"\\n                                                    [ngClass]=\\\"!typeList.lookupValueName || !typeList.description ?'custom-icon-disabled':''\\\"\\n                                                    *ngIf=\\\"currMaterialIndex == materialIndex\\\"\\n                                                    (click)=\\\"updateMaterial(typeList)\\\"></mat-icon>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n                                                <mat-icon [svgIcon]=\\\"'close'\\\" class=\\\"pt-1\\\" title=\\\"cancel\\\"\\n                                                    *ngIf=\\\"currMaterialIndex == materialIndex\\\"\\n                                                    (click)=\\\"currMaterialIndex = -1;cancelMaterialType()\\\"></mat-icon>\\n                                            </div>\\n                                            <span\\n                                                [ngClass]=\\\"currMaterialIndex == materialIndex?'d-none':''\\\">\\n                                                <mat-icon [svgIcon]=\\\"'feather:trash'\\\"\\n                                                    class=\\\"pt-2 text-red-900\\\"\\n                                                    (click)=\\\"deleteRow(typeList)\\\"></mat-icon>\\n                                            </span>\\n                                        </div>\\n                                    </td>\\n                                </tr>\\n                            </ng-container>\\n                        </tbody>\\n                    </table>\\n    \\n                </form>\\t\\t\\t\\t\\n    \\n            </div>\\n        </condo-card>\\n\\n    </ng-container>\\n\\n</div>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { InventorySetupMaterialTypeComponent } from './inventory-setup-material-type.component';\n\n\nconst routes: Routes = [ {\n  path: '', component: InventorySetupMaterialTypeComponent\n} ];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InventorySetupMaterialTypeRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL2ludmVudG9yeS9pbnZlbnRvcnktc2V0dXAvaW52ZW50b3J5LXNldHVwLW1hdGVyaWFsLXR5cGUvaW52ZW50b3J5LXNldHVwLW1hdGVyaWFsLXR5cGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, Injector, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n\nimport { PurchaseOrderService } from 'src/app/api/controllers/PurchaseOrder';\nimport { StaffService } from 'src/app/api/controllers/Staff';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { ModalService } from 'src/app/shared/services/modal.service';\n\n@Component({\n  selector: 'app-inventory-setup-material-type',\n  templateUrl: './inventory-setup-material-type.component.html',\n  styleUrls: ['./inventory-setup-material-type.component.scss'],\n\tencapsulation: ViewEncapsulation.None,\n})\nexport class InventorySetupMaterialTypeComponent implements OnInit {\n\n  isDataLoaded:boolean = false;\n  isError:boolean = false;\n\n  ItemStartIndex: any = 0;\n\tItemEndIndex: any;\n\ttotalItems: any;\n\titemLimit: any = 10;\n\n  message: any;\n\n  materialList: any = [];\n\ttempMaterialList:any =[]\n\tdeleteMaterial: boolean;\n\tcurrCatIndex: number;\n\n  typeItemStartIndex: any = 0;\n\ttypeItemEndIndex: any;\n\ttypeTotalItems: any;\n\ttypeItemLimit: any = 10;\n\n  typeRow:any = {};\n  currMaterialIndex:any;\n\n  searchType:string = \"\";\n\n  unitFieldType: string = \"unitno\";\n\tunitOrder: boolean = false;\n\n  backupMaterialType:any = {};\n\n  modalService: any;\n\n  constructor(\n    public dialog: MatDialog,\n    private injector: Injector,\n    private purchaseOrderService: PurchaseOrderService,\n    private staffService: StaffService,\n    private sharedService: SharedService,\n    private lookupService: LookupService,\n    private sessionService: SessionService\n  ) { \n\n    this.modalService = this.injector.get(ModalService);\n\n  }\n\n  isMobileView() {\n\t\treturn window.innerWidth <= 767 ? 'table-responsive' : '';\n\t}\n\n  sortUnitData(type) {\n\t\tthis.unitFieldType = type;\n\t\tthis.unitOrder = !this.unitOrder;\n\t}\n\n  getFieldOrderBy(type) {\n\t\tif (this.unitFieldType == type) {\n\t\t\treturn this.unitOrder ? 'desc' : 'asc';\n\t\t}\n\t\telse return '';\n\t}\n\n  getAllMaterial() {\n\t\tlet queryParamBase: any = {};\n\t\tqueryParamBase = {\n\t\t\tApartmentId: this.sessionService.apartmentId,\n\t\t\tLookupTypeId: 186\n\t\t};\n\t\tthis.isDataLoaded = false;\n\t\tthis.lookupService.getLookupValueByLookupTypeId(queryParamBase).subscribe((res: any) => {\n\t\t\tif (res) {\n\t\t\t\tthis.isDataLoaded = true;\n\t\t\t\tthis.materialList = res ? res.reverse() : [];\n\t\t\t\tthis.tempMaterialList = this.materialList;\n\t\t\t\tthis.typeTotalItems = this.materialList.length;\n\t\t\t\t\n\t\t\t\tif (this.typeTotalItems > this.typeItemLimit) {\n\t\t\t\t\tthis.typeItemEndIndex = this.typeItemLimit;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.typeItemEndIndex = this.typeTotalItems;\n\t\t\t\t}\n\n\t\t\t}\n\t\t});\n\t}\n\taddMaterialType(data) {\n\t\tlet reqObj: any = {};\n\t\treqObj = {\n\t\t\t\"lookupValueId\": 0,\n\t\t\t'apartmentId': this.sessionService.apartmentId,\n\t\t\t\"lookupTypeId\": 186,\n\t\t\t\"lookupValueName\": data.lookupValueName,\n\t\t\t\"description\": data.description,\n\t\t\t\"isActive\": true,\n\t\t    \"insertedBy\": parseInt(this.sessionService.userId),\n\t\t\t\"insertedOn\": new Date(),\n\t\t\t\"updatedBy\": parseInt(this.sessionService.userId),\n\t\t\t\"updatedOn\": new Date(),\n\t\t\t\"isDisabled\": true\n\t\t};\n\t\tthis.isDataLoaded = false;\n\t\tlet param :any ={};\n\t\tparam.lookupvalue =reqObj;\n\t\tthis.lookupService.addLookupValue(param).subscribe((res: any) => {\n\t\t\tif (res.code == 200) {\n\t\t\t\tthis.isDataLoaded = true;\n\t\t\t\tthis.typeRow ={};\n\t\t\t\tthis.getAllMaterial();\n\t\t\t\tthis.sharedService.openSnackBar('Created SuccessFully','success');\n\t\t\t} else {\n\t\t\t\tthis.isDataLoaded = true;\n\t\t\t\tthis.sharedService.openSnackBar(res.responseData.value.errorMessage, 'error');\n\t\t\t}\n\t\t},(error)=>{\n\t\t\tthis.sharedService.openSnackBar('Server Error','error');\n\t\t});\n\t}\n\n\tupdateMaterial(data) {\n\t\tlet reqObj: any = {};\n\t\treqObj = {\n\t\t\t\"lookupValueId\":data.lookupValueId,\n\t\t\t\"lookupTypeId\": 186,\n\t\t\t\"lookupValueName\": data.lookupValueName,\n\t\t\t\"description\": data.description,\n\t\t\t'apartmentId': this.sessionService.apartmentId,\n\t\t\t\"isActive\": true,\n\t\t\t\"insertedBy\": parseInt(this.sessionService.userId),\n\t\t\t\"insertedOn\": new Date(),\n\t\t\t\"updatedBy\": parseInt(this.sessionService.userId),\n\t\t\t\"updatedOn\": new Date(),\n\t\t\t\"isDisabled\": true\n\t\t};\n\t\tthis.isDataLoaded = false;\n\t\tlet param :any ={};\n\t\tparam.lookupvalue =reqObj;\n\t\tthis.lookupService.updateLookupValue(param).subscribe((res: any) => {\n\t\t\tif (res.message) {\n\t\t\t\tthis.isDataLoaded = true;\n\t\t\t\tthis.currMaterialIndex=-1;\n\t\t\t\tthis.sharedService.openSnackBar('Material type updated successfully','success');\n\t\t\t} else {\n\t\t\t\tthis.isDataLoaded = true;\n\t\t\t\tthis.sharedService.openSnackBar(res.errorMessage, 'error');\n\t\t\t}\n\t\t},(error)=>{\n\t\t\tthis.sharedService.openSnackBar('Server Error','error');\n\t\t});\n\t}\n\n  setCurrentData(data) {\n\t\tthis.backupMaterialType  = {...data}\n\t}\n\n  cancelMaterialType() {\n    let index = this.materialList.findIndex((data)=>data.lookupValueId == this.backupMaterialType.lookupValueId);\n\t\tthis.materialList.splice(index,1,this.backupMaterialType);\n  }\n\n  deleteRow(data) {\n\t\tthis.modalService.showConfirmModal(data.warehouseId);\n\t}\n\n\n  ngOnInit(): void {\n\n    this.getAllMaterial();\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nimport { CondoCardModule } from 'src/app/modules/ui/card/card.module';\nimport { SelectModule } from 'src/app/modules/ui/select/select.module';\nimport { ListModule } from 'src/app/modules/ui/list/list.module';\nimport { CondoMessageModule } from 'src/app/modules/ui/message/message.module';\nimport { HelpTooltipModule } from 'src/app/modules/ui/help-tooltip/help-tooltip.module';\n\nimport { InventorySetupMaterialTypeRoutingModule } from './inventory-setup-material-type-routing.module';\nimport { InventorySetupMaterialTypeComponent } from './inventory-setup-material-type.component';\n\n\n@NgModule({\n  declarations: [InventorySetupMaterialTypeComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    CondoCardModule,\n    SelectModule,\n    ListModule,\n    CondoMessageModule,\n    HelpTooltipModule,\n    InventorySetupMaterialTypeRoutingModule\n  ]\n})\nexport class InventorySetupMaterialTypeModule { }\n"],"sourceRoot":"webpack:///"}