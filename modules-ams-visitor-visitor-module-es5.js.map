{"version":3,"sources":["webpack:///src/app/modules/ams/visitor/components/checkin-visitor/checkin-visitor.component.html","webpack:///src/app/modules/ams/visitor/components/visitor-checkin/visitor-checkin.component.html","webpack:///src/app/modules/ams/visitor/components/visitor-checkout/visitor-checkout.component.html","webpack:///src/app/modules/ams/visitor/components/visitor-expected-visitor/visitor-expected-visitor.component.html","webpack:///src/app/modules/ams/visitor/components/visitor-history/visitor-history.component.html","webpack:///src/app/modules/ams/visitor/components/visitor-reports/visitor-reports-data/visitor-reports-data.component.html","webpack:///src/app/modules/ams/visitor/components/visitor-reports/visitor-reports.component.html","webpack:///src/app/modules/ams/visitor/components/visitor-setup/visitor-setup.component.html","webpack:///src/app/modules/ams/visitor/visitor.component.html","webpack:///src/app/modules/ams/visitor/components/checkin-visitor/checkin-visitor.component.scss","webpack:///src/app/modules/ams/visitor/components/checkin-visitor/checkin-visitor.component.ts","webpack:///src/app/modules/ams/visitor/components/visitor-checkin/visitor-checkin.component.scss","webpack:///src/app/modules/ams/visitor/components/visitor-checkin/visitor-checkin.component.ts","webpack:///src/app/modules/ams/visitor/components/visitor-checkout/visitor-checkout.component.scss","webpack:///src/app/modules/ams/visitor/components/visitor-checkout/visitor-checkout.component.ts","webpack:///src/app/modules/ams/visitor/components/visitor-expected-visitor/visitor-expected-visitor.component.scss","webpack:///src/app/modules/ams/visitor/components/visitor-expected-visitor/visitor-expected-visitor.component.ts","webpack:///src/app/modules/ams/visitor/components/visitor-history/visitor-history.component.scss","webpack:///src/app/modules/ams/visitor/components/visitor-history/visitor-history.component.ts","webpack:///src/app/modules/ams/visitor/components/visitor-reports/visitor-reports-data/visitor-reports-data.component.scss","webpack:///src/app/modules/ams/visitor/components/visitor-reports/visitor-reports-data/visitor-reports-data.component.ts","webpack:///src/app/modules/ams/visitor/components/visitor-reports/visitor-reports.component.scss","webpack:///src/app/modules/ams/visitor/components/visitor-reports/visitor-reports.component.ts","webpack:///src/app/modules/ams/visitor/components/visitor-setup/visitor-setup.component.scss","webpack:///src/app/modules/ams/visitor/components/visitor-setup/visitor-setup.component.ts","webpack:///src/app/modules/ams/visitor/visitor-routing.module.ts","webpack:///src/app/modules/ams/visitor/visitor.component.scss","webpack:///src/app/modules/ams/visitor/visitor.component.ts","webpack:///src/app/modules/ams/visitor/visitor.module.ts"],"names":["CheckinVisitorComponent","router","route","userService","apartmentService","visitorService","lookupService","sharedService","sessionService","SharedToaster","isEditVisitor","isVisitorSubmitted","isVisitorAdded","isError","errorMessage","visitTypeId","isExpectedVisitor","isUnitVisitor","iscommunityVisitor","isValidphoneNumber","minDate","Date","format","val","retVal","rex","RegExp","isValid","test","console","log","length","errorDetails","msg","type","setCustomAlertMessage","form","IsvalidatePhoneNo","visitor","expectedVisitorPhone","visitorDetails","apartmentUnitId","apartmentId","expectedVisitorFirstName","expectedVisitorLastName","expectedVisitorCount","toString","passNumber","expectedVisitorInTime","expectedVisitorOutTime","expectedDurationInHours","parseInt","visitCategoryId","purpose","userId","params","addVisitor","subscribe","res","message","setAlertMessage","error","minoutDate","visitParams","ApartmentId","LookupTypeId","getLookupValueByLookupTypeId","visitByData","visitCategoryParams","visitCategoryData","filter","item","isActive","cateogoryParams","getApartmentBlockUnitByUserId","apartmentBlockUnitId","getAllApartmentBlockUnits","blockUnitData","id","result","filterId","lookupValueId","lookupValueName","undefined","openSnackBar","inDate","outDate","diffDuration","diff","expectedDuration","days","isSingleDigit","hours","minutes","sendDuration","asHours","Math","round","digit","selector","template","VisitorCheckinComponent","cookieService","visitorStatus","time","tzoffset","getTimezoneOffset","toISOString","slice","navigate","num","isCheckout","visitorPhone","getDurationInHours","actualInTime","get","expectedVisitorName","getLocalISOTime","insertedBy","insertedOn","visitorOutTime","checkOutVisitor","getVisitorById","visitorIdParam","visitorId","visitorCategoryId","planned_OutTime","visitorInTime","dayDuration","asDays","minOutDate","expectedVisitorIdParam","expectedVisitorId","getExpectedVisitorById","minExOutTime","getDuration","categoryParams","apartmentParams","param","queryParams","skipLocationChange","date1","date2","VisitorCheckoutComponent","injector","dialog","visitorData","isVisitorDataLoaded","unitFieldType","unitOrder","ItemStartIndex","itemLimit","modalService","event","ItemEndIndex","window","innerWidth","index","showConfirmModal","filtergroup","jqx","filter_or_operator","filtervalue","filtercondition","filterData","createfilter","operator","addfilter","datagrid","showfiltercolumnbackground","columnData","forEach","datafield","applyfilters","clearfilters","confirmationMessage","dialogData","dialogRef","open","panelClass","disableClose","data","afterClosed","dialogResult","detail","dataRecord","getrowdata","rowId","navigateByUrl","exportdata","cellsrenderer","row","column","value","columnrenderer","text","width","pinned","renderer","minwidth","getDateTime","cellsalign","align","visitTypeData","getYetToCheckoutVisitorsByApartmentId","visitorListData","block_Unit","block","split","blockNo","blockUnitNo","isCheckedOut","arr","element","a","b","splice","sort","val1","val2","unshift","gridSourceData","localdata","datatype","listData","dataAdapter","totalItems","navigateTo","CustomEvent","dispatchEvent","VisitorExpectedVisitorComponent","selectedInput","columnField","autoPopulateDetails","name","dateTime","new_","date","getExpectedVisitorsByApartmentId","checkVisitTypeData","visitTypeName","toLowerCase","navigateToCheckIn","VisitorHistoryComponent","visitTypeParams","visitListParams","getVisitorsByApartmentId","VisitorReportsDataComponent","pageName","isDataLoaded","blockId","end_date","start_date","isReportSubmitted","ApartmentID","ApartmentBlockID","StartDate","getDate","EndDate","VisitType","getDetails","serviceName","getReportsForVisitorsCheckedInMultiFilter","getReportsForVisitorsCheckedOutnMultiFilter","getReportsForExpectedVisitorsMultiFilter","reportsDataList","reportData","reset","unitBlockParams","getApartmentBlockByApartmentId","unitBlocksData","VisitorReportsComponent","details","MenuName","getLookupValuesByApartmentIdLookupTypeIdMenuName","reportDataList","description","VisitorSetupComponent","isCategoryTypeSubmitted","isMobile","isCategoryTypeNew","isCategoryTypeUpdate","categoryType","categoryUpdateId","alertMessage","setTimeout","elem","document","querySelector","scrollTo","getBoundingClientRect","top","scroll","behavior","updateUserId","deleteLookupvalue","categoryDataList","i","number","lookupvalue","addLookupValue","updateLookupValue","categoryListParams","routes","path","redirectTo","pathMatch","component","VisitorRoutingModule","imports","forChild","exports","VisitorComponent","VisitorModule","declarations","bootstrap"],"mappings":"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","file":"modules-ams-visitor-visitor-module-es5.js","sourcesContent":["export default \"<div class=\\\"checkin-visitor-wrapper\\\">\\n\\t<div class=\\\"main\\\">\\n\\t\\t<div class=\\\" d-flex\\\">\\t\\t\\t\\n\\t\\t\\t<h4 class=\\\"mb-4\\\">\\n\\t\\t\\t\\t<span >Visitor Check-In</span>\\n\\t\\t\\t</h4>\\n\\t\\t</div>\\n\\t<div class=\\\"bg-card showdow \\\">\\n\\t\\t\\n\\t\\t<!-- <div class=\\\"card-body pb-0\\\" [ngClass]=\\\"isError ? 'h-39' : 'h-0 pt-0'\\\"> -->\\n\\t\\t\\t<!-- <app-alert-message [message]=\\\"alertMessage\\\" [isError]=\\\"isError\\\"></app-alert-message> -->\\n\\t\\t<!-- </div> -->\\n\\t\\t<div class=\\\"\\\">\\n            \\n            <app-loader *ngIf=\\\"isVisitorSubmitted\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"!isVisitorSubmitted\\\">\\n\\n\\t\\t\\t\\t<form #addVisitorForm = \\\"ngForm\\\" name=\\\"addVisitorForm\\\" (ngSubmit)=\\\"submitAddVisitorForm(addVisitorForm)\\\"  novalidate>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>First Name<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Name\\\" name=\\\"visitorName\\\" [(ngModel)]=\\\"visitor.expectedVisitorFirstName\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Last Name<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Name\\\" name=\\\"visitorName\\\" [(ngModel)]=\\\"visitor.expectedVisitorLastName\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Visitor Count<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Count\\\" name=\\\"visitorCount\\\" [(ngModel)]=\\\"visitor.expectedVisitorCount\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Phone/Mobile No<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t                    <input type=\\\"number\\\" (blur)=\\\"IsvalidatePhoneNo($event.target.value)\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\" name=\\\"phoneNo\\\" [(ngModel)]=\\\"visitor.expectedVisitorPhone\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Date/Time of visit<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t                    <input class=\\\"form-control\\\" name=\\\"visitorInTime\\\" [owlDateTime]=\\\"visitorInTime\\\" [owlDateTimeTrigger]=\\\"visitorInTime\\\" placeholder=\\\"Date Time\\\" [(ngModel)]=\\\"visitor.expectedVisitorInTime\\\" (ngModelChange)=\\\"expectedDurationChange()\\\" [disabled]=\\\"true\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorInTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorInTime\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon svgIcon=\\\"feather:calendar\\\"></mat-icon>\\n  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Out-time<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t                    <input class=\\\"form-control\\\" name=\\\"visitorOutTime\\\" [owlDateTime]=\\\"visitorOutTime\\\" [min]=\\\"minoutDate\\\" [owlDateTimeTrigger]=\\\"visitorOutTime\\\" placeholder=\\\"Date Time\\\" [(ngModel)]=\\\"visitor.expectedVisitorOutTime\\\" (ngModelChange)=\\\"expectedDurationChange()\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorOutTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorOutTime\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon svgIcon=\\\"feather:calendar\\\"></mat-icon>\\n  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Expected Duration of visit<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t                    <input OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Duration\\\" name=\\\"visitorDuration\\\" [(ngModel)]=\\\"visitor.expectedDuration\\\" [disabled]=\\\"true\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Pass Number<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\" name=\\\"visitorPassNumber\\\" [(ngModel)]=\\\"visitor.passNumber\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Visit Type<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select \\n\\t\\t\\t\\t\\t\\t\\t        name=\\\"visitBy\\\" \\n\\t\\t\\t\\t\\t\\t\\t        id=\\\"visitBy\\\" \\n\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"visitTypeId\\\" (ngModelChange)=\\\"changeVisitorType(visitTypeId)\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of visitByData\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Visit Category<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select \\n\\t\\t\\t\\t\\t\\t\\t        name=\\\"visitByCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\t        id=\\\"visitByCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"visitCategoryId\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of visitCategoryData\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"isUnitVisitor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Tenant block-No<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select \\n\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorblock-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"visitorblock-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.apartmentBlockNumber\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of blockUnitData\\\" [value]=\\\"item.apartmentBlockNumber\\\">{{ item.apartmentBlockNumber }}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"isUnitVisitor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Tenant Unit-No<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t                   \\t<select \\n\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorUnit-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"visitorUnit-No\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.apartmentBlockUnitNumber\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of blockUnitData\\\" [value]=\\\"item.apartmentBlockUnitNumber\\\">{{ item.apartmentBlockUnitNumber }}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"iscommunityVisitor\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Staff Id<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t                    <input type=\\\"text\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Staff-id\\\" name=\\\"staffId\\\" [(ngModel)]=\\\"visitor.staffId\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Reason for visit<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t                    <textarea  type=\\\"text\\\" class=\\\"form-control purpose-box\\\" placeholder=\\\"Enter purpose\\\" name=\\\"visitorpurpose\\\" [(ngModel)]=\\\"visitor.purpose\\\" required></textarea>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline float-right mt-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addVisitorForm.invalid\\\">Check In</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t</ng-container>\\n\\t\\t\\t\\n\\t\\t</div>\\n\\t</div>\\n\\t</div>\\n</div>\";","export default \"<div class=\\\"checkin-visitor-wrapper\\\">\\n    <div class=\\\"main\\\">\\n\\t<div class=\\\"d-flex\\\">\\n\\t\\t<div>\\n\\t\\t\\t<h4>\\n\\t\\t\\t\\t<span *ngIf=\\\"!isCheckout()\\\">Edit Expected Visitor</span>\\n\\t\\t\\t\\t<span *ngIf=\\\"isCheckout()\\\">Visitor Check Out</span>\\n\\t\\t\\t</h4>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"ml-auto\\\">\\n\\t\\t<div *ngIf=\\\"!isCheckout()\\\">\\n\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" (click)=\\\"navigateBack('/ams/visitor/expected-visitor')\\\">Cancel</button>\\n\\t\\t</div>\\n\\t\\t<div *ngIf=\\\"isCheckout()\\\">\\n\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" (click)=\\\"navigateBack('/ams/visitor/checkout')\\\">Cancel</button>\\n\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<condo-card>\\n\\t<div CondoCardHeader [ngClass]=\\\"isError ? 'h-39' : 'h-0 pt-0'\\\">\\n\\t\\t<!-- <app-alert-message [message]=\\\"alertMessage\\\" [isError]=\\\"isError\\\"></app-alert-message> -->\\n\\t</div>\\n\\t<div CondoCardHeader>\\n\\n\\t\\t<!-- <app-alert-message [message]=\\\"errorMessage\\\" [isAlert]=\\\"isError\\\"></app-alert-message> -->\\n\\n\\t\\t<app-loader *ngIf=\\\"isVisitorSubmitted && !isVisitorAdded\\\"></app-loader>\\n\\n\\t\\t<ng-container *ngIf=\\\"!isVisitorSubmitted && !isVisitorAdded\\\">\\n\\n\\t\\t\\t<form #addVisitorForm=\\\"ngForm\\\" name=\\\"addVisitorForm\\\" (ngSubmit)=\\\"submitAddVisitorForm(addVisitorForm)\\\"\\n\\t\\t\\t\\tnovalidate>\\n\\n\\t\\t\\t\\t<div class=\\\"row\\\" *ngIf=\\\"!isCheckout()\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Expected Visitor Name<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Name\\\" name=\\\"visitorName\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.expectedVisitorName\\\" [disabled]=\\\"true\\\" required>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Expected Visitor Count<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Count\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorCount\\\" [(ngModel)]=\\\"visitor.expectedVisitorCount\\\" [disabled]=\\\"true\\\" required>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Expected Phone/Mobile<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" (blur)=\\\"IsvalidatePhoneNo($event.target.value)\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"phoneNo\\\" [(ngModel)]=\\\"visitor.expectedVisitorPhone\\\" [disabled]=\\\"true\\\" required>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Expected Date/Time of Visit<span class=\\\"required\\\">*</span></label>\\n\\n\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"visitorInTime\\\" [owlDateTime]=\\\"visitorInTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[owlDateTimeTrigger]=\\\"visitorInTime\\\" placeholder=\\\"Date Time\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.expectedVisitorInTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[disabled]=\\\"true\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorInTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorInTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Actual Visitor In-time<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t <input class=\\\"form-control\\\" name=\\\"actualVisitorInTime\\\" [owlDateTime]=\\\"actualVisitorInTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[owlDateTimeTrigger]=\\\"actualVisitorInTime\\\" placeholder=\\\"Date Time\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"actualInTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[disabled]=\\\"true\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t<owl-date-time #actualVisitorInTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"actualVisitorInTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Expected Time-out<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"visitorOutTime\\\" [owlDateTime]=\\\"visitorOutTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[owlDateTimeTrigger]=\\\"visitorOutTime\\\" placeholder=\\\"Date Time\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.expectedVisitorOutTime\\\" [min]=\\\"minExOutTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t(ngModelChange)=\\\"expectedDurationChange(actualInTime, visitor.expectedVisitorOutTime)\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorOutTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorOutTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Expected Duration<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<input OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Duration\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorDuration\\\" [(ngModel)]=\\\"expectedDuration\\\" [disabled]=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\trequired>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Pass Number<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorPassNumber\\\" [(ngModel)]=\\\"visitor.passNumber\\\" required>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Expected Visit Type<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<select name=\\\"visitBy\\\" id=\\\"visitBy\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"visitTypeId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t(ngModelChange)=\\\"changeVisitorType(visitTypeId)\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of visitByData\\\" [value]=\\\"item.lookupValueId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Expected Visit Category<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<select name=\\\"visitByCategory\\\" id=\\\"visitByCategory\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitCategoryId\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of visitCategoryData\\\" [value]=\\\"item.lookupValueId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"isUnitVisitor\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Tenant block-No<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<select name=\\\"visitorblock-No\\\" id=\\\"visitorblock-No\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.apartmentBlockNumber\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of blockUnitData\\\" [value]=\\\"item.apartmentBlockNumber\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ item.apartmentBlockNumber }}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"isUnitVisitor\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Tenant Unit-No<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<select name=\\\"visitorUnit-No\\\" id=\\\"visitorUnit-No\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.apartmentBlockUnitNumber\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of blockUnitData\\\" [value]=\\\"item.apartmentBlockUnitNumber\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ item.apartmentBlockUnitNumber }}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"iscommunityVisitor\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Staff Id<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Staff-id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"staffId\\\" [(ngModel)]=\\\"visitor.staffId\\\" required>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Purpose<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<textarea type=\\\"text\\\" class=\\\"form-control purpose-box\\\" placeholder=\\\"Enter purpose\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorpurpose\\\" [(ngModel)]=\\\"visitor.purpose\\\" required></textarea>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"row\\\" *ngIf=\\\"isCheckout()\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Visitor Name<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Name\\\" name=\\\"visitorName\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.visitorName\\\" [disabled]='true' required>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Visitor Count<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Count\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorCount\\\" [(ngModel)]=\\\"visitor.visitorCount\\\" [disabled]='true' required>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Phone/Mobile<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" (blur)=\\\"IsvalidatePhoneNo($event.target.value)\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"phoneNo\\\" [(ngModel)]=\\\"visitor.visitorPhone\\\" [disabled]='true' required>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Visitor In-time<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"visitorInTime\\\" [owlDateTime]=\\\"visitorInTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[owlDateTimeTrigger]=\\\"visitorInTime\\\" [min]=\\\"minDate\\\" [max]=\\\"minDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Date Time\\\" [disabled]=\\\"true\\\" [(ngModel)]=\\\"visitor.visitorInTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[disabled]='true' required>\\n\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorInTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorInTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Planned Out-time<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"plannedOutTime\\\" [owlDateTime]=\\\"plannedOutTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[owlDateTimeTrigger]=\\\"plannedOutTime\\\" [min]=\\\"minOutDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Date Time\\\" [(ngModel)]=\\\"planned_OutTime\\\" [disabled]='true' required>\\n\\t\\t\\t\\t\\t\\t\\t<owl-date-time #plannedOutTime ></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"plannedOutTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Visitor Out-time<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"visitorOutTime\\\" [owlDateTime]=\\\"visitorOutTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[owlDateTimeTrigger]=\\\"visitorOutTime\\\" [min]=\\\"minOutDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Date Time\\\" [(ngModel)]=\\\"visitor.visitorOutTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t(ngModelChange)=\\\"expectedDurationChange(visitor.visitorInTime, visitor.visitorOutTime)\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t<owl-date-time #visitorOutTime ></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"visitorOutTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Expected Duration<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<input OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Duration\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorDuration\\\" [(ngModel)]=\\\"expectedDuration\\\" [disabled]='true' required>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Pass Number<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Number\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"visitorPassNumber\\\" [(ngModel)]=\\\"visitor.passNumber\\\" [disabled]='true'\\n\\t\\t\\t\\t\\t\\t\\t\\trequired>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Visit Type<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<select name=\\\"visitBy\\\" id=\\\"visitBy\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"visitTypeId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[disabled]='true' required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of visitByData\\\" [value]=\\\"item.lookupValueId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Visit Category<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<select name=\\\"visitByCategory\\\" id=\\\"visitByCategory\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitCategoryId\\\" [disabled]='true' required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of visitCategoryData\\\" [value]=\\\"item.lookupValueId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline float-right mt-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" [disabled]=\\\"addVisitorForm.invalid\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t*ngIf=\\\"!isCheckout()\\\">Check In</button>\\n\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" *ngIf=\\\"isCheckout()\\\">Check Out</button>\\n\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t</form>\\n\\n\\t\\t</ng-container>\\n\\t\\n\\t\\t<div class=\\\"message\\\" *ngIf=\\\"isVisitorAdded\\\">\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"icon-wrapper float-left\\\">\\n\\t\\t\\t\\t<i-feather class=\\\"icon float-left\\\" name=\\\"check\\\" width=\\\"20\\\"></i-feather>\\n\\t\\t\\t</div>\\n\\t\\t\\t<h5 class=\\\"float-left\\\" *ngIf=\\\"!isCheckout()\\\">Visitor Checked In successfully!</h5>\\n\\t\\t\\t<h5 class=\\\"float-left\\\" *ngIf=\\\"isCheckout()\\\">Visitor Checked Out successfully!</h5>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"row confirm\\\">\\n\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" (click)=\\\"navigateTo(isCheckout)\\\">Ok</button>\\n\\t\\t</div>\\n\\t\\t</div>\\n\\n\\n\\t</div>\\n\\n</condo-card>\\n</div>\\n</div>\\n\\n\";","export default \"<div class=\\\"app-visitor-checkout-wrapper\\\">\\n\\t\\n\\t<app-loader *ngIf=\\\"!isVisitorDataLoaded\\\"></app-loader>\\n   <div class=\\\"main\\\">\\n\\t<condo-card *ngIf=\\\"isVisitorDataLoaded\\\">\\n\\n\\t\\t<div CondoCardHeader>\\n\\t\\t  <div class=\\\"d-flex\\\">\\n    \\t\\t<div>\\n\\t\\t\\t\\t<h4>All Checked-Out Visitors</h4>\\n\\t\\t\\t\\t<p>{{totalItems}} results</p>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"ml-auto d-none d-md-block mr-3\\\">\\n\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"visitorData\\\" (ngModelChange)=\\\"onGlSearchFilter()\\\">\\n\\t\\t\\t</div>\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<app-print-dropdown (outputParams) =\\\"getPrintParams($event)\\\"></app-print-dropdown>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n  \\t\\t</div>\\n  \\t\\t\\n  \\t <div CondoCardBody>\\n\\t\\t<jqxGrid \\n\\t\\t\\t[theme]=\\\"'material'\\\" \\n\\t\\t\\t[width]=\\\"'100%'\\\"\\n\\t\\t\\t[rowsheight]=\\\"48\\\"\\n\\t\\t\\t[autoheight]=\\\"true\\\"\\n\\t\\t\\t[pageable]=\\\"true\\\" \\n\\t\\t\\t[filterable]=\\\"true\\\" \\n\\t\\t\\t[sortable]=\\\"true\\\" \\n\\t\\t\\t[source]=\\\"listData\\\"\\n\\t\\t\\t[columns]=\\\"columnData\\\"\\n\\t\\t\\t[columnsresize]=\\\"true\\\"\\n\\t\\t\\t[enablehover]=\\\"false\\\"\\n\\t\\t#datagrid>\\n\\t\\t</jqxGrid> \\n\\n  \\t\\t</div>\\n\\n\\t</condo-card>\\n</div>\\n</div>\";","export default \"<div class=\\\"expected-visitor-wrapper\\\">\\n\\t\\n\\t<app-loader *ngIf=\\\"!isVisitorDataLoaded\\\"></app-loader>\\n\\t<div class=\\\"main\\\">\\n\\t<condo-card *ngIf=\\\"isVisitorDataLoaded\\\">\\n\\t<div CondoCardHeader>\\n\\t\\t<div class=\\\"d-flex\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n\\t\\t\\t\\t<h4>All Expected Visitors</h4>\\n\\t\\t\\t\\t<p>{{totalItems}} results</p>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"ml-auto d-none d-md-block mr-3\\\">\\n\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"visitorData\\\" (ngModelChange)=\\\"onGlSearchFilter()\\\">\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"mr-3\\\">\\n\\t\\t\\t\\t<app-print-dropdown (outputParams) =\\\"getPrintParams($event)\\\"></app-print-dropdown>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div>\\n\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" \\n\\t\\t\\t\\t(click)=\\\"navigateToCreate()\\\">Add Expected Visitor</button>\\n\\t\\t\\t</div>\\n\\t\\t  </div>\\n\\t\\t</div>\\n\\t\\t<div CondoCardBody>\\n  \\t\\t\\n\\t\\t\\t<jqxGrid \\n\\t\\t\\t[theme]=\\\"'material'\\\" \\n\\t\\t\\t[width]=\\\"'100%'\\\"\\n\\t\\t\\t[rowsheight]=\\\"48\\\"\\n\\t\\t\\t[autoheight]=\\\"true\\\"\\n\\t\\t\\t[pageable]=\\\"true\\\" \\n\\t\\t\\t[filterable]=\\\"true\\\" \\n\\t\\t\\t[sortable]=\\\"true\\\" \\n\\t\\t\\t[source]=\\\"listData\\\"\\n\\t\\t\\t[columns]=\\\"columnData\\\"\\n\\t\\t\\t[columnsresize]=\\\"true\\\"\\n\\t\\t\\t[enablehover]=\\\"false\\\"\\n\\t\\t#datagrid>\\n\\t\\t</jqxGrid> \\n\\n  \\t\\t</div>\\n\\n\\t</condo-card>\\n\\n</div>\\n</div>\";","export default \"<div class=\\\"visitor-history-wrapper\\\">\\n\\t\\n\\t<app-loader *ngIf=\\\"!isVisitorDataLoaded\\\"></app-loader>\\n\\t<div class=\\\"main\\\">\\n\\t<condo-card *ngIf=\\\"isVisitorDataLoaded\\\">\\n\\n\\t\\t<div CondoCardHeader>\\n\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t<div class=\\\"float-left\\\">\\n\\t\\t\\t\\t\\t<h4>All Checked-Out Visitors</h4>\\n\\t\\t\\t\\t\\t<p>{{totalItems}} results</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"ml-auto d-none d-md-block mr-3\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"visitorData\\\" (ngModelChange)=\\\"onGlSearchFilter()\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t<app-print-dropdown (outputParams) =\\\"getPrintParams($event)\\\"></app-print-dropdown>\\n\\t\\t\\t\\t</div>\\n    \\t\\t</div>\\n  \\t\\t</div>\\n  \\t\\t\\n\\t<div CondoCardBody>\\n  \\t\\t<jqxGrid \\n\\t\\t\\t[theme]=\\\"'material'\\\" \\n\\t\\t\\t[width]=\\\"'100%'\\\"\\n\\t\\t\\t[rowsheight]=\\\"48\\\"\\n\\t\\t\\t[autoheight]=\\\"true\\\"\\n\\t\\t\\t[pageable]=\\\"true\\\" \\n\\t\\t\\t[filterable]=\\\"true\\\" \\n\\t\\t\\t[sortable]=\\\"true\\\" \\n\\t\\t\\t[source]=\\\"listData\\\"\\n\\t\\t\\t[columns]=\\\"columnData\\\"\\n\\t\\t\\t[columnsresize]=\\\"true\\\"\\n\\t\\t\\t[enablehover]=\\\"false\\\"\\n\\t\\t#datagrid>\\n\\t</jqxGrid>\\n  \\t\\t</div>\\n\\n\\t</condo-card>\\n  </div>\\n</div>\";","export default \"<div class=\\\"user-report-data-wrapper\\\">\\n\\t\\n\\t<app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n\\n\\t<ng-container *ngIf=\\\"isDataLoaded\\\">\\n        <div class=\\\"relative-card ml-auto float-right\\\">\\n\\t\\t\\t<div class=\\\"relative-icon\\\">\\n\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" routerLink=\\\"/ams/visitor/reports\\\" \\n\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"icon-wrapper\\\">\\n\\t\\t\\t\\t\\t\\t<img class=\\\"svg\\\" src=\\\"assets/images/book-icon.svg\\\" width=\\\"17\\\">\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<span class=\\\"d-inline-block\\\">All Rreports</span>\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card clear form-group\\\" id=\\\"accordion\\\">\\n            <div class=\\\"card-body p-0\\\">\\n                <ul class=\\\"list-group tabs clear\\\">\\n                <li class=\\\"list-group-item\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#typeCollapseOne\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"typecollapseOne\\\">\\n                    Filter By\\n                </li>\\n                <div id=\\\"typeCollapseOne\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingOne\\\" data-parent=\\\"#accordion\\\">\\n                <div class=\\\"details\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t<form #reportsFilterForm = \\\"ngForm\\\" name=\\\"reportsFilterForm\\\" (ngSubmit)=\\\"submitReportsFilterForm(reportsFilterForm)\\\"  novalidate>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"card-header no-border\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box mb-2\\\">\\n\\t\\t\\t                   <label>Select Block No</label>\\n\\t\\t\\t                    <select \\n\\t\\t\\t\\t\\t\\t\\t        name=\\\"blockId\\\" \\n\\t\\t\\t\\t\\t\\t\\t        id=\\\"blockId\\\" \\n\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"blockId\\\">\\n\\t\\t\\t\\t\\t\\t\\t        <option [ngValue]=\\\"null\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of unitBlocksData\\\" [value]=\\\"item.apartmentBlockId\\\">{{ item.apartmentBlockNumber }}</option>\\n\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t            \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n                        <div class=\\\"col-sm-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>start Date<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"startDate\\\" [owlDateTime]=\\\"startDate\\\" [owlDateTimeTrigger]=\\\"startDate\\\" placeholder=\\\"Date Time\\\" [(ngModel)]=\\\"start_date\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #startDate></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"startDate\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon svgIcon=\\\"feather:calendar\\\"></mat-icon>\\n  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t                \\t\\t</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>End Date<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"endDate\\\" [owlDateTime]=\\\"endDate\\\" [owlDateTimeTrigger]=\\\"endDate\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"end_date\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #endDate></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"endDate\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon svgIcon=\\\"feather:calendar\\\"></mat-icon>\\n  \\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t                \\t\\t</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Visit Type</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<select \\n\\t\\t\\t\\t\\t\\t\\t        name=\\\"visitBy\\\" \\n\\t\\t\\t\\t\\t\\t\\t        id=\\\"visitBy\\\" \\n\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"visitTypeId\\\">\\n\\t\\t\\t\\t\\t\\t\\t        <option [ngValue]=\\\"null\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of visitByData\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n                       \\n\\t\\t\\t\\t\\t</div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"list-inline float-right mt-4\\\">\\n                                <button  class=\\\"btn blue mr-4\\\" [disabled]=\\\"reportsFilterForm.invalid\\\">Apply Filter</button>\\n                                <button class=\\\"btn blue mr-2\\\" type=\\\"button\\\" (click)=\\\"cancel(reportsFilterForm)\\\">Clear Filter</button>\\n                            </div>\\n                        </div>\\n                      </div>\\n\\t\\t\\t\\t</div>\\n                \\n\\t\\t\\t</form>\\n\\n\\t\\t</div>\\n    </div>\\t\\n    </ul>\\n</div>\\n</div>\\n\\n\\t\\t<div class=\\\"card table-card\\\" *ngIf=\\\"isReportSubmitted\\\">\\n\\n\\t\\t\\t<div class=\\\"card-header\\\">\\n\\t    \\t\\t<div class=\\\"float-left\\\">\\n\\t    \\t\\t\\t<h5>{{pageName}} <span class=\\\"badge blue\\\">{{totalItems}}</span></h5>\\n\\t    \\t\\t</div>\\n\\t    \\t\\t<ul class=\\\"list-inline float-right\\\">\\n\\t    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n\\t    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n\\t    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"reportData\\\" (ngModelChange)=\\\"onGlSearchFilter()\\\" >\\n\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t<app-print-dropdown (outputParams) =\\\"getPrintParams($event)\\\"></app-print-dropdown>\\n\\t    \\t\\t</ul>\\n\\t  \\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"card-body p-0\\\">\\n\\t\\t\\t\\t<jqxGrid \\n\\t\\t\\t[theme]=\\\"'material'\\\" \\n\\t\\t\\t[width]=\\\"'100%'\\\"\\n\\t\\t\\t[rowsheight]=\\\"48\\\"\\n\\t\\t\\t[autoheight]=\\\"true\\\"\\n\\t\\t\\t[pageable]=\\\"true\\\" \\n\\t\\t\\t[filterable]=\\\"true\\\" \\n\\t\\t\\t[sortable]=\\\"true\\\" \\n\\t\\t\\t[source]=\\\"listData\\\"\\n\\t\\t\\t[columns]=\\\"columnData\\\"\\n\\t\\t\\t[columnsresize]=\\\"true\\\"\\n\\t\\t\\t[enablehover]=\\\"false\\\"\\n\\t\\t#datagrid>\\n\\t\\t</jqxGrid> \\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\n\\t</ng-container>\\n\\n\\n\\t\\n\\n</div>\\n\";","export default \"<div class=\\\"reports-wrapper\\\">\\n\\n\\t<app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n\\n\\t<ng-container *ngIf=\\\"isDataLoaded\\\">\\n\\n\\t\\t<h5 class=\\\"mb-4\\\">Visitor Management Reports </h5>\\n\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-sm-6 mb-20\\\" *ngFor=\\\"let report of reportDataList\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"card report-card\\\">\\n\\t\\t\\t\\t\\t\\t<a class=\\\"t-no-decor\\\" href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t\\t\\t\\trouterLink = \\\"/ams/visitor/reports/{{report.lookupValueName}}/{{report.lookupValueId}}\\\" \\n\\t\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<h6>{{report.lookupValueName}}</h6>\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>{{report.description}}</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t</ng-container>\\n\\n</div>\";","export default \"<div class=\\\"visitor-setup-wrapper inventory-management-wrapper\\\">\\n\\t\\n\\t<app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n<div class=\\\"main\\\">\\n\\t<!-- <div class=\\\"card table-card mb-30 vehicle-type-table-card\\\" *ngIf=\\\"isDataLoaded\\\"> -->\\n\\t\\t<condo-card>\\n\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<h4>Visitor Categories</h4>\\n\\t\\t\\t\\t\\t\\t<p class=\\\"text-secondary\\\">{{totalItems}} Items</p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"ml-auto d-none d-md-block mr-3\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"categoryData\\\">\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" (click)=\\\"addNewCategoryType()\\\">Add Category</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div CondoCardBody>\\n\\t\\t\\t\\t<table class=\\\"table\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t  <!-- <th scope=\\\"col\\\">Sno <span [ngClass]=\\\"getFieldOrderBy('primayContact')\\\"></span></th> -->\\n\\t\\t\\t\\t\\t\\t  <th scope=\\\"col\\\" (click)=\\\"sortUnitData('lookupValueName')\\\">Visitor Category <span [ngClass]=\\\"getFieldOrderBy('lookupValueName')\\\"></span></th> \\n\\t\\t\\t\\t\\t\\t  <th scope=\\\"col\\\">Action</th>\\n\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let category of categoryDataList | simpleSearch: categoryData | sort : unitFieldType: unitOrder | slice:ItemStartIndex:ItemEndIndex ; let i = index\\\">\\n\\t\\t\\t\\t\\t\\t  <!-- <td>{{category.number}}</td> -->\\n\\t\\t\\t\\t\\t\\t  <td class=\\\"grey\\\">{{category.lookupValueName}}</td> \\n\\t\\t\\t\\t\\t\\t  <td>\\n\\t\\t\\t\\t\\t\\t\\t  <!-- <a href=\\\"javascript:void(0)\\\" class=\\\"mr-2\\\" (click)=\\\"updateCategoryType(category)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-pencil icon edit\\\" title=\\\"Edit\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t\\t\\t  </a> -->\\t\\t\\t\\t\\t\\t\\t  \\n\\t\\t\\t\\t\\t\\t\\t  <a href=\\\"javascript:void(0)\\\"> \\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon [svgIcon]=\\\"'feather:edit'\\\"  class=\\\"pt-2\\\" (click)=\\\"updateCategoryType(category)\\\"></mat-icon>\\n\\t\\t\\t\\t\\t\\t\\t  </a>\\n\\t\\t\\t\\t\\t\\t\\t\\t<span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon [svgIcon]=\\\"'feather:trash-2'\\\"  class=\\\"pt-2 icon delete\\\" (click)=\\\"deleteCategoryType(category)\\\" ></mat-icon>\\n\\t\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t\\t  <!-- <a href=\\\"javascript:void(0)\\\" (click)=\\\"deleteCategoryType(category)\\\"><i class=\\\"fa fa-trash icon delete\\\" title=\\\"Delete\\\" aria-hidden=\\\"true\\\"></i></a> -->\\n\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t<app-pagination *ngIf=\\\"totalItems\\\"\\n\\t\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t\\t\\t</app-pagination>\\n\\t\\t\\t</div>\\n\\t\\t</condo-card>\\n    <div class=\\\"vistor-wrapper mt-4\\\" *ngIf=\\\"isCategoryTypeNew || isCategoryTypeUpdate\\\">\\t\\t\\n\\t\\t<condo-card>\\n\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<h4 *ngIf=\\\"isCategoryTypeNew\\\">Add Visitor Category</h4>\\n\\t\\t\\t\\t\\t\\t<h4 *ngIf=\\\"!isCategoryTypeNew\\\">Update Visitor Category</h4>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"ml-auto d-none d-md-block mr-3\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"float-right\\\" (click)=\\\"removeCategoryTypeBox()\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon del\\\" name=\\\"x\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div CondoCardBody>\\n\\t\\t\\t\\t<app-loader *ngIf=\\\"!isCategoryTypeSubmitted\\\"></app-loader>\\n\\n\\t\\t\\t\\t<ng-container *ngIf=\\\"isCategoryTypeSubmitted\\\">\\n\\t\\n\\t\\t\\t\\t\\t<form #addCategoryTypeForm = \\\"ngForm\\\" name=\\\"addCategoryTypeForm\\\"  (ngSubmit)=\\\"submitCategoryTypeForm(addCategoryTypeForm)\\\"  novalidate>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex mt-4\\\"> \\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Visitor Category*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter text\\\" name=\\\"categoryType\\\" [(ngModel)]=\\\"categoryType\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue at-input\\\" [disabled]=\\\"addCategoryTypeForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</form>\\n\\t\\n\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t</div>\\n\\t\\t\\t</condo-card>\\n    <!-- <div class=\\\"card mb-30 vehicle-type-card\\\" *ngIf=\\\"isCategoryTypeNew || isCategoryTypeUpdate\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h6 *ngIf=\\\"isCategoryTypeNew\\\">Add Visitor Category</h6>\\n    \\t\\t\\t<h6 *ngIf=\\\"!isCategoryTypeNew\\\">Update Visitor Category</h6>\\n    \\t\\t</div>\\n    \\t\\t<div class=\\\"float-right\\\" (click)=\\\"removeCategoryTypeBox()\\\">\\n    \\t\\t\\t<i-feather class=\\\"icon del\\\" name=\\\"x\\\"></i-feather>\\n    \\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card-body\\\">  \\n\\t\\t\\t\\n\\t\\t\\t <app-alert-message [isError]=\\\"isError\\\"></app-alert-message> \\n\\n\\t\\t\\t<app-loader *ngIf=\\\"!isCategoryTypeSubmitted\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"isCategoryTypeSubmitted\\\">\\n\\n\\t\\t\\t\\t<form #addCategoryTypeForm = \\\"ngForm\\\" name=\\\"addCategoryTypeForm\\\"  (ngSubmit)=\\\"submitCategoryTypeForm(addCategoryTypeForm)\\\"  novalidate>\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\"> \\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Visitor Category*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter text\\\" name=\\\"categoryType\\\" [(ngModel)]=\\\"categoryType\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue at-input\\\" [disabled]=\\\"addCategoryTypeForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\n\\t\\t</div>\\n\\n\\t</div> -->\\n</div>\\n</div>\\n\";","export default \"<router-outlet></router-outlet>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3Zpc2l0b3IvY29tcG9uZW50cy9jaGVja2luLXZpc2l0b3IvY2hlY2tpbi12aXNpdG9yLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { UserService } from 'src/app/api/controllers/User';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { VisitorService } from 'src/app/api/controllers/Visitor';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { SharedToasterService } from 'src/app/shared/services/shared-toaster.service';\n\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-checkin-visitor',\n  templateUrl: './checkin-visitor.component.html',\n  styleUrls: ['./checkin-visitor.component.scss']\n})\nexport class CheckinVisitorComponent implements OnInit {\n\n  isEditVisitor:boolean = false;\n  isVisitorSubmitted:boolean = false;\n  isVisitorAdded:boolean = false;\n  isError:boolean = false;\n  errorMessage:string = \"\";\n  visitor:any;\n  visitByData:any;\n  visitTypeId:string = \"\";\n  apartmentUnitId:number;\n  isExpectedVisitor:boolean = false;\n  minDate;\n  minoutDate;\n  isUnitVisitor = false;\n  iscommunityVisitor = false;\n  visitCategoryData;\n  visitCategoryId;\n  blockUnitData: any;\n  isValidphoneNumber:boolean = false;\n\n  constructor(\n  \tprivate router: Router,\n    private route: ActivatedRoute,\n    private userService:UserService,\n    private apartmentService:ApartmentService,\n    private visitorService:VisitorService,\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private sessionService:SessionService,\n    private SharedToaster:SharedToasterService,\n  ) {\n\n    this.minDate = moment(new Date()).format('YYYY-MM-DD');\n   }\n\n   IsvalidatePhoneNo(val):boolean{\n    var retVal = true;\n      var rex =new RegExp(/^[+]?\\d+$/);\n      var isValid = rex.test(val);\n      console.log(val.length);\n      if(val.length>13){\n        retVal = false;\n        var errorDetails = {\n          msg : \"phone no length should be within 13 characters\",\n          type: \"Error\"\n         };\n         this.sharedService.setCustomAlertMessage(errorDetails);\n      }\n      if(!isValid){\n        retVal = false;\n        var errorDetails = {\n          msg : \"Kindly enter proper phoneno\",\n          type: \"Error\"\n         };\n         this.sharedService.setCustomAlertMessage(errorDetails);\n      }\n    return retVal;\n    }\n\n   submitAddVisitorForm(form) {\n\n    if(!this.IsvalidatePhoneNo(this.visitor.expectedVisitorPhone))\n   return true;\n\n  \tthis.isVisitorSubmitted = true;\n    this.isError = false;\n\n        let visitorDetails = {\n      \n          \"apartmentUnitId\": this.apartmentUnitId,\n          \"apartmentId\": this.sessionService.apartmentId,\n          \"visitorName\": this.visitor.expectedVisitorFirstName + ' ' + this.visitor.expectedVisitorLastName,\n          \"visitorCount\": this.visitor.expectedVisitorCount,\n          \"visitorPhone\": this.visitor.expectedVisitorPhone.toString(),\n          \"visitorVehicleTypeId\": 1,\n          \"visitorVehicleNumber\": \"string\",\n          \"visitingPlaceId\": 1,\n          \"passNumber\": this.visitor.passNumber,\n          \"isCheckedIn\": true,\n          \"visitorInTime\": this.visitor.expectedVisitorInTime,\n          \"isCheckedOut\": false,\n          \"visitorOutTime\": this.visitor.expectedVisitorOutTime,\n          \"expectedDuration\": this.visitor.expectedDurationInHours,\n          \"meetingPersonId\": 1,\n          \"meetingPersonName\": \"string\",\n          \"visitTypeId\": parseInt(this.visitTypeId),\n          \"visitorCategoryId\": parseInt(this.visitCategoryId),\n          \"visitorsOrg\": \"string\",\n          \"entryGateId\": null,\n          \"exitGateId\": null,\n          \"purpose\": this.visitor.purpose,\n          \"enteredBy\": parseInt(this.sessionService.userId),\n          \"isActive\": true,\n          \"insertedBy\": parseInt(this.sessionService.userId),\n          \"insertedOn\": \"2019-11-18T17:08:51.188Z\",\n          \"updatedBy\": parseInt(this.sessionService.userId),\n          \"updatedOn\": \"2019-11-18T17:08:51.188Z\",\n          \"expectedVisitorId\": null,\n          \"expectedVisitorInTime\": null,\n          \"expectedVisitorOutTime\": null,\n          \"expectedVisitorDuration\": null\n\n      }\n\n      let params = {\n        visitor: visitorDetails\n      }\n\n        this.visitorService.addVisitor(params).subscribe((res:any) => {\n        \n          if(res.message) {\n            this.sharedService.setAlertMessage(\"Visitor Checked In successfully\");\n            this.visitor = {}\n            this.visitTypeId = null;\n            this.visitCategoryId = null;\n            this.visitor.expectedVisitorInTime = moment(new Date());\n            this.isVisitorSubmitted = false;\n          }\n          else {\n\n            this.isVisitorSubmitted = false;\n            this.isError = true;\n            this.errorMessage = res.errorMessage;\n          }\n\n        },\n        error => {\n          \n          this.isVisitorSubmitted = false;\n          this.isError = true;\n          this.errorMessage = error;\n\n        });\n\n      }\n  \n  ngOnInit() {\n\n    this.minoutDate = new Date();\n    \n    this.visitor = {};\n    \n    let visitParams = {\n      ApartmentId: this.sessionService.apartmentId,\n      LookupTypeId: 15\n    }\n\n       //visit type\n    this.lookupService.getLookupValueByLookupTypeId(visitParams).subscribe((res:any) => {\n          \n      this.visitByData = res;\n\n    },\n    error => {\n      \n    }\n    );\n\n    let visitCategoryParams = {\n      ApartmentId: this.sessionService.apartmentId,\n      LookupTypeId: 100\n    }\n\n    //visit type\n    this.lookupService.getLookupValueByLookupTypeId(visitCategoryParams).subscribe((res:any) => {\n          \n      this.visitCategoryData = res.filter(item => {\n        return item.isActive;\n      });\n\n    },\n    error => {\n      \n    }\n    );\n\n    let cateogoryParams = {\n      userId: parseInt(this.sessionService.userId)\n    }\n\n\tthis.apartmentService.getApartmentBlockUnitByUserId(cateogoryParams).subscribe((res:any) => {\n\n\t\tthis.apartmentUnitId = res[0].apartmentBlockUnitId;\n\n\t},\n\terror => {\n\n\t}\n  );\n  this.visitor.expectedVisitorInTime = moment(new Date());\n  \n  this.apartmentService.getAllApartmentBlockUnits().subscribe((res:any) => {\n\n    this.blockUnitData = res;\n    \n  });\n  }\n\n  changeVisitorType(id){\n    console.log(id);\n    let result = this.visitByData.filter(filterId => id == filterId.lookupValueId);\n    console.log(result);\n    this.isUnitVisitor = (result[0].lookupValueName == 'Unit Visitor') ? true : false;\n    this.iscommunityVisitor  = (result[0].lookupValueName == \"Community Visitor\") ? true : false;\n  }\n\n  expectedDurationChange(){\n    if(this.minDate > moment(this.visitor.expectedVisitorInTime).format('YYYY-MM-DD')){\n      this.visitor.expectedVisitorInTime = undefined;\n      this.SharedToaster.openSnackBar(\"Please Select valid Date\",'');\n      return;\n    }\n    \n    if(this.minDate > moment(this.visitor.expectedVisitorOutTime).format('YYYY-MM-DD')){\n      this.visitor.expectedVisitorOutTime = undefined;\n      this.SharedToaster.openSnackBar(\"Please Select Out-time greater than In-time\",'');\n      return;\n    }\n    console.log(this.visitor.expectedVisitorOutTime);\n    if(this.visitor.expectedVisitorOutTime){\n      if(moment(this.visitor.expectedVisitorInTime).format('YYYY-MM-DD') > moment(this.visitor.expectedVisitorOutTime).format('YYYY-MM-DD')){\n        this.visitor.expectedVisitorOutTime = undefined;\n        this.SharedToaster.openSnackBar(\"Please Select Out-time greater than In-time\",'');\n        return;\n      }\n    }\n    \n    let inDate = moment(this.visitor.expectedVisitorInTime);\n    let outDate = moment(this.visitor.expectedVisitorOutTime);\n    let diffDuration = moment.duration(outDate.diff(inDate));\n    this.visitor.expectedDuration = diffDuration.days()+\" days \"+this.isSingleDigit(diffDuration.hours())+\":\"+ this.isSingleDigit(diffDuration.minutes())+\" hours\";\n\n    let sendDuration = moment.duration(outDate.diff(inDate));\n    let hours = sendDuration.asHours();\n    this.visitor.expectedDurationInHours = Math.round(hours);\n  }\n  isSingleDigit(digit){\n    if(digit <= 0){\n      return '00';\n    }else{\n      return (digit.toString().length > 1) ? digit : '0'+digit;\n    }\n    \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3Zpc2l0b3IvY29tcG9uZW50cy92aXNpdG9yLWNoZWNraW4vdmlzaXRvci1jaGVja2luLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { UserService } from 'src/app/api/controllers/User';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { VisitorService } from 'src/app/api/controllers/Visitor';\nimport { CookieService } from 'ngx-cookie-service';\nimport { SharedToasterService } from 'src/app/shared/services/shared-toaster.service';\n\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-visitor-checkin',\n  templateUrl: './visitor-checkin.component.html',\n  styleUrls: ['./visitor-checkin.component.scss']\n})\nexport class VisitorCheckinComponent implements OnInit {\n\n  isVisitorSubmitted: boolean = true;\n  isVisitorAdded:boolean = false;\n  isError: boolean = false;\n  errorMessage: string = \"\";\n\n  visitor: any;\n\n  visitByData: any;\n  visitTypeId: string = \"\";\n\n  apartmentUnitId: number;\n\n  isExpectedVisitor: boolean = false;\n\n  visitorStatus: string = \"\";\n  minDate;\n  isUnitVisitor = false;\n  iscommunityVisitor = false;\n  visitCategoryData;\n  visitCategoryId;\n  blockUnitData: any;\n  actualInTime: any;\n  actualOutTime: any;\n  actualVisitorCount: any;\n  actualDuration: any;\n  expectedDuration: any;\n  minOutDate: any;\n  minExOutTime: any;\n  isValidphoneNumber:boolean = false;\n  planned_OutTime;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private apartmentService: ApartmentService,\n    private visitorService: VisitorService,\n    private lookupService: LookupService,\n    private sharedService: SharedService,\n    private cookieService: CookieService,\n    private SharedToaster: SharedToasterService,\n  ) {\n\n    this.minDate = moment(new Date()).format('YYYY-MM-DD');\n  }\n\n\n  isCheckout() {\n    return this.visitorStatus == 'checkout' ? true : false;\n  }\n  \n  IsvalidatePhoneNo(val):boolean{\n    var retVal = true;\n      var rex =new RegExp(/^[+]?\\d+$/);\n      var isValid = rex.test(val);\n      console.log(val.length);\n      if(val.length>13){\n        retVal = false;\n        var errorDetails = {\n          msg : \"phone no length should be within 13 characters\",\n          type: \"Error\"\n         };\n         this.sharedService.setCustomAlertMessage(errorDetails);\n      }\n      if(!isValid){\n        retVal = false;\n        var errorDetails = {\n          msg : \"Kindly enter proper phoneno\",\n          type: \"Error\"\n         };\n         this.sharedService.setCustomAlertMessage(errorDetails);\n      }\n    return retVal;\n    }\n\n    getLocalISOTime(time){\n      var tzoffset = (new Date()).getTimezoneOffset() * 60000; //offset in milliseconds\n      return (new Date(time - tzoffset)).toISOString().slice(0, -1);\n    }\n    \n    navigateBack(route){\n      this.router.navigate([route]);\n    }\n\n  submitAddVisitorForm(form) {\n\n    let num = this.isCheckout() ? this.visitor.visitorPhone : this.visitor.expectedVisitorPhone;\n\n    if(!this.IsvalidatePhoneNo(num))\n   return true;\n    \n    this.isVisitorSubmitted = true;\n    this.isError = false;\n\n    if (!this.isCheckout()) {\n      this.visitor.expectedDurationInHours = this.getDurationInHours(this.actualInTime, this.visitor.expectedVisitorOutTime);\n        let visitorDetails = {\n          \"expectedVisitorId\": parseInt(this.route.params['value'].id),\n          \"apartmentUnitId\": this.apartmentUnitId,\n          \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n          \"visitorName\": this.visitor.expectedVisitorName,\n          \"visitorCount\": this.visitor.expectedVisitorCount,\n          \"visitorPhone\": this.visitor.expectedVisitorPhone.toString(),\n          \"visitorVehicleTypeId\": 1,\n          \"visitorVehicleNumber\": \"string\",\n          \"visitingPlaceId\": 1,\n          \"passNumber\": this.visitor.passNumber,\n          \"isCheckedIn\": true,\n          \"visitorInTime\": this.getLocalISOTime(this.actualInTime),\n          \"isCheckedOut\": false,\n          \"visitorOutTime\": this.getLocalISOTime(moment(this.visitor.expectedVisitorOutTime)),\n          \"expectedDuration\": this.visitor.expectedDurationInHours,\n          \"meetingPersonId\": 1,\n          \"meetingPersonName\": \"string\",\n          \"visitTypeId\": parseInt(this.visitTypeId),\n          \"visitorCategoryId\": parseInt(this.visitCategoryId),\n          \"visitorsOrg\": \"string\",\n          \"entryGateId\": null,\n          \"exitGateId\": null,\n          \"purpose\": this.visitor.purpose,\n          \"enteredBy\": parseInt(this.cookieService.get('userId')),\n          \"isActive\": true,\n          \"insertedBy\": this.visitor.insertedBy,\n          \"insertedOn\": this.visitor.insertedOn,\n          \"updatedBy\": parseInt(this.cookieService.get('userId')),\n          \"updatedOn\": this.getLocalISOTime(new Date()),\n          \"expectedVisitorInTime\": this.visitor.expectedVisitorInTime,\n          \"expectedVisitorOutTime\": this.getLocalISOTime(moment(this.visitor.expectedVisitorOutTime)),\n          \"expectedVisitorDuration\": this.visitor.expectedDuration\n    \n      }\n        let params = {\n          visitor: visitorDetails\n        }\n\n      this.visitorService.addVisitor(params).subscribe((res: any) => {\n\n        if (res.message) {\n          this.isVisitorAdded = true;\n          // this.sharedService.setAlertMessage(\"Visitor Checked In successfully\");\n          // this.router.navigate(['/ams/visitor/expected-visitor'])\n        }\n        else {\n\n          this.isVisitorSubmitted = false;\n          this.isVisitorAdded = false;\n          this.isError = true;\n          this.errorMessage = res.errorMessage;\n        }\n\n      },\n        error => {\n\n          this.isVisitorSubmitted = false;\n          this.isVisitorAdded = false;\n          this.isError = true;\n          this.errorMessage = error;\n\n        });\n\n    }\n    else {\n\n      let visitorDetails = {\n        \"visitorId\": parseInt(this.route.params['value'].id),\n        \"checkOutTime\": this.getLocalISOTime(this.visitor.visitorOutTime),\n        \"updatedBy\": parseInt(this.cookieService.get('userId')),\n      }\n      \n      this.visitorService.checkOutVisitor(visitorDetails).subscribe((res: any) => {\n\n        if (res.message) {\n          this.isVisitorAdded = true;\n          // this.sharedService.setAlertMessage(\"Visitor checked out successfully\");\n        }\n        else {\n\n          this.isVisitorSubmitted = false;\n          this.isError = true;\n          this.isVisitorAdded = false;\n          this.errorMessage = res.errorMessage;\n        }\n\n      },\n        error => {\n\n          this.isVisitorSubmitted = false;\n          this.isError = true;\n          this.errorMessage = error;\n          this.isVisitorAdded = false;\n\n        });\n\n    }\n\n  }\n\n  ngOnInit() {\n\n    this.visitor = {};\n\n    if (this.route.params['value'].id != undefined) {\n\n      this.visitorStatus = this.route.params['value'].type;\n\n      if (this.visitorStatus == 'checkout') {\n\n        this.visitorService.getVisitorById(this.route.params['value'].id).subscribe((res: any) => {\n        \n          let visitorIdParam = {\n            visitorId : this.route.params['value'].id\n          }\n  \n          this.visitorService.getVisitorById(visitorIdParam).subscribe((res:any) => {\n            this.visitor = res[0];\n\n          this.visitTypeId = this.visitor.visitTypeId;\n          this.visitCategoryId = this.visitor.visitorCategoryId;\n          this.visitor.purpose = '';\n          this.planned_OutTime = this.visitor.visitorOutTime;\n          this.visitor.visitorOutTime = moment(new Date());\n\n          let inDate = moment(this.visitor.visitorInTime);\n          let outDate = moment(this.visitor.visitorOutTime);\n          let diffDuration = moment.duration(outDate.diff(inDate));\n          let dayDuration = moment.duration(outDate.diff(inDate, 'days'), 'days');\n          this.expectedDuration = dayDuration.asDays() + \" days \" + this.isSingleDigit(diffDuration.hours()) + \":\" + this.isSingleDigit(diffDuration.minutes()) + \" hours\";\n          this.isVisitorSubmitted = false;\n          this.minOutDate = new Date();\n        },\n          error => {\n\n          }\n        );\n        });\n      }\n      else if (this.visitorStatus == 'checkin') {\n        let expectedVisitorIdParam = {\n          expectedVisitorId : this.route.params['value'].id\n        }\n        this.visitorService.getExpectedVisitorById(expectedVisitorIdParam).subscribe((res: any) => {\n\n          this.visitor = res[0];\n          console.log('this.visitor', this.visitor)\n          this.visitor.purpose = '';\n          this.visitTypeId = this.visitor.visitTypeId;\n          this.visitCategoryId = this.visitor.visitorCategoryId;\n          this.actualInTime = moment(new Date());\n          this.isVisitorSubmitted = false;\n          this.minExOutTime = new Date(this.actualInTime);\n          this.expectedDuration = this.getDuration(this.actualInTime, this.visitor.expectedVisitorOutTime);\n          this.visitor.expectedDurationInHours = this.getDurationInHours(this.actualInTime, this.visitor.expectedVisitorOutTime);\n        },\n          error => {\n\n          }\n        );\n\n\n      }\n\n    }\n\n\n    let visitParams = {\n      ApartmentId: parseInt(this.cookieService.get('apartmentId')),\n      LookupTypeId: 15\n    }\n\n    //visit type\n    this.lookupService.getLookupValueByLookupTypeId(visitParams).subscribe((res: any) => {\n\n      this.visitByData = res;\n\n    },\n      error => {\n\n      }\n    );\n    let categoryParams = {\n      ApartmentId: parseInt(this.cookieService.get('apartmentId')),\n      LookupTypeId: 100\n    }    \n    //visit type\n    this.lookupService.getLookupValueByLookupTypeId(categoryParams).subscribe((res: any) => {\n\n      this.visitCategoryData = res.filter(item => {\n        return item.isActive;\n      });\n\n    },\n      error => {\n\n      }\n    );\n    let apartmentParams = {\n      userId: parseInt(this.cookieService.get('userId'))\n    }\n\n    this.apartmentService.getApartmentBlockUnitByUserId(apartmentParams).subscribe((res: any) => {\n\n      this.apartmentUnitId = res[0].apartmentBlockUnitId;\n\n    },\n      error => {\n\n      }\n    );\n    this.visitor.expectedVisitorInTime = moment(new Date());\n    this.visitor.visitorInTime = moment(new Date());\n\n    this.apartmentService.getAllApartmentBlockUnits().subscribe((res: any) => {\n\n      this.blockUnitData = res;\n\n    });\n  }\n\n  navigateTo(param) {\n    if(param){\n      this.router.navigate(['/ams/visitor/checkout'], {queryParams: {'show': 'First'}, skipLocationChange: true});\n    }else{\n      this.router.navigate(['/ams/visitor/expected-visitor']);\n    }\n  }\n\n  changeVisitorType(id) {\n    console.log(id);\n    let result = this.visitByData.filter(filterId => id == filterId.lookupValueId);\n    console.log(result);\n    this.isUnitVisitor = (result[0].lookupValueName == 'Unit Visitor') ? true : false;\n    this.iscommunityVisitor = (result[0].lookupValueName == \"Community Visitor\") ? true : false;\n  }\n\n  expectedDurationChange(date1, date2) {\n    if (this.minDate > moment(date1).format('YYYY-MM-DD')) {\n      this.visitor.expectedVisitorInTime = undefined;\n      this.SharedToaster.openSnackBar(\"Please Select valid Date\", '');\n      return;\n    }\n\n    if (this.minDate > moment(date2).format('YYYY-MM-DD')) {\n      this.visitor.expectedVisitorOutTime = undefined;\n      this.SharedToaster.openSnackBar(\"Please Select Out-time greater than In-time\", '');\n      return;\n    }\n   \n    if (date2) {\n      if (moment(date1).format('YYYY-MM-DD') > moment(date2).format('YYYY-MM-DD')) {\n        this.visitor.expectedVisitorOutTime = undefined;\n        this.SharedToaster.openSnackBar(\"Please Select Out-time greater than In-time\", '');\n        return;\n      }\n    }\n    this.expectedDuration = this.getDuration(date1, date2);\n    this.visitor.expectedDurationInHours = this.getDurationInHours(date1, date2);\n  }\n  getDuration(date1, date2) {\n    let inDate = moment(date1);\n    let outDate = moment(date2);\n    let diffDuration = moment.duration(outDate.diff(inDate));\n    let dayDuration = moment.duration(outDate.diff(inDate, 'days'), 'days');\n    return  dayDuration.asDays() + \" days \" + this.isSingleDigit(diffDuration.hours()) + \":\" + this.isSingleDigit(diffDuration.minutes()) + \" hours\";\n  }\n  getDurationInHours(date1, date2){\n    let inDate = moment(date1);\n    let outDate = moment(date2);\n    let sendDuration = moment.duration(outDate.diff(inDate));\n    let hours = sendDuration.asHours();\n    return Math.round(hours);\n  }\n  isSingleDigit(digit) {\n    if (digit <= 0) {\n      return '00';\n    } else {\n      return (digit.toString().length > 1) ? digit : '0' + digit;\n    }\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3Zpc2l0b3IvY29tcG9uZW50cy92aXNpdG9yLWNoZWNrb3V0L3Zpc2l0b3ItY2hlY2tvdXQuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, Injector, ViewChild, HostListener } from '@angular/core';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { VisitorService } from 'src/app/api/controllers/Visitor';\nimport { ModalService } from 'src/app/shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ConfirmDialogModel, CommonConfirmModalComponent } from 'src/app/shared/components/common-confirm-modal/common-confirm-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport * as _ from 'underscore';\nimport * as moment from 'moment';\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SessionService } from 'src/app/core/session/session.service';\n\n@Component({\n  selector: 'app-visitor-checkout',\n  templateUrl: './visitor-checkout.component.html',\n  styleUrls: ['./visitor-checkout.component.scss']\n})\nexport class VisitorCheckoutComponent implements OnInit {\n\n   visitorData:string = \"\";\n  visitorListData:any;\n\n  isVisitorDataLoaded:boolean = false;\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n\n  visitor:any;\n\n  modalService:any;\n\n  totalFilterItems:any;\n  visitTypeData:any;\n  result: string = '';\n  columnData:any;\n  gridSourceData:any;\n  listData: any;\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private injector: Injector,\n  \tprivate apartmentService:ApartmentService,\n    private visitorService:VisitorService,\n    private lookupService: LookupService,\n    private cookieService: CookieService,\n    public dialog: MatDialog,\n    private sessionService:SessionService\n  ) { \n    this.modalService = this.injector.get(ModalService);\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  getBlockUnit(id){\n\n  \t\n    \n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  showConfirmModal(index) {\n    this.modalService.showConfirmModal(index);\n  }\n\n  getVisitorType(){\n    \n  }\n  \n  onGlSearchFilter() {\n\n    if(this.visitorData != \"\"){\n\n      let filtergroup = new jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = this.visitorData;\n      let filtercondition = 'contains';\n      let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n      filtergroup.operator = 'or';\n      filtergroup.addfilter(filter_or_operator, filterData);\n\n      this.datagrid.showfiltercolumnbackground(false);\n\n      this.columnData.forEach(item => {\n        if(item.datafield != 'Actions') {\n          this.datagrid.addfilter(item.datafield, filtergroup, true);\n        }\n      })\n\n      this.datagrid.applyfilters();\n      \n    }\n    else {\n      this.datagrid.clearfilters();\n    }\n\n  }\n\n   //print button\n  print(){\n\n    const confirmationMessage = `Are you sure, you want to Print?`;\n    const dialogData = new ConfirmDialogModel(\"Confirm Action\", confirmationMessage);\n  \n    const dialogRef = this.dialog.open(CommonConfirmModalComponent, {\n      panelClass: 'material',\n      disableClose: true,\n      data: dialogData\n    });\n  \n    dialogRef.afterClosed().subscribe(dialogResult => {\n      this.result = dialogResult;\n      if(this.result){\n        //code\n      }\n    })\n  }\n\n  @HostListener('window:navigateTo', ['$event.detail'])\n  navigateTo(detail) {\n\n    const message = `Are you sure, you want to Check Out?`;\n\n    const dialogData = new ConfirmDialogModel(\"Confirm Action\", message);\n\n    const dialogRef = this.dialog.open(CommonConfirmModalComponent, {\n      panelClass: 'material',\n      disableClose: true,\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe(dialogResult => {\n      if (dialogResult) {\n   \n    let dataRecord = this.datagrid.getrowdata(detail.rowId);\n    let visitorId = dataRecord.visitorId;\n    this.router.navigateByUrl('/ams/visitor/edit-visitor/' + visitorId + '/checkout');\n      }\n\n  });\n}\n\n  getPrintParams(event){\n    this.datagrid.exportdata(event, 'visitorCheckOutData');\n  }\n\n  getDateTime(val){\n    if(val != ''){\n      return moment(val).format(\"MM/DD/YY hh:mm\")\n    }else{\n      return ''\n    }\n  }\n\n  ngOnInit() {\n\n    \n    var cellsrenderer = (row, column, value) => {\n      return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n    }\n\n    var columnrenderer = (value) => {\n      return '<div style=\"padding: 14px\">' + value + '</div>';\n    }\n\n\n    this.columnData = [{\n         text: 'Id',\n         datafield: 'serialNo',\n         width: 100,\n         pinned: true,\n         cellsrenderer: cellsrenderer,\n         renderer: columnrenderer\n      }, {\n          text: 'Visitor Name',\n          datafield: 'visitorName',\n          width: 100,\n          cellsrenderer: cellsrenderer,\n          renderer: columnrenderer\n      },{\n         text: 'Phone Number',\n         datafield: 'visitorPhone',\n         cellsrenderer: cellsrenderer,\n         minwidth: 80,\n         renderer: columnrenderer\n     }, {\n         text: 'In-time',\n         datafield: 'visitorInTime',\n         cellsrenderer: (row, column, value) => {\n          return '<div class=\"jqx-custom-inner-cell\">'+ this.getDateTime(value) +'</div>'\n        },\n         minwidth: 170,\n         renderer: columnrenderer\n     }, {\n         text: 'Out-time',\n         datafield: 'visitorOutTime',\n         cellsrenderer: (row, column, value) => {\n           console.log('value', value)\n            return '<div class=\"jqx-custom-inner-cell\">'+ this.getDateTime(value) +'</div>'\n     },\n         minwidth: 170,\n         renderer: columnrenderer\n     }, {\n         text: 'Block No',\n         datafield: 'blockNo',\n         cellsrenderer: cellsrenderer,\n         minwidth: 80,\n         renderer: columnrenderer\n     }, {\n         text: 'Unit No',\n         datafield: 'blockUnitNo',\n         cellsrenderer: cellsrenderer,\n         minwidth: 170,\n         renderer: columnrenderer\n     }, {\n        text: 'Pass No',\n        datafield: 'passNumber',\n        cellsrenderer: cellsrenderer,\n        minwidth: 80,\n        renderer: columnrenderer\n     }, {\n        text: 'Visit Type',\n        datafield: 'visitTypeName',\n        cellsrenderer: cellsrenderer,\n        minwidth: 170,\n        renderer: columnrenderer\n     }, {\n         text: 'Action',\n         cellsalign: 'center', \n         align: 'center',\n         width: 120,\n         cellsrenderer: (row: number): string => {\n          return '<div class=\"simple-actions\">'\n          +'<a href=\"javascript:void(0)\" onClick=\"navigateTo('+ row +')\" ><img src=\"assets/images/checkout-icon.svg\" width=\"20\" /> </a>'\n          +'</div>'\n      },\n         renderer: columnrenderer\n     }];\n\n\n    let visitParams = {\n      ApartmentId: this.sessionService.apartmentId,\n      LookupTypeId: 15\n    }\n\n    //get visit type\n    this.lookupService.getLookupValueByLookupTypeId(visitParams).subscribe((res:any) => {\n\n      this.visitTypeData = res;\n\n    },\n    error => {\n      \n    }\n    );\n\n    let apartmentParams = {\n      apartmentId: this.sessionService.apartmentId,\n    }\n\n  \tthis.visitorService.getYetToCheckoutVisitorsByApartmentId(apartmentParams).subscribe((res:any) => {\n\n\t\t//filter active true items\n\n    this.visitorListData = res.filter(item => {\n      if(item.block_Unit && item.block_Unit != null){\n        let block = item.block_Unit.split(' ');\n        item.blockNo = block[0];\n        item.blockUnitNo = block[1];\n        }\n      return item.isActive && !item.isCheckedOut;\n    });\n    let arr = this.visitorListData\n    var element = arr[arr.length - 1];\n    console.log('arr', element);\n    let a;\n    let b = this.route.queryParams.subscribe(params =>{ a =  params['show']});\n    console.log('a', a)\n    if(a == 'First'){\n      this.visitorListData.splice(arr.length -1, 1);\n    }\n\n    this.visitorListData = this.visitorListData.sort((val1, val2)=> {\n      return <any>new Date(val2.visitorOutTime) - <any>new Date(val1.visitorOutTime);\n    });\n\n    \n    if(a == 'First'){\n      this.visitorListData.unshift(element);\n    }\n    \n    this.gridSourceData = {\n      localdata: this.visitorListData,\n      datatype: \"array\"\n    }\n\n    this.listData = new jqx.dataAdapter(this.gridSourceData);\n\n\t\tthis.totalItems = this.visitorListData.length;\n\n\t\tif(this.totalItems>this.itemLimit){\n\t\t\tthis.ItemEndIndex = this.itemLimit;\n\t\t}\n\n\t\telse {\n\t\t\tthis.ItemEndIndex = this.totalItems;\n\t\t}\n\n    this.isVisitorDataLoaded = true;\n    \n    \n    \n\t});\n\n  \t\n\n\n  \t\n\n  }\n\n}\nfunction navigateTo(row){\n  var event = new CustomEvent('navigateTo', {\n    detail: {\n        rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).navigateTo = navigateTo","export default \".customScroll {\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  cursor: pointer;\\n}\\n.customScroll table thead th {\\n  overflow: hidden !important;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9hbXMvdmlzaXRvci9jb21wb25lbnRzL3Zpc2l0b3ItZXhwZWN0ZWQtdmlzaXRvci92aXNpdG9yLWV4cGVjdGVkLXZpc2l0b3IuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSx5QkFBQTtLQUFBLHNCQUFBO01BQUEscUJBQUE7VUFBQSxpQkFBQTtFQUNBLGVBQUE7QUFBSjtBQUlJO0VBQ0ksMkJBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0FBRlIiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2Ftcy92aXNpdG9yL2NvbXBvbmVudHMvdmlzaXRvci1leHBlY3RlZC12aXNpdG9yL3Zpc2l0b3ItZXhwZWN0ZWQtdmlzaXRvci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jdXN0b21TY3JvbGx7XG4gICAgLy8gb3ZlcmZsb3cteDogc2Nyb2xsO1xuICAgIHVzZXItc2VsZWN0OiBub25lO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB0aHtcbiAgICAgICAgLy8gbWF4LXdpZHRoOiBub25lICFpbXBvcnRhbnQ7XG4gICAgfVxuICAgIHRhYmxlIHRoZWFkIHRoe1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuICFpbXBvcnRhbnQ7XG4gICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIFxuICAgIH1cbn0iXX0= */\";","import { Component, OnInit, Injector, HostListener, ViewChild } from '@angular/core';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { VisitorService } from 'src/app/api/controllers/Visitor';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { ModalService } from 'src/app/shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\n\nimport * as moment from 'moment';\nimport { ConfirmDialogModel, CommonConfirmModalComponent } from 'src/app/shared/components/common-confirm-modal/common-confirm-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\nimport { Router } from '@angular/router';\nimport { SessionService } from 'src/app/core/session/session.service';\n\n\n@Component({\n  selector: 'app-visitor-expected-visitor',\n  templateUrl: './visitor-expected-visitor.component.html',\n  styleUrls: ['./visitor-expected-visitor.component.scss']\n})\nexport class VisitorExpectedVisitorComponent implements OnInit {\n\n  visitorData:string = \"\";\n  visitorListData:any;\n\n  isVisitorDataLoaded:boolean = false;\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n\n  visitor:any;\n\n  modalService:any;\n\n  totalFilterItems:any;\n  visitTypeData:any;\n  visitCategoryData:any;\n  selectedInput:string = \"\";\n  columnField: any = {};\n  result: string = '';\n  listData: any;\n  columnData:any;\n  gridSourceData:any;\n  autoPopulateDetails:boolean = false;\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n\n\n  constructor(\n    private router: Router,\n    private injector: Injector,\n  \tprivate apartmentService:ApartmentService,\n    private visitorService:VisitorService,\n    private lookupService: LookupService,\n    // private cookieService: CookieService,\n    private sessionService:SessionService,\n    public dialog: MatDialog,\n  ) { \n    this.modalService = this.injector.get(ModalService);\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  selectColInput(value){\n    this.selectedInput = value;\n  }\n\n  onSelectChange(event, type, name){\n\n    if(!_.isEmpty(event)){\n      this.selectedInput = type;\n      this.columnField[type] = event[name];\n    }\n    else {\n       this.columnField = {};\n    }\n    \n  }\n\n  getDateTime(val){\n    if(val != ''){\n      return moment(val).format(\"MM/DD/YY hh:mm\")\n    }else{\n      return ''\n    }\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  showConfirmModal(index) {\n    this.modalService.showConfirmModal(index);\n  }\n\n  navigateToCreate(){\n    this.router.navigate(['/ams/visitor/create-expected-visitor']);\n  }\n\n  getTimeFormat(dateTime){\n    return moment(dateTime).format(\"YYYY-MM-DD HH:mm\");\n  }\n\n  ngOnInit() {\n\n    var cellsrenderer = (row, column, value) => {\n      return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n    }\n\n    var columnrenderer = (value) => {\n      return '<div style=\"padding: 14px\">' + value + '</div>';\n    }\n\n\n    this.columnData = [{\n         text: 'Id',\n         datafield: 'serialNo',\n         width: 100,\n         pinned: true,\n         cellsrenderer: cellsrenderer,\n         renderer: columnrenderer\n      }, {\n          text: 'Visitor Name',\n          datafield: 'expectedVisitorName',\n          width: 100,\n          cellsrenderer: cellsrenderer,\n          renderer: columnrenderer\n      },{\n         text: 'Phone Number',\n         datafield: 'expectedVisitorPhone',\n         cellsrenderer: cellsrenderer,\n         minwidth: 80,\n         renderer: columnrenderer\n     }, {\n         text: 'Expected Date/Time of Visit',\n         datafield: 'expectedVisitorInTime',\n         cellsrenderer: (row, column, value) => {\n          return '<div class=\"jqx-custom-inner-cell\">'+ this.getDateTime(value) +'</div>'\n        },\n         minwidth: 170,\n         renderer: columnrenderer\n     }, {\n         text: 'Expected Time-out',\n         datafield: 'expectedVisitorOutTime',\n         cellsrenderer: (row, column, value) => {\n          return '<div class=\"jqx-custom-inner-cell\">'+ this.getDateTime(value) +'</div>'\n        },\n         minwidth: 170,\n         renderer: columnrenderer\n     }, {\n         text: 'Visit Type',\n         datafield: 'visitType_Label',\n         cellsrenderer: cellsrenderer,\n         minwidth: 80,\n         renderer: columnrenderer\n     }, {\n         text: 'Visitor category',\n         datafield: 'visitorCategoryId_Label',\n         cellsrenderer: cellsrenderer,\n         minwidth: 170,\n         renderer: columnrenderer\n     }, {\n          text: 'Tower Unit',\n          datafield: 'block_Unit',\n          cellsrenderer: cellsrenderer,\n          minwidth: 170,\n          renderer: columnrenderer \n    }, {\n         text: 'Check-In',\n         cellsalign: 'center', \n         align: 'center',\n         width: 120,\n         cellsrenderer: (row: number): string => {\n          let new_ = moment().format('DD/MM/YYYY');\n          let date = moment(this.visitorListData[row].expectedVisitorInTime).format('DD/MM/YYYY');\n          if(new_ == date){\n          return '<div class=\"simple-actions\">'\n          +'<a href=\"javascript:void(0)\" onClick=\"navigateTo('+ row +')\" ><img src=\"assets/images/checkin-icon.svg\" width=\"20\" /> </a>'\n          +'</div>'\n          }\n      },\n         renderer: columnrenderer\n     }, {\n      text: 'Copy',\n      cellsalign: 'center', \n      align: 'center',\n      width: 120,\n      cellsrenderer: (row: number): string => {\n       let new_ = moment().format('DD/MM/YYYY');\n       let date = moment(this.visitorListData[row].expectedVisitorInTime).format('DD/MM/YYYY');\n       if(new_ != date){\n       return '<div class=\"simple-actions\">'\n       +'<a href=\"javascript:void(0)\" onClick=\"navigateToCheckIn('+ row +')\" >Copy Details</a>'\n       +'</div>'\n       }\n   },\n      renderer: columnrenderer\n  }];\n\n  \t\n    let params = {\n      apartmentId: this.sessionService.apartmentId,\n    }\n\n  \tthis.visitorService.getExpectedVisitorsByApartmentId(params).subscribe((res:any) => {\n\n      if(res.errorMessage){\n        this.isVisitorDataLoaded = true;\n    this.visitorListData = [];\n    this.totalItems = 0;\n     \n  }else{\n    this.visitorListData = res;\n\n    console.log(\"visitorListData\", this.visitorListData[0].visitTypeId);\n       //filter active true items\n  this.visitorListData = res.filter(data => {\n    return data.isActive\n  })\n  this.visitorListData = this.visitorListData.sort((val1, val2)=> {\n    return <any>new Date(val1.expectedVisitorInTime) - <any>new Date(val2.expectedVisitorInTime);\n  })\n  this.gridSourceData = {\n    localdata: this.visitorListData,\n    datatype: \"array\"\n  }\n\n  this.listData = new jqx.dataAdapter(this.gridSourceData);\n       \n  this.totalItems = this.visitorListData.length;\n  this.isVisitorDataLoaded = true;\n  }\n   \n    let visitParams = {\n      ApartmentId: this.sessionService.apartmentId,\n      LookupTypeId: 15\n    }\n    \n    //get visit type\n    this.lookupService.getLookupValueByLookupTypeId(visitParams).subscribe((res:any) => {\n\n      this.visitTypeData = res;\n      this.checkVisitTypeData();\n\n    },\n    error => {\n      \n    }\n    );\n      \n  },\n  error => {\n    \n  }\n  )\n   \n  }\n  getPrintParams(event){\n    this.datagrid.exportdata(event, 'expectedVisitorData');\n  }\n\n  checkVisitTypeData() {\n    this.visitTypeData.forEach(element => {\n      if(element.lookupValueId == this.visitorListData[0].visitTypeId){\n        this.visitorListData[0].visitTypeName = element.lookupValueName.toLowerCase();\n      }\n    });\n  }\n\n  \n\n  @HostListener('window:navigateToCheckIn', ['$event.detail'])\n  navigateToCheckIn(detail) {\n    const message = `Are you sure, you want to copy the details and Check In?`;\n\n    const dialogData = new ConfirmDialogModel(\"Confirm Action\", message);\n\n    const dialogRef = this.dialog.open(CommonConfirmModalComponent, {\n      panelClass: 'material',\n      disableClose: true,\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe(dialogResult => {\n      if (dialogResult) {\n\n    let dataRecord = this.datagrid.getrowdata(detail.rowId);\n    this.router.navigate(['/ams/visitor/checkin'], {queryParams: dataRecord, skipLocationChange: true});\n\n      }\n\n    });\n\n  }\n\n\n  @HostListener('window:navigateTo', ['$event.detail'])\n  navigateTo(detail) {\n    const message = `Are you sure, you want to Check In?`;\n\n    const dialogData = new ConfirmDialogModel(\"Confirm Action\", message);\n\n    const dialogRef = this.dialog.open(CommonConfirmModalComponent, {\n      panelClass: 'material',\n      disableClose: true,\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe(dialogResult => {\n      if (dialogResult) {\n\n    let dataRecord = this.datagrid.getrowdata(detail.rowId)\n    let expectedVisitorId = dataRecord.expectedVisitorId\n    this.router.navigateByUrl('/ams/visitor/edit-visitor/' + expectedVisitorId + '/checkin');\n\n      }\n\n    });\n\n  }\n\n  onGlSearchFilter() {\n\n    if(this.visitorData != \"\"){\n\n      let filtergroup = new jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = this.visitorData;\n      let filtercondition = 'contains';\n      let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n      filtergroup.operator = 'or';\n      filtergroup.addfilter(filter_or_operator, filterData);\n\n      this.datagrid.showfiltercolumnbackground(false);\n\n      this.columnData.forEach(item => {\n        if(item.datafield != 'Actions') {\n          this.datagrid.addfilter(item.datafield, filtergroup, true);\n        }\n      })\n\n      this.datagrid.applyfilters();\n      \n    }\n    else {\n      this.datagrid.clearfilters();\n    }\n\n  }\n\n  //print button\n  print(){\n\n  const confirmationMessage = `Are you sure, you want to Print?`;\n  const dialogData = new ConfirmDialogModel(\"Confirm Action\", confirmationMessage);\n\n  const dialogRef = this.dialog.open(CommonConfirmModalComponent, {\n    panelClass: 'material',\n    disableClose: true,\n    data: dialogData\n  });\n\n  dialogRef.afterClosed().subscribe(dialogResult => {\n    this.result = dialogResult;\n    if(this.result){\n      //code\n    }\n  })\n\n  }\n\n}\nfunction navigateTo(row){\n  var event = new CustomEvent('navigateTo', {\n    detail: {\n        rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).navigateTo = navigateTo\n\nfunction navigateToCheckIn(row){\n  var event = new CustomEvent('navigateToCheckIn', {\n    detail: {\n        rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).navigateToCheckIn = navigateToCheckIn","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3Zpc2l0b3IvY29tcG9uZW50cy92aXNpdG9yLWhpc3RvcnkvdmlzaXRvci1oaXN0b3J5LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, Injector, HostListener, ViewChild } from '@angular/core';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { VisitorService } from 'src/app/api/controllers/Visitor';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { ModalService } from 'src/app/shared/services/modal.service';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport * as moment from 'moment';\nimport * as _ from 'underscore';\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\n\n@Component({\n  selector: 'app-visitor-hitory',\n  templateUrl: './visitor-history.component.html',\n  styleUrls: ['./visitor-history.component.scss']\n})\nexport class VisitorHistoryComponent implements OnInit {\n\n   visitorData:string = \"\";\n  visitorListData:any;\n\n  isVisitorDataLoaded:boolean = false;\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n\n  visitor:any;\n\n  modalService:any;\n\n  totalFilterItems:any;\n  visitTypeData:any;\n  columnData:any;\n  gridSourceData:any;\n  listData: any;\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n\n\n  constructor(\n    private injector: Injector,\n  \tprivate apartmentService:ApartmentService,\n    private visitorService:VisitorService,\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private sessionService: SessionService\n  ) { \n    this.modalService = this.injector.get(ModalService);\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  getBlockUnit(id){\n\n  \t\n    \n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  showConfirmModal(index) {\n    this.modalService.showConfirmModal(index);\n  }\n\n  getVisitorType(){\n    \n  }\n\n  getPrintParams(event){\n    this.datagrid.exportdata(event, 'visitorHistoryData');\n  }\n\n  onGlSearchFilter() {\n\n    if(this.visitorData != \"\"){\n\n      let filtergroup = new jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = this.visitorData;\n      let filtercondition = 'contains';\n      let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n      filtergroup.operator = 'or';\n      filtergroup.addfilter(filter_or_operator, filterData);\n\n      this.datagrid.showfiltercolumnbackground(false);\n\n      this.columnData.forEach(item => {\n        if(item.datafield != 'Actions') {\n          this.datagrid.addfilter(item.datafield, filtergroup, true);\n        }\n      })\n\n      this.datagrid.applyfilters();\n      \n    }\n    else {\n      this.datagrid.clearfilters();\n    }\n\n  }\n\n  getDateTime(val){\n    if(val != ''){\n      return moment(val).format(\"MM/DD/YY hh:mm\")\n    }else{\n      return ''\n    }\n  }\n\n  getBlock(){\n\n  }\n\n  getUnit(){\n\n  }\n\n  ngOnInit() {\n\n    var cellsrenderer = (row, column, value) => {\n      return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n    }\n\n    var columnrenderer = (value) => {\n      return '<div style=\"padding: 14px\">' + value + '</div>';\n    }\n\n\n    this.columnData = [{\n         text: 'Id',\n         datafield: 'serialNo',\n         width: 100,\n         pinned: true,\n         cellsrenderer: cellsrenderer,\n         renderer: columnrenderer\n      }, {\n          text: 'Visitor Name',\n          datafield: 'visitorName',\n          width: 100,\n          cellsrenderer: cellsrenderer,\n          renderer: columnrenderer\n      },{\n         text: 'Phone Number',\n         datafield: 'visitorPhone',\n         cellsrenderer: cellsrenderer,\n         minwidth: 80,\n         renderer: columnrenderer\n     }, {\n         text: 'In-time',\n         datafield: 'visitorInTime',\n         cellsrenderer: (row, column, value) => {\n          return '<div class=\"jqx-custom-inner-cell\">'+ this.getDateTime(value) +'</div>'\n        },\n         minwidth: 170,\n         renderer: columnrenderer\n     }, {\n         text: 'Out-time',\n         datafield: 'visitorOutTime',\n         cellsrenderer: (row, column, value) => {\n          return '<div class=\"jqx-custom-inner-cell\">'+ this.getDateTime(value) +'</div>'\n        },\n         minwidth: 170,\n         renderer: columnrenderer\n     }, {\n         text: 'Expected In-time',\n         datafield: 'expectedVisitorInTime',\n         cellsrenderer: (row, column, value) => {\n          return '<div class=\"jqx-custom-inner-cell\">'+ this.getDateTime(value) +'</div>'\n        },\n         minwidth: 80,\n         renderer: columnrenderer\n     }, {\n         text: 'Expected Out-time',\n         datafield: 'expectedVisitorOutTime',\n         cellsrenderer: (row, column, value) => {\n          return '<div class=\"jqx-custom-inner-cell\">'+ this.getDateTime(value) +'</div>'\n        },\n         minwidth: 170,\n         renderer: columnrenderer \n     }, {\n          text: 'Block No',\n          datafield: 'blockNo',\n          cellsrenderer: cellsrenderer,\n          minwidth: 170,\n          renderer: columnrenderer \n      }, {\n          text: 'Unit No',\n          datafield: 'blockUnitNo',\n          cellsrenderer: cellsrenderer,\n          minwidth: 170,\n          renderer: columnrenderer \n      }];\n\n\n    let visitTypeParams = {\n      ApartmentId: this.sessionService.apartmentId,\n      LookupTypeId: 15\n    }\n\n    //get visit type\n    this.lookupService.getLookupValueByLookupTypeId(visitTypeParams).subscribe((res:any) => {\n\n      this.visitTypeData = res;\n\n    },\n    error => {\n      \n    }\n    );\n\n    let visitListParams = {\n      apartmentId: this.sessionService.apartmentId\n    }\n\n  \tthis.visitorService.getVisitorsByApartmentId(visitListParams).subscribe((res:any) => {\n\n\t\t//filter active true items\n\n    this.visitorListData = res.filter(item => {\n      if(item.block_Unit && item.block_Unit != null){\n      let block = item.block_Unit.split(' ');\n      item.blockNo = block[0];\n      item.blockUnitNo = block[1];\n      }\n      return item.isActive && item.isCheckedOut;\n\n    });\n\n    // console.log(this.visitorListData);\n\t\t\n\t\t// //get block and unit details\n\t\t// _.each(this.visitorListData, (item, index) => {\n\t\t// this.apartmentService.getApartmentBlockUnitById(item.apartmentUnitId).subscribe((res:any) => {\n\n\t\t// \tthis.visitorListData[index].blockNo = res[0].apartmentBlockNumber;\n\t\t// \tthis.visitorListData[index].blockUnitNo = res[0].apartmentBlockUnitNumber;\n\n\t  //   },\n\t  //   error => {\n\t      \n\t  //   });\n\n\n    // });\n    \n    this.gridSourceData = {\n      localdata: this.visitorListData,\n      datatype: \"array\"\n    }\n\n    this.listData = new jqx.dataAdapter(this.gridSourceData);\n         \n\t\tthis.totalItems = this.visitorListData.length;\n\t\tthis.isVisitorDataLoaded = true;\n\n\t\tthis.totalItems = this.visitorListData.length;\n\n\t\tif(this.totalItems>this.itemLimit){\n\t\t\tthis.ItemEndIndex = this.itemLimit;\n\t\t}\n\n\t\telse {\n\t\t\tthis.ItemEndIndex = this.totalItems;\n\t\t}\n\n    this.isVisitorDataLoaded = true;\n    \n    \n    \n\t});\n\n  \t\n\n\n  \t\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3Zpc2l0b3IvY29tcG9uZW50cy92aXNpdG9yLXJlcG9ydHMvdmlzaXRvci1yZXBvcnRzLWRhdGEvdmlzaXRvci1yZXBvcnRzLWRhdGEuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { UserService } from 'src/app/api/controllers/User';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport moment from 'moment';\nimport { VisitorService } from 'src/app/api/controllers/Visitor';\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\n@Component({\n    selector: 'app-visitor-reports-data',\n    templateUrl: './visitor-reports-data.component.html',\n    styleUrls: ['./visitor-reports-data.component.scss']\n})\nexport class VisitorReportsDataComponent implements OnInit {\n    pageName: string = \"\";\n    reportsDataList: any;\n    visitorReportData: any;\n    totalItems: any;\n    isDataLoaded: boolean = false;\n    unitBlocksData: any;\n    blockId = null;\n    blockNo: string = \"\";\n    end_date = null;\n    start_date = null;\n    visitByData: any;\n    visitTypeId = null;\n    listData: any;\n    columnData:any;\n    gridSourceData:any;\n    reportData:any;\n    isReportSubmitted:boolean = false;\n    @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n    \n    constructor(\n        private router: Router, \n        private route: ActivatedRoute, \n        private apartmentService: ApartmentService, \n        private visitorService: VisitorService,\n        private lookupService: LookupService, \n        private sessionService: SessionService) \n        { }\n    \n    \n    isMobileView() {\n        return window.innerWidth <= 767 ? 'table-responsive' : '';\n    }\n\n    getPrintParams(event){\n        this.datagrid.exportdata(event, 'VisitorReportsData');\n      }\n    \n    \n    getDate(date) {\n        return moment(date).format(\"MM-DD-YYYY\");\n    }\n    submitReportsFilterForm() {\n        let params = {\n            ApartmentID : this.sessionService.apartmentId,\n            ApartmentBlockID : parseInt(this.blockId),\n            StartDate : this.getDate(this.start_date),\n            EndDate : this.getDate(this.end_date),\n            VisitType : parseInt(this.visitTypeId)\n        }\n        this.getDetails(params);\n    }\n\n    getDetails(params){\n        let serviceName;\n        \n        let id = parseInt(this.route.params['value'].id);\n        if(id == 365){\n            serviceName = this.visitorService.getReportsForVisitorsCheckedInMultiFilter(params)\n        }else if(id == 366){\n            serviceName = this.visitorService.getReportsForVisitorsCheckedOutnMultiFilter(params)\n        }else if(id == 367){\n            serviceName = this.visitorService.getReportsForExpectedVisitorsMultiFilter(params)\n        }\n        serviceName.subscribe((res:any) => {\n              \n            if(res.errorMessage){\n            this.reportsDataList = [];\n             \n          }else{\n            this.reportsDataList = res;\n                     \n           this.gridSourceData = {\n            localdata: this.reportsDataList,\n            datatype: \"array\"\n          }\n        \n          this.listData = new jqx.dataAdapter(this.gridSourceData);\n          this.isReportSubmitted = true;\n    \n          }},\n          error => {\n           \n         \n                });\n    \n    }\n\n    getDateTime(val){\n        if(val != ''){\n          return moment(val).format(\"MM/DD/YY hh:mm\")\n        }else{\n          return ''\n        }\n      }\n\n      onGlSearchFilter() {\n\n        if(this.reportData != \"\"){\n    \n          let filtergroup = new jqx.filter();\n          let filter_or_operator = 1;\n          let filtervalue = this.reportData;\n          let filtercondition = 'contains';\n          let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n          filtergroup.operator = 'or';\n          filtergroup.addfilter(filter_or_operator, filterData);\n    \n          this.datagrid.showfiltercolumnbackground(false);\n    \n          this.columnData.forEach(item => {\n            if(item.datafield != 'Actions') {\n              this.datagrid.addfilter(item.datafield, filtergroup, true);\n            }\n          })\n    \n          this.datagrid.applyfilters();\n          \n        }\n        else {\n          this.datagrid.clearfilters();\n        }\n    \n      }\n    \n      cancel(form){\n          form.reset();\n     }\n    \n    ngOnInit() {\n        this.pageName = this.route.params['value'].name;\n        let unitBlockParams = {\n            apartmentId: this.sessionService.apartmentId\n        };\n        this.apartmentService.getApartmentBlockByApartmentId(unitBlockParams).subscribe((res: any) => {\n            this.unitBlocksData = res;\n        });\n        let visitParams = {\n            ApartmentId: this.sessionService.apartmentId,\n            LookupTypeId: 15\n        }\n\n        //visit type\n        this.lookupService.getLookupValueByLookupTypeId(visitParams).subscribe((res: any) => {\n\n            this.visitByData = res;\n\n        },\n            error => {\n\n            }\n        );\n        this.isDataLoaded = true;\n\n        var cellsrenderer = (row, column, value) => {\n            return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n          }\n      \n          var columnrenderer = (value) => {\n            return '<div style=\"padding: 14px\">' + value + '</div>';\n          }\n      \n      \n          this.columnData = [{\n               text: 'Id',\n               datafield: 'serialNo',\n               width: 100,\n               pinned: true,\n               cellsrenderer: cellsrenderer,\n               renderer: columnrenderer\n            }, {\n                text: 'Visitor Name',\n                datafield: 'visitorName',\n                width: 100,\n                cellsrenderer: cellsrenderer,\n                renderer: columnrenderer\n            },{\n               text: 'Phone Number',\n               datafield: 'visitorPhone',\n               cellsrenderer: cellsrenderer,\n               minwidth: 80,\n               renderer: columnrenderer\n           }, {\n               text: 'Date/Time of Visit',\n               datafield: 'checkInDateTime',\n               cellsrenderer: (row, column, value) => {\n                return '<div class=\"jqx-custom-inner-cell\">'+ this.getDateTime(value) +'</div>'\n              },\n               minwidth: 170,\n               renderer: columnrenderer\n           }, {\n               text: 'Time-out',\n               datafield: 'checkOutDateTime',\n               cellsrenderer: (row, column, value) => {\n                return '<div class=\"jqx-custom-inner-cell\">'+ this.getDateTime(value) +'</div>'\n              },\n               minwidth: 170,\n               renderer: columnrenderer\n           }, {\n               text: 'Visit Type',\n               datafield: 'visitType',\n               cellsrenderer: cellsrenderer,\n               minwidth: 80,\n               renderer: columnrenderer\n           },{\n            text: 'Block No',\n            datafield: 'blockNo',\n            cellsrenderer: cellsrenderer,\n            minwidth: 170,\n            renderer: columnrenderer \n            }, {\n                text: 'Unit No',\n                datafield: 'unitNo',\n                cellsrenderer: cellsrenderer,\n                minwidth: 170,\n                renderer: columnrenderer \n            }];\n     \n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3Zpc2l0b3IvY29tcG9uZW50cy92aXNpdG9yLXJlcG9ydHMvdmlzaXRvci1yZXBvcnRzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\n\n@Component({\n  selector: 'app-visitor-reports',\n  templateUrl: './visitor-reports.component.html',\n  styleUrls: ['./visitor-reports.component.scss']\n})\nexport class VisitorReportsComponent implements OnInit {\n\n  reportDataList:any;\n\n  isDataLoaded:boolean = false;\n\n  constructor(\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private sessionService:SessionService\n  ) { }\n\n  ngOnInit() {\n\n    let details = {\n      ApartmentId: this.sessionService.apartmentId,\n      LookupTypeId: 87, //lookuptypeid for report\n      MenuName: 'VisitorManagement'\n    }\n\n    this.lookupService.getLookupValuesByApartmentIdLookupTypeIdMenuName(details).subscribe((res:any) => {\n\n      //this.reportDataList = res;\n      this.reportDataList = [\n        { lookupValueName: 'List of Checked In Visitors', description: 'Provides the list of visitors checked-in for the specified duration', lookupValueId: 365 },\n        { lookupValueName: 'List of Checked out Visitors', description: 'Provides the list of visitors checked-out for the specified duration', lookupValueId: 366 },\n        { lookupValueName: 'List of Expected Visitors', description: 'Gives the list of visitors who are expected to check-in during the mentioned duration', lookupValueId: 367 }\n        ]\n\n      this.isDataLoaded = true;\n\n    })\n\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3Zpc2l0b3IvY29tcG9uZW50cy92aXNpdG9yLXNldHVwL3Zpc2l0b3Itc2V0dXAuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, Injector } from '@angular/core';\n\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { ModalService } from 'src/app/shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmDialogModel, CommonConfirmModalComponent } from 'src/app/shared/components/common-confirm-modal/common-confirm-modal.component';\nimport { SessionService } from 'src/app/core/session/session.service';\n\n@Component({\n  selector: 'app-visitor-setup',\n  templateUrl: './visitor-setup.component.html',\n  styleUrls: ['./visitor-setup.component.scss']\n})\nexport class VisitorSetupComponent implements OnInit {\n\n  isDataLoaded: boolean = false;\n  isCategoryTypeSubmitted: boolean = true;\n\n  ItemStartIndex: any = 0;\n  ItemEndIndex: any;\n  totalItems: any;\n  itemLimit: any = 10;\n\n  unitFieldType: string = \"unitno\";\n  unitOrder: boolean = true;\n\n  isMobile: boolean = false;\n\n  categoryData: any;\n  categoryDataList: any;\n\n  isCategoryTypeNew: boolean = false;\n  isCategoryTypeUpdate: boolean = false;\n\n  categoryType: string = \"\";\n  categoryUpdateId: number = 0;\n\n  isError: boolean = false;\n  alertMessage: boolean = false;\n\n  modalService: any;\n\n  result: string = '';\n\n  constructor(\n    private injector: Injector,\n    private lookupService: LookupService,\n    public dialog: MatDialog,\n    private sharedService: SharedService,\n    // private cookieService: CookieService,\n    private sessionService:SessionService\n  ) {\n    this.modalService = this.injector.get(ModalService);\n  }\n\n  getIndexParams(event) {\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type) {\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if (this.unitFieldType == type) {\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  addNewCategoryType() {\n\n    this.isCategoryTypeNew = true;\n    this.isCategoryTypeUpdate = false;\n\n    setTimeout(() => {\n\n      var elem = document.querySelector('.vehicle-type-card');\n      var scrollTo = elem.getBoundingClientRect().top - 100;\n\n      window.scroll({\n        top: scrollTo,\n        behavior: 'smooth'\n      });\n\n    }, 100);\n\n  }\n\n  updateCategoryType(item) {\n\n    this.isCategoryTypeUpdate = true;\n    this.isCategoryTypeNew = false;\n    this.categoryType = item.lookupValueName;\n    this.categoryUpdateId = item.lookupValueId;\n\n    setTimeout(() => {\n\n      var elem = document.querySelector('.vehicle-type-card');\n      var scrollTo = elem.getBoundingClientRect().top - 100;\n\n      window.scroll({\n        top: scrollTo,\n        behavior: 'smooth'\n      });\n\n    }, 100);\n\n  }\n\n  deleteCategoryType(item) {\n    const confirmationMessage = `Are you sure you want to delete?`;\n    const dialogData = new ConfirmDialogModel(\"Confirm Action\", confirmationMessage);\n\n    const dialogRef = this.dialog.open(CommonConfirmModalComponent, {\n      panelClass: 'material-dialog-small',\n      disableClose: true,\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe(dialogResult => {\n      this.result = dialogResult;\n      if (this.result) {\n        var params = {\n          lookupValueId: item.lookupValueId,\n          updateUserId: parseInt(this.sessionService.userId),\n        }\n\n        this.lookupService.deleteLookupvalue(params).subscribe((res: any) => {\n\n          if(res.message){\n            var errorDetails = {\n          msg: 'Visitor category deleted successfully',\n          type: \"Success\"\n        };\n        this.sharedService.setCustomAlertMessage(errorDetails);\n        this.isDataLoaded = false;\n            let categoryParams = {\n              ApartmentId: this.sessionService.apartmentId,\n              LookupTypeId: 100\n            }\n\n            this.lookupService.getLookupValueByLookupTypeId(categoryParams).subscribe((res: any) => {\n              this.isDataLoaded = true;\n              this.categoryDataList = res.filter((item, i) => {\n                item.number = i + 1;\n                return item.isActive;\n              });\n              \n              \n              this.totalItems = this.categoryDataList.length;\n\n              if (this.totalItems > this.itemLimit) {\n                this.ItemEndIndex = this.itemLimit;\n              }\n              else {\n                this.ItemEndIndex = this.totalItems;\n              }\n              this.isDataLoaded = true;\n          });\n        } \n        else{\n            this.isDataLoaded = true;\n          }\n        });\n    \n      }\n    });\n    }\n\n    getLocalISOTime(time){\n      var tzoffset = (new Date()).getTimezoneOffset() * 60000; //offset in milliseconds\n      return (new Date(time - tzoffset)).toISOString().slice(0, -1);\n    }\n\n  removeCategoryTypeBox() {\n\n    this.isCategoryTypeNew = false;\n    this.isCategoryTypeUpdate = false;\n    this.isError = false;\n\n    setTimeout(() => {\n\n      var elem = document.querySelector('.vehicle-type-table-card');\n      var scrollTo = elem.getBoundingClientRect().top - 100;\n\n      window.scroll({\n        top: scrollTo,\n        behavior: 'smooth'\n      });\n\n    }, 100);\n\n  }\n\n  submitCategoryTypeForm(form) {\n\n    const confirmationMessage = `Are you sure you want to save this settings?`;\n    const dialogData = new ConfirmDialogModel(\"Confirm Action\", confirmationMessage);\n\n    const dialogRef = this.dialog.open(CommonConfirmModalComponent, {\n      panelClass: 'material',\n      disableClose: true,\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe(dialogResult => {\n      this.result = dialogResult;\n      if (this.result) {\n        //code\n        this.isCategoryTypeSubmitted = false;\n        if (this.isCategoryTypeNew) {\n\n          let details = {\n\n            \"lookupTypeId\": 100,\n            \"lookupValueName\": this.categoryType,\n            \"description\": 'Visitor Category',\n            \"isActive\": true,\n            \"insertedBy\": parseInt(this.sessionService.userId),\n            \"insertedOn\": this.getLocalISOTime(new Date()),\n            \"updatedBy\": null,\n            \"updatedOn\": null\n\n          }\n\n          let params = {\n            lookupvalue: details\n          }\n\n          this.lookupService.addLookupValue(params).subscribe((res: any) => {\n\n            if (res.message) {\n              \n              this.sharedService.setAlertMessage(\"Visitor Category added successfully\");\n              this.isCategoryTypeNew = false;\n              this.isCategoryTypeSubmitted = true;\n              this.categoryType = '';\n              this.isDataLoaded = false;\n              let categoryParams = {\n                ApartmentId: this.sessionService.apartmentId,\n                LookupTypeId: 100\n              }\n\n              this.lookupService.getLookupValueByLookupTypeId(categoryParams).subscribe((res: any) => {\n                this.isDataLoaded = true;\n                this.categoryDataList = res.filter((item, i) => {\n                  item.number = i + 1;\n                  return item.isActive;\n                });\n                \n                \n                this.totalItems = this.categoryDataList.length;\n\n                if (this.totalItems > this.itemLimit) {\n                  this.ItemEndIndex = this.itemLimit;\n                }\n                else {\n                  this.ItemEndIndex = this.totalItems;\n                }\n                this.isDataLoaded = true;\n              });\n\n\n            }\n            else {\n              this.isDataLoaded = true;\n              this.isCategoryTypeSubmitted = true;\n              this.isError = true;\n              this.alertMessage = res.errorMessage;\n              var errorDetails = {\n                msg: this.alertMessage,\n                type: \"Error\"\n              };\n              this.sharedService.setCustomAlertMessage(errorDetails);\n            }\n\n          });\n\n        }\n\n        else {\n\n          let details = {\n\n            \"lookupValueId\": this.categoryUpdateId,\n            \"ApartmentId\":this.sessionService.apartmentId,\n            \"lookupTypeId\": 100,\n            \"lookupValueName\": this.categoryType,\n            \"description\": this.categoryType,\n            \"isActive\": true,\n            \"updatedBy\": parseInt(this.sessionService.userId),\n            \"updatedOn\": this.getLocalISOTime(new Date().toISOString())\n\n          }\n\n          let params = {\n            lookupvalue: details\n          }\n\n          this.lookupService.updateLookupValue(params).subscribe((res: any) => {\n\n            if (res.message) {\n\n              let categoryParams = {\n                ApartmentId: this.sessionService.apartmentId,\n                LookupTypeId: 100\n              }\n\n              this.lookupService.getLookupValueByLookupTypeId(categoryParams).subscribe((res: any) => {\n                this.isCategoryTypeUpdate = false;\n                this.isCategoryTypeSubmitted = true;\n                this.sharedService.setAlertMessage(\"Visitor Category updated successfully\");\n\n                this.categoryDataList = res.filter((item, i) => {\n                  item.number = i + 1;\n                  return item.isActive;\n                });\n\n                this.totalItems = this.categoryDataList.length;\n\n      if (this.totalItems > this.itemLimit) {\n        this.ItemEndIndex = this.itemLimit;\n      }\n      else {\n        this.ItemEndIndex = this.totalItems;\n      }\n\n              });\n            }\n            else {\n              this.isCategoryTypeSubmitted = true;\n              this.isError = true;\n              this.alertMessage = res.errorMessage;\n              var errorDetails = {\n                msg: this.alertMessage,\n                type: \"Error\"\n              };\n              this.sharedService.setCustomAlertMessage(errorDetails);\n            }\n\n          });\n\n        }\n\n      }\n      else{\n        this.isCategoryTypeSubmitted = true;\n      }\n    })\n\n\n\n\n\n  }\n\n  ngOnInit() {\n\n    let categoryListParams = {\n      ApartmentId: this.sessionService.apartmentId,\n      LookupTypeId: 100\n    }\n\n    this.lookupService.getLookupValueByLookupTypeId(categoryListParams).subscribe((res: any) => {\n\n      this.categoryDataList = res.filter((item, i) => {\n        item.number = i + 1;\n        return item.isActive;\n      });\n\n      this.totalItems = this.categoryDataList.length;\n\n      if (this.totalItems > this.itemLimit) {\n        this.ItemEndIndex = this.itemLimit;\n      }\n      else {\n        this.ItemEndIndex = this.totalItems;\n      }\n\n      this.isDataLoaded = true;\n    });\n\n  }\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { VisitorComponent } from './visitor.component';\nimport { VisitorSetupComponent } from './components/visitor-setup/visitor-setup.component';\nimport { VisitorCheckinComponent } from './components/visitor-checkin/visitor-checkin.component';\nimport { VisitorCheckoutComponent } from './components/visitor-checkout/visitor-checkout.component';\nimport { VisitorExpectedVisitorComponent } from './components/visitor-expected-visitor/visitor-expected-visitor.component';\nimport { VisitorReportsComponent } from './components/visitor-reports/visitor-reports.component';\nimport { VisitorCreateComponent } from './components/visitor-create/visitor-create.component';\nimport { VisitorHistoryComponent } from './components/visitor-history/visitor-history.component';\nimport { CheckinVisitorComponent } from './components/checkin-visitor/checkin-visitor.component';\nimport { VisitorReportsDataComponent } from './components/visitor-reports/visitor-reports-data/visitor-reports-data.component';\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: 'settings', pathMatch: 'full'},\n\t{ path: 'settings', component: VisitorSetupComponent},\n\t{ path: 'checkin', component: CheckinVisitorComponent},\n\t{ path: 'expected-visitor', component: VisitorExpectedVisitorComponent},\n\t{ path: 'add-visitor', component: VisitorCheckinComponent},\n\t{ path: 'edit-visitor/:id/:type', component: VisitorCheckinComponent},\n\t{ path: 'checkout', component: VisitorCheckoutComponent},\n\t{ path: 'reports', component: VisitorReportsComponent },\n\t{ path: 'reports/:name/:id', component: VisitorReportsDataComponent },\n\t{ path: 'create-expected-visitor', component: VisitorCreateComponent },\n\t{ path: 'history', component: VisitorHistoryComponent },\n\t{ path: '**', redirectTo: 'settings', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class VisitorRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3Zpc2l0b3IvdmlzaXRvci5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-visitor',\n  templateUrl: './visitor.component.html',\n  styleUrls: ['./visitor.component.scss']\n})\nexport class VisitorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VisitorRoutingModule } from './visitor-routing.module';\n\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { VisitorComponent } from './visitor.component';\nimport { VisitorSetupComponent } from './components/visitor-setup/visitor-setup.component';\nimport { VisitorCheckinComponent } from './components/visitor-checkin/visitor-checkin.component';\nimport { VisitorCheckoutComponent } from './components/visitor-checkout/visitor-checkout.component';\nimport { VisitorExpectedVisitorComponent } from './components/visitor-expected-visitor/visitor-expected-visitor.component';\nimport { VisitorReportsComponent } from './components/visitor-reports/visitor-reports.component';\nimport { VisitorHistoryComponent } from './components/visitor-history/visitor-history.component';\nimport { VisitorReportsDataComponent } from './components/visitor-reports/visitor-reports-data/visitor-reports-data.component';\nimport { CheckinVisitorComponent } from './components/checkin-visitor/checkin-visitor.component';\nimport { CondoCardModule } from 'src/app/modules/ui/card/card.module';\n@NgModule({\n  declarations: [\n\t  VisitorComponent,\n\t  VisitorSetupComponent,\n\t  VisitorCheckinComponent,\n\t  VisitorCheckoutComponent,\n\t  VisitorExpectedVisitorComponent,\n    VisitorReportsComponent,\n    VisitorHistoryComponent,\n    CheckinVisitorComponent,\n    VisitorReportsDataComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    VisitorRoutingModule,\n    CondoCardModule\n  ],\n  bootstrap: [ VisitorComponent ]\n})\nexport class VisitorModule { }\n"]}