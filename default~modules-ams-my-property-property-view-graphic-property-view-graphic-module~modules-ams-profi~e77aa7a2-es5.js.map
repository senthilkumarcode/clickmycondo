{"version":3,"sources":["webpack:///node_modules/ngx-cookie-service/__ivy_ngcc__/fesm2015/ngx-cookie-service.js","webpack:///src/app/modules/ams/profile-settings/components/add-property-dialog/add-property-dialog.component.html","webpack:///src/app/modules/ams/profile-settings/components/add-property-dialog/add-property-dialog.component.scss","webpack:///src/app/modules/ams/profile-settings/components/add-property-dialog/add-property-dialog.component.ts"],"names":["CookieService","document","platformId","documentIsAccessible","name","encodeURIComponent","regExp","getCookieRegExp","exists","test","cookie","check","result","exec","safeDecodeURIComponent","cookies","split","forEach","currentCookie","cookieName","cookieValue","replace","value","expires","path","domain","secure","sameSite","cookieString","dateExpires","Date","getTime","toUTCString","console","warn","set","getAll","hasOwnProperty","escapedName","RegExp","encodedURIComponent","decodeURIComponent","_a","ɵfac","CookieService_Factory","t","ctorParameters","type","undefined","decorators","args","ɵprov","factory","token","providedIn","AddPropertyDialogComponent","lookupService","apartmentService","facilityService","cookieService","propertyService","assetService","dialogRef","data","propertyTypeList","unitList","facilityList","assetCategoryList","assetSubCategoryList","assetList","assetRawList","addPropertyParam","Number","get","key","log","getPropertyType","getLookUpParam","ApartmentId","LookupTypeId","getLookupValueByLookupTypeId","subscribe","resp","error","propertyPoitype","getUnitList","getAssetCategory","getAsset","getFacilityList","getUnitParam","apartmentBlockId","getApartmentBlockUnitByBlockId","getFacilityParam","apartmentId","getApartmentFacilitiesByApartmentId","queryParamBase","lookupTypeId","subCategoryLookupTypeId","getSubcategory","res","filter","id","assetCategory","subCategory","getAllAsset","getAllAssetByApartmentId","assetSubcategoryId","assetSubCategory","push","poiId","unitData","Object","apartmentBlockUnitId","blockUnitId","item","isActive","close","insertedOn","toISOString","updatedOn","insertedBy","parseInt","addProperty","propertyPoi","addPropertyPoi","message","assignUnitData","updatePropertyPoi","selector","template"],"mappings":"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","file":"default~modules-ams-my-property-property-view-graphic-property-view-graphic-module~modules-ams-profi~e77aa7a2-es5.js","sourcesContent":["import { __decorate, __param } from 'tslib';\nimport { Inject, InjectionToken, PLATFORM_ID, ɵɵdefineInjectable, ɵɵinject, Injectable } from '@angular/core';\nimport { isPlatformBrowser, DOCUMENT } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nlet CookieService = class CookieService {\n    constructor(\n    // The type `Document` may not be used here. Although a fix is on its way,\n    // we will go with `any` for now to support Angular 2.4.x projects.\n    // Issue: https://github.com/angular/angular/issues/12631\n    // Fix: https://github.com/angular/angular/pull/14894\n    document, \n    // Get the `PLATFORM_ID` so we can check if we're in a browser.\n    platformId) {\n        this.document = document;\n        this.platformId = platformId;\n        this.documentIsAccessible = isPlatformBrowser(this.platformId);\n    }\n    /**\n     * @param name Cookie name\n     * @returns boolean - whether cookie with specified name exists\n     */\n    check(name) {\n        if (!this.documentIsAccessible) {\n            return false;\n        }\n        name = encodeURIComponent(name);\n        const regExp = this.getCookieRegExp(name);\n        const exists = regExp.test(this.document.cookie);\n        return exists;\n    }\n    /**\n     * @param name Cookie name\n     * @returns property value\n     */\n    get(name) {\n        if (this.documentIsAccessible && this.check(name)) {\n            name = encodeURIComponent(name);\n            const regExp = this.getCookieRegExp(name);\n            const result = regExp.exec(this.document.cookie);\n            return this.safeDecodeURIComponent(result[1]);\n        }\n        else {\n            return '';\n        }\n    }\n    /**\n     * @returns all the cookies in json\n     */\n    getAll() {\n        if (!this.documentIsAccessible) {\n            return {};\n        }\n        const cookies = {};\n        const document = this.document;\n        if (document.cookie && document.cookie !== '') {\n            document.cookie.split(';').forEach((currentCookie) => {\n                const [cookieName, cookieValue] = currentCookie.split('=');\n                cookies[this.safeDecodeURIComponent(cookieName.replace(/^ /, ''))] = this.safeDecodeURIComponent(cookieValue);\n            });\n        }\n        return cookies;\n    }\n    /**\n     * @param name     Cookie name\n     * @param value    Cookie value\n     * @param expires  Number of days until the cookies expires or an actual `Date`\n     * @param path     Cookie path\n     * @param domain   Cookie domain\n     * @param secure   Secure flag\n     * @param sameSite OWASP samesite token `Lax`, `None`, or `Strict`. Defaults to `Lax`\n     */\n    set(name, value, expires, path, domain, secure, sameSite = 'Lax') {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        let cookieString = encodeURIComponent(name) + '=' + encodeURIComponent(value) + ';';\n        if (expires) {\n            if (typeof expires === 'number') {\n                const dateExpires = new Date(new Date().getTime() + expires * 1000 * 60 * 60 * 24);\n                cookieString += 'expires=' + dateExpires.toUTCString() + ';';\n            }\n            else {\n                cookieString += 'expires=' + expires.toUTCString() + ';';\n            }\n        }\n        if (path) {\n            cookieString += 'path=' + path + ';';\n        }\n        if (domain) {\n            cookieString += 'domain=' + domain + ';';\n        }\n        if (secure === false && sameSite === 'None') {\n            secure = true;\n            console.warn(`[ngx-cookie-service] Cookie ${name} was forced with secure flag because sameSite=None.` +\n                `More details : https://github.com/stevermeister/ngx-cookie-service/issues/86#issuecomment-597720130`);\n        }\n        if (secure) {\n            cookieString += 'secure;';\n        }\n        cookieString += 'sameSite=' + sameSite + ';';\n        this.document.cookie = cookieString;\n    }\n    /**\n     * @param name   Cookie name\n     * @param path   Cookie path\n     * @param domain Cookie domain\n     */\n    delete(name, path, domain, secure, sameSite = 'Lax') {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        this.set(name, '', new Date('Thu, 01 Jan 1970 00:00:01 GMT'), path, domain, secure, sameSite);\n    }\n    /**\n     * @param path   Cookie path\n     * @param domain Cookie domain\n     */\n    deleteAll(path, domain, secure, sameSite = 'Lax') {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        const cookies = this.getAll();\n        for (const cookieName in cookies) {\n            if (cookies.hasOwnProperty(cookieName)) {\n                this.delete(cookieName, path, domain, secure, sameSite);\n            }\n        }\n    }\n    /**\n     * @param name Cookie name\n     * @returns property RegExp\n     */\n    getCookieRegExp(name) {\n        const escapedName = name.replace(/([\\[\\]\\{\\}\\(\\)\\|\\=\\;\\+\\?\\,\\.\\*\\^\\$])/gi, '\\\\$1');\n        return new RegExp('(?:^' + escapedName + '|;\\\\s*' + escapedName + ')=(.*?)(?:;|$)', 'g');\n    }\n    safeDecodeURIComponent(encodedURIComponent) {\n        try {\n            return decodeURIComponent(encodedURIComponent);\n        }\n        catch (_a) {\n            // probably it is not uri encoded. return as is\n            return encodedURIComponent;\n        }\n    }\n};\nCookieService.ɵfac = function CookieService_Factory(t) { return new (t || CookieService)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(PLATFORM_ID)); };\nCookieService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: InjectionToken, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\n];\nCookieService.ɵprov = ɵɵdefineInjectable({ factory: function CookieService_Factory() { return new CookieService(ɵɵinject(DOCUMENT), ɵɵinject(PLATFORM_ID)); }, token: CookieService, providedIn: \"root\" });\nCookieService = __decorate([ __param(0, Inject(DOCUMENT)),\n    __param(1, Inject(PLATFORM_ID))\n], CookieService);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CookieService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.InjectionToken, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\n\n/*\n * Public API Surface of ngx-cookie-service\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CookieService };\n\n//# sourceMappingURL=ngx-cookie-service.js.map","export default \"<condo-card>\\n    <div CondoCardHeader>\\n        <div class=\\\"d-flex\\\">\\n            <h4>Add Property</h4>\\n        </div>\\n    </div>\\n    <div CondoCardBody>\\n        <div class=\\\"p-5\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-12\\\">\\n                    <div class=\\\"input-box\\\">\\n                        <label>Node Id</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" disabled [ngModel]=\\\"addPropertyParam.nodeId\\\"\\n                            name=\\\"nodeId\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-12\\\">\\n                    <div class=\\\"input-box\\\">\\n                        <label>POI Id</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" disabled [ngModel]=\\\"addPropertyParam.propertyPoiid\\\"\\n                            name=\\\"propertyPoiid\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12 mt-3 \\\">\\n                    <div class=\\\"select-box\\\">\\n                        <label>Property Type</label>\\n                        <select [(ngModel)]=\\\"addPropertyParam.propertyPoitype\\\" (change)=\\\"selectPropertyType()\\\"\\n                            name=\\\"propertyPoitype\\\" class=\\\"form-control\\\">\\n                            <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                            <option *ngFor=\\\"let item of propertyTypeList\\\" value=\\\"{{item.lookupValueId}}\\\">\\n                                {{item.lookupValueName}}</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12 mt-3\\\"\\n                    *ngIf=\\\"addPropertyParam.propertyPoitype == 318\\\">\\n                    <div class=\\\"select-box\\\">\\n                        <label>Units</label>\\n                        <select [(ngModel)]=\\\"addPropertyParam.blockUnitId\\\" name=\\\"blockUnitId\\\" class=\\\"form-control\\\">\\n                            <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                            <option *ngFor=\\\"let item of unitList\\\" value=\\\"{{item.apartmentBlockUnitId}}\\\">\\n                                {{item.apartmentBlockUnitNumber}}</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12 mt-3\\\"\\n                    *ngIf=\\\"addPropertyParam.propertyPoitype == 320\\\">\\n                    <div class=\\\"select-box\\\">\\n                        <label>Facility Type</label>\\n                        <select [(ngModel)]=\\\"addPropertyParam.facilityId\\\" name=\\\"facilityId\\\" class=\\\"form-control\\\">\\n                            <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                            <option *ngFor=\\\"let item of facilityList\\\" value=\\\"{{item.apartmentFacilityId}}\\\">\\n                                {{item.facilityName}}\\n                            </option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12 mt-3\\\"\\n                    *ngIf=\\\"addPropertyParam.propertyPoitype == 319\\\">\\n                    <div class=\\\"select-box\\\">\\n                        <label>Asset Category</label>\\n                        <select [(ngModel)]=\\\"assetCategory\\\" name=\\\"assetCategory\\\" (change)=\\\"getAssetSubCategory()\\\"\\n                            class=\\\"form-control\\\">\\n                            <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                            <option *ngFor=\\\"let item of assetCategoryList\\\" value=\\\"{{item.id}}\\\">{{item.name}}</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12 mt-3\\\"\\n                    *ngIf=\\\"addPropertyParam.propertyPoitype == 319 && assetCategory\\\">\\n                    <div class=\\\"select-box\\\">\\n                        <label>Asset Sub Category</label>\\n                        <select [(ngModel)]=\\\"assetSubCategory\\\" name=\\\"assetSubCategory\\\" (change)=\\\"selectAsset()\\\"\\n                            class=\\\"form-control\\\">\\n                            <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                            <option *ngFor=\\\"let item of assetSubCategoryList\\\" value=\\\"{{item.id}}\\\">{{item.name}}</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12 mt-3\\\"\\n                    *ngIf=\\\"addPropertyParam.propertyPoitype == 319 && assetCategory && assetSubCategory\\\">\\n                    <div class=\\\"select-box\\\">\\n                        <label>Asset</label>\\n                        <select [(ngModel)]=\\\"addPropertyParam.assetId\\\" name=\\\"assetId\\\" class=\\\"form-control\\\">\\n                            <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                            <option *ngFor=\\\"let item of assetList\\\" value=\\\"{{item.assetId}}\\\">{{item.assetName}}</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12 mt-3\\\">\\n                    <div class=\\\"select-box\\\">\\n                        <label>Infrastrcuture</label>\\n                        <select [(ngModel)]=\\\"addPropertyParam.infrastructureId\\\" name=\\\"infrastructureId\\\"\\n                            class=\\\"form-control\\\">\\n                            <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12 mt-3\\\">\\n                    <div class=\\\"select-box\\\">\\n                        <label>Operational Maintanance</label>\\n                        <select [(ngModel)]=\\\"addPropertyParam.opMaintenanceId\\\" name=\\\"opMaintenanceId\\\"\\n                            class=\\\"form-control\\\">\\n                            <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                        </select>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12 d-flex justify-content-end mt-3\\\">\\n                    <button mat-flat-button mat-dialog-close>Cancel</button>\\n                    <button mat-flat-button [color]=\\\"'primary'\\\" (click)=\\\"addProperty()\\\">Submit</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</condo-card>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3Byb2ZpbGUtc2V0dGluZ3MvY29tcG9uZW50cy9hZGQtcHJvcGVydHktZGlhbG9nL2FkZC1wcm9wZXJ0eS1kaWFsb2cuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { FacilityService } from 'src/app/api/controllers/Facility';\nimport { PropertyManagerService } from 'src/app/api/controllers/PropertyManager';\nimport { AssetService } from 'src/app/api/controllers/Asset';\n\n@Component({\n  selector: 'app-add-property-dialog',\n  templateUrl: './add-property-dialog.component.html',\n  styleUrls: ['./add-property-dialog.component.scss']\n})\nexport class AddPropertyDialogComponent implements OnInit {\n\n  public propertyTypeList: Array<any> = [];\n  public unitList: Array<any> = [];\n  public facilityList: Array<any> = [];\n  public assetCategoryList: Array<any> = [];\n  public assetSubCategoryList: Array<any> = [];\n  public assetList: Array<any> = [];\n  public assetRawList: Array<any> = [];\n  public assetCategory: any;\n  public assetSubCategory: any;\n  public addPropertyParam = {\n    \"propertyPoiid\": 0,\n    \"propertyPoitype\": 0,\n    \"nodeId\": 0,\n    \"x\": 0,\n    \"y\": 0,\n    \"id\": 0,\n    \"blockUnitId\": null,\n    \"assetId\": null,\n    \"facilityId\": null,\n    \"infrastructureId\": null,\n    \"opMaintenanceId\": null,\n    \"apartmentId\": Number(this.cookieService.get('apartmentId')),\n    \"isActive\": true,\n    \"insertedBy\": null,\n    \"insertedOn\": \"2020-07-06T14:48:10.120Z\",\n    \"updatedBy\": null,\n    \"updatedOn\": \"2020-07-06T14:48:10.120Z\"\n  }\n  constructor(\n    private lookupService: LookupService,\n    private apartmentService: ApartmentService,\n    private facilityService: FacilityService,\n    private cookieService: CookieService,\n    private propertyService: PropertyManagerService,\n    private assetService: AssetService,\n    public dialogRef: MatDialogRef<AddPropertyDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    for (const key in this.data) {\n      if(this.addPropertyParam.hasOwnProperty(key)){\n        this.addPropertyParam[key] = this.data[key];\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    console.log('........',this.addPropertyParam);\n    this.getPropertyType();\n  }\n\n\n\n  getPropertyType() {\n    let getLookUpParam = {\n      ApartmentId: Number(this.cookieService.get('apartmentId')),\n      LookupTypeId: 196\n    }\n    this.lookupService.getLookupValueByLookupTypeId(getLookUpParam).subscribe(\n      (resp: any) => {\n        this.propertyTypeList = resp;\n      },\n      error => {\n\n      }\n    )\n  }\n\n  selectPropertyType() {\n    switch (Number(this.addPropertyParam.propertyPoitype)) {\n      case 316:\n\n        break;\n      case 318:\n        this.getUnitList();\n        break;\n      case 319:\n        this.getAssetCategory();\n        this.getAsset();\n        break;\n      case 320:\n        this.getFacilityList();\n        break;\n      case 321:\n\n        break;\n      case 322:\n\n        break;\n\n\n      default:\n        break;\n    }\n  }\n\n  getUnitList() {\n    let getUnitParam = {\n      apartmentBlockId: this.data.apartmentBlockId\n    }\n    this.apartmentService.getApartmentBlockUnitByBlockId(getUnitParam).subscribe(\n      (resp: any) => {\n        this.unitList = resp;\n      }\n    )\n  }\n\n  getFacilityList() {\n    let getFacilityParam = {\n      apartmentId: Number(this.cookieService.get('apartmentId'))\n    }\n    this.facilityService.getApartmentFacilitiesByApartmentId(getFacilityParam).subscribe(\n      (resp: any) => {\n        this.facilityList = resp;\n      }\n    )\n  }\n\n  getAssetCategory() {\n    let queryParamBase = {\n      apartmentId: Number(this.cookieService.get('apartmentId')),\n      lookupTypeId: 19,\n      subCategoryLookupTypeId: 68,\n    };\n    this.lookupService.getSubcategory(queryParamBase).subscribe((res: any) => {\n      if (res) {\n        this.assetCategoryList = res ? res : [];\n      }\n    });\n  }\n\n  getAssetSubCategory() {\n    this.assetCategoryList.filter(key => {\n      if (key.id == this.assetCategory) {\n        this.assetSubCategoryList = key.subCategory;\n      }\n    })\n  }\n\n  getAsset() {\n    let getAllAsset = {\n      apartmentId: Number(this.cookieService.get('apartmentId'))\n    }\n    this.assetService.getAllAssetByApartmentId(getAllAsset).subscribe(\n      (resp: any) => {\n        this.assetRawList = resp;\n      }\n    )\n  }\n\n  selectAsset() {\n    this.assetRawList.filter(key => {\n      if (key.assetSubcategoryId == this.assetSubCategory) {\n        this.assetList.push(key);\n      }\n    })\n  }\n\n  assignUnitData(poiId){\n    let unitData:any = new Object();\n    unitData['type'] = \"318\";\n    unitData['poiId'] = poiId;\n    this.unitList.filter(key =>{\n      if(key.apartmentBlockUnitId == this.addPropertyParam.blockUnitId){\n        for (const item in key) {\n          if(key[item] === true && key[item] != null){\n            unitData[item] = item;\n          }\n        }\n      }\n    })\n    delete unitData.isActive;\n    this.dialogRef.close(unitData);\n  }\n\n  addProperty() {\n    this.addPropertyParam.insertedOn = new Date().toISOString();\n    this.addPropertyParam.updatedOn = new Date().toISOString();\n    this.addPropertyParam.insertedBy = parseInt(this.cookieService.get('userId'));\n    let addProperty = {\n      propertyPoi: this.addPropertyParam\n    }\n    this.propertyService.addPropertyPoi(addProperty).subscribe(\n      (resp:any) => {\n        if(resp && resp.message){\n          switch (this.addPropertyParam.propertyPoitype) {\n            case 316:\n      \n              break;\n            case 318:\n              this.assignUnitData(resp.message);\n              break;\n            case 319:\n             \n              break;\n            case 320:\n              break;\n            case 321:\n      \n              break;\n            case 322:\n      \n              break;\n      \n      \n            default:\n              break;\n          }\n        }\n      }\n    )\n  }\n\n  updateProperty() {\n    this.addPropertyParam.updatedOn = new Date().toISOString();\n    let addProperty = {\n      propertyPoi: this.addPropertyParam\n    }\n    this.propertyService.updatePropertyPoi(addProperty).subscribe(\n      resp => {\n\n      }\n    )\n  }\n\n}\n"]}