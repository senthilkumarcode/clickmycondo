{"version":3,"sources":["./src/app/modules/common/meetings/meeting-calendar/meeting-calendar.component.html","./src/app/modules/common/meetings/meeting-calendar/meeting-calendar-routing.module.ts","./src/app/modules/common/meetings/meeting-calendar/meeting-calendar.component.scss","./src/app/modules/common/meetings/meeting-calendar/meeting-calendar.component.ts","./src/app/modules/common/meetings/meeting-calendar/meeting-calendar.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,sYAAuU,E;;;;;;;;;;;;;;;;;;;ACA7S;AACc;AACiB;AAExE,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAC,EAAE,EAAE,SAAS,EAAC,oFAAwB,EAAC;CAC9C,CAAC;IAMW,4BAA4B,SAA5B,4BAA4B;CAAI;AAAhC,4BAA4B;IAJxC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,4BAA4B,CAAI;AAAJ;;;;;;;;;;;;;ACZzC;AAAe,6GAA8C,uMAAuM,E;;;;;;;;;;;;;;;;;;;;;ACAvM;AACU;AACD;AACL;AAGZ;IAUxC,wBAAwB,SAAxB,wBAAwB;IACnC,uBAAuB;IACvB,uCAAuC;IACvC,iCAAiC;IACjC,qBAAqB;IACrB,yBAAyB;IACzB,uBAAuB;IACvB,8DAA8D;IAC9D,OAAO;IACP,oBAAoB;IACpB,2CAA2C;IAC3C,wBAAwB;IACxB,6CAA6C;IAC7C,kDAAkD;IAClD,sEAAsE;IACtE,KAAK;IAEL,eAAe;IAEf,YACU,cAA6B,EAC7B,aAA2B,EAC3B,cAA6B,EAC9B,MAAiB;QAHhB,mBAAc,GAAd,cAAc,CAAe;QAC7B,kBAAa,GAAb,aAAa,CAAc;QAC3B,mBAAc,GAAd,cAAc,CAAe;QAC9B,WAAM,GAAN,MAAM,CAAW;IACvB,CAAC;IAEJ,2BAA2B;IAC3B,wCAAwC;IACxC,0FAA0F;IAC1F,wEAAwE;IACxE,2CAA2C;IAC3C,0BAA0B;IAC1B,sBAAsB;IACtB,kBAAkB;IAClB,UAAU;IACV,oDAAoD;IACpD,qBAAqB;IACrB,iCAAiC;IACjC,UAAU;IACV,UAAU;IACV,MAAM;IACN,IAAI;IAEJ,0BAA0B;IAC1B,wCAAwC;IACxC,8DAA8D;IAC9D,wEAAwE;IACxE,2CAA2C;IAC3C,0BAA0B;IAC1B,sBAAsB;IACtB,kBAAkB;IAClB,UAAU;IACV,oDAAoD;IACpD,qBAAqB;IACrB,iCAAiC;IACjC,UAAU;IACV,UAAU;IACV,MAAM;IACN,IAAI;IAEJ,qBAAqB;IACrB,mBAAmB;IACnB,oDAAoD;IACpD,MAAM;IACN,mFAAmF;IACnF,2BAA2B;IAC3B,8BAA8B;IAC9B,qCAAqC;IACrC,4FAA4F;IAC5F,wFAAwF;IACxF,6BAA6B;IAC7B,WAAW;IACX,2CAA2C;IAC3C,QAAQ;IACR,+BAA+B;IAC/B,OAAO;IACP,IAAI;IAEJ,QAAQ;QAEN,oFAAoF;QAEpF,yBAAyB;IAC3B,CAAC;CAEF;;YAlGQ,8EAAc;YAFd,oFAAa;YACb,mFAAc;YAId,kEAAS;;AAUL,wBAAwB;IANpC,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,oRAAgD;;KAEjD,CAAC;mFAsByB,8EAAc;QACf,oFAAa;QACZ,mFAAc;QACtB,kEAAS;GAvBf,wBAAwB,CAqFpC;AArFoC;;;;;;;;;;;;;;;;;;;;;;AChBI;AACM;AAEkC;AACT;AACZ;IAW/C,qBAAqB,SAArB,qBAAqB;CAAI;AAAzB,qBAAqB;IARjC,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,oFAAwB,CAAC;QACxC,OAAO,EAAE;YACP,4DAAY;YACZ,yEAAY;YACZ,6FAA4B;SAC7B;KACF,CAAC;GACW,qBAAqB,CAAI;AAAJ","file":"modules-common-meetings-meeting-calendar-meeting-calendar-module-es2015.js","sourcesContent":["export default \"<!-- <div class=\\\"meeting-view-calendar-wrapper\\\">\\n    <div class=\\\"main\\\">\\n        <app-loader *ngIf=\\\"!loadingData\\\"></app-loader>\\n        <div class=\\\"bg-card shadow\\\" *ngIf=\\\"loadingData\\\">\\n            <full-calendar #calendar [options]=\\\"calendarOptions\\\"></full-calendar>\\n        </div>\\n    </div>\\n</div> -->\\n\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MeetingCalendarComponent } from './meeting-calendar.component';\n\nconst routes: Routes = [\n  {path:'', component:MeetingCalendarComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MeetingCalendarRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tbW9uL21lZXRpbmdzL21lZXRpbmctY2FsZW5kYXIvbWVldGluZy1jYWxlbmRhci5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { MeetingService } from 'src/app/api/controllers/Meeting';\nimport * as moment from 'moment';\nimport _moment from \"moment-timezone\";\nimport { MatDialog } from '@angular/material/dialog';\n// import { CalendarOptions } from '@fullcalendar/angular';\nimport { MeetingEditDisplayComponent } from '../meeting-setting/meeting-edit-display/meeting-edit-display.component';\n\n@Component({\n  selector: 'app-meeting-calendar',\n  templateUrl: './meeting-calendar.component.html',\n  styleUrls: ['./meeting-calendar.component.scss']\n})\n\nexport class MeetingCalendarComponent implements OnInit {\n  // loadingData = false;\n  // calendarOptions: CalendarOptions = {\n  //   initialView: 'dayGridMonth',\n  //   headerToolbar: {\n  //     left: 'prev,next',\n  //     center: 'title',\n  //     right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n  //   },\n  //   aspectRatio: 2,\n  //   resourceAreaHeaderContent: 'Facility',\n  //   selectable : true, \n  //   select : this.appointmentAdd.bind(this),\n  //   eventClick: this.appointmentClick.bind(this),\n  //   schedulerLicenseKey: \"CC-Attribution-NonCommercial-NoDerivatives\"\n  // };\n\n  //timeZone:any;\n\n  constructor(\n    private meetingService:MeetingService,\n    private sharedService:SharedService,\n    private sessionService:SessionService,\n    public dialog: MatDialog\n  ) {}\n  \n  // appointmentClick(info) {\n  //   if(this.sessionService.isAdmin()) {\n  //     let data:any = {id:info.event.extendedProps.meetingId,type:'edit',from:'calendar'};\n  //     const dialogRef = this.dialog.open(MeetingEditDisplayComponent, {\n  //       panelClass: 'material-dialog-big',\n  //       height:'inherit',\n  //       width:'auto',\n  //       data:data\n  //     });\n  //     dialogRef.afterClosed().subscribe(result => {\n  //       if(result) {\n  //         this.getMeetingList();\n  //       }\n  //     });\n  //   }\n  // }\n\n  // appointmentAdd(event) {\n  //   if(this.sessionService.isAdmin()) {\n  //     let data = {type:'create',from:'calendar',event:event} \n  //     const dialogRef = this.dialog.open(MeetingEditDisplayComponent, {\n  //       panelClass: 'material-dialog-big',\n  //       height:'inherit',\n  //       width:'auto',\n  //       data:data\n  //     });\n  //     dialogRef.afterClosed().subscribe(result => {\n  //       if(result) {\n  //         this.getMeetingList();\n  //       }\n  //     });\n  //   }\n  // }\n\n  // getMeetingList() {\n  //   let params = {\n  //     apartmentId : this.sessionService.apartmentId\n  //   }\n  //   this.meetingService.getMeetingByApartmentId(params).subscribe((res : any) => {\n  //     if(res.length > 0) {\n  //       res.forEach((data)=>{\n  //         data.title = data.subject,\n  //         data.start =  `${moment(data.meetingDate).format('YYYY-MM-DD')} ${data.fromTime}`\n  //         data.end =  `${moment(data.meetingDate).format('YYYY-MM-DD')} ${data.toTime}`\n  //         data.color = 'red'\n  //       })\n  //       this.calendarOptions.events = res;\n  //     }\n  //     this.loadingData = true;\n  //   })\n  // }\n\n  ngOnInit(): void {\n\n    // this.sharedService.timezonecast.subscribe( timeZone => this.timeZone = timeZone )\n\n    // this.getMeetingList();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MeetingCalendarRoutingModule } from './meeting-calendar-routing.module';\nimport { MeetingCalendarComponent } from './meeting-calendar.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n  declarations: [MeetingCalendarComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MeetingCalendarRoutingModule\n  ]\n})\nexport class MeetingCalendarModule { }\n"],"sourceRoot":"webpack:///"}