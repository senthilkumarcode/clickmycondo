{"version":3,"sources":["webpack:///src/app/modules/ams/inventory/inventory-setup/inventory-setup-material-type/inventory-setup-material-type.component.html","webpack:///src/app/modules/ams/inventory/inventory-setup/inventory-setup-material-type/inventory-setup-material-type-routing.module.ts","webpack:///src/app/modules/ams/inventory/inventory-setup/inventory-setup-material-type/inventory-setup-material-type.component.scss","webpack:///src/app/modules/ams/inventory/inventory-setup/inventory-setup-material-type/inventory-setup-material-type.component.ts","webpack:///src/app/modules/ams/inventory/inventory-setup/inventory-setup-material-type/inventory-setup-material-type.module.ts"],"names":["routes","path","component","InventorySetupMaterialTypeRoutingModule","imports","forChild","exports","InventorySetupMaterialTypeComponent","dialog","injector","purchaseOrderService","staffService","sharedService","lookupService","sessionService","isDataLoaded","isError","ItemStartIndex","itemLimit","materialList","tempMaterialList","typeItemStartIndex","typeItemLimit","typeRow","searchType","unitFieldType","unitOrder","backupMaterialType","modalService","get","window","innerWidth","type","queryParamBase","ApartmentId","apartmentId","LookupTypeId","getLookupValueByLookupTypeId","subscribe","res","reverse","typeTotalItems","length","typeItemEndIndex","data","reqObj","lookupValueName","description","parseInt","userId","Date","param","lookupvalue","addLookupValue","code","getAllMaterial","openSnackBar","error","lookupValueId","updateLookupValue","message","currMaterialIndex","errorMessage","index","findIndex","splice","showConfirmModal","unitlistdeleteindexcast","id","updateUserId","deleteLookupvalue","setTimeout","setUnitListDeleteIndex","console","log","selector","template","encapsulation","None","InventorySetupMaterialTypeModule","declarations"],"mappings":"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","file":"src-app-modules-ams-inventory-inventory-setup-inventory-setup-material-type-inventory-setup-material-type-module-es5.js","sourcesContent":["export default \"\\n<div class=\\\"inventory-setup-material-type-wrapper\\\">\\n\\n    <app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n\\n    <ng-container *ngIf=\\\"isError\\\">\\n\\n        <!-- Message -->\\n       <condo-message *ngIf=\\\"message\\\" [appearance]=\\\"message.appearance\\\" [showIcon]=\\\"message.showIcon\\\" [type]=\\\"message.type\\\" [@shake]=\\\"message.shake\\\">\\n         {{message.content}}\\n       </condo-message>\\n\\n      </ng-container>\\n\\n    <ng-container *ngIf=\\\"isDataLoaded\\\">\\n\\n        <condo-card>\\n            <div CondoCardHeader>\\n                <div class=\\\"d-flex\\\">\\n                    <div>\\n                        <h4>All Material Type</h4>\\n                        <p class=\\\"text-secondary\\\">{{materialList?.length}} Items</p>\\n                    </div>\\n                    <div class=\\\"ml-auto d-none d-md-block mr-3\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control  \\\" placeholder=\\\"Search...\\\" name=\\\"searchType\\\"\\n                            [(ngModel)]=\\\"searchType\\\">\\n                    </div>\\n                </div>\\n            </div>\\n            <div CondoCardBody>\\n                <form>\\n                    <table class=\\\"table\\\" [ngClass]=\\\"isMobileView()\\\">\\n                        <thead>\\n                            <tr>\\n                                <th scope=\\\"col\\\" (click)=\\\"sortUnitData('lookupValueName')\\\">Material Type Name\\n                                    <span [ngClass]=\\\"getFieldOrderBy('lookupValueName')\\\"></span></th>\\n                                <th scope=\\\"col\\\" (click)=\\\"sortUnitData('description')\\\">Descripition\\n                                    <span [ngClass]=\\\"getFieldOrderBy('description')\\\"></span></th>\\n                                <th scope=\\\"col\\\">Action</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <ng-container>\\n                                <tr class=\\\"create-box-shadow\\\">\\n                                    <td>\\n                                        <div class=\\\"input-box\\\">\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"typeName\\\"\\n                                                [(ngModel)]=\\\"typeRow.lookupValueName\\\">\\n                                        </div>\\n                                    </td>\\n                                    <td>\\n                                        <div class=\\\"input-box\\\">\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"descrip\\\"\\n                                                [(ngModel)]=\\\"typeRow.description\\\">\\n                                        </div>\\n                                    </td>\\n                                    <td>\\n                                        <mat-icon class=\\\"mt-4 p-1\\\" svgIcon=\\\"mat_outline:save\\\"\\n                                            [ngClass]=\\\"!typeRow.lookupValueName || !typeRow.description ?'custom-icon-disabled':''\\\"\\n                                            (click)=\\\"addMaterialType(typeRow)\\\"></mat-icon>\\n                                    </td>\\n                                </tr>\\n                            </ng-container>\\n                            <ng-container\\n                                *ngFor=\\\"let typeList of materialList | simpleSearch: searchType;let materialIndex=index\\\">\\n                                <tr>\\n                                    <td>\\n                                        <span\\n                                            [ngClass]=\\\"currMaterialIndex == materialIndex?'d-none':''\\\">{{typeList.lookupValueName}}</span>\\n    \\n                                        <div class=\\\"input-box\\\" *ngIf=\\\"currMaterialIndex == materialIndex\\\">\\n    \\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lookupValueName\\\"\\n                                                [(ngModel)]=\\\"typeList.lookupValueName\\\">\\n                                        </div>\\n                                    </td>\\n                                    <td>\\n                                        <span [ngClass]=\\\"currMaterialIndex == materialIndex?'d-none':''\\\">\\n                                            {{typeList.description}}\\n                                        </span>\\n    \\n                                        <div class=\\\"input-box\\\" *ngIf=\\\"currMaterialIndex == materialIndex\\\">\\n    \\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"description\\\"\\n                                                [(ngModel)]=\\\"typeList.description\\\">\\n                                        </div>\\n                                    </td>\\n                                    <td>\\n                                        <div class=\\\"d-flex  align-items-center\\\">\\n    \\n                                            <span\\n                                                [ngClass]=\\\"currMaterialIndex == materialIndex?'d-none':''\\\">\\n                                                <mat-icon [svgIcon]=\\\"'feather:edit'\\\" class=\\\"pt-2\\\"\\n                                                    (click)=\\\"currMaterialIndex = materialIndex;setCurrentData(typeList)\\\"></mat-icon>\\n                                            </span>\\n                                            <div class=\\\"pt-3 d-flex\\\">\\n                                                <mat-icon class=\\\"pt-1\\\" svgIcon=\\\"mat_outline:save\\\"\\n                                                    [ngClass]=\\\"!typeList.lookupValueName || !typeList.description ?'custom-icon-disabled':''\\\"\\n                                                    *ngIf=\\\"currMaterialIndex == materialIndex\\\"\\n                                                    (click)=\\\"updateMaterial(typeList)\\\"></mat-icon>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n                                                <mat-icon [svgIcon]=\\\"'close'\\\" class=\\\"pt-1\\\" title=\\\"cancel\\\"\\n                                                    *ngIf=\\\"currMaterialIndex == materialIndex\\\"\\n                                                    (click)=\\\"currMaterialIndex = -1;cancelMaterialType()\\\"></mat-icon>\\n                                            </div>\\n                                            <span\\n                                                [ngClass]=\\\"currMaterialIndex == materialIndex?'d-none':''\\\">\\n                                                <mat-icon [svgIcon]=\\\"'feather:trash-2'\\\"\\n                                                    class=\\\"pt-2 text-red-900\\\"\\n                                                    (click)=\\\"deleteRow(typeList)\\\"></mat-icon>\\n                                            </span>\\n                                        </div>\\n                                    </td>\\n                                </tr>\\n                            </ng-container>\\n                        </tbody>\\n                    </table>\\n    \\n                </form>\\t\\t\\t\\t\\n    \\n            </div>\\n        </condo-card>\\n\\n    </ng-container>\\n\\n</div>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { InventorySetupMaterialTypeComponent } from './inventory-setup-material-type.component';\n\n\nconst routes: Routes = [ {\n  path: '', component: InventorySetupMaterialTypeComponent\n} ];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InventorySetupMaterialTypeRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL2ludmVudG9yeS9pbnZlbnRvcnktc2V0dXAvaW52ZW50b3J5LXNldHVwLW1hdGVyaWFsLXR5cGUvaW52ZW50b3J5LXNldHVwLW1hdGVyaWFsLXR5cGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, Injector, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n\nimport { PurchaseOrderService } from 'src/app/api/controllers/PurchaseOrder';\nimport { StaffService } from 'src/app/api/controllers/Staff';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { ModalService } from 'src/app/shared/services/modal.service';\n\n@Component({\n  selector: 'app-inventory-setup-material-type',\n  templateUrl: './inventory-setup-material-type.component.html',\n  styleUrls: ['./inventory-setup-material-type.component.scss'],\n\tencapsulation: ViewEncapsulation.None,\n})\nexport class InventorySetupMaterialTypeComponent implements OnInit {\n\n  isDataLoaded:boolean = false;\n  isError:boolean = false;\n\n  ItemStartIndex: any = 0;\n\tItemEndIndex: any;\n\ttotalItems: any;\n\titemLimit: any = 10;\n\n  message: any;\n\n  materialList: any = [];\n\ttempMaterialList:any =[]\n\tdeleteMaterial: boolean;\n\tcurrCatIndex: number;\n\n  typeItemStartIndex: any = 0;\n\ttypeItemEndIndex: any;\n\ttypeTotalItems: any;\n\ttypeItemLimit: any = 10;\n\n  typeRow:any = {};\n  currMaterialIndex:any;\n\n  searchType:string = \"\";\n\n  unitFieldType: string = \"unitno\";\n\tunitOrder: boolean = false;\n\n  backupMaterialType:any = {};\n\n  modalService: any;\n\n  constructor(\n    public dialog: MatDialog,\n    private injector: Injector,\n    private purchaseOrderService: PurchaseOrderService,\n    private staffService: StaffService,\n    private sharedService: SharedService,\n    private lookupService: LookupService,\n    private sessionService: SessionService\n  ) { \n\n    this.modalService = this.injector.get(ModalService);\n\n  }\n\n  isMobileView() {\n\t\treturn window.innerWidth <= 767 ? 'table-responsive' : '';\n\t}\n\n  sortUnitData(type) {\n\t\tthis.unitFieldType = type;\n\t\tthis.unitOrder = !this.unitOrder;\n\t}\n\n  getFieldOrderBy(type) {\n\t\tif (this.unitFieldType == type) {\n\t\t\treturn this.unitOrder ? 'desc' : 'asc';\n\t\t}\n\t\telse return '';\n\t}\n\n  getAllMaterial() {\n\t\tlet queryParamBase: any = {};\n\t\tqueryParamBase = {\n\t\t\tApartmentId: this.sessionService.apartmentId,\n\t\t\tLookupTypeId: 186\n\t\t};\n\t\tthis.isDataLoaded = false;\n\t\tthis.lookupService.getLookupValueByLookupTypeId(queryParamBase).subscribe((res: any) => {\n\t\t\tif (res) {\n\t\t\t\tthis.isDataLoaded = true;\n\t\t\t\tthis.materialList = res ? res.reverse() : [];\n\t\t\t\tthis.tempMaterialList = this.materialList;\n\t\t\t\tthis.typeTotalItems = this.materialList.length;\n\t\t\t\t\n\t\t\t\tif (this.typeTotalItems > this.typeItemLimit) {\n\t\t\t\t\tthis.typeItemEndIndex = this.typeItemLimit;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.typeItemEndIndex = this.typeTotalItems;\n\t\t\t\t}\n\n\t\t\t}\n\t\t});\n\t}\n\taddMaterialType(data) {\n\t\tlet reqObj: any = {};\n\t\treqObj = {\n\t\t\t\"lookupValueId\": 0,\n\t\t\t'apartmentId': this.sessionService.apartmentId,\n\t\t\t\"lookupTypeId\": 186,\n\t\t\t\"lookupValueName\": data.lookupValueName,\n\t\t\t\"description\": data.description,\n\t\t\t\"isActive\": true,\n\t\t    \"insertedBy\": parseInt(this.sessionService.userId),\n\t\t\t\"insertedOn\": new Date(),\n\t\t\t\"updatedBy\": parseInt(this.sessionService.userId),\n\t\t\t\"updatedOn\": new Date(),\n\t\t\t\"isDisabled\": true\n\t\t};\n\t\tthis.isDataLoaded = false;\n\t\tlet param :any ={};\n\t\tparam.lookupvalue =reqObj;\n\t\tthis.lookupService.addLookupValue(param).subscribe((res: any) => {\n\t\t\tif (res.code == 200) {\n\t\t\t\tthis.isDataLoaded = true;\n\t\t\t\tthis.typeRow ={};\n\t\t\t\tthis.getAllMaterial();\n\t\t\t\tthis.sharedService.openSnackBar('Material Type created successFully','success');\n\t\t\t} else {\n\t\t\t\tthis.isDataLoaded = true;\n\t\t\t\tthis.sharedService.openSnackBar('Material Type already exists', 'error');\n\t\t\t}\n\t\t},(error)=>{\n\t\t\tthis.sharedService.openSnackBar('Server Error','error');\n\t\t});\n\t}\n\n\tupdateMaterial(data) {\n\t\tlet reqObj: any = {};\n\t\treqObj = {\n\t\t\t\"lookupValueId\":data.lookupValueId,\n\t\t\t\"lookupTypeId\": 186,\n\t\t\t\"lookupValueName\": data.lookupValueName,\n\t\t\t\"description\": data.description,\n\t\t\t'apartmentId': this.sessionService.apartmentId,\n\t\t\t\"isActive\": true,\n\t\t\t\"insertedBy\": parseInt(this.sessionService.userId),\n\t\t\t\"insertedOn\": new Date(),\n\t\t\t\"updatedBy\": parseInt(this.sessionService.userId),\n\t\t\t\"updatedOn\": new Date(),\n\t\t\t\"isDisabled\": true\n\t\t};\n\t\tthis.isDataLoaded = false;\n\t\tlet param :any ={};\n\t\tparam.lookupvalue =reqObj;\n\t\tthis.lookupService.updateLookupValue(param).subscribe((res: any) => {\n\t\t\tif (res.message) {\n\t\t\t\tthis.isDataLoaded = true;\n\t\t\t\tthis.currMaterialIndex=-1;\n\t\t\t\tthis.sharedService.openSnackBar('Material Type updated successfully','success');\n\t\t\t} else {\n\t\t\t\tthis.isDataLoaded = true;\n\t\t\t\tthis.sharedService.openSnackBar(res.errorMessage, 'error');\n\t\t\t}\n\t\t},(error)=>{\n\t\t\tthis.sharedService.openSnackBar('Server Error','error');\n\t\t});\n\t}\n\n  setCurrentData(data) {\n\t\tthis.backupMaterialType  = {...data}\n\t}\n\n  cancelMaterialType() {\n    let index = this.materialList.findIndex((data)=>data.lookupValueId == this.backupMaterialType.lookupValueId);\n\t\tthis.materialList.splice(index,1,this.backupMaterialType);\n  }\n\n  deleteRow(data) {\n\t\tthis.modalService.showConfirmModal(data.lookupValueId);\n\t}\n\n\n  ngOnInit(): void {\n\n    this.getAllMaterial();\n\n\tthis.sharedService.unitlistdeleteindexcast.subscribe(id => {\n\t\t\t\n\t\tif (id != null) {\n\n\t\t\tlet param = {\n\t\t\t\tlookupValueId: id,\n\t\t\t\tupdateUserId: this.sessionService.userId\n\t\t\t}\n\t\t\tthis.lookupService.deleteLookupvalue(param).subscribe((res: any) => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.sharedService.openSnackBar(\"Material Type deleted successfully\", 'success');\n\t\t\t\t\tthis.sharedService.setUnitListDeleteIndex(null);\n\t\t\t\t\tthis.getAllMaterial();\n\t\t\t\t}, 500)\n\t\t\t}, error => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\n\t\t}\n\t});\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nimport { CondoCardModule } from 'src/app/modules/ui/card/card.module';\nimport { SelectModule } from 'src/app/modules/ui/select/select.module';\nimport { ListModule } from 'src/app/modules/ui/list/list.module';\nimport { CondoMessageModule } from 'src/app/modules/ui/message/message.module';\nimport { HelpTooltipModule } from 'src/app/modules/ui/help-tooltip/help-tooltip.module';\n\nimport { InventorySetupMaterialTypeRoutingModule } from './inventory-setup-material-type-routing.module';\nimport { InventorySetupMaterialTypeComponent } from './inventory-setup-material-type.component';\n\n\n@NgModule({\n  declarations: [InventorySetupMaterialTypeComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    CondoCardModule,\n    SelectModule,\n    ListModule,\n    CondoMessageModule,\n    HelpTooltipModule,\n    InventorySetupMaterialTypeRoutingModule\n  ]\n})\nexport class InventorySetupMaterialTypeModule { }\n"]}