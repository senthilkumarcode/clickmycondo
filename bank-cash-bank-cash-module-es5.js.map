{"version":3,"sources":["webpack:///src/app/ams/bank-cash/bank-cash.component.html","webpack:///src/app/ams/bank-cash/components/bank-settings/bank-settings.component.html","webpack:///src/app/ams/bank-cash/bank-cash-routing.module.ts","webpack:///src/app/ams/bank-cash/bank-cash.component.scss","webpack:///src/app/ams/bank-cash/bank-cash.component.ts","webpack:///src/app/ams/bank-cash/bank-cash.module.ts","webpack:///src/app/ams/bank-cash/components/bank-settings/bank-settings.component.scss","webpack:///src/app/ams/bank-cash/components/bank-settings/bank-settings.component.ts"],"names":["routes","path","component","BankCashRoutingModule","imports","forChild","exports","BankCashComponent","selector","template","BankCashModule","declarations","BankSettingsComponent","injector","dialog","bankAccountService","lookupService","sharedService","cookieService","isBankLoaded","isBankSubmitted","isBankNew","isBankUpdate","alertMessage","isError","isSuccess","modalService","get","bank","item","id","showConfirmModal","acc","form","details","parseInt","bankName","branchName","accountNumber","accountHolderName","ifsc","isPrimary","Date","toISOString","addBankAccountDetails","subscribe","res","message","getAllBankAccountDetails","setAlertMessage","bankAccountData","filter","isActive","apartmentId","errorMessage","bankAccountDetailsId","updateBankAccountDetails","unitlistdeleteindexcast","console","log","params","deleteBy","deleteBankAccountDetails","type","setUnitListDeleteIndex","error"],"mappings":"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","file":"bank-cash-bank-cash-module-es5.js","sourcesContent":["export default \"<p>bank-cash works!</p>\\n\"","export default \"<div class=\\\"bank-setup-wrapper\\\">\\n\\n\\t<app-loader *ngIf=\\\"!isBankLoaded\\\"></app-loader>\\n\\n\\t<div class=\\\"category-list list-boxes\\\" *ngIf=\\\"isBankLoaded\\\">\\n\\t\\t<h4 class=\\\"main-title-mini\\\">Bank Accounts</h4>\\n\\t\\t<ng-container *ngFor=\\\"let item of bankAccountData; let i = index\\\">\\n\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"card-body nohover\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"icons\\\">\\n\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" (click)=\\\"showBankAccountInfo(unit)\\\"><i-feather class=\\\"icon view\\\" name=\\\"eye\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\"><i-feather class=\\\"icon edit\\\" name=\\\"edit\\\" (click)=\\\"updatebankAccount(item, i)\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" (click)=\\\"showConfirmModal(item.bankAccountDetailsId)\\\"><i-feather class=\\\"icon delete\\\" name=\\\"trash\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<h6>{{item.accountNumber}}</h6>\\n\\t\\t\\t\\t\\t\\t<h6 class=\\\"mb-3 mt-0\\\">{{item.accountHolderName}}</h6>\\n\\t\\t\\t\\t\\t\\t<p class=\\\"small\\\">{{item.bankName}} - {{item.branchName}}</p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</li>\\n\\t\\t</ng-container>\\n\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t<div class=\\\"card-body new text-center\\\">\\n\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" class=\\\"rounded-btn green\\\" (click)=\\\"addNewbankAccount()\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"icon\\\">+</div>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t<h6 class=\\\"tc-green\\\">Add Bank Account</h6>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</li>\\n\\t</div>\\n\\n\\t<div class=\\\"card mt-30\\\" *ngIf=\\\"isBankNew || isBankUpdate\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h6 *ngIf=\\\"isBankNew\\\">Add Bank Account</h6>\\n    \\t\\t\\t<h6 *ngIf=\\\"!isBankNew\\\">Update Bank Account</h6>\\n    \\t\\t</div>\\n    \\t\\t<div class=\\\"float-right\\\" (click)=\\\"removeBankBox()\\\">\\n    \\t\\t\\t<i-feather class=\\\"icon del\\\" name=\\\"x\\\"></i-feather>\\n    \\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\n\\t\\t\\t<app-alert-message [message]=\\\"alertTicketMessage\\\" [isError]=\\\"isError\\\"></app-alert-message>\\n\\n\\t\\t\\t<app-loader *ngIf=\\\"!isBankSubmitted\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"isBankSubmitted\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<form #addbankAccountForm = \\\"ngForm\\\" name=\\\"addbankAccountForm\\\" (ngSubmit)=\\\"submitbankAccountForm(addbankAccountForm)\\\"  novalidate>\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Bank Account No*</label>\\n\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"bankAccountNo\\\" [(ngModel)]=\\\"bank.accountNumber\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Bank Name*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"bankName\\\" [(ngModel)]=\\\"bank.bankName\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Bank Branch Name*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"branchName\\\" [(ngModel)]=\\\"bank.branchName\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Account Holder Name*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"accountHolderName\\\" [(ngModel)]=\\\"bank.accountHolderName\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>IFSC Code*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"accountifsc\\\" [(ngModel)]=\\\"bank.ifsc\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box d-inline-block oh\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group mt-sm-35\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-check recur-check float-left\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"accountisPrimary\\\" name=\\\"accountisPrimary\\\" [(ngModel)]=\\\"bank.isPrimary\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    <label class=\\\"form-check-label tiny\\\" for=\\\"accountisPrimary\\\">Is Primary</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline float-right mt-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addbankAccountForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t</div>\\n\\t</div>\\n\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from '../.././auth.guard';\n\nimport { BankCashComponent } from './bank-cash.component';\nimport { BankSettingsComponent } from './components/bank-settings/bank-settings.component';\n\nconst routes: Routes = [\n\t{ path: '', component: BankCashComponent},\n\t{ path: 'bank', component: BankCashComponent},\n\t{ path: 'settings', component: BankSettingsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BankCashRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9iYW5rLWNhc2gvYmFuay1jYXNoLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bank-cash',\n  templateUrl: './bank-cash.component.html',\n  styleUrls: ['./bank-cash.component.scss']\n})\nexport class BankCashComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BankCashRoutingModule } from './bank-cash-routing.module';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { BankCashComponent } from './bank-cash.component';\nimport { BankSettingsComponent } from './components/bank-settings/bank-settings.component';\n\n\n\n@NgModule({\n  declarations: [\n  \tBankCashComponent,\n  \tBankSettingsComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    BankCashRoutingModule\n  ]\n})\nexport class BankCashModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9iYW5rLWNhc2gvY29tcG9uZW50cy9iYW5rLXNldHRpbmdzL2Jhbmstc2V0dGluZ3MuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Injector, HostListener, ViewChild, TemplateRef } from '@angular/core';\n\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatDialogRef } from \"@angular/material/dialog\";\n\nimport { BankAccountService } from '../../../../api/services/bank-account.service';\nimport { LookupService } from '../../../../api/services/lookup.service';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-bank-settings',\n  templateUrl: './bank-settings.component.html',\n  styleUrls: ['./bank-settings.component.scss']\n})\nexport class BankSettingsComponent implements OnInit {\n\n  bankAccountData:any;\n\n  isBankLoaded:boolean = false;\n  isBankSubmitted:boolean = true;\n\n  isBankNew:boolean = false;\n  isBankUpdate:boolean = false;\n  \n  alertMessage:string = \"\";\n  isError:boolean = false; \n  isSuccess:boolean = false;\n\n  modalService:any;\n\n  bank:any; \n\n  constructor(\n  \t private injector: Injector,\n  \tpublic dialog: MatDialog,\n  \tprivate bankAccountService: BankAccountService,\n  \tprivate lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) { \n  \tthis.modalService = this.injector.get(ModalService);\n  }\n\n  addNewbankAccount(){\n  \tthis.isBankNew = true;\n  \tthis.isBankUpdate = false;\n  \tthis.bank = {};\n  }\n\n  updatebankAccount(item){\n  \tthis.isBankUpdate = true;\n  \tthis.isBankNew = false;\n  \tthis.bank = item;\n  }\n\n  removeBankBox(){\n  \tthis.isBankNew = false;\n  \tthis.isBankUpdate = false;\n  \tthis.isError = false;\n  }\n\n\n  showConfirmModal(id) {\n    this.modalService.showConfirmModal(id);\n  }\n\n  showBankAccountInfo(acc){\n\n  }\n\n  submitbankAccountForm(form) {\n\n  \tthis.isBankSubmitted = false;\n\n  \tif(this.isBankNew) {\n\n  \t\tlet details = {\n\n\t\t  \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n\t\t  \"bankName\": this.bank.bankName,\n\t\t  \"branchName\": this.bank.branchName,\n\t\t  \"accountNumber\": this.bank.accountNumber,\n\t\t  \"accountHolderName\": this.bank.accountHolderName,\n\t\t  \"ifsc\": this.bank.ifsc,\n\t\t  \"isPrimary\": this.bank.isPrimary,\n\t\t  \"isActive\": true,\n\t\t  \"insertedBy\": parseInt(this.cookieService.get('userId')),\n\t\t  \"insertedOn\": new Date().toISOString(),\n\t\t  \"updatedBy\": 0,\n\t\t  \"updatedOn\": \"2020-03-13T09:38:46.772Z\"\n\n\t\t}\n\n\t\tthis.bankAccountService.addBankAccountDetails(details).subscribe((res:any) => {\n\n\t  \t\tif(res.message) {\n\n\t  \t\t\t\n\t  \t\t\tthis.bankAccountService.getAllBankAccountDetails().subscribe((res:any) => {\n\n\t  \t\t\t\tthis.isBankSubmitted = true;\n\t  \t\t\t\tthis.isBankNew = false;\n  \t\t\t\t\tthis.isBankUpdate = false;\n\t\t  \t\t\t\n\t\t  \t\t\tthis.isSuccess = true;\n\t\t  \t\t\tthis.sharedService.setAlertMessage(\"Bank Account Added Successfully\");\n\t\t          \t\n\t\t          \tthis.bankAccountData = res.filter(item => {\n\t                \treturn item.isActive && (item.apartmentId == parseInt(this.cookieService.get('apartmentId')));\n\t              \t});\t\n\n\t  \t\t\t});\n\n\t  \t\t\t\n\n\t  \t\t}\n\t  \t\telse {\n\n\t  \t\t\tthis.isBankSubmitted = true;\t\n\t          \tthis.isError = true;\n\t          \tthis.alertMessage = res.errorMessage;\n\t  \t\t}\n\n  \t\t});\n\n  \t}\n\n  \telse {\n\n  \t\tlet details = {\n\n  \t\t  \"bankAccountDetailsId\": this.bank.bankAccountDetailsId,\n\t\t  \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n\t\t  \"bankName\": this.bank.bankName,\n\t\t  \"branchName\": this.bank.branchName,\n\t\t  \"accountNumber\": this.bank.accountNumber,\n\t\t  \"accountHolderName\": this.bank.accountHolderName,\n\t\t  \"ifsc\": this.bank.ifsc,\n\t\t  \"isPrimary\": this.bank.isPrimary,\n\t\t  \"isActive\": this.bank.isActive,\n\t\t  \"insertedBy\": parseInt(this.cookieService.get('userId')),\n\t\t  \"insertedOn\": new Date().toISOString(),\n\t\t  \"updatedBy\": parseInt(this.cookieService.get('userId')),\n\t\t  \"updatedOn\": new Date().toISOString()\n\n\t\t}\n\n\t\tthis.bankAccountService.updateBankAccountDetails(details).subscribe((res:any) => {\n\n\t  \t\tif(res.message) {\n\n\t  \t\t\tthis.bankAccountService.getAllBankAccountDetails().subscribe((res:any) => {\n\n\t  \t\t\t\tthis.isBankSubmitted = true;\n\t  \t\t\t\tthis.isBankNew = false;\n  \t\t\t\t\tthis.isBankUpdate = false;\n\n\t\t  \t\t\tthis.isSuccess = true;\n\t\t  \t\t\tthis.sharedService.setAlertMessage(\"Bank Account Update Successfully\");\n\t\t          \t\n\t\t          \tthis.bankAccountData = res.filter(item => {\n\t                \treturn item.isActive && (item.apartmentId == parseInt(this.cookieService.get('apartmentId')));\n\t              \t});\t\n\n\t  \t\t\t});\n\n\t  \t\t\t\n\n\t  \t\t}\n\t  \t\telse {\n\n\t  \t\t\tthis.isBankSubmitted = true;\t\n\t          \tthis.isError = true;\n\t          \tthis.alertMessage = res.errorMessage;\n\t  \t\t}\n\n  \t\t});\n\n  \t}\n\n  \t\n\n  }\n\n  ngOnInit() {\n\n  \tthis.bank = {};\n\n  \tthis.bankAccountService.getAllBankAccountDetails().subscribe((res:any) => {\n\n  \t\tthis.isBankLoaded = true;\n\n  \t\tthis.bankAccountData = res.filter(item => {\n        \treturn item.isActive && (item.apartmentId == parseInt(this.cookieService.get('apartmentId')));\n        });\n\n  \t});\n\n  \t// delete account\n    this.sharedService.unitlistdeleteindexcast.subscribe( id => {\n\n    \tconsole.log(id);\n\n      if(id != null){\n\n      \tthis.isBankLoaded = false;\n\n\t  \tvar params = {\n\t      bankAccountDetailsId: id,\n\t      deleteBy: parseInt(this.cookieService.get('userId'))\n\t    }\n\n\t  \tthis.bankAccountService.deleteBankAccountDetails(params).subscribe((res:any) => {\n\n\t  \t  this.bankAccountData = this.bankAccountData.filter((type) => type.bankAccountDetailsId !== id);\n\t\t  this.isBankLoaded = true;\n\t\t  this.sharedService.setAlertMessage(\"Bank Account deleted\");\n          this.sharedService.setUnitListDeleteIndex(null);\n\n\t\t}, error => {\n          console.log(error);\n        });\n        \n      }\n\n    });\n\n  }\n\n}\n"]}