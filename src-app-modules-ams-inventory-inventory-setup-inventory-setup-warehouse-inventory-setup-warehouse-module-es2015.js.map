{"version":3,"sources":["./src/app/modules/ams/inventory/inventory-setup/inventory-setup-warehouse/inventory-setup-warehouse.component.html","./src/app/modules/ams/inventory/inventory-setup/inventory-setup-warehouse/inventory-setup-warehouse-routing.module.ts","./src/app/modules/ams/inventory/inventory-setup/inventory-setup-warehouse/inventory-setup-warehouse.component.scss","./src/app/modules/ams/inventory/inventory-setup/inventory-setup-warehouse/inventory-setup-warehouse.component.ts","./src/app/modules/ams/inventory/inventory-setup/inventory-setup-warehouse/inventory-setup-warehouse.module.ts"],"names":[],"mappings":"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","file":"src-app-modules-ams-inventory-inventory-setup-inventory-setup-warehouse-inventory-setup-warehouse-module-es2015.js","sourcesContent":["export default \"<div class=\\\"inventory-setup-warehouse-wrapper\\\">\\n\\n    <app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n\\n    <ng-container *ngIf=\\\"isError\\\">\\n\\n        <!-- Message -->\\n       <condo-message *ngIf=\\\"message\\\" [appearance]=\\\"message.appearance\\\" [showIcon]=\\\"message.showIcon\\\" [type]=\\\"message.type\\\" [@shake]=\\\"message.shake\\\">\\n         {{message.content}}\\n       </condo-message>\\n\\n      </ng-container>\\n\\n    <ng-container *ngIf=\\\"isDataLoaded\\\">\\n\\n        <h4 class=\\\"my-4\\\">Settings</h4>\\n        \\n        <condo-card>\\n            <div CondoCardHeader>\\n                <div class=\\\"d-flex\\\">\\n                    <div>\\n                        <h5>All Warehouse</h5>\\n                        <p class=\\\"text-secondary\\\">{{totalItems}} Items</p>\\n                    </div>\\n                    <div class=\\\"ml-auto d-none d-md-block mr-3\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control  \\\" placeholder=\\\"Search...\\\"\\n                            [(ngModel)]=\\\"searchWarehouse\\\">\\n                    </div>\\n                </div>\\n            </div>\\n            <div CondoCardBody>\\n                <form>\\n                    <table class=\\\"table\\\" [ngClass]=\\\"isMobileView()\\\">\\n                        <thead>\\n                            <tr>\\n                                <th scope=\\\"col\\\" (click)=\\\"sortUnitData('warehouseName')\\\">Warehouse Name\\n                                    <span [ngClass]=\\\"getFieldOrderBy('warehouseName')\\\"></span></th>\\n                                <th scope=\\\"col\\\" (click)=\\\"sortUnitData('towerLocation')\\\">Tower Location\\n                                    <span [ngClass]=\\\"getFieldOrderBy('towerLocation')\\\"></span></th>\\n                                <th scope=\\\"col\\\" (click)=\\\"sortUnitData('descripition')\\\">Descripition\\n                                    <span [ngClass]=\\\"getFieldOrderBy('descripition')\\\"></span></th>\\n                                <th scope=\\\"col\\\" (click)=\\\"sortUnitData('owner')\\\">Owner\\n                                    <span [ngClass]=\\\"getFieldOrderBy('owner')\\\"></span></th>\\n                                <th scope=\\\"col\\\" (click)=\\\"sortUnitData('supervisor')\\\">Supervisor\\n                                    <span [ngClass]=\\\"getFieldOrderBy('supervisor')\\\"></span></th>\\n                                <th scope=\\\"col\\\">Action</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <ng-container>\\n                                <tr class=\\\"shadow\\\">\\n                                    <td class=\\\"td-container\\\">\\n                                        <div class=\\\"input-box\\\">\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"warName\\\"\\n                                                [(ngModel)]=\\\"row.warehouseName\\\">\\n                                                <help-tooltip title=\\\"wareHouseName\\\"></help-tooltip>\\n                                        </div>\\n                                    </td>\\n                                    <td>\\n                                        <div class=\\\"input-box\\\">\\n                                            <select class=\\\"form-control\\\" name=\\\"warLocation\\\"\\n                                                [(ngModel)]=\\\"row.towerLocation\\\">\\n                                                <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                                                <option *ngFor=\\\"let item of  locationList  | orderBy : 'description'\\\"\\n                                                    [value]=\\\"item.apartmentBlockId\\\">{{ item.description }}\\n                                                </option>\\n                                            </select>\\n                                        </div>\\n\\n                                    </td>\\n                                    <td class=\\\"td-description\\\">\\n\\n                                        <div class=\\\"input-box\\\">\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"descrip\\\"\\n                                                [(ngModel)]=\\\"row.descripition\\\">\\n                                                <help-tooltip title=\\\"inventoryDescription\\\"></help-tooltip>\\n                                        </div>\\n                                    </td>\\n                                    <td>\\n                                        <div class=\\\"select-box\\\">\\n                                            <select name=\\\"warOwner\\\" id=\\\"warOwner\\\" class=\\\"form-control\\\"\\n                                                [(ngModel)]=\\\"row.owner\\\">\\n                                                <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                                                <option *ngFor=\\\"let item of staffList  | orderBy : 'staffName'\\\" [ngValue]=\\\"item.staffId\\\"> \\n                                                    {{item.staffName}}, {{item.roleName}} - {{item.staffCategoryName}}\\n                                                </option>\\n                                            </select>\\n                                        </div>\\n                                    </td>\\n                                    <td>\\n                                        <div class=\\\"input-box\\\">\\n                                            <select class=\\\"form-control\\\" name=\\\"warSupervisor\\\" [(ngModel)]=\\\"row.supervisor\\\">\\n                                                <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                                                <option *ngFor=\\\"let item of staffList  | orderBy : 'staffName'\\\" [ngValue]=\\\"item.staffId\\\"> \\n                                                    {{item.staffName}}, {{item.roleName}} - {{item.staffCategoryName}}\\n                                                </option>\\n                                            </select>\\n                                        </div>\\n                                    </td>\\n                                    <td>\\n                                        <mat-icon class=\\\"mt-4 pt-1\\\" svgIcon=\\\"mat_outline:save\\\"\\n                                            [ngClass]=\\\"!row.warehouseName ?'custom-icon-disabled':''\\\"\\n                                            (click)=\\\"addWareHouse(row)\\\"></mat-icon>\\n\\n                                    </td>\\n                                </tr>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n                            </ng-container>\\n                            <ng-container\\n                                *ngFor=\\\"let list of warehouseData  | simpleSearch: searchWarehouse;let inventoryIndex=index\\\">\\n                                <tr>\\n                                    <td>\\n                                        <span [ngClass]=\\\"wareHouseIndex == inventoryIndex?'d-none':''\\\">\\n                                            {{list.warehouseName}}\\n                                        </span>\\n                                        <div class=\\\"input-box\\\" *ngIf=\\\"wareHouseIndex == inventoryIndex\\\">\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"warehouseName\\\"\\n                                                [(ngModel)]=\\\"list.warehouseName\\\">\\n                                        </div>\\n\\n                                    </td>\\n                                    <td>\\n                                        <span [ngClass]=\\\"wareHouseIndex == inventoryIndex?'d-none':''\\\">\\n                                            <span *ngFor=\\\" let loc of locationList\\\">\\n                                                <span\\n                                                    *ngIf=\\\"list.towerLocation == loc.apartmentBlockId\\\">{{loc.description}}</span>\\n                                            </span>\\n                                        </span>\\n\\n                                        <div class=\\\"input-box\\\" *ngIf=\\\"wareHouseIndex == inventoryIndex\\\">\\n                                            <select class=\\\"form-control\\\" name=\\\"location\\\"\\n                                                [(ngModel)]=\\\"list.towerLocation\\\">\\n                                                <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                                                <option *ngFor=\\\"let item of  locationList\\\"\\n                                                    [value]=\\\"item.apartmentBlockId\\\">{{ item.description }}\\n                                                </option>\\n                                            </select>\\n                                        </div>\\n                                    </td>\\n                                    <td>\\n                                        <span [ngClass]=\\\"wareHouseIndex == inventoryIndex?'d-none':''\\\">\\n                                            {{list.descripition}}\\n                                        </span>\\n\\n                                        <div class=\\\"input-box\\\" *ngIf=\\\"wareHouseIndex == inventoryIndex\\\">\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"descripition\\\"\\n                                                [(ngModel)]=\\\"list.descripition\\\">\\n                                        </div>\\n\\n                                    </td>\\n                                    <td>\\n\\n                                        <span [ngClass]=\\\"wareHouseIndex == inventoryIndex?'d-none':''\\\">\\n                                            <span> {{list.ownerLabel}} </span>\\n                                        </span>\\n\\n                                        <div class=\\\"input-box\\\" *ngIf=\\\"wareHouseIndex == inventoryIndex\\\">\\n                                            <select class=\\\"form-control\\\" name=\\\"owner\\\" [(ngModel)]=\\\"list.owner\\\">\\n                                                <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                                                <option *ngFor=\\\"let item of staffList  | orderBy : 'staffName'\\\" [ngValue]=\\\"item.staffId\\\"> \\n                                                    {{item.staffName}}, {{item.roleName}} - {{item.staffCategoryName}}\\n                                                </option>\\n                                            </select>\\n\\n                                        </div>\\n                                    </td>\\n                                    <td>\\n                                        <span [ngClass]=\\\"wareHouseIndex == inventoryIndex?'d-none':''\\\">\\n                                            <span> {{list.supervisorLabel}} </span>\\n                                        </span>\\n                                        <div class=\\\"input-box\\\" *ngIf=\\\"wareHouseIndex == inventoryIndex\\\">\\n                                            <select class=\\\"form-control\\\" name=\\\"supervisor\\\" [(ngModel)]=\\\"list.supervisor\\\">\\n                                                <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                                                <option *ngFor=\\\"let item of staffList  | orderBy : 'staffName'\\\" [ngValue]=\\\"item.staffId\\\"> \\n                                                    {{item.staffName}}, {{item.roleName}} - {{item.staffCategoryName}}\\n                                                </option>\\n                                            </select>\\n                                        </div>\\n                                    </td>\\n                                    <td>\\n                                        <div class=\\\"d-flex align-items-center \\\">\\n\\n                                            <span [ngClass]=\\\"wareHouseIndex == inventoryIndex?'d-none':''\\\">\\n                                                <mat-icon [svgIcon]=\\\"'feather:edit'\\\" class=\\\"pt-2\\\"\\n                                                    (click)=\\\"wareHouseIndex = inventoryIndex;setCurrentData(list)\\\"></mat-icon>\\n                                            </span>\\n\\n                                            <div class=\\\"pt-3 d-flex\\\">\\n                                                <mat-icon class=\\\"pt-1\\\" svgIcon=\\\"mat_outline:save\\\"\\n                                                    [ngClass]=\\\"!list.warehouseId || !list.warehouseId || !list.towerLocation || !list.descripition || !list.owner || !list.supervisor?'custom-icon-disabled':''\\\"\\n                                                    *ngIf=\\\"wareHouseIndex == inventoryIndex\\\"\\n                                                    (click)=\\\"updateWareHouse(list)\\\"></mat-icon>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n                                                    <mat-icon [svgIcon]=\\\"'close'\\\" class=\\\"pt-1\\\" title=\\\"cancel\\\"\\n                                                    *ngIf=\\\"wareHouseIndex == inventoryIndex\\\"\\n                                                    (click)=\\\"wareHouseIndex = -1;cancelWarHouse()\\\"></mat-icon>\\n                                            </div>\\n                                            <span [ngClass]=\\\"wareHouseIndex == inventoryIndex?'d-none':''\\\">\\n                                                <mat-icon [svgIcon]=\\\"'feather:trash-2'\\\"\\n                                                    class=\\\"pt-2 text-red-900\\\"\\n                                                    (click)=\\\"deleteRow(list)\\\"></mat-icon>\\n                                            </span>\\n                                        </div>\\n                                    </td>\\n                                </tr>\\n                            </ng-container>\\n                        </tbody>\\n                    </table>\\n\\n                </form>\\n\\n\\n            </div>\\n        </condo-card>\\n\\n    </ng-container>\\n\\n</div>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { InventorySetupWarehouseComponent } from './inventory-setup-warehouse.component';\n\n\nconst routes: Routes = [ {\n  path: '', component: InventorySetupWarehouseComponent\n} ];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InventorySetupWarehouseRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL2ludmVudG9yeS9pbnZlbnRvcnktc2V0dXAvaW52ZW50b3J5LXNldHVwLXdhcmVob3VzZS9pbnZlbnRvcnktc2V0dXAtd2FyZWhvdXNlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, Inject, Injector, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n\nimport { PurchaseOrderService } from 'src/app/api/controllers/PurchaseOrder';\nimport { StaffService } from 'src/app/api/controllers/Staff';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { ModalService } from 'src/app/shared/services/modal.service';\n\n\n@Component({\n  selector: 'app-inventory-setup-warehouse',\n  templateUrl: './inventory-setup-warehouse.component.html',\n  styleUrls: ['./inventory-setup-warehouse.component.scss'],\n\tencapsulation: ViewEncapsulation.None,\n})\nexport class InventorySetupWarehouseComponent implements OnInit {\n\n\n  \tisDataLoaded:boolean = false;\n  \tisError:boolean = false;\n\n\tItemStartIndex: any = 0;\n\tItemEndIndex: any;\n\ttotalItems: any;\n\titemLimit: any = 10;\n\n\tsearchWarehouse:any;\n\n\tunitFieldType: string = \"unitno\";\n\tunitOrder: boolean = false;\n\n\trow: any = {};\n\tlocationList: any;\n\tstaffList: any;\n\n\tmessage: any;\n\n\twarehouseData: any = [];\n\ttempWarehouseData: any = []\n\twareHouseIndex: any;\n\tbackupWarhouse:any = {};\n  \n\n  \tmodalService: any;\n\n  constructor(\n    public dialog: MatDialog,\n    private injector: Injector,\n    private purchaseOrderService: PurchaseOrderService,\n    private staffService: StaffService,\n    private sharedService: SharedService,\n    private lookupService: LookupService,\n    private sessionService: SessionService\n  ) {\n\n    this.modalService = this.injector.get(ModalService);\n\n   }\n\n  isMobileView() {\n\t\treturn window.innerWidth <= 767 ? 'table-responsive' : '';\n\t}\n\n  sortUnitData(type) {\n\t\tthis.unitFieldType = type;\n\t\tthis.unitOrder = !this.unitOrder;\n\t}\n\n  getFieldOrderBy(type) {\n\t\tif (this.unitFieldType == type) {\n\t\t\treturn this.unitOrder ? 'desc' : 'asc';\n\t\t}\n\t\telse return '';\n\t}\n\n  filterWareHouse(value) {\n    this.warehouseData = this.tempWarehouseData.filter((item: any) =>{\n      item.warehouseName.toString().toLowerCase().indexOf(value.toLowerCase()) > -1;\n    })\n  }\n\n  getAllStaff() {\n\t\tlet staffParms = {\n\t\t\tapartmentId: this.sessionService.apartmentId,\n\t\t\troleTypeIds: this.sessionService.roleTypeId\n\t\t}\n\t\tthis.staffService.getAllStaffs(staffParms).subscribe((res:any) => {\n\t\t\tif(res.length) {\n\t\t\t\tthis.staffList = res;\n\t\t\t}\n\t\t},error => {\n\t\t\tconsole.log(error)\n\t\t});\n\t}\n\n  getAllGetAllWarehouse() {\n\t\tlet queryParamBase: any = {};\n\t\tqueryParamBase = {\n\t\t\tapartmentId: this.sessionService.apartmentId\n\n\t\t};\n\t\tthis.isDataLoaded = false;\n\t\tthis.purchaseOrderService.getAllWarehouseByApartmentId(queryParamBase).subscribe((res: any) => {\n\t\t\tif (res) {\n\t\t\t\tthis.warehouseData = res && res.length > 0 ? res.reverse() : [];\n\t\t\t\tthis.isDataLoaded = true;\n\t\t\t\tthis.tempWarehouseData = this.warehouseData;\n\t\t\t\tthis.totalItems = this.warehouseData.length;\n\t\t\t\tif (this.warehouseData && this.warehouseData.length > 0) {\n\t\t\t\t\tthis.warehouseData.filter(val => {\n\t\t\t\t\t\tif (val.warehouseName == '') {\n\t\t\t\t\t\t\tdelete val.warehouseName;\n\t\t\t\t\t\t\tdelete val.warehouseId;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\n\t\t\t\tif (this.totalItems > this.itemLimit) {\n\t\t\t\t\tthis.ItemEndIndex = this.itemLimit;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.ItemEndIndex = this.totalItems;\n\t\t\t\t}\n\n\n\t\t\t}\n\t\t});\n\t}\n\n  addWareHouse(data) {\n\n\t\t\n    \tlet reqObj = {\n\t\t\t\"warehouseId\": data.warehouseId,\n\t\t\t\"apartmentId\": this.sessionService.apartmentId,\n\t\t\t\"warehouseName\": data.warehouseName,\n\t\t\t\"towerLocation\": data.towerLocation,\n\t\t\t\"unitOfMeasureId\": null,\n\t\t\t\"descripition\": data.descripition,\n\t\t\t\"owner\": data.owner,\n\t\t\t\"supervisor\": data.supervisor,\n\t\t\t\"isActive\": true,\n\t\t\t\"insertedBy\": this.sessionService.userId,\n\t\t\t\"insertedOn\": new Date().toISOString,\n\t\t\t\"updatedBy\": null,\n\t\t\t\"updatedOn\": null,\n\t\t}\n\t\t\n\t\tlet params:any = {\n\t\t\twarehouseobj: reqObj\n\t\t}\n\n\t\tthis.purchaseOrderService.addWarehouse(params).subscribe((res: any) => {\n\t\t\tif (res.message) {\n\t\t\t\tthis.sharedService.openSnackBar('Warehouse added successfully','success');\n\t\t\t\tthis.isDataLoaded = true;\n\t\t\t\tthis.row = {};\n\t\t\t\tthis.getAllGetAllWarehouse();\n\t\t\t}\n\n\t\t});\n\t}\n\n\tupdateWareHouse(data) {\n\t\t\n\t\t\n    let reqObj = {\n\t\t\t\"warehouseId\": data.warehouseId,\n\t\t\t\"apartmentId\": this.sessionService.apartmentId,\n\t\t\t\"warehouseName\": data.warehouseName,\n\t\t\t\"towerLocation\": data.towerLocation,\n\t\t\t\"unitOfMeasureId\": null,\n\t\t\t\"descripition\": data.descripition,\n\t\t\t\"owner\": data.owner,\n\t\t\t\"supervisor\": data.supervisor,\n\t\t\t\"isActive\": true,\n\t\t\t\"insertedBy\": data.insertedBy,\n\t\t\t\"insertedOn\": data.insertedOn,\n\t\t\t\"updatedBy\": this.sessionService.userId,\n\t\t\t\"updatedOn\": new Date().toISOString,\n\t\t}\n\n\t\tlet params:any = {\n\t\t\twarehouseobj: reqObj\n\t\t}\n\t\tthis.purchaseOrderService.updateWarehouse(params).subscribe((res: any) => {\n\t\t\tif (res) {\n\t\t\t\tthis.sharedService.openSnackBar(\"Warehouse updated successfully\", 'success');\n\t\t\t\tthis.isDataLoaded = true;\n\t\t\t\tthis.wareHouseIndex = -1;\n\t\t\t}\n\n\t\t});\n\t}\n\n  \tsetCurrentData(data) {\n\t\tthis.backupWarhouse  = {...data}\n\t}\n\n\tcancelWarHouse() {\n\t\tlet index = this.warehouseData.findIndex((data)=>data.warehouseId == this.backupWarhouse.warehouseId);\n\t\tthis.warehouseData.splice(index,1,this.backupWarhouse);\n\t}\n\n  \tdeleteRow(data) {\n\t\tthis.modalService.showConfirmModal(data.warehouseId);\n\t}\n\n  \n\n\tngOnInit(): void {\n\n\t\tthis.getAllGetAllWarehouse();\n\t\tthis.getAllStaff();\n\n\t\tthis.sharedService.unitlistdeleteindexcast.subscribe(id => {\n\t\t\t\n\t\t\tif (id != null) {\n\n\t\t\t\tlet param = {\n\t\t\t\t\tapartmentId: this.sessionService.apartmentId,\n\t\t\t\t\twarehouseId: id,\n\t\t\t\t\tdeleteBy: parseInt(this.sessionService.userId)\n\t\t\t\t}\n\n\t\t\t\tthis.purchaseOrderService.deleteWarehouse(param).subscribe((res: any) => {\n\t\t\t\t\tthis.getAllGetAllWarehouse();\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.sharedService.openSnackBar(\"Warehouse deleted successfully\", 'success');\n\t\t\t\t\t\tthis.sharedService.setUnitListDeleteIndex(null);\n\t\t\t\t\t}, 500)\n\t\t\t\t}, error => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nimport { CondoCardModule } from 'src/app/modules/ui/card/card.module';\nimport { SelectModule } from 'src/app/modules/ui/select/select.module';\nimport { ListModule } from 'src/app/modules/ui/list/list.module';\nimport { CondoMessageModule } from 'src/app/modules/ui/message/message.module';\nimport { HelpTooltipModule } from 'src/app/modules/ui/help-tooltip/help-tooltip.module';\n\nimport { InventorySetupWarehouseRoutingModule } from './inventory-setup-warehouse-routing.module';\nimport { InventorySetupWarehouseComponent } from './inventory-setup-warehouse.component';\n\n\n@NgModule({\n  declarations: [InventorySetupWarehouseComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    CondoCardModule,\n    SelectModule,\n    ListModule,\n    CondoMessageModule,\n    HelpTooltipModule,\n    InventorySetupWarehouseRoutingModule\n  ]\n})\nexport class InventorySetupWarehouseModule { }\n"],"sourceRoot":"webpack:///"}