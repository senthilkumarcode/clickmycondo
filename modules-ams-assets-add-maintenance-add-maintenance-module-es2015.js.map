{"version":3,"sources":["./src/app/modules/ams/assets/add-maintenance/add-maintenance.component.html","./src/app/modules/ams/assets/add-maintenance/add-maintenance-routing.module.ts","./src/app/modules/ams/assets/add-maintenance/add-maintenance.component.scss","./src/app/modules/ams/assets/add-maintenance/add-maintenance.component.ts","./src/app/modules/ams/assets/add-maintenance/add-maintenance.module.ts"],"names":[],"mappings":"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","file":"modules-ams-assets-add-maintenance-add-maintenance-module-es2015.js","sourcesContent":["export default \"<div class=\\\"add-maintenance-assets-wrapper\\\">\\n\\t<div class=\\\"main\\\">\\n\\t\\t<condo-message class=\\\"mb-3\\\" *ngIf=\\\"message\\\"\\n\\t\\t\\t[appearance]=\\\"message.appearance\\\"\\n\\t\\t\\t[showIcon]=\\\"message.showIcon\\\"\\n\\t\\t\\t[type]=\\\"message.type\\\"\\n\\t\\t\\t[@shake]=\\\"message.shake\\\">\\n\\t\\t\\t{{message.content}}\\n\\t\\t</condo-message>\\n\\t\\t<div class=\\\"d-flex justify-content-between\\\">\\n\\t\\t\\t<h4 class=\\\"mb-4\\\">\\t\\t\\t\\n\\t\\t\\t\\t<span *ngIf=\\\"!isEdit\\\">Create Asset Maintenance </span>\\n\\t\\t\\t\\t<span *ngIf=\\\"isEdit\\\">Edit Asset Maintenance </span>\\t\\t\\t\\n\\t\\t\\t</h4>\\t\\t\\t\\n\\t\\t</div>\\n\\t\\t<app-loader *ngIf=\\\"isAssetLoaded\\\"></app-loader>\\n\\t\\t<form name=\\\"addMaintenanceForm\\\" #addMaintenanceForm=\\\"ngForm\\\" novalidate>\\n\\t\\t\\t<div class=\\\"bg-card shadow\\\">\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t\\t\\t\\t<condo-select\\n\\t\\t\\t\\t\\t\\tlabelText=\\\"Select Asset\\\"                                     \\n\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t fieldPlaceholder=\\\"Select Asset\\\"\\n\\t\\t\\t\\t\\t\\t [fieldList]=\\\"assetList\\\"                                     \\n\\t\\t\\t\\t\\t\\t fieldValue=\\\"customLabel\\\"\\n\\t\\t\\t\\t\\t\\t fieldId=\\\"assetId\\\"\\n\\t\\t\\t\\t\\t\\t [fieldModel]=\\\"assetId\\\"\\n\\t\\t\\t\\t\\t\\t (fieldParams)=\\\"setAssetId($event)\\\"></condo-select>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<mat-accordion>\\n\\t\\t\\t\\t<mat-expansion-panel [expanded] = \\\"true\\\">\\n\\t\\t\\t\\t\\t<mat-expansion-panel-header>\\n\\t\\t\\t\\t\\t\\t<mat-panel-title>Current Maintenance</mat-panel-title>\\n\\t\\t\\t\\t\\t</mat-expansion-panel-header>\\n\\t\\t\\t\\t\\t<mat-panel-description>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<condo-select\\n\\t\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"Maint Type\\\"                                     \\n\\t\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t fieldPlaceholder=\\\"Select Maint type\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t [fieldList]=\\\"mainType\\\"                                     \\n\\t\\t\\t\\t\\t\\t\\t\\t fieldValue=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t fieldId=\\\"id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t [fieldModel]=\\\"maintenance.maintenanceTypeId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t (fieldParams)=\\\"setMaintTypeId($event)\\\"></condo-select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<condo-select\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"Maint Subtype\\\"                                     \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldPlaceholder=\\\"Select Maint Subtype\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldList]=\\\"mainSubType\\\"                                     \\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldValue=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldId=\\\"id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldModel]=\\\"maintenance.maintenanceSubtypeId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(fieldParams)=\\\"setSubTypeId($event)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</condo-select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<app-datepicker\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"Planned Maintenance Date\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldName=\\\"maitainPlannedDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"date\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldModel]=\\\"maintenance.plannedMaintenanceDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(fieldParams)=\\\"getPlannedMaintenanceDate($event)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</app-datepicker>\\n\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<app-datepicker\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"Actual Maintenance Date\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldName=\\\"actualMaintenance\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"date\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldModel]=\\\"maintenance.actualMaintDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(fieldParams)=\\\"getActualMaintDate($event)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</app-datepicker>\\n\\n\\t\\t\\t\\t\\t\\t\\t</div> \\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<condo-select\\n\\t\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"Staff Incharge\\\"                                     \\n\\t\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t fieldPlaceholder=\\\"Select Staff\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t [fieldList]=\\\"staffList | orderBy : 'staffName'\\\"                                     \\n\\t\\t\\t\\t\\t\\t\\t\\t fieldValue=\\\"customLabel\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t fieldId=\\\"staffId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t [fieldModel]=\\\"maintenance.maintainedbyStaff\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t (fieldParams)=\\\"setStaffId($event)\\\"></condo-select>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\t\\n\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Maintenance by Vendor*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input name=\\\"isMaintainedbyStaff\\\" id=\\\"inactive\\\" [(ngModel)]=\\\"maintenance.isMaintainedbyStaff\\\"   (change)=\\\"maintenance.maintenanceByCompany =''\\\" [value]=\\\"true\\\" type=\\\"radio\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"inactive\\\">Yes</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input name=\\\"isMaintainedbyStaff\\\" id=\\\"active\\\" [(ngModel)]=\\\"maintenance.isMaintainedbyStaff\\\"  (change)=\\\"maintenance.maintenanceByCompany =''\\\" [value]=\\\"false\\\" type=\\\"radio\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"active\\\">No</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\"  *ngIf=\\\"maintenance.isMaintainedbyStaff\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Performed by Company/Vendor</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter Company/Vendor\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"Company\\\" [(ngModel)]=\\\"maintenance.maintenanceByCompany\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</div>  \\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\" *ngIf=\\\"isEdit\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Status</label>                 \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex\\\">                           \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\" *ngFor=\\\"let list of statusList;let i = index\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input name=\\\"status\\\" type=\\\"radio\\\" id=\\\"status{{i}}\\\" [(ngModel)]=\\\"maintenance.maintenanceStatusId\\\" [value]=\\\"list.lookupValueId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"radio-inline ml-2\\\" for=\\\"status{{i}}\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{list.lookupValueName | titlecase}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div> \\t\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Notes</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea placeholder=\\\"Enter Notes\\\" name=\\\"notes\\\" [(ngModel)]=\\\"maintenance.notes\\\" ></textarea>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</div>                                \\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</mat-panel-description>\\n\\t\\t\\t\\t</mat-expansion-panel>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<mat-expansion-panel>\\n\\t\\t\\t\\t\\t<mat-expansion-panel-header>\\n\\t\\t\\t\\t\\t\\t<mat-panel-title>Maintenance Expenses</mat-panel-title>\\n\\t\\t\\t\\t\\t</mat-expansion-panel-header>\\n\\t\\t\\t\\t\\t<mat-panel-description>\\t\\t\\t\\t\\t\\t  \\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Maintenance Labor Cost</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter Labor Cost\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"maintLaborCost\\\" OnlyNumber=\\\"true\\\" [(ngModel)]=\\\"maintenance.maintLaborCost\\\" (change)=\\\"totalAmt()\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Maintenance Parts Cost</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter Parts Cost\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"maintPartsCost\\\" OnlyNumber=\\\"true\\\" [(ngModel)]=\\\"maintenance.maintPartsCost\\\" (change)=\\\"totalAmt()\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>VAT</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter Vat\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"maintVat\\\" OnlyNumber=\\\"true\\\" [(ngModel)]=\\\"maintenance.maintVat\\\" (change)=\\\"totalAmt()\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>With Holding Tax</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter With Holding Tax\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"maintWithTax\\\" OnlyNumber=\\\"true\\\" [(ngModel)]=\\\"maintenance.maintWithTax\\\" (change)=\\\"totalAmt()\\\"  >\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Total Discount</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter Total Discount\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"totalTax\\\" OnlyNumber=\\\"true\\\" [(ngModel)]=\\\"maintenance.totalDiscount\\\" (change)=\\\"totalAmt()\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Total Billed Amount</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter Total Billed Amount\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"maintenanceTotalBilledAmt\\\" OnlyNumber=\\\"true\\\" readonly [(ngModel)]=\\\"maintenance.maintenanceTotalBilledAmt\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</mat-panel-description>\\n\\t\\t\\t\\t</mat-expansion-panel>\\n\\n\\t\\t\\t\\t<mat-expansion-panel>\\n\\t\\t\\t\\t\\t<mat-expansion-panel-header>\\n\\t\\t\\t\\t\\t\\t<mat-panel-title>Future Plan</mat-panel-title>\\n\\t\\t\\t\\t\\t</mat-expansion-panel-header>\\n\\t\\t\\t\\t\\t<mat-panel-description>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<app-datepicker\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"Next Planned Maint. Date\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfieldName=\\\"plannedDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"date\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[fieldModel]=\\\"maintenance.nextPlannedMaintenance\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(fieldParams)=\\\"getNextPlannedMaintenance($event)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</app-datepicker>\\n\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Alert/Remind Before Days</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter Remind me days\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"alertBeforeDays\\\" OnlyNumber=\\\"true\\\" [(ngModel)]=\\\"maintenance.alertBeforeDays\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<app-upload\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[fileIds]=\\\"maintenance.fileDetailsIds\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[isEdit]=\\\"isEdit\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(outputParams)=\\\"getFileIds($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t></app-upload>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</mat-panel-description>\\n\\t\\t\\t\\t</mat-expansion-panel>\\n\\n\\t\\t\\t\\t<!-- Dynamic Form -->\\n\\t\\t\\t\\t<mat-expansion-panel *ngIf=\\\"assetId && dynamicForm?.length > 0\\\">\\n\\t\\t\\t\\t\\t<mat-expansion-panel-header>\\n\\t\\t\\t\\t\\t\\t<mat-panel-title>Check List Form</mat-panel-title>\\n\\t\\t\\t\\t\\t</mat-expansion-panel-header>\\n\\t\\t\\t\\t\\t<mat-panel-description>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\" *ngFor=\\\"let data of dynamicForm;let i=index\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- Input Field -->\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\" *ngIf=\\\"data.type == 'text-field'\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{data.question}}</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" [name]=\\\"data.question\\\" [(ngModel)]=\\\"data.answer\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- Check Box -->\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\" *ngIf=\\\"data.type == 'check-box'\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{data.question}}</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-check\\\" *ngFor=\\\"let box of data.option;let j=index\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"checkbox{{i}}{{j}}\\\" name=\\\"{{box.name}}{{i}}{{j}}\\\" [(ngModel)]=\\\"box.answer\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"checkbox{{i}}{{j}}\\\">{{box.name}}</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- Radio Button -->\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box radio-box\\\" *ngIf=\\\"data.type == 'radio'\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{data.question}}</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\" *ngFor=\\\"let opt of data.option;let j=index\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input name=\\\"ques{{i}}index{{j}}\\\" id=\\\"{{i}}index{{j}}\\\" [(ngModel)]=\\\"data.answer\\\" [value]=\\\"opt.name\\\" type=\\\"radio\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"{{i}}index{{j}}\\\">{{opt.name}}</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- Date -->\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\" *ngIf=\\\"data.type == 'date'\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{data.question}}</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"data.question{{i}}\\\" [owlDateTime]=\\\"dynamicDate\\\" [owlDateTimeTrigger]=\\\"dynamicDate\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Date\\\"[(ngModel)]=\\\"data.answer\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<owl-date-time #dynamicDate [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"dynamicDate\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon svgIcon=\\\"feather:calendar\\\"></mat-icon>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</mat-panel-description>\\n\\t\\t\\t\\t</mat-expansion-panel>\\n\\t\\t\\t</mat-accordion>\\n\\t\\t\\t<div class=\\\"mt-4\\\">\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-12 text-right\\\">\\n\\t\\t\\t\\t\\t<button mat-flat-button *ngIf=\\\"!isEdit\\\"  [color]=\\\"'primary'\\\" (click)=\\\"addMaintenance()\\\" >Submit</button>\\n\\t\\t\\t\\t\\t<button mat-flat-button *ngIf=\\\"isEdit\\\"  [color]=\\\"'primary'\\\" (click)=\\\"updateMaintenance()\\\">Update</button>\\n\\t\\t\\t\\t\\t<button class=\\\"ml-2\\\" *ngIf=\\\"!isEdit\\\" mat-button routerLink=\\\"/ams/assets/view\\\">Cancel</button>\\n\\t\\t\\t\\t\\t<button class=\\\"ml-2\\\" *ngIf=\\\"isEdit\\\" mat-button routerLink=\\\"/ams/assets/manage-maintenance\\\">Cancel</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t</form>\\n\\t</div>\\n</div>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from 'src/app/core/auth/guards/auth.guard';\n\nimport { AddMaintenanceComponent } from './add-maintenance.component';\n\n\nconst routes: Routes = [\n  { path: '', component: AddMaintenanceComponent, canActivate: [AuthGuard]},\n  { path: ':id', component: AddMaintenanceComponent, canActivate: [AuthGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AddMaintenanceRoutingModule { }\n","export default \".cardOuter {\\n  padding: 25px 20px;\\n}\\n\\n.cancelBtn {\\n  background: white;\\n  border: 1px solid #dadada;\\n}\\n\\n.uploadbtn {\\n  padding-top: 25px;\\n  margin: 0px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9hbXMvYXNzZXRzL2FkZC1tYWludGVuYW5jZS9hZGQtbWFpbnRlbmFuY2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBQTtBQUNKOztBQUNBO0VBRUksaUJBQUE7RUFDQSx5QkFBQTtBQUNKOztBQUNBO0VBQ0ksaUJBQUE7RUFDQSxXQUFBO0FBRUoiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2Ftcy9hc3NldHMvYWRkLW1haW50ZW5hbmNlL2FkZC1tYWludGVuYW5jZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkT3V0ZXIge1xuICAgIHBhZGRpbmc6IDI1cHggMjBweDsgXG59XG4uY2FuY2VsQnRuXG57XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RhZGFkYTtcbn1cbi51cGxvYWRidG57XG4gICAgcGFkZGluZy10b3A6IDI1cHg7XG4gICAgbWFyZ2luOiAwcHg7XG59Il19 */\";","import { Component, OnInit, ChangeDetectorRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { AssetService } from 'src/app/api/controllers/Asset';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { StaffService } from 'src/app/api/controllers/Staff';\nimport moment from 'moment';\nimport { CondoAnimations } from 'src/@condo/animations';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-add-maintenance',\n  templateUrl: './add-maintenance.component.html',\n  styleUrls: ['./add-maintenance.component.scss'],\n  encapsulation  : ViewEncapsulation.None,\n  animations   : CondoAnimations\n})\n\nexport class AddMaintenanceComponent implements OnInit {\n  @ViewChild('addMaintenanceForm') form:any;\n  public asset: any = {};\n  AssociationStaff: any = true;\n  public maintenance: any = {};\n  addMaintForm: any = {};\n  mainSubType: any = [];\n  public isEdit;\n  isFileAdded: boolean = false;\n  selectedFile: File;\n  fileList: File[] = [];\n  listOfFiles: any[] = [];\n  issueToStaff:any=[];\n\n  assetId: any;\n  isAssetLoaded: boolean;\n  mainType: any;\n  assetMaintenancePlanId: string;\n  assetList: any;\n  staffList:any =[];\n  assetSettings:any ={};\n\n  statusList:any = [];\n\n  dynamicForm = [];\n  frequencyDays:number;\n  message:any = null;\n\n  constructor(\n    private route: ActivatedRoute,\n    private assetService: AssetService,\n    private lookupService: LookupService,\n    private sessionService: SessionService,\n    private sharedService: SharedService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private staffService:StaffService,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private translateService: TranslateService\n  ) {\n\n  }\n\n  getPlannedMaintenanceDate(event) {\n    this.maintenance.plannedMaintenanceDate = event\n  }\n\n  getActualMaintDate(event) {\n    this.maintenance.actualMaintDate = event;\n    if(this.frequencyDays) {\n      this.maintenance.nextPlannedMaintenance =  moment(this.maintenance.actualMaintDate).add(this.frequencyDays, 'days');\n    } \n  }\n\n  getNextPlannedMaintenance(event) {\n    this.maintenance.nextPlannedMaintenance = event\n  }\n\n  ngOnInit(): void {\n    this.maintenance.isMaintainedbyStaff = true;\n    this.maintenance.maintenanceTypeId ='';\n    this.maintenance.maintenanceSubtypeId='';\n    this.maintenance.maintainedbyStaff ='';\n    // this.assetSettings = {\n\t\t// \tsingleSelection: true,\n\t\t// \ttext: \"Search\",\n\t\t// \tselectAllText: 'Select All',\n\t\t// \tunSelectAllText: 'UnSelect All',\n\t\t// \tenableSearchFilter: true,\n\t\t// \tbadgeShowLimit: 3,\n\t\t// \t// lazyLoading: true\n\t\t// };\n    this.activatedRoute.queryParams.subscribe(params => {\n      if (params && params.type == 'ADD') {\n        this.assetId = params.assetId;\n      }\n    });\n    this.route.paramMap.subscribe(params => {\n      if (params) {\n        this.assetMaintenancePlanId = params.get('id');\n        if (this.assetMaintenancePlanId) {\n          let params: any = {\n            assetMaintenancePlanId : this.assetMaintenancePlanId \n          };\n          this.isEdit = true;\n          this.assetService.getAllAssetMaintenancePlanById(params).subscribe((res: any) => {\n            this.maintenance = res[0] ? res[0] : {};\n            this.assetId = this.maintenance ? this.maintenance.assetId:'';\n            this.maintenance.isMaintainedbyStaff = !this.maintenance.isMaintainedbyStaff;\n            let customField = JSON.parse(this.maintenance.customFields);\n            if(customField && customField.length > 0 )\n            this.dynamicForm = customField;\n          });\n          //Status List\n          let queryParamBase = {\n            ApartmentId: this.sessionService.apartmentId,\n            LookupTypeId: 64,\n          };\n          this.lookupService.getLookupValueByLookupTypeId(queryParamBase).subscribe((res: any) => {\n            this.statusList = res;\n          });\n        }\n      }\n    });\n    this.getAllMaintenance();\n    this.getAsset();\n    this.getAllStaff();\n  }\n\n  setMainSubType(id) {\n    if (this.mainType && this.mainType.length > 0) {\n      this.mainType.filter(val => {\n        if (val.id == id) {\n          this.mainSubType = val.subCategory\n        }\n\n      })\n    }\n  }\n\n\tsetMaintTypeId(event){\n    this.maintenance.maintenanceTypeId = event[0].id;\n    this.mainSubType = event[0]?event[0].subCategory:[];\n  }\n\n  setSubTypeId(event){\n    this.maintenance.maintenanceSubtypeId = event[0].id;\n  }\n\n  setStaffId(event){\n    this.maintenance.maintainedbyStaff = event[0].staffId;\n  }\n\n  setAssetId(event){\n    this.assetId = event[0].assetId;\n    this.dynamicForm = [];\n    this.frequencyDays = event[0].maintFrequencyInDays; \n    if(event[0].customFields)\n    this.dynamicForm = JSON.parse(event[0].customFields);\n\n  }\n\n  getFileIds(event) {\n    this.maintenance.fileDetailsIds = event[0];\n  }\n\n\n  getAllStaff() {\n    let staffParms = {\n      apartmentId: this.sessionService.apartmentId,\n      roleTypeIds: '1,3'\n    }\n    this.staffService.getAllStaffs(staffParms).subscribe((res:any) => {\n      if(res && res.length) {\n        res.forEach((ele)=>{\n          ele.customLabel = `${ele.roleName} - ${ele.staffCategoryName} -- ${ele.staffName}`;\n        })\n        this.staffList = res;\n      }\n    });\n\t}\n\n  totalAmt(){\n    this.maintenance.maintenanceTotalBilledAmt = 0;\n    this.maintenance.maintenanceTotalBilledAmt += this.maintenance.maintLaborCost?Number(this.maintenance.maintLaborCost):0\n    this.maintenance.maintenanceTotalBilledAmt += this.maintenance.maintPartsCost?Number(this.maintenance.maintPartsCost):0\n    this.maintenance.maintenanceTotalBilledAmt += this.maintenance.maintVat?Number(this.maintenance.maintVat):0\n    this.maintenance.maintenanceTotalBilledAmt += this.maintenance.maintWithTax?Number(this.maintenance.maintWithTax):0\n    this.maintenance.maintenanceTotalBilledAmt -= this.maintenance.totalDiscount?Number(this.maintenance.totalDiscount):0\n  }\n\n  addMaintenance() {\n    this.message = null;\n    if(!this.form.valid){\n      window.scroll({\n        top: 0,\n        behavior: 'smooth'\n      });\n      // Show the validation message\n      this.translateService.get('VALIDATION').subscribe((data:any)=> {\n      this.message = {\n        appearance: 'outline',\n        content   : `${data.CONTENTREQUIREDFIELD}`,\n        shake     : true,\n        showIcon  : true,\n        type      : 'error'\n      };\n    });\n      //Mark for check\n      this._changeDetectorRef.markForCheck();\n    } else {\n      this.isAssetLoaded = true;\n      let params: any = {\n        assetMaintenancePlan : {\n          assetMaintenancePlanId : 0,\n          apartmentId : this.sessionService.apartmentId,\n          assetId : this.assetId,\n          notes : this.maintenance.notes,\n          maintenanceStatusId : 418,  //initially set Open Status\n          isActive : true,\n          insertedBy : this.sessionService.userId,\n          insertedOn : new Date().toISOString,\n          updatedBy : null,\n          updatedOn : null,\n          actualMaintDate : this.maintenance.actualMaintDate,\n          lastMaintenanceDate : this.maintenance.lastMaintenanceDate,\n          nextPlannedMaintenance : this.maintenance.nextPlannedMaintenance,\n          maintenanceTypeId : Number(this.maintenance.maintenanceTypeId),\n          maintenanceByCompany : this.maintenance.maintenanceByCompany ? this.maintenance.maintenanceByCompany : null,\n          maintenanceByPerson : null,\n          maintenanceCompanyContactNo : null,\n          maintLaborCost : this.maintenance.maintLaborCost,\n          maintPartsCost : this.maintenance.maintPartsCost,\n          maintVat : this.maintenance.maintVat,\n          maintWithTax : this.maintenance.maintWithTax,\n          maintenanceTotalBilledAmt : this.maintenance.maintenanceTotalBilledAmt,\n          isMaintainedbyStaff : !this.maintenance.isMaintainedbyStaff,\n          maintainedbyStaff : this.maintenance.maintainedbyStaff ? this.maintenance.maintainedbyStaff : null,\n          maintenanceSubtypeId : this.maintenance.maintenanceSubtypeId ? Number(this.maintenance.maintenanceSubtypeId) : null,\n          plannedMaintenanceDate : this.maintenance.plannedMaintenanceDate? this.maintenance.plannedMaintenanceDate:null, \n          totalDiscount : this.maintenance.totalDiscount? this.maintenance.totalDiscount:null,\n          alertBeforeDays : this.maintenance.alertBeforeDays? Number(this.maintenance.alertBeforeDays):null,\n          customFields : JSON.stringify(this.dynamicForm)\n        }\n      };\n      this.assetService.addAssetMaintenancePlan(params).subscribe((res: any) => {\n        if (res.message) {\n          this.sharedService.openSnackBar(\"Asset Maintenance added successfully\",'success');\n          this.isAssetLoaded = false;\n          this.router.navigate(['ams/assets/manage-maintenance']);\n        }\n      });\n    }\n  }\n\n  updateMaintenance() {\n    this.message = null;\n    if(!this.form.valid){\n      window.scroll({\n        top: 0,\n        behavior: 'smooth'\n      });\n      // Show the validation message\n      this.translateService.get('VALIDATION').subscribe((data:any)=> {\n      this.message = {\n        appearance: 'outline',\n        content   : `${data.CONTENTREQUIREDFIELD}`,\n        shake     : true,\n        showIcon  : true,\n        type      : 'error'\n      };\n      });\n      //Mark for check\n      this._changeDetectorRef.markForCheck();\n    } else {\n      this.isAssetLoaded = true;\n      let params: any = {\n        assetMaintenancePlan : {\n          assetMaintenancePlanId : this.maintenance.assetMaintenancePlanId,\n          apartmentId : this.sessionService.apartmentId,\n          assetId : this.maintenance.assetId,\n          notes : this.maintenance.notes,\n          maintenanceStatusId : this.maintenance.maintenanceStatusId,\n          isActive : true,\n          insertedBy : parseInt(this.sessionService.userId),\n          insertedOn : new Date().toISOString,\n          updatedBy : parseInt(this.sessionService.userId),\n          updatedOn : new Date().toISOString,\n          actualMaintDate : this.maintenance.actualMaintDate,\n          lastMaintenanceDate : this.maintenance.lastMaintenanceDate,\n          nextPlannedMaintenance : this.maintenance.nextPlannedMaintenance,\n          maintenanceTypeId : Number(this.maintenance.maintenanceTypeId),\n          maintenanceByCompany : this.maintenance.maintenanceByCompany ? this.maintenance.maintenanceByCompany : null,\n          maintenanceByPerson : null,\n          maintenanceCompanyContactNo : null,\n          maintLaborCost : Number(this.maintenance.maintLaborCost),\n          maintPartsCost : Number(this.maintenance.maintPartsCost),\n          maintVat : Number(this.maintenance.maintVat),\n          maintWithTax : Number(this.maintenance.maintWithTax),\n          maintenanceTotalBilledAmt : Number(this.maintenance.maintenanceTotalBilledAmt),\n          isMaintainedbyStaff : this.maintenance.isMaintainedbyStaff,\n          maintainedbyStaff : this.maintenance.maintainedbyStaff ? this.maintenance.maintainedbyStaff : null,\n          maintenanceSubtypeId : this.maintenance.maintenanceSubtypeId ? Number(this.maintenance.maintenanceSubtypeId) : null,\n          plannedMaintenanceDate : this.maintenance.plannedMaintenanceDate? this.maintenance.plannedMaintenanceDate:null, \n          totalDiscount : this.maintenance.totalDiscount? this.maintenance.totalDiscount:null,\n          alertBeforeDays : this.maintenance.alertBeforeDays? Number(this.maintenance.alertBeforeDays):null,\n          customFields : JSON.stringify(this.dynamicForm),\n        }\n      }\n      this.assetService.updateAssetMaintenancePlan(params).subscribe((res: any) => {\n        if (res) {\n          this.sharedService.openSnackBar(\"Asset maintenance updated successfully\",'success');\n          this.router.navigate(['ams/assets/manage-maintenance']);\n        }\n        this.isAssetLoaded = false;\n      });\n    }\n  }\n\n\n  getAllMaintenance() {\n    let queryParamBase: any = {};\n    queryParamBase = {\n      apartmentId: this.sessionService.apartmentId,\n      lookupTypeId: 167,\n      subCategoryLookupTypeId: 168,\n    };\n    this.isAssetLoaded = true;\n    this.lookupService.getSubcategory(queryParamBase).subscribe((res: any) => {\n      if (res) {\n        this.isAssetLoaded = false;\n        this.mainType = res ? res : [];\n        if (this.isEdit && this.maintenance.maintenanceTypeId) {\n          this.setMainSubType(this.maintenance.maintenanceTypeId);\n        } else {\n          // this.maintenance.maintenanceTypeId = this.mainType && this.mainType.length > 0 ? this.mainType[0].id : '';\n          // this.setMainSubType(this.maintenance.maintenanceTypeId);\n        }\n\n      }\n    });\n  }\n\n\n  /**\n   * get Asset list\n   * @param \n   */\n  getAsset() {\n    let params: any = {};\n    params.apartmentId = this.sessionService.apartmentId;\n\n    this.assetService.getAllAssetByApartmentId(params).subscribe((res: any) => {\n      if (res) {\n        this.assetList = res ? res : [];\n        this.assetList.forEach((data)=>{\n          data.customLabel = `${data.assetName} -- ${data.assetLocationName} - ${data.assetSubLocationName}`;\n        })\n        // this.assetId = !this.assetId ? (this.assetList && this.assetList.length > 0) && this.assetList[0].assetId :'';\n      }\n    });\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { SelectModule } from 'src/app/modules/ui/select/select.module';\nimport { UploadModule } from 'src/app/modules/ui/upload/upload.module';\nimport { DatepickerModule } from 'src/app/modules/ui/datepicker/datepicker.module';\nimport { CondoCardModule } from 'src/app/modules/ui/card/card.module';\nimport { CondoMessageModule } from 'src/app/modules/ui/message/message.module';\nimport { HelpTooltipModule } from 'src/app/modules/ui/help-tooltip/help-tooltip.module';\n\nimport { AddMaintenanceRoutingModule } from './add-maintenance-routing.module';\n\nimport { AddMaintenanceComponent } from './add-maintenance.component';\n\n\n@NgModule({\n  declarations: [AddMaintenanceComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    SelectModule,\n    CondoCardModule,\n    DatepickerModule.forRoot(),\n    UploadModule,\n    CondoMessageModule,\n    HelpTooltipModule,\n    AddMaintenanceRoutingModule\n  ]\n})\nexport class AddMaintenanceModule { }\n"],"sourceRoot":"webpack:///"}