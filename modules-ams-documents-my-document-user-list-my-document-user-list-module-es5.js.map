{"version":3,"sources":["webpack:///src/app/modules/ams/documents/document-config/document-create/document-create.component.html","webpack:///src/app/modules/ams/documents/my-document-user-list/my-document-user-list.component.html","webpack:///src/app/modules/ams/documents/document-config/document-create/document-create.component.scss","webpack:///src/app/modules/ams/documents/document-config/document-create/document-create.component.ts","webpack:///src/app/modules/ams/documents/my-document-user-list/my-document-user-list-routing.module.ts","webpack:///src/app/modules/ams/documents/my-document-user-list/my-document-user-list.component.scss","webpack:///src/app/modules/ams/documents/my-document-user-list/my-document-user-list.component.ts","webpack:///src/app/modules/ams/documents/my-document-user-list/my-document-user-list.module.ts"],"names":["DocumentCreateComponent","documentService","sharedService","sessionService","lookupService","dialogRef","data","document","documentCategoryList","event","userDocumentCategoryId","lookupValueId","fileDetailsIds","join","uploadDetails","apartmentId","apartmentBlockUnitId","userDocumentName","description","userId","Date","toISOString","addUserDocument","subscribe","res","message","close","openSnackBar","responseData","value","errorMessage","error","params","fileDetailsId","addDocument","from","LookupTypeId","getLookupValueByLookupTypeId","selector","template","routes","path","component","MyDocumentUserListRoutingModule","imports","forChild","exports","MyDocumentUserListComponent","fileDownloadService","sanitizer","dialog","changeDetection","documentViewList","date","format","open","panelClass","apartmentBlockUnitID","afterClosed","result","getDocumetList","url","filePath","fileUrl","downloadFile","down","blob","body","objectURL","sanitizeUrl","trigger","URL","createObjectURL","bypassSecurityTrustUrl","detectChanges","firstElementChild","click","isDataLoaded","ApartmentBlockUnitId","ApartmentId","getAllDocByApartmentBlockUnitId","length","totalItems","MyDocumentUserListModule","declarations"],"mappings":"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","file":"modules-ams-documents-my-document-user-list-my-document-user-list-module-es5.js","sourcesContent":["export default \"<div class=\\\"document-create-modal-wrapper\\\">\\n    <div class=\\\"bg-card shadow mb-0\\\">\\n        <div class=\\\"d-flex mb-4\\\">\\n            <h4> Upload Documents</h4>\\n            <mat-icon class=\\\"ml-auto\\\" [svgIcon]=\\\"'close'\\\" mat-dialog-close></mat-icon>\\n        </div>\\n        <form>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                    <div class=\\\"input-box\\\">\\n                        <label>Document Name</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter text\\\" name=\\\"documentName\\\" [(ngModel)]=\\\"document.userDocumentName\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-12\\\" *ngIf=\\\"data.from == 'private'\\\">\\n                    <condo-select \\n                        labelText=\\\"Document Category\\\"\\n                        fieldPlaceholder=\\\"Document Category\\\"\\n                        [fieldList]=\\\"documentCategoryList | orderBy : 'lookupValueName'\\\"\\n                        fieldValue=\\\"lookupValueName\\\"\\n                        [fieldModel]=\\\"document.userDocumentCategoryId\\\"\\n                        fieldId=\\\"lookupValueId\\\"\\n                        (fieldParams)=\\\"setDocCategory($event)\\\" \\n                    ></condo-select>  \\n                </div>\\n                <div class=\\\"col-sm-12\\\">\\n                    <div class=\\\"input-box\\\">\\n                        <label>Description</label>\\n                        <textarea placeholder=\\\"Enter Description\\\" name=\\\"description\\\" [(ngModel)]=\\\"document.description\\\"></textarea>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                    <app-upload [fileIds]=\\\"document.fileDetailsIds\\\" [isEdit]=\\\"false\\\" (outputParams)=\\\"getFileIds($event)\\\"\\n                        [multiple]=\\\"true\\\"\\n                    ></app-upload>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                    <button  *ngIf=\\\"data.from == 'private'\\\" class=\\\"float-right mt-4\\\" mat-flat-button  [color]=\\\"'primary'\\\" (click)=\\\"createPrivateDocument()\\\">Submit</button>\\n                    <button  *ngIf=\\\"data.from == 'public'\\\" class=\\\"float-right mt-4\\\" mat-flat-button  [color]=\\\"'primary'\\\" (click)=\\\"createPublicDocument()\\\">Submit</button>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\";","export default \"<div class=\\\"my-documents-wrapper\\\">\\n    <div class=\\\"main\\\">\\n        <!-- Loader -->\\n        <app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n        <!-- My Documents Header -->\\n        <div class=\\\"d-flex mb-4\\\">\\n            <div>\\n                <h4>My Documents</h4>\\n                <p class=\\\"text-secondary\\\">{{totalItems}} Items</p>\\n            </div>\\n            <div class=\\\"ml-auto d-none d-md-block mr-3\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"documentSearch\\\">\\n            </div>\\n            <div>\\n                <button mat-flat-button [color]=\\\"'primary'\\\" (click)=\\\"openUploadModal()\\\">Upload Documents</button>\\n            </div>\\n        </div>\\n        <!-- Documents List -->\\n        <div *ngIf=\\\"isDataLoaded\\\">\\n            <div class=\\\"bg-card shadow\\\" *ngFor=\\\"let data of documentViewList\\\">\\n                <form>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-4\\\">\\n                            <div class=\\\"input-box\\\">\\n                                <label>Document Name</label>\\n                                <p>{{data.userDocumentName}}</p>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <div class=\\\"input-box\\\">\\n                                <label>Document Category</label>\\n                                <p>{{data.userDocumentCatName}}</p>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <div class=\\\"input-box\\\">\\n                                <label>Inserted On</label>\\n                                <p>{{getDateFormat(data.insertedOn)}}</p>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"input-box\\\">\\n                                <label>Description</label>\\n                                <p>{{data.userDocDesc}}</p>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"input-box\\\">\\n                                <label>Document</label>\\n                                <p #url>\\n                                    <a *ngIf=\\\"data.fileUrl\\\" [href]=\\\"data.fileUrl\\\" target=\\\"_blank\\\">{{data.fileName}}</a>\\n                                    <a href=\\\"javascript:void(0)\\\" *ngIf=\\\"!data.fileUrl\\\" (click)=\\\"downloadFile(data,url)\\\">{{data.fileName}}</a>\\n                                </p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL2RvY3VtZW50cy9kb2N1bWVudC1jb25maWcvZG9jdW1lbnQtY3JlYXRlL2RvY3VtZW50LWNyZWF0ZS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, Inject } from '@angular/core';\nimport { DocumentService } from 'src/app/api/controllers/Document';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\n\n@Component({\n  selector: 'app-document-create',\n  templateUrl: './document-create.component.html',\n  styleUrls: ['./document-create.component.scss']\n})\nexport class DocumentCreateComponent implements OnInit {\n  document:any = {};\n  documentCategoryList:any = [];\n  \n  constructor( private documentService:DocumentService,\n    private sharedService:SharedService,\n    private sessionService:SessionService,\n    private lookupService: LookupService,\n    public dialogRef: MatDialogRef<DocumentCreateComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    ) { }\n\n  setDocCategory(event) {\n    this.document.userDocumentCategoryId = event[0].lookupValueId\n  }\n\n  getFileIds(event) {\n    this.document.fileDetailsIds = event.join();\n  }\n\n  createPrivateDocument() {\n    let uploadDetails = {\n      \"ApartmentId\" : this.sessionService.apartmentId,\n      \"ApartmentBlockUnitId\" : this.data.apartmentBlockUnitId,\n      \"UserDocumentCategoryId\" : this.document.userDocumentCategoryId,\n      \"UserDocumentTypeId\" : 1,\n      \"UserDocumentAccessibleToId\" : 1,\n      \"UserDocumentName\" : this.document.userDocumentName,\n      \"Description\" : this.document.description,\n      \"IsActive\":true,\n      \"InsertedBy\": this.sessionService.userId,\n      \"InsertedOn\": new Date().toISOString(),\n      \"UpdatedBy\":null,\n      \"UpdatedOn\":null,\n      \"FileDetailsId\": null,\n      \"IsPublic\" : false,\n      \"files\" : null,\n      \"FileDetailsIds\": this.document.fileDetailsIds,\n    }\n    this.documentService.addUserDocument(uploadDetails).subscribe((res:any) => { \n      if(res.message) {\n        this.dialogRef.close(true);\n        this.sharedService.openSnackBar('Document Created Successfully', 'success');\n      } else {\n        this.sharedService.openSnackBar(res.responseData.value.errorMessage,'error');\n      }\n    },\n    error => {\n      this.sharedService.openSnackBar('Server Error','error');\n    }); \n  }\n\n  createPublicDocument() {\n    let params = {\n      document : {\n        \"apartmentId\": this.sessionService.apartmentId,\n        \"documentCategoryId\": this.data.userDocumentCategoryId,\n        \"documentTypeId\": 1,\n        \"documentAccessibleToId\": 1,\n        \"documentName\": this.document.userDocumentName,\n        \"description\": this.document.description,\n        \"fileDetailsId\": this.document.fileDetailsId,\n        \"uploadedBy\": this.sessionService.userId,\n        \"uploadedOn\": new Date().toISOString(),\n        \"isActive\": true,\n        \"insertedBy\":  this.sessionService.userId,\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": null,\n        \"updatedOn\": null,\n        \"files\" : null\n      }\n    }\n    this.documentService.addDocument(params).subscribe((res:any) => { \n      if(res.message) {\n        this.dialogRef.close(true);\n        this.sharedService.openSnackBar('Document Created Successfully', 'success');\n      } else {\n        this.sharedService.openSnackBar(res.responseData.value.errorMessage,'error');\n      }\n    },\n    error => {\n      this.sharedService.openSnackBar('Server Error','error');\n    }); \n  }\n\n  ngOnInit(): void {\n    if(this.data.from == 'private') {\n      let params = {\n        LookupTypeId: 200\n      }\n      this.lookupService.getLookupValueByLookupTypeId(params).subscribe((res:any) => {\n        this.documentCategoryList = res;\n      });\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MyDocumentUserListComponent } from './my-document-user-list.component';\n\nconst routes: Routes = [\n  {path:'',component:MyDocumentUserListComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MyDocumentUserListRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL2RvY3VtZW50cy9teS1kb2N1bWVudC11c2VyLWxpc3QvbXktZG9jdW1lbnQtdXNlci1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { FileDownloadService } from 'src/app/shared/services/file-download.service';\nimport { DocumentService } from 'src/app/api/controllers/Document';\nimport * as moment from 'moment';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DocumentCreateComponent } from '../document-config/document-create/document-create.component';\n\n@Component({\n  selector: 'app-my-document-user-list',\n  templateUrl: './my-document-user-list.component.html',\n  styleUrls: ['./my-document-user-list.component.scss']\n})\nexport class MyDocumentUserListComponent implements OnInit {\n  isDataLoaded:boolean;\n  documentViewList:any = [];\n  totalItems:number;\n  constructor(\n    private sessionService:SessionService,\n    private documentService:DocumentService,\n    private fileDownloadService: FileDownloadService,\n    private sanitizer: DomSanitizer,\n    public dialog: MatDialog,\n    private changeDetection:ChangeDetectorRef\n  ) { }\n\n  getDateFormat(date) {\n    return moment(date).format('ddd MMM D YYYY hh:mm A');\n  }\n\n  openUploadModal() {\n    const dialogRef = this.dialog.open(DocumentCreateComponent, {\n      panelClass: 'material-dialog-medium',\n      data: {from:'private',apartmentBlockUnitId:this.sessionService.apartmentBlockUnitID}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if(result) {\n        this.getDocumetList();\n      }\n    });\n  }\n\n  downloadFile(data,url) {\n    if(data.filePath && !data.fileUrl) {\n      this.fileDownloadService.downloadFile(data.filePath).subscribe((down:any) => {\n        const blob = down.body;\n        let objectURL,sanitizeUrl:any,trigger;\n        objectURL = URL.createObjectURL(blob); \n        sanitizeUrl = this.sanitizer.bypassSecurityTrustUrl(objectURL);\n        data.fileUrl = sanitizeUrl;\n        this.changeDetection.detectChanges();\n        trigger = url.firstElementChild;\n        trigger.click();\n      })\n    }\n  }\n\n  getDocumetList() {\n    this.isDataLoaded = false;\n    let params = {\n      ApartmentBlockUnitId : this.sessionService.apartmentBlockUnitID,\n      ApartmentId : this.sessionService.apartmentId\n    }\n    this.documentService.getAllDocByApartmentBlockUnitId(params).subscribe((res:any)=>{\n      this.isDataLoaded = true;\n      if(res.length > 0) {\n        this.documentViewList = res;\n      }\n      this.totalItems = res.length;\n    })\n  }\n\n  ngOnInit(): void {\n    this.getDocumetList();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MyDocumentUserListRoutingModule } from './my-document-user-list-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CondoCardModule } from 'src/app/modules/ui/card/card.module';\nimport { SelectModule } from 'src/app/modules/ui/select/select.module';\nimport { UploadModule } from 'src/app/modules/ui/upload/upload.module';\nimport { MyDocumentUserListComponent } from './my-document-user-list.component';\n\n\n@NgModule({\n  declarations: [\n    MyDocumentUserListComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    CondoCardModule,\n    SelectModule,\n    UploadModule,\n    MyDocumentUserListRoutingModule\n  ]\n})\nexport class MyDocumentUserListModule { }\n"]}