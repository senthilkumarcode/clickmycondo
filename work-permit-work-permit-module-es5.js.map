{"version":3,"sources":["webpack:///src/app/ams/work-permit/components/workpermit-approval/workpermit-approval.component.html","webpack:///src/app/ams/work-permit/components/workpermit-create/workpermit-create.component.html","webpack:///src/app/ams/work-permit/components/workpermit-setting/workpermit-setting.component.html","webpack:///src/app/ams/work-permit/components/workpermit-setup/workpermit-setup.component.html","webpack:///src/app/ams/work-permit/work-permit.component.html","webpack:///src/app/ams/work-permit/components/workpermit-approval/workpermit-approval.component.scss","webpack:///src/app/ams/work-permit/components/workpermit-approval/workpermit-approval.component.ts","webpack:///src/app/ams/work-permit/components/workpermit-create/workpermit-create.component.scss","webpack:///src/app/ams/work-permit/components/workpermit-create/workpermit-create.component.ts","webpack:///src/app/ams/work-permit/components/workpermit-setting/workpermit-setting.component.scss","webpack:///src/app/ams/work-permit/components/workpermit-setting/workpermit-setting.component.ts","webpack:///src/app/ams/work-permit/components/workpermit-setup/workpermit-setup.component.scss","webpack:///src/app/ams/work-permit/components/workpermit-setup/workpermit-setup.component.ts","webpack:///src/app/ams/work-permit/work-permit-routing.module.ts","webpack:///src/app/ams/work-permit/work-permit.component.scss","webpack:///src/app/ams/work-permit/work-permit.component.ts","webpack:///src/app/ams/work-permit/work-permit.module.ts"],"names":["WorkpermitApprovalComponent","router","route","lookupService","sharedService","cookieService","workPermit","isDataLoaded","wpData","unitFieldType","unitOrder","ItemStartIndex","itemLimit","event","ItemEndIndex","type","window","innerWidth","getWorkPermit","apartMentID","parseInt","get","getWorkPermitsByApartmentId","subscribe","res","workPermitListData","totalItems","length","selector","template","WorkpermitCreateComponent","vendor","apartmentService","workPermitService","userService","Workers","WorkerName","WorkerDescription","Materials","MaterialName","MaterialQuantity","MaterialDescription","Tools","ToolName","ToolQuantity","ToolDescription","listWorkers","listMaterials","listTools","itemList","selectedItems","settings","isWorkpermitSubmitted","isError","errorMessage","workpermit","getVendors","getApartments","getTowers","getUnitUsers","getWorktype","getNatureWorktype","getAllVendors","allVendors","getAllApartments","allApartments","getAllApartmentBlockUnits","allTowers","getAllUsers","allUsers","getLookupValueByLookupTypeId","allWorkType","allNatureWorkType","name","description","push","qty","form","workPermitDetails","WPApartment","WPTower","WPUnitUser","WPPermitType","WPNatureWork","WPVendor","WPIncharge","WPContact","WPStartdate","WPEnddate","WPStarttime","format","WPEndtime","Date","toISOString","addWorkPermit","message","workPermitId","i","workpermitworkers","addWorkPermitWorkers","workpermitmaterials","addWorkPermitMaterials","workpermittools","addWorkPermitTools","setAlertMessage","navigate","error","WorkpermitSettingComponent","navArray","link","WorkpermitSetupComponent","nwData","NWunitFieldType","NWunitOrder","NWItemStartIndex","NWitemLimit","naturework","getNaturework","allNatureWork","NWtotalItems","NWItemEndIndex","workpermittypes","WPtype","WPdescription","addLookupValue","routes","path","redirectTo","pathMatch","component","WorkPermitRoutingModule","imports","forChild","exports","WorkPermitComponent","WorkPermitModule","declarations","bootstrap"],"mappings":"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","file":"work-permit-work-permit-module-es5.js","sourcesContent":["export default \"<div class=\\\"workpermit-approvalview-wrapper\\\">\\n\\n\\t<app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n\\n\\t<div class=\\\"text-right\\\" *ngIf=\\\"isDataLoaded\\\">\\n\\t\\t<i-feather class=\\\"icon success-indicator\\\" name=\\\"check-circle\\\"></i-feather>&nbsp; Approve\\n\\t</div>\\n\\t<div class=\\\"card card-table\\\">\\n\\t\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>WorkPermit Approval List <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"wpData\\\" >\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<!-- <li class=\\\"list-inline-item\\\">\\n    \\t\\t\\t\\t<a class=\\\"btn l-blue mt_5\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Print</span>\\n    \\t\\t\\t\\t</a>\\n    \\t\\t\\t</li> -->\\n    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\n    \\t\\t\\t\\t<a class=\\\"btn lime-green mt_5\\\"\\n    \\t\\t\\t\\trouterLink=\\\"/ams/work-permit/settings/create\\\" \\n\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon plus\\\" name=\\\"plus\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Create Work Permit</span>\\n    \\t\\t\\t\\t</a>\\n\\n    \\t\\t\\t</li>\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n\\n  \\t\\t<app-filter-box *ngIf=\\\"isDataLoaded\\\" [totalItems]=\\\"totalFilterItems\\\" class=\\\"d-sm-block d-none\\\"></app-filter-box>\\n\\n  \\t\\t<div class=\\\"card-body p-0\\\">\\n  \\t\\t\\t\\n  \\t\\t\\t<table class=\\\"table shrink-table\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th (click)=\\\"sortUnitData('workPermitId')\\\">WP ID<span [ngClass]=\\\"getFieldOrderBy('workPermitId')\\\"></span></th>\\n\\t\\t\\t\\t      <th (click)=\\\"sortUnitData('apartmentBlockNumber')\\\">Block <span [ngClass]=\\\"getFieldOrderBy('apartmentBlockNumber')\\\"></span></th>\\n\\t\\t\\t\\t      <th (click)=\\\"sortUnitData('apartmentBlockUnitNumber')\\\">Unit <span [ngClass]=\\\"getFieldOrderBy('apartmentBlockUnitNumber')\\\"></span></th>\\n\\t\\t\\t\\t      <th (click)=\\\"sortUnitData('endorsedBy')\\\">Endorsed By<span [ngClass]=\\\"getFieldOrderBy('endorsedBy')\\\"></span></th>\\n\\t\\t\\t\\t      <th (click)=\\\"sortUnitData('workPermitType')\\\">WP Type <span [ngClass]=\\\"getFieldOrderBy('workPermitType')\\\"></span></th>\\n\\t\\t\\t\\t      <th (click)=\\\"sortUnitData('natureOfWork')\\\">Nature of Work <span [ngClass]=\\\"getFieldOrderBy('natureOfWork')\\\"></span></th>\\n\\t\\t\\t\\t      <th (click)=\\\"sortUnitData('startDate')\\\">Start Date <span [ngClass]=\\\"getFieldOrderBy('startDate')\\\"></span></th>\\n\\t\\t\\t\\t      <th (click)=\\\"sortUnitData('endDate')\\\">End Date <span [ngClass]=\\\"getFieldOrderBy('endDate')\\\"></span></th>\\n\\t\\t\\t\\t      <th (click)=\\\"sortUnitData('noOfPersonnels')\\\">Personnels <span [ngClass]=\\\"getFieldOrderBy('noOfPersonnels')\\\"></span></th>\\n\\t\\t\\t\\t      <th>Action</th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let wp of workPermitListData | sort : unitFieldType: unitOrder \\n\\t\\t\\t\\t    | simpleSearch: wpData | slice:ItemStartIndex:ItemEndIndex ; let i = index\\\">\\n\\t\\t\\t\\t      <td class=\\\"name\\\">{{wp.workPermitId}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{wp.apartmentBlockNumber}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{wp.apartmentBlockUnitNumber}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{wp.endorsedBy}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{wp.workPermitType}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{wp.natureOfWork}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{wp.startDate | date:'dd-MM-yy'}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{wp.endDate | date:'dd-MM-yy'}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{wp.noOfPersonnels}}</td>\\n\\t\\t\\t\\t      <td>\\n\\t\\t\\t\\t      \\t<a><i-feather class=\\\"icon view\\\" name=\\\"eye\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t</a>&nbsp;\\n\\t\\t\\t\\t\\t\\t<a>\\n\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon edit\\\" name=\\\"edit\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t</a>&nbsp;\\n\\t\\t\\t\\t\\t\\t<a>\\n\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon approve\\\" name=\\\"check-circle\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t</a>&nbsp;\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\t\\t\\t\\n\\t\\t\\t<app-pagination \\n\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t\\t</app-pagination>\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n\\n</div>\"","export default \"<div class=\\\"workpermit-Create-wrapper\\\">\\n\\t\\n\\t\\t<div class=\\\"card clear\\\">\\n            <div class=\\\"card-header\\\">\\n                <div class=\\\"float-left\\\">\\n                    <h5>\\n                        <span>Create WorkPermit</span>\\n                    </h5>\\n                </div>\\n                <div class=\\\"float-right\\\">\\n                    <a href=\\\"javascript:void(0)\\\" \\n                    routerLink=\\\"/ams/work-permit/settings/approval\\\" \\n                    routerLinkActive=\\\"active\\\"\\n                    [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n                        <i-feather class=\\\"icon back\\\" name=\\\"chevron-left\\\"></i-feather>\\n                    </a>\\n                </div>\\n            </div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"card-body\\\">\\n        \\n      <app-alert-message [message]=\\\"errorMessage\\\" [isAlert]=\\\"isError\\\"></app-alert-message>\\n\\t\\t\\t<app-loader *ngIf=\\\"isWorkpermitSubmitted\\\"></app-loader>\\n\\t\\t\\t<ng-container *ngIf=\\\"!isWorkpermitSubmitted\\\">\\n\\n        <form #createWorkPermitForm = \\\"ngForm\\\" name=\\\"createWorkPermitForm\\\" (ngSubmit)=\\\"submitCreateWorkPermitForm(addWorkPermitForm)\\\"  novalidate>\\n\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"select-box\\\">\\n                <label>Name of Resident*</label>\\n                <select \\n                    name=\\\"WPApartment\\\" \\n                    id=\\\"Apartment\\\" \\n                    class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"workpermit.WPApartment\\\" required>\\n                    <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                    <option *ngFor=\\\"let apartment of allApartments;\\\" [value]=\\\"apartment.apartmentId\\\">{{apartment.apartmentName}}</option>\\n                </select>\\n            </div>\\n        </div>\\n        <div class=\\\"col-sm-4\\\">\\n          <div class=\\\"input-box\\\">\\n            <label>Tower*</label>\\n            <select \\n                name=\\\"WPTower\\\" \\n                id=\\\"Tower\\\" \\n                class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"workpermit.WPTower\\\" required>\\n                <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                <option *ngFor=\\\"let tower of allTowers;\\\" [value]=\\\"tower.apartmentBlockUnitId\\\">{{tower.apartmentBlockNumber}}</option>\\n            </select>\\n        </div>\\n        </div>\\n        <div class=\\\"col-sm-4\\\">\\n          <div class=\\\"input-box\\\">\\n            <label>Unit User*</label>\\n            <select \\n                name=\\\"WPUnitUser\\\" \\n                id=\\\"UnitUser\\\" \\n                class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"workpermit.WPUnitUser\\\" required>\\n                <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                <option *ngFor=\\\"let user of allUsers;\\\" [value]=\\\"user.userId\\\">{{user.firstName}}</option>\\n            </select>\\n        </div>\\n        </div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n                <label>Name of Vendor/Contractor*</label>\\n                <select \\n                    name=\\\"WPVendor\\\" \\n                    id=\\\"vendor\\\" \\n                    class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"workpermit.WPVendor\\\" required>\\n                    <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                    <option *ngFor=\\\"let vendor of allVendors;\\\" [value]=\\\"vendor.vendorId\\\">{{vendor.vendorName}}</option>\\n                </select>\\n            </div>\\n          </div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t                    <label>Name of Person In Charge*</label>\\n\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"WPIncharge\\\" [(ngModel)]=\\\"workpermit.WPIncharge\\\" required>\\n                \\t\\t</div>\\n                    </div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t                    <label>Contact Number*</label>\\n\\t\\t                    <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"WPContact\\\" [(ngModel)]=\\\"workpermit.WPContact\\\" required>\\n                \\t\\t</div>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                      <div class=\\\"input-box\\\">\\n                        <label>WorkPermit Type*</label>\\n                        <!-- <angular2-multiselect \\n                          name=\\\"WPNatureWork\\\"\\n                          [data]=\\\"itemList\\\" \\n                          [(ngModel)]=\\\"selectedItems\\\" \\n                          [settings]=\\\"settings\\\" \\n                          (onSelect)=\\\"onItemSelect($event)\\\"\\n                          (onDeSelect)=\\\"OnItemDeSelect($event)\\\" \\n                          (onSelectAll)=\\\"onSelectAll($event)\\\" \\n                          (onDeSelectAll)=\\\"onDeSelectAll($event)\\\">\\n                        </angular2-multiselect> -->\\n                        <select \\n                          name=\\\"WPPermitType\\\" \\n                          id=\\\"PermitType\\\" \\n                          class=\\\"form-control\\\"\\n                          [(ngModel)]=\\\"workpermit.WPPermitType\\\" required>\\n                          <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                          <option *ngFor=\\\"let worktype of allWorkType;\\\" [value]=\\\"worktype.lookupValueId\\\">{{worktype.lookupValueName}}</option>\\n                        </select>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                      <div class=\\\"input-box\\\">\\n                        <label>Nature of work*</label>\\n                        <select \\n                          name=\\\"WPNatureWork\\\" \\n                          id=\\\"NatureWork\\\" \\n                          class=\\\"form-control\\\"\\n                          [(ngModel)]=\\\"workpermit.WPNatureWork\\\" required>\\n                          <option value=\\\"\\\" disabled selected hidden>Select</option>\\n                          <option *ngFor=\\\"let natureworktype of allNatureWorkType;\\\" [value]=\\\"natureworktype.lookupValueId\\\">{{natureworktype.lookupValueName}}</option>\\n                        </select>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\"></div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\"input-box\\\">\\n                            <label>Start Date</label>\\n                            <input class=\\\"form-control\\\" name=\\\"WPStartdate\\\" [owlDateTime]=\\\"WPStartdate\\\" [owlDateTimeTrigger]=\\\"WPStartdate\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"workpermit.WPStartdate\\\" required>\\n                            <owl-date-time #WPStartdate [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n                            <div class=\\\"date-btn\\\">\\n                              <i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\"input-box\\\">\\n                            <label>End Date</label>\\n                            <input class=\\\"form-control\\\" name=\\\"WPEnddate\\\" [owlDateTime]=\\\"WPEnddate\\\" [owlDateTimeTrigger]=\\\"WPEnddate\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"workpermit.WPEnddate\\\" required>\\n                            <owl-date-time #WPEnddate [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n                            <div class=\\\"date-btn\\\">\\n                                    <i-feather class=\\\"icon date float-left\\\" name=\\\"calendar\\\" width=\\\"18\\\"></i-feather>\\n                                </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-2\\\">\\n                        <div class=\\\"input-box\\\">\\n                            <label>Start Time</label>\\n                            <input class=\\\"form-control\\\" name=\\\"WPStarttime\\\" [owlDateTime]=\\\"WPStarttime\\\" [owlDateTimeTrigger]=\\\"WPStarttime\\\" placeholder=\\\"Time\\\" [(ngModel)]=\\\"workpermit.WPStarttime\\\" required>\\n                            <owl-date-time #WPStarttime [pickerType]=\\\"'timer'\\\" [hour12Timer]=\\\"true\\\"></owl-date-time>\\n                            <div class=\\\"date-btn\\\">\\n                                    <i-feather class=\\\"icon date float-left\\\" name=\\\"clock\\\" width=\\\"18\\\"></i-feather>\\n                                </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-2\\\">\\n                        <div class=\\\"input-box\\\">\\n                            <label>End Time</label>\\n                            <input class=\\\"form-control\\\" name=\\\"WPEndtime\\\" [owlDateTime]=\\\"WPEndtime\\\" [owlDateTimeTrigger]=\\\"WPEndtime\\\" placeholder=\\\"Time\\\" [(ngModel)]=\\\"workpermit.WPEndtime\\\" required>\\n                            <owl-date-time #WPEndtime [pickerType]=\\\"'timer'\\\" [hour12Timer]=\\\"true\\\"></owl-date-time>\\n                            <div class=\\\"date-btn\\\">\\n                                    <i-feather class=\\\"icon date float-left\\\" name=\\\"clock\\\" width=\\\"18\\\"></i-feather>\\n                                </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"col-sm-6 mb-30\\\">\\n                        <h5><b>List of Workers/Personnels</b></h5>\\n                        <table class=\\\"mini-table\\\" [ngClass]=\\\"isMobileView()\\\">\\n                            <thead>\\n                                <tr>\\n                                  <th width=\\\"35%\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" name=\\\"WorkerName\\\" [(ngModel)]=\\\"Workers.WorkerName\\\">\\n                                  </th>\\n                                  <th width=\\\"60%\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Description\\\" name=\\\"WorkerDescription\\\" [(ngModel)]=\\\"Workers.WorkerDescription\\\">\\n                                  </th>\\n                                  <th width=\\\"5%\\\" align=\\\"right\\\">\\n                                    <a class=\\\"btn lime-green\\\" (click)=\\\"addWorkers()\\\">\\n                                    <i-feather class=\\\"icon plus\\\" name=\\\"plus\\\"></i-feather>Add\\n                                    </a>\\n                                  </th>\\n                                </tr>\\n                            </thead>\\n                        </table>\\n                         <!-- workers collapse -->\\n                         <div class=\\\"card clear\\\" id=\\\"accordion\\\">\\n                          <div class=\\\"card-body p-0\\\">\\n                            <ul class=\\\"list-group tabs clear\\\">\\n                              <li class=\\\"list-group-item\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#workersCollapseOne\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseOne\\\">\\n                                Added Workers List &nbsp;<span *ngIf=\\\"listWorkers.length!=0\\\">({{listWorkers.length}})</span>\\n                              </li>\\n                              <div id=\\\"workersCollapseOne\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingOne\\\" data-parent=\\\"#accordion\\\">\\n                                <div class=\\\"details\\\">\\n                                  <table class=\\\"mini-table\\\" [ngClass]=\\\"isMobileView()\\\">\\n                                    <thead>\\n                                        <tr>\\n                                          <th width=\\\"40%\\\">Name</th>\\n                                          <th width=\\\"55%\\\">Description</th>\\n                                          <th align=\\\"right\\\" width=\\\"5%\\\">#</th>\\n                                        </tr>\\n                                    </thead>\\n                                    <tbody *ngIf=\\\"listWorkers.length!=0\\\">\\n                                      <tr *ngFor=\\\"let worker of listWorkers;let i of index;\\\">\\n                                        <td class=\\\"grey\\\">{{worker.name}}</td>\\n                                        <td class=\\\"grey\\\">{{worker.description}}</td>\\n                                        <td align=\\\"right\\\">\\n                                          <a><i-feather class=\\\"icon delete\\\" name=\\\"trash\\\"></i-feather></a>\\n                                        </td>\\n                                      </tr>\\n                                    </tbody>\\n                                </table>\\n                                </div>\\n                              </div>\\t\\n                            </ul>\\n                          </div>\\n                        </div>\\n                        <!-- end workers collapse -->\\n                    </div>\\n\\n                    <div class=\\\"col-sm-6 mb-30\\\">\\n                        <h5><b>List of Materials</b></h5>\\n                        <table class=\\\"mini-table\\\" [ngClass]=\\\"isMobileView()\\\">\\n                            <thead>\\n                                <tr>\\n                                  <th width=\\\"30%\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" name=\\\"MaterialName\\\" [(ngModel)]=\\\"Materials.MaterialName\\\">\\n                                  </th>\\n                                  <th width=\\\"15%\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Qty\\\" name=\\\"MaterialQuantity\\\" [(ngModel)]=\\\"Materials.MaterialQuantity\\\">\\n                                  </th>\\n                                  <th width=\\\"50%\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Description\\\" name=\\\"MaterialDescription\\\" [(ngModel)]=\\\"Materials.MaterialDescription\\\">\\n                                  </th>\\n                                  <th width=\\\"5%\\\" align=\\\"right\\\">\\n                                    <a class=\\\"btn lime-green\\\" (click)=\\\"addMaterials()\\\">\\n                                      <i-feather class=\\\"icon plus\\\" name=\\\"plus\\\"></i-feather>Add\\n                                    </a>\\n                                  </th>\\n                                </tr>\\n                            </thead>\\n                        </table>\\n                        <!-- material collapse -->\\n                        <div class=\\\"card clear\\\" id=\\\"accordion\\\">\\n                          <div class=\\\"card-body p-0\\\">\\n                            <ul class=\\\"list-group tabs clear\\\">\\n                              <li class=\\\"list-group-item\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#materialCollapseOne\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseOne\\\">\\n                                Added Material List &nbsp;<span *ngIf=\\\"listMaterials.length!=0\\\">({{listMaterials.length}})</span>\\n                              </li>\\n                              <div id=\\\"materialCollapseOne\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingOne\\\" data-parent=\\\"#accordion\\\">\\n                                <div class=\\\"details\\\">\\n                                  <table class=\\\"mini-table\\\" [ngClass]=\\\"isMobileView()\\\">\\n                                    <thead>\\n                                        <tr>\\n                                          <th width=\\\"35%\\\">Name</th>\\n                                          <th width=\\\"15%\\\">Qty</th>\\n                                          <th width=\\\"45%\\\">Description</th>\\n                                          <th align=\\\"right\\\" width=\\\"5%\\\">#</th>\\n                                        </tr>\\n                                    </thead>\\n                                    <tbody *ngIf=\\\"listMaterials.length!=0\\\">\\n                                        <tr *ngFor=\\\"let material of listMaterials;let i of index;\\\">\\n                                          <td class=\\\"grey\\\">{{material.name}}</td>\\n                                          <td class=\\\"grey\\\">{{material.qty}}</td>\\n                                          <td class=\\\"grey\\\">{{material.description}}</td>\\n                                          <td align=\\\"right\\\">\\n                                            <a class=\\\"\\\"><i-feather class=\\\"icon delete\\\" name=\\\"trash\\\"></i-feather></a>\\n                                          </td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                                </div>\\n                              </div>\\t\\n                            </ul>\\n                          </div>\\n                        </div>\\n                        <!-- end material collapse -->\\n                    </div>\\n\\n                    <div class=\\\"col-sm-6 mb-30\\\">\\n                        <h5><b>List of Tools</b></h5>\\n                        <table class=\\\"mini-table\\\" [ngClass]=\\\"isMobileView()\\\">\\n                            <thead>\\n                                <tr>\\n                                  <th width=\\\"30%\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" name=\\\"ToolName\\\" [(ngModel)]=\\\"Tools.ToolName\\\">\\n                                  </th>\\n                                  <th width=\\\"15%\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Qty\\\" name=\\\"ToolQuantity\\\" [(ngModel)]=\\\"Tools.ToolQuantity\\\">\\n                                  </th>\\n                                  <th width=\\\"50%\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Description\\\" name=\\\"ToolDescription\\\" [(ngModel)]=\\\"Tools.ToolDescription\\\">\\n                                  </th>\\n                                  <th width=\\\"5%\\\" align=\\\"right\\\">\\n                                    <a class=\\\"btn lime-green\\\" (click)=\\\"addTools()\\\">\\n                                      <i-feather class=\\\"icon plus\\\" name=\\\"plus\\\"></i-feather>Add\\n                                    </a>\\n                                  </th>\\n                                </tr>\\n                            </thead>\\n                        </table>\\n                        <!-- tools collapse -->\\n                        <div class=\\\"card clear\\\" id=\\\"accordion\\\">\\n                          <div class=\\\"card-body p-0\\\">\\n                            <ul class=\\\"list-group tabs clear\\\">\\n                              <li class=\\\"list-group-item\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#toolCollapseOne\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseOne\\\">\\n                                Added Tools List &nbsp;<span *ngIf=\\\"listTools.length!=0\\\">({{listTools.length}})</span>\\n                              </li>\\n                              <div id=\\\"toolCollapseOne\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingOne\\\" data-parent=\\\"#accordion\\\">\\n                                <div class=\\\"details\\\">\\n                                  <table class=\\\"mini-table\\\" [ngClass]=\\\"isMobileView()\\\">\\n                                    <thead>\\n                                        <tr>\\n                                          <th width=\\\"35%\\\">Name</th>\\n                                          <th width=\\\"15%\\\">Qty</th>\\n                                          <th width=\\\"45%\\\">Description</th>\\n                                          <th align=\\\"right\\\" width=\\\"5%\\\">#</th>\\n                                        </tr>\\n                                    </thead>\\n                                    <tbody *ngIf=\\\"listTools.length!=0\\\">\\n                                        <tr *ngFor=\\\"let tool of listTools;let i of index;\\\">\\n                                          <td class=\\\"grey\\\">{{tool.name}}</td>\\n                                          <td class=\\\"grey\\\">{{tool.qty}}</td>\\n                                          <td class=\\\"grey\\\">{{tool.description}}</td>\\n                                          <td align=\\\"right\\\">\\n                                            <a class=\\\"\\\"><i-feather class=\\\"icon delete\\\" name=\\\"trash\\\"></i-feather></a>\\n                                          </td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                                </div>\\n                              </div>\\t\\n                            </ul>\\n                          </div>\\n                        </div>\\n                        <!-- tools collapse end -->  \\n                    </div>\\n\\n                    <div class=\\\"col-sm-12 mb-30\\\">\\n                      <h4><b>Terms and Conditions</b></h4>\\n                      <h5>1. This permit is valid only on the dates and time mentioned.</h5>\\n                      <h5>2. Noisy works - 10 AM to 12 PM. Monday to Friday only.</h5>\\n                  </div>\\n\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-6\\\">\\n                <ul class=\\\"list-inline\\\">\\n                  <li class=\\\"list-inline-item\\\">\\n                    <a class=\\\"btn l-blue mt_5\\\">\\n                      <i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n                      <span>Print</span>\\n                    </a>\\n                  </li>\\n                </ul>\\n              </div>\\n              <div class=\\\"col-sm-6\\\">\\n                <ul class=\\\"list-inline float-right mt-4\\\">\\n                  <li class=\\\"list-inline-item\\\">\\n                    <button class=\\\"btn blue mr-2\\\" [disabled]=\\\"createWorkPermitForm.invalid\\\">Submit</button>\\n                  </li>\\n                </ul>\\n              </div>\\n            </div>\\n          </form>\\n        </ng-container>\\n      </div>\\n\\t\\t</div>\\n</div>\\n\"","export default \"<div class=\\\"general-workpermit-wrapper\\\">\\n\\t\\n\\t<app-nav-pills-tabs [navArray] =\\\"navArray\\\"></app-nav-pills-tabs>\\n\\n\\t<div class=\\\"d-block mt-5\\\">\\n\\t\\t<div class=\\\"pt-3\\\">\\n\\t\\t\\t<router-outlet></router-outlet>\\n\\t\\t</div>\\n\\t</div>\\n\\n</div>\\n\"","export default \"<div class=\\\"workpermit-setup-wrapper\\\">\\n\\t\\n\\t<div class=\\\"card clear form-group\\\" id=\\\"accordion\\\">\\n\\t\\t<div class=\\\"card-body p-0\\\">\\n\\t\\t\\t<ul class=\\\"list-group tabs clear\\\">\\n\\t\\t\\t<li class=\\\"list-group-item\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#typeCollapseOne\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"typecollapseOne\\\">\\n\\t\\t\\t\\tCreate WorkPermit Type &nbsp;<!--<span *ngIf=\\\"listMaterials.length!=0\\\">({{listMaterials.length}})</span>-->\\n\\t\\t\\t</li>\\n\\t\\t\\t<div id=\\\"typeCollapseOne\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingOne\\\" data-parent=\\\"#accordion\\\">\\n\\t\\t\\t<div class=\\\"details\\\">\\n\\n\\t\\t\\t<form #createWorkPermitTypeForm = \\\"ngForm\\\" name=\\\"createWorkPermitTypeForm\\\" (ngSubmit)=\\\"submitCreateWorkPermitTypeForm(createWorkPermitTypeForm)\\\"  novalidate>\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"\\n\\t\\t\\t\\tcol-sm-4\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t<label>WorkPermit Type*</label>\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"WPType\\\" [(ngModel)]=\\\"workpermit.WPtype\\\" required>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t<label>WorkPermit Description</label>\\n\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"WPDescription\\\" [(ngModel)]=\\\"workpermit.WPdescription\\\" required></textarea>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-sm-2\\\">\\n\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"createWorkPermitTypeForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t</form>\\n\\n\\t\\t\\t<table  class=\\\"table shrink-table\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('lookupValueId')\\\">WorkPermit Type ID<span [ngClass]=\\\"getFieldOrderBy('lookupValueId')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('lookupValueName')\\\">WorkPermit Type <span [ngClass]=\\\"getFieldOrderBy('lookupValueName')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('description')\\\">workPermit Description <span [ngClass]=\\\"getFieldOrderBy('description')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Action</th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let worktype of allWorkType | sort : unitFieldType: unitOrder | \\n\\t\\t\\t\\t    simpleSearch: wpData  | slice:ItemStartIndex:ItemEndIndex; let i = index\\\">\\n\\t\\t\\t\\t      <td class=\\\"name\\\">{{worktype.lookupValueId}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{worktype.lookupValueName}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{worktype.description}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">\\n\\t\\t\\t\\t\\t\\t<a class=\\\"\\\"><i-feather class=\\\"icon edit\\\" name=\\\"edit\\\"></i-feather></a>&nbsp;\\n\\t\\t\\t\\t\\t\\t<a class=\\\"\\\"><i-feather class=\\\"icon delete\\\" name=\\\"trash\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t  </td>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\t\\t\\t\\n\\t\\t\\t<app-pagination \\n\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t\\t</app-pagination>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t</div>\\t\\n\\t\\t\\t</ul>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\\\"card clear\\\" id=\\\"accordion\\\">\\n\\t\\t<div class=\\\"card-body p-0\\\">\\n\\t\\t\\t<ul class=\\\"list-group tabs clear\\\">\\n\\t\\t\\t<li class=\\\"list-group-item\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#natureCollapseOne\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"naturecollapseOne\\\">\\n\\t\\t\\t\\tCreate Nature of Work &nbsp;<!--<span *ngIf=\\\"listMaterials.length!=0\\\">({{listMaterials.length}})</span>-->\\n\\t\\t\\t</li>\\n\\t\\t\\t<div id=\\\"natureCollapseOne\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingOne\\\" data-parent=\\\"#accordion\\\">\\n\\t\\t\\t<div class=\\\"details\\\">\\n\\n\\t\\t\\t<form #createNatureofWorkForm = \\\"ngForm\\\" name=\\\"createNatureofWorkForm\\\" (ngSubmit)=\\\"submitCreateNatureofWorkForm(createNatureofWorkForm)\\\"  novalidate>\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t<label>Nature of Work*</label>\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"WPNature\\\" [(ngModel)]=\\\"naturework.WPtype\\\" required>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t<label>Description</label>\\n\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"WPDescription\\\" [(ngModel)]=\\\"naturework.WPdescription\\\" required></textarea>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-sm-2\\\">\\n\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"createNatureofWorkForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t</form>\\n\\n\\t\\t\\t<table  class=\\\"table shrink-table\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('lookupValueId')\\\">WorkPermit Type ID<span [ngClass]=\\\"getFieldOrderBy('lookupValueId')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('lookupValueName')\\\">WorkPermit Type <span [ngClass]=\\\"getFieldOrderBy('lookupValueName')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('description')\\\">workPermit Description <span [ngClass]=\\\"getFieldOrderBy('description')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Action</th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let naturework of allNatureWork | sort : NWunitFieldType: NWunitOrder | simpleSearch: nwData | slice:NWItemStartIndex:NWItemEndIndex ; let i = index\\\">\\n\\t\\t\\t\\t      <td class=\\\"name\\\">{{naturework.lookupValueId}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{naturework.lookupValueName}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{naturework.description}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">\\n\\t\\t\\t\\t\\t\\t<a class=\\\"\\\"><i-feather class=\\\"icon edit\\\" name=\\\"edit\\\"></i-feather></a>&nbsp;\\n\\t\\t\\t\\t\\t\\t<a class=\\\"\\\"><i-feather class=\\\"icon delete\\\" name=\\\"trash\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t  </td>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\t\\t\\t\\n\\t\\t\\t<app-pagination \\n\\t\\t\\t\\t[totalItems]=\\\"NWtotalItems\\\"  \\n\\t\\t\\t\\t[ItemStartIndex]=\\\"NWItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"NWItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"NWitemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t\\t</app-pagination>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t</div>\\t\\n\\t\\t\\t</ul>\\n\\t\\t</div>\\n\\t</div>\\n\\n</div>\\n\\n\\n\\n\"","export default \"<router-outlet></router-outlet>\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy93b3JrLXBlcm1pdC9jb21wb25lbnRzL3dvcmtwZXJtaXQtYXBwcm92YWwvd29ya3Blcm1pdC1hcHByb3ZhbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\n\nimport { WorkPermitService } from '../../../../api/services/work-permit.service';\nimport { LookupService } from '../../../../api/services/lookup.service';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-workpermit-approval',\n  templateUrl: './workpermit-approval.component.html',\n  styleUrls: ['./workpermit-approval.component.scss']\n})\nexport class WorkpermitApprovalComponent implements OnInit {\n\n  isDataLoaded:boolean = false;\n\n  wpData:string = \"\";\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n  totalFilterItems:any;\n\n  workPermitListData:any;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n  \tprivate lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService,\n    public workPermit: WorkPermitService\n  ) { }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  ngOnInit() {\n    this.getWorkPermit();\n  }\n\n  getWorkPermit(){\n    let apartMentID = parseInt(this.cookieService.get('apartmentId'));\n\n    this.workPermit.getWorkPermitsByApartmentId(apartMentID).subscribe((res:any) => {\n      \n      this.workPermitListData = res;\n      this.isDataLoaded = true;\n\n      this.totalItems = this.workPermitListData.length;\n\n      if(this.totalItems>this.itemLimit){\n        this.ItemEndIndex = this.itemLimit;\n      }\n      else {\n        this.ItemEndIndex = this.totalItems;\n      }\n\n    });\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy93b3JrLXBlcm1pdC9jb21wb25lbnRzL3dvcmtwZXJtaXQtY3JlYXRlL3dvcmtwZXJtaXQtY3JlYXRlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { WorkPermitService } from '../../../../api/services/work-permit.service';\nimport { ApartmentService } from '../../../../api/services/apartment.service';\nimport { UserService } from '../../../../api/services/user.service';\nimport { VendorService } from '../../../../api/services/vendor.service';\nimport { LookupService } from '../../../../api/services/lookup.service';\nimport { SharedService } from '../../../../shared/services/shared.service';\n\nimport { CookieService } from 'ngx-cookie-service';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-workpermit-create',\n  templateUrl: './workpermit-create.component.html',\n  styleUrls: ['./workpermit-create.component.scss']\n})\nexport class WorkpermitCreateComponent implements OnInit {\n\n  workpermit:any;\n\n//Sub Form\n  Workers:any={\n    WorkerName:'',\n    WorkerDescription:''\n  }\n  Materials:any={\n    MaterialName:'',\n    MaterialQuantity:'',\n    MaterialDescription:''\n  }\n  Tools:any={\n    ToolName:'',\n    ToolQuantity:'',\n    ToolDescription:''\n  }\n\n//List Sub form\n  listWorkers:any=[];\n  listMaterials:any=[];\n  listTools:any=[];\n\n//For Multiselect\n  itemList = [];\n  selectedItems = [];\n  settings = {};\n\n//Extra Parameters\n  isWorkpermitSubmitted:boolean = false;\n  isError:boolean = false;\n  errorMessage:string = \"\";\n\n//Get for select tabs\n  allVendors:any;\n  allApartments:any;\n  allUsers:any;\n  allTowers:any;\n  allWorkType:any;\n  allNatureWorkType:any;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    public vendor: VendorService,\n    public apartmentService: ApartmentService,\n    private workPermitService:WorkPermitService,\n    private userService:UserService,\n    public lookupService:LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService,\n  ) { \n  }\n\n  ngOnInit() {\n    this.workpermit = {};\n\n  //   this.itemList = [\n  //     { \"id\": 1, \"itemName\": \"Painting\" },\n  //     { \"id\": 2, \"itemName\": \"Delivery\" },\n  //     { \"id\": 3, \"itemName\": \"Pickup\" },\n  //     { \"id\": 4, \"itemName\": \"Civil\" },\n  //     { \"id\": 5, \"itemName\": \"Mechanical\" },\n  //     { \"id\": 6, \"itemName\": \"Air-Conditioning\" },\n  //     { \"id\": 7, \"itemName\": \"Cleaning\" },\n  //     { \"id\": 8, \"itemName\": \"Others\" },\n  // ];\n\n  // this.selectedItems = [\n  //     { \"id\": 1, \"itemName\": \"Painting\" },\n  //     { \"id\": 2, \"itemName\": \"Delivery\" },\n  //     { \"id\": 3, \"itemName\": \"Pickup\" },\n  //     { \"id\": 4, \"itemName\": \"Civil\" },\n  // ];\n  // this.settings = {\n  //     text: \"Select Work\",\n  //     selectAllText: 'Select All',\n  //     unSelectAllText: 'UnSelect All',\n  //     classes: \"myclass custom-class\"\n  // };\n\n  this.getVendors();\n  this.getApartments();\n  this.getTowers();\n  this.getUnitUsers();\n  this.getWorktype();\n  this.getNatureWorktype();\n  }\n  \n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n//For Multiselect\n  // onItemSelect(item: any) {\n  //   console.log(item);\n  //   console.log(this.selectedItems);\n  // }\n  // OnItemDeSelect(item: any) {\n  //   console.log(item);\n  //   console.log(this.selectedItems);\n  // }\n  // onSelectAll(items: any) {\n  //   console.log(items);\n  // }\n  // onDeSelectAll(items: any) {\n  //   console.log(items);\n  // }\n\n//Get Vendors List\ngetVendors(){\n  this.vendor.getAllVendors().subscribe((res:any) => {\n      this.allVendors = res;\n  })\n}\n\n//Get Apartments List\ngetApartments(){\n  this.apartmentService.getAllApartments().subscribe((res:any) => {\n      this.allApartments = res;\n  })\n}\n\n//Get Towers List\ngetTowers(){\n  this.apartmentService.getAllApartmentBlockUnits().subscribe((res:any) => {\n      this.allTowers = res;\n  })\n}\n\n//Get Apartments List\ngetUnitUsers(){\n  this.userService.getAllUsers().subscribe((res:any) => {\n      this.allUsers = res;\n  })\n}\n\n//Get Work Type\ngetWorktype(){\n  this.lookupService.getLookupValueByLookupTypeId(90).subscribe((res:any) => {\n    this.allWorkType = res;\n  })\n}\n\n//Get Nature work Type\ngetNatureWorktype(){\n  this.lookupService.getLookupValueByLookupTypeId(89).subscribe((res:any) => {\n    this.allNatureWorkType = res;\n  })\n}\n\n//Add Sub Form\n//Workers\naddWorkers(){\n  let name = this.Workers.WorkerName;\n  let description = this.Workers.WorkerDescription;\n  this.listWorkers.push({name:name,description:description});\n}\n\n//Materials\naddMaterials(){\n  let name = this.Materials.MaterialName;\n  let qty = this.Materials.MaterialQuantity;\n  let description = this.Materials.MaterialDescription;\n  this.listMaterials.push({name:name,qty:qty,description:description});\n}\n//Tools\naddTools(){\n  let name = this.Tools.ToolName;\n  let qty = this.Tools.ToolQuantity;\n  let description = this.Tools.ToolDescription;\n  this.listTools.push({name:name,qty:qty,description:description});\n}\n\n//create work permit\nsubmitCreateWorkPermitForm(form) {\n\n  this.isWorkpermitSubmitted = true;\n  this.isError = false;\n\n    //add user\n    let workPermitDetails = {\n      \"apartmentId\": this.workpermit.WPApartment,\n      \"apartmentUnitId\": this.workpermit.WPTower,\n      \"userId\": this.workpermit.WPUnitUser,\n      \"workPermitTypeId\": this.workpermit.WPPermitType,\n      \"workNatureId\":  this.workpermit.WPNatureWork,\n      \"vendorId\": this.workpermit.WPVendor,\n      \"inChargePerson\": this.workpermit.WPIncharge,\n      \"contactNumber\": this.workpermit.WPContact,\n      \"startDate\": this.workpermit.WPStartdate,\n      \"endDate\": this.workpermit.WPEnddate,\n      \"startTime\": moment(this.workpermit.WPStarttime).format('hh:mm'),\n      \"endTime\": moment(this.workpermit.WPEndtime).format('hh:mm'),\n      \"workPermitStatusId\": 353,\n      \"isApproved\": true,\n      \"approvedBy\": null,\n      \"approvedOn\": null,\n      \"termsConditions\": \"string\",\n      \"description\": \"string\",\n      \"isActive\": true,\n      \"insertedBy\": parseInt(this.cookieService.get('userId')),\n      \"insertedOn\": new Date().toISOString(),\n      \"updatedBy\": null,\n      \"updatedOn\": null\n    }\n\n    //add user \n    this.workPermitService.addWorkPermit(workPermitDetails).subscribe((res:any) => {\n          \n          if(res.message) {\n\n            var workPermitId = res.message;\n\n              if(this.listWorkers.length!=0){\n                for(var i=0;i < this.listWorkers.length;i++){\n                  var workpermitworkers = {\n                    \"workPermitWorkersId\": 0,\n                    \"apartmentId\": this.workpermit.WPApartment,\n                    \"workPermitId\": workPermitId,\n                    \"workerName\": this.listWorkers[i].name,\n                    \"workDescription\": this.listWorkers[i].description,\n                    \"isActive\": true,\n                    \"insertedBy\": parseInt(this.cookieService.get('userId')),\n                    \"insertedOn\": new Date().toISOString(),\n                    \"updatedBy\": null,\n                    \"updatedOn\": null\n                  }\n                  this.workPermitService.addWorkPermitWorkers(workpermitworkers).subscribe((res:any) => {\n                  });\n                }\n              }\n\n              if(this.listMaterials.length!=0){\n                for(var i=0;i < this.listMaterials.length;i++){\n                  var workpermitmaterials = {\n                    \"workPermitMaterialsId\": 0,\n                    \"apartmentId\": this.workpermit.WPApartment,\n                    \"workPermitId\": workPermitId,\n                    \"material\": this.listMaterials[i].name,\n                    \"quantity\": this.listMaterials[i].qty,\n                    \"description\": this.listMaterials[i].description,\n                    \"isActive\": true,\n                    \"insertedBy\": parseInt(this.cookieService.get('userId')),\n                    \"insertedOn\": new Date().toISOString(),\n                    \"updatedBy\": null,\n                    \"updatedOn\": null\n                  }\n                  this.workPermitService.addWorkPermitMaterials(workpermitmaterials).subscribe((res:any) => {\n                  });\n                }\n              }\n              if(this.listTools.length!=0){\n                for(var i=0;i < this.listTools.length;i++){\n                  var workpermittools = {\n                    \"workPermitToolsId\": 0,\n                    \"apartmentId\": this.workpermit.WPApartment,\n                    \"workPermitId\": workPermitId,\n                    \"tool\": this.listTools[i].name,\n                    \"quantity\": this.listTools[i].qty,\n                    \"description\": this.listTools[i].description,\n                    \"isActive\": true,\n                    \"insertedBy\": parseInt(this.cookieService.get('userId')),\n                    \"insertedOn\": new Date().toISOString(),\n                    \"updatedBy\": null,\n                    \"updatedOn\": null\n                  }\n                  this.workPermitService.addWorkPermitTools(workpermittools).subscribe((res:any) => {\n                  });\n                }\n              }\n\n              if(res.message) {\n                this.sharedService.setAlertMessage(\"Work Permit added successfully\");\n                this.router.navigate(['/ams/work-permit/settings/approval']);\n              }\n          }\n          else {\n            this.isWorkpermitSubmitted = false;\n            this.isError = true;\n            this.errorMessage = res.errorMessage;\n          }\n\n    },\n    error => {\n      \n    }\n    );\n  \n}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy93b3JrLXBlcm1pdC9jb21wb25lbnRzL3dvcmtwZXJtaXQtc2V0dGluZy93b3JrcGVybWl0LXNldHRpbmcuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-workpermit-setting',\n  templateUrl: './workpermit-setting.component.html',\n  styleUrls: ['./workpermit-setting.component.scss']\n})\nexport class WorkpermitSettingComponent implements OnInit {\n\n  navArray:any;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.navArray = [\n  \t\t{link:'setup', name: 'Setup'},\n  \t\t{link:'approval', name: 'Approval List'},\n  \t\t{link:'create', name: 'Create work Permit'},\n  \t]\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy93b3JrLXBlcm1pdC9jb21wb25lbnRzL3dvcmtwZXJtaXQtc2V0dXAvd29ya3Blcm1pdC1zZXR1cC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\n\nimport { LookupService } from '../../../../api/services/lookup.service';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-workpermit-setup',\n  templateUrl: './workpermit-setup.component.html',\n  styleUrls: ['./workpermit-setup.component.scss']\n})\nexport class WorkpermitSetupComponent implements OnInit {\n\n  workpermit:any;\n  naturework:any;\n\n  isDataLoaded:boolean = false;\n\n  wpData:string = \"\";\n  nwData:string = \"\";\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n  totalFilterItems:any;\n\n  //Nature Pagination\n  NWunitFieldType:string = \"unitno\";\n  NWunitOrder:boolean = true;\n\n  NWItemStartIndex:any = 0;\n  NWItemEndIndex:any;\n  NWtotalItems:any;\n  NWitemLimit:any = 10;\n  NWtotalFilterItems:any;\n\n  //Get all work type\n  allWorkType:any;\n  allNatureWork:any;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n  \tprivate lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) { }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  \n\n  ngOnInit(): void {\n    this.workpermit = {};\n    this.naturework = {};\n    this.getWorktype();\n    this.getNaturework();\n  }\n\n  //Get Work Type\n  getWorktype(){\n    this.lookupService.getLookupValueByLookupTypeId(90).subscribe((res:any) => {\n      this.allWorkType = res;\n      this.isDataLoaded = true;\n      this.totalItems = this.allWorkType.length;\n      if(this.totalItems>this.itemLimit){\n        this.ItemEndIndex = this.itemLimit;\n      }\n      else {\n        this.ItemEndIndex = this.totalItems;\n      }\n    })\n  }\n\n  //Get Work Type\n  getNaturework(){\n    this.lookupService.getLookupValueByLookupTypeId(89).subscribe((res:any) => {\n      this.allNatureWork = res;\n      this.isDataLoaded = true;\n      this.NWtotalItems = this.allNatureWork.length;\n      if(this.NWtotalItems>this.NWitemLimit){\n        this.NWItemEndIndex = this.NWitemLimit;\n      }\n      else {\n        this.NWItemEndIndex = this.NWtotalItems;\n      }\n    })\n  }\n\n  submitCreateWorkPermitTypeForm(form){\n\n    let workpermittypes={\n      \"lookupValueId\": 0,\n      \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n      \"lookupTypeId\": 90,\n      \"lookupValueName\": this.workpermit.WPtype,\n      \"description\": this.workpermit.WPdescription,\n      \"isActive\": true,\n      \"insertedBy\": parseInt(this.cookieService.get('userId')),\n      \"insertedOn\": new Date().toISOString(),\n      \"updatedBy\": null,\n      \"updatedOn\": null\n    }\n    this.lookupService.addLookupValue(workpermittypes).subscribe((res:any) => {\n      if(res.message) {\n        this.sharedService.setAlertMessage(\"WorkPermit Type added successfully\");\n        this.getWorktype();\n      }\n    });\n\n  }\n\n  submitCreateNatureofWorkForm(form){\n\n    let workpermittypes={\n      \"lookupValueId\": 0,\n      \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n      \"lookupTypeId\": 89,\n      \"lookupValueName\": this.naturework.WPtype,\n      \"description\": this.naturework.WPdescription,\n      \"isActive\": true,\n      \"insertedBy\": parseInt(this.cookieService.get('userId')),\n      \"insertedOn\": new Date().toISOString(),\n      \"updatedBy\": null,\n      \"updatedOn\": null\n    }\n    this.lookupService.addLookupValue(workpermittypes).subscribe((res:any) => {\n      if(res.message) {\n        this.sharedService.setAlertMessage(\"WorkPermit Nature of work added successfully\");\n        this.getNaturework();\n      }\n    });\n\n  }\n\n  \n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from '../.././auth.guard';\n\nimport { WorkPermitComponent } from './work-permit.component';\nimport { WorkpermitSetupComponent } from './components/workpermit-setup/workpermit-setup.component';\nimport { WorkpermitApprovalComponent } from './components/workpermit-approval/workpermit-approval.component';\nimport { WorkpermitCreateComponent } from './components/workpermit-create/workpermit-create.component';\nimport { WorkpermitSettingComponent } from './components/workpermit-setting/workpermit-setting.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'setup', pathMatch: 'full'},\n  { path: 'setup', component: WorkpermitSetupComponent},\n  { path: 'approval', component: WorkpermitApprovalComponent},\n  { path: 'create', component: WorkpermitCreateComponent},\n  { path: '**', redirectTo: 'setup', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WorkPermitRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy93b3JrLXBlcm1pdC93b3JrLXBlcm1pdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-work-permit',\n  templateUrl: './work-permit.component.html',\n  styleUrls: ['./work-permit.component.scss']\n})\nexport class WorkPermitComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WorkPermitRoutingModule } from './work-permit-routing.module';\n\nimport { SharedModule } from '../../shared/shared.module';\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\n\nimport { WorkPermitComponent } from './work-permit.component';\nimport { WorkpermitSetupComponent } from './components/workpermit-setup/workpermit-setup.component';\nimport { WorkpermitApprovalComponent } from './components/workpermit-approval/workpermit-approval.component';\nimport { WorkpermitCreateComponent } from './components/workpermit-create/workpermit-create.component';\nimport { WorkpermitSettingComponent } from './components/workpermit-setting/workpermit-setting.component';\n\n@NgModule({\n  declarations: [WorkPermitComponent, WorkpermitSetupComponent, WorkpermitApprovalComponent, WorkpermitCreateComponent, WorkpermitSettingComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    WorkPermitRoutingModule,\n    AngularMultiSelectModule\n  ],\n  bootstrap: [ WorkPermitComponent ]\n})\nexport class WorkPermitModule { }\n"]}