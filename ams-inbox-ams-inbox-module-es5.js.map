{"version":3,"sources":["webpack:///src/app/ams/ams-inbox/ams-inbox.component.html","webpack:///src/app/ams/ams-inbox/components/ams-inbox-history/ams-inbox-history.component.html","webpack:///src/app/ams/ams-inbox/components/ams-inbox-message/ams-inbox-message.component.html","webpack:///src/app/ams/ams-inbox/components/ams-inbox-notify/ams-inbox-notify.component.html","webpack:///src/app/ams/ams-inbox/components/ams-inbox-reports/ams-inbox-reports.component.html","webpack:///src/app/ams/ams-inbox/components/ams-inbox-setup/ams-inbox-setup.component.html","webpack:///src/app/ams/ams-inbox/ams-inbox-routing.module.ts","webpack:///src/app/ams/ams-inbox/ams-inbox.component.scss","webpack:///src/app/ams/ams-inbox/ams-inbox.component.ts","webpack:///src/app/ams/ams-inbox/ams-inbox.module.ts","webpack:///src/app/ams/ams-inbox/components/ams-inbox-history/ams-inbox-history.component.scss","webpack:///src/app/ams/ams-inbox/components/ams-inbox-history/ams-inbox-history.component.ts","webpack:///src/app/ams/ams-inbox/components/ams-inbox-message/ams-inbox-message.component.scss","webpack:///src/app/ams/ams-inbox/components/ams-inbox-message/ams-inbox-message.component.ts","webpack:///src/app/ams/ams-inbox/components/ams-inbox-notify/ams-inbox-notify.component.scss","webpack:///src/app/ams/ams-inbox/components/ams-inbox-notify/ams-inbox-notify.component.ts","webpack:///src/app/ams/ams-inbox/components/ams-inbox-reports/ams-inbox-reports.component.scss","webpack:///src/app/ams/ams-inbox/components/ams-inbox-reports/ams-inbox-reports.component.ts","webpack:///src/app/ams/ams-inbox/components/ams-inbox-setup/ams-inbox-setup.component.scss","webpack:///src/app/ams/ams-inbox/components/ams-inbox-setup/ams-inbox-setup.component.ts"],"names":["routes","path","redirectTo","pathMatch","component","AmsInboxRoutingModule","imports","forChild","exports","AmsInboxComponent","selector","template","AmsInboxModule","declarations","bootstrap","AmsInboxHistoryComponent","AmsInboxMessageComponent","AmsInboxNotifyComponent","broadcastService","sharedService","cookieService","userService","staffService","apartmentService","injector","dropdownSettings","blockdropdownSettings","roleTypedropdownSettings","broadCastdropdownSettings","groupCategorySetting","roleDropdownSettings","adminDropdownSettings","tenantDropdownSettings","staffDropdownSettings","ownerDropdownSettings","staffCategoryMap","Map","staffSubCategoryMap","roleTypeArr","adminList","tenantList","staffList","ownerList","roleCategory","staffCategory","staffSubCategory","broadCastCategory","apartmentBlock","condition","broadModeArr","broadCastGroupCategory","allBroadcastMessageGroup","isFlashNotice","editorPlacehorder","filterOptions","modalService","get","event","message","IsBroadcast","loginedUser","parseInt","apartmentID","getAllUsers","getAllCategory","getAllRoleTypesList","getAllApartmentBlockList","getAllGroupCategory","getInterestGroupUsers","getAllInterestGroupUser","singleSelection","enableSearchFilter","labelKey","primaryKey","enableFilterSelectAll","autoPosition","maxHeight","groupBy","selectedTab","item","selectedItems","length","selectInterestGroup","users","updateUsers","ApartmentId","getUsersByKeyword","subscribe","res","forEach","element","userFullName","userName","roleName","apartmentBlockNumber","apartmentBlockUnitNumber","allnterestGroupUsers","error","console","log","queryParamBase","apartmentId","getUsersByApartmentId","allUsers","categoryUsers","interestGroupUsers","filter","obj","broadCastGroupCategoryId","tempAssignUsers","tempUsers","isFound","userId","roleID","roleId","apartmentBlockID","apartmentBlockId","apartmentBlockUnitID","unitId","push","AssignInterestUsers","bool","id","broadCastMessageCategoryId","data","allcategory","undefined","ckeditor","getApartmentBlockByApartmentId","dropdownList","broadCastModeArr","getBroadCastMessageCategories","getAllRoleTypes","params","value","getApartmentRolesByRoleTypeId","condtionRequired","conditinArr","getUserIds$","includes","adminUsers","toLowerCase","tenantUsers","staffUsers","ownerUsers","getAllBroadCastGroupCategory","getBroadCastGroupCategoryUser","isStaff","name","getStaffCategoryByRole","temp","category","set","addStaffCategory","items","getstaffCategories","removeStaffCategory","removeSubStaffCategory","getSubStaffCategoryByCategory","addSubStaffCategory","getStaffSubCategories","removeAllStaffCategories","removeAllSubStaffCategories","list","removeSubStaffCategories","roleIds","Array","prototype","map","call","join","blockIds","conditionIds","staffcategoryIds","staffSubCategoryIds","getUsersByFilter","form","broadCastGroupCategoryIDs","broadcastModeIds","broadcastMessage","subject","Date","toISOString","broadCastGroupcategoryId","broadcastMessageCategoryId","userIds","showErrorModal","addBroadCastMessage","setAlertMessage","ClearFormData","params2","upsertBroadCastFilters","filterId","removeRole","AmsInboxReportsComponent","lookupService","isDataLoaded","details","LookupTypeId","MenuName","getLookupValuesByApartmentIdLookupTypeIdMenuName","reportDataList","AmsInboxSetupComponent","isInboxCategoryLoaded","isInboxCategorySubmitted","isInboxCategoryNew","isInboxCategoryUpdate","inboxCategory","inboxCategoryOwner","inboxCategoryUpdateId","errorMessage","isError","lookupValueName","lookupValueId","index","updateUserId","deleteLookupvalue","inboxCategoryData","splice","getAllUsersByApartmentId","inboxCategoryOwnerData"],"mappings":"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","file":"ams-inbox-ams-inbox-module-es5.js","sourcesContent":["export default \"<router-outlet></router-outlet>\\n\"","export default \"<p>\\n  ams-inbox-history works!\\n</p>\\n\"","export default \"<p>ams-inbox-message works!</p>\\n\"","export default \"<div class=\\\"broadcast-message-wrapper\\\">\\n\\t\\n  <div class=\\\"card clear form-group\\\">\\n      <div class=\\\"card-header\\\">\\n          <div class=\\\"float-left\\\">\\n              <h5>\\n                  <span>Compose Message</span>\\n              </h5>\\n          </div>\\n          <div class=\\\"float-right\\\">\\n              <!-- <a href=\\\"javascript:void(0)\\\" \\n              routerLink=\\\"/ams/work-permit/settings/approval\\\" \\n              routerLinkActive=\\\"active\\\"\\n              [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n                  <i-feather class=\\\"icon back\\\" name=\\\"chevron-left\\\"></i-feather>\\n              </a> -->\\n          </div>\\n      </div>\\n      \\n      <div class=\\\"card-body\\\">\\n  \\n      <!-- <app-alert-message [message]=\\\"errorMessage\\\" [isAlert]=\\\"isError\\\"></app-alert-message> -->\\n      <!-- <ng-container *ngIf=\\\"!isBroadCastSubmitted\\\"> -->\\n      <ng-container>\\n      <form #createBroadcastMessageForm = \\\"ngForm\\\" name=\\\"createBroadcastMessageForm\\\" (ngSubmit)=\\\"submitCreateBroadcastMessageForm(createBroadcastMessageForm)\\\"  novalidate>\\n      \\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-10 offset-sm-1\\\">\\n              <!-- <mat-tab-group dynamicHeight> -->\\n                  <!-- <mat-tab label=\\\"Role Based\\\"> -->\\n\\n                      <!-- <ul class=\\\"nav nav-tabs nav-fill\\\" id=\\\"nav-tab\\\" role=\\\"tablist\\\">\\n                          \\n                          <li ><a class=\\\"nav-item nav-link active\\\" id=\\\"nav-menu1-tab\\\" data-toggle=\\\"tab\\\" role=\\\"tab\\\" href=\\\"#menu1\\\" (click)=\\\"currentTab('role')\\\">Role Based</a></li>\\n                          <li><a class=\\\"nav-item nav-link\\\" id=\\\"nav-menu2-tab\\\" data-toggle=\\\"tab\\\" role=\\\"tab\\\" href=\\\"#menu2\\\" (click)=\\\"currentTab('interest')\\\">Interest Group based</a></li> \\n                          \\n                        </ul> -->\\n                        <div class=\\\"tab-content\\\" id=\\\"nav-tabContent\\\">\\n\\n                          <div id=\\\"menu1\\\" role=\\\"tabpanel\\\" ria-labelledby=\\\"nav-menu1-tab\\\" class=\\\"tab-pane show active\\\">\\n\\n                              <div class=\\\"row\\\"> \\n                                  <div  class=\\\"col-sm-4\\\">\\n                                   <div class=\\\"select-box\\\">\\n                                       <label>Role Type</label>\\n                                       <angular2-multiselect [data]=\\\"roleTypeArr.dropdownList\\\" name=\\\"roleTypeDropDown\\\"\\n                                       [(ngModel)]=\\\"roleTypeArr.selectedItems\\\"\\n                                       [settings]=\\\"roleTypedropdownSettings\\\" (onSelect)=\\\"getAppartmentRole($event)\\\"\\n                                       (onDeSelect)=\\\"removeRole($event)\\\" (onDeSelectAll)=\\\"removeRole($event)\\\"></angular2-multiselect>\\n                                   </div>  \\n                                   </div>\\n                                   <div  class=\\\"col-sm-4\\\">\\n                                      <div class=\\\"select-box\\\">\\n                                          <label>Apartment Block</label>\\n                                          <angular2-multiselect [data]=\\\"apartmentBlock.dropdownList\\\" name=\\\"blockdropdown\\\"\\n                                          [(ngModel)]=\\\"apartmentBlock.selectedItems\\\"\\n                                          [settings]=\\\"blockdropdownSettings\\\"\\n                                          (onSelect)=\\\"updateUsers()\\\"\\n                                          (onDeSelect)=\\\"updateUsers()\\\"\\n                                          (onSelectAll)=\\\"updateUsers()\\\"\\n                                          (onDeSelectAll)=\\\"updateUsers()\\\"\\n                                          ></angular2-multiselect>\\n                                      </div>  \\n                                          </div>\\n                                          <div  class=\\\"col-sm-4\\\">\\n                                              <div class=\\\"select-box\\\">\\n                                                  <label>Conditions</label>\\n                                                  <angular2-multiselect [data]=\\\"condition.dropdownList\\\" name=\\\"conditiondropdown\\\"\\n                                                  [(ngModel)]=\\\"condition.selectedItems\\\"\\n                                                  [settings]=\\\"roleDropdownSettings\\\" \\n                                                  (onSelect)=\\\"updateUsers()\\\"\\n                                                  (onDeSelect)=\\\"updateUsers()\\\"\\n                                                  (onSelectAll)=\\\"updateUsers()\\\"\\n                                                  (onDeSelectAll)=\\\"updateUsers()\\\"\\n                                                  ></angular2-multiselect>\\n                                              </div>  \\n                                           </div>\\n                                      </div>\\n                                  <div class=\\\"row\\\"> \\n                                          <div  class=\\\"col-sm-4\\\">\\n                                           <div class=\\\"select-box\\\">\\n                                               <label>Role</label>\\n                                               <angular2-multiselect [data]=\\\"roleCategory.dropdownList\\\" name=\\\"roleDropDown\\\"\\n                                               [(ngModel)]=\\\"roleCategory.selectedItems\\\"\\n                                               [settings]=\\\"roleDropdownSettings\\\"\\n                                               (onSelect)=\\\"getstaffCategories($event)\\\"  (onDeSelect)=\\\"removeStaffCategories($event)\\\"\\n                                               (onSelectAll)=\\\"getAllStaffCategories($event)\\\"  (onDeSelectAll)=\\\"removeAllStaffCategories($event)\\\"\\n                                               >\\n                                                \\n                                              </angular2-multiselect>\\n                                           </div>  \\n                                               </div>\\n                                               <div  class=\\\"col-sm-4\\\" *ngIf=\\\"this.roleCategory.selectedItems.length>0 && isStaff\\\">\\n                                                  <div class=\\\"select-box\\\">\\n                                                      <label>Staff Category</label>\\n                                                      <angular2-multiselect [data]=\\\"staffCategory.dropdownList\\\" name=\\\"staffDropDown\\\"\\n                                                      [(ngModel)]=\\\"staffCategory.selectedItems\\\"\\n                                                      [settings]=\\\"dropdownSettings\\\"\\n                                                      (onSelect)=\\\"getStaffSubCategories($event)\\\" (onDeSelect)=\\\"removeSubStaffCategories($event)\\\"\\n                                                      (onSelectAll)=\\\"getAllSubStaffCategories($event)\\\"  (onDeSelectAll)=\\\"removeAllSubStaffCategories($event)\\\" \\n                                                       (onGroupDeSelect)=\\\"getGroupSubStaffCategories($event)\\\"       (onGroupSelect)=\\\"removeGroupSubStaffCategories($event)\\\"                                >\\n                                                  </angular2-multiselect>\\n                                                  </div>  \\n                                                      </div>\\n                                                      <div  class=\\\"col-sm-4\\\" *ngIf=\\\"this.staffCategory.selectedItems.length>0\\\">\\n                                                          <div class=\\\"select-box\\\">\\n                                                              <label>Staff SubCategory</label>\\n                                                              <angular2-multiselect [data]=\\\"staffSubCategory.dropdownList\\\" name=\\\"subStaffDropDown\\\"\\n                                                              [(ngModel)]=\\\"staffSubCategory.selectedItems\\\"\\n                                                              [settings]=\\\"dropdownSettings\\\"\\n                                                              (onSelect)=\\\"updateUsers()\\\"        (onDeSelect)=\\\"updateUsers()\\\"\\n                                                              (onSelectAll)=\\\"updateUsers()\\\"     (onDeSelectAll)=\\\"updateUsers()\\\" \\n                                                              (onGroupDeSelect)=\\\"updateUsers()\\\" (onGroupSelect)=\\\"updateUsers()\\\"   \\n                                                              ></angular2-multiselect>\\n                                                          </div>  \\n                                                              </div>\\n                                              </div>\\n                                           <!-- </mat-tab>\\n                          <mat-tab label=\\\"Interest Group Based \\\"> \\n                              \\n                              Content 2 </mat-tab>\\n                          \\n                         </mat-tab-group>  -->\\n                              </div>  \\n                      \\n\\n                        \\n\\n                        </div>\\n\\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"select-box\\\">\\n                              <label>Admin</label>\\n                              <angular2-multiselect [data]=\\\"adminList.dropdownList\\\" name=\\\"adimnDropDown\\\"\\n                              [(ngModel)]=\\\"adminList.selectedItems\\\"\\n                              [settings]=\\\"adminDropdownSettings\\\" ></angular2-multiselect>\\n                          </div>  \\n                          </div>\\n                          <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"select-box\\\">\\n                              <label>Tenant</label>\\n                              <angular2-multiselect [data]=\\\"tenantList.dropdownList\\\" name=\\\"tenantDropDown\\\"\\n                              [(ngModel)]=\\\"tenantList.selectedItems\\\"\\n                              [settings]=\\\"tenantDropdownSettings\\\" ></angular2-multiselect>\\n                          </div>  \\n                          </div>\\n                          <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"select-box\\\">\\n                              <label>Staff</label>\\n                              <angular2-multiselect [data]=\\\"staffList.dropdownList\\\" name=\\\"staffDropDown\\\"\\n                              [(ngModel)]=\\\"staffList.selectedItems\\\"\\n                              [settings]=\\\"staffDropdownSettings\\\"></angular2-multiselect>\\n                          </div>  \\n                          </div>\\n                          <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"select-box\\\">\\n                              <label>Owner</label>\\n                              <angular2-multiselect [data]=\\\"ownerList.dropdownList\\\" name=\\\"ownerDropDown\\\"\\n                              [(ngModel)]=\\\"ownerList.selectedItems\\\"\\n                              [settings]=\\\"ownerDropdownSettings\\\" ></angular2-multiselect>\\n                          </div>  \\n                          </div>\\n                        </div>\\n\\n                      \\n                            \\n\\n\\n                              <!-- <div class=\\\"row recipentsDiv\\\" > \\n                                  <div class=\\\"col-sm-12\\\">\\n                                     <label>Recipients</label>\\n                                <div  class=\\\"col-sm-12 box\\\" *ngIf=\\\"IsBroadcast\\\" >\\n                                   <label *ngFor=\\\"let user of users\\\" >\\n                                       {{user.firstName+\\\" \\\"+user.middleName+\\\" \\\"+user.lastName+\\\",\\\"}}\\n                                   </label>\\n                                      </div> \\n                                 <div  class=\\\"col-sm-12 box\\\" *ngIf=\\\"!IsBroadcast\\\" >\\n                               <label *ngFor=\\\"let user of AssignInterestUsers\\\" >\\n                                            {{user.userFullName +\\\",\\\"}}\\n                                        </label>\\n                                           </div> \\n\\n                                      \\n                                  </div> \\n                              </div> -->\\n               \\n              <div class=\\\"row\\\"> \\n                  <div  class=\\\"col-sm-4\\\" *ngIf=\\\"IsBroadcast\\\">\\n                   <div class=\\\"select-box\\\">\\n                       <label>Broadcast Category*</label>\\n                       <angular2-multiselect  [data]=\\\"broadCastCategory.dropdownList\\\" name=\\\"broadcastDropDown\\\"\\n                       [(ngModel)]=\\\"broadCastCategory.selectedItems\\\"\\n                       [settings]=\\\"broadCastdropdownSettings\\\" (onSelect)=\\\"categoryChange($event)\\\" required></angular2-multiselect>\\n                   </div>  \\n                 </div>\\n                 <div  class=\\\"col-sm-4\\\">\\n                  <div class=\\\"select-box\\\">\\n                      <label>Broadcast Mode*</label>\\n                      <angular2-multiselect  [data]=\\\"broadModeArr.dropdownList\\\" name=\\\"BroadCastModeDropDown\\\"\\n                      [(ngModel)]=\\\"broadModeArr.selectedItems\\\"\\n                      [settings]=\\\"roleDropdownSettings\\\"  required></angular2-multiselect>\\n                  </div> \\n              </div>\\n              \\n                 <div class=\\\"col-sm-12\\\">\\n                      <div class=\\\"input-box\\\">\\n                          <label>Subject*</label>\\n                          <input type=\\\"text\\\" class=\\\"form-control form-group\\\" placeholder=\\\"Enter\\\" name=\\\"subject\\\" [(ngModel)]=\\\"message.subject\\\" required>\\n                          <quill-editor\\n                              class=\\\"quill-editor\\\"\\n                              name=\\\"ckeditor\\\"\\n                              [placeholder]=\\\"editorPlacehorder\\\"\\n                              [(ngModel)]=\\\"message.ckeditor\\\"\\n                              (onContentChanged)=\\\"onContentChanged($event)\\\">\\n                          </quill-editor>\\n                      </div>\\n                  </div>\\n          \\n                  <div class=\\\"col-sm-12\\\">\\n                    <ul class=\\\"list-inline float-right mt-4\\\">\\n                      <li class=\\\"list-inline-item\\\">\\n                        <button class=\\\"btn blue mr-2\\\" (click)=\\\"ClearFormData()\\\">Cancel</button>\\n                        <button class=\\\"btn blue mr-2\\\" [disabled]=\\\"createBroadcastMessageForm.invalid\\\">Submit</button>\\n                      </li>\\n                    </ul>\\n                  </div>\\n              </div>\\n          </div>\\n      </div>\\n      \\n    </form>\\n  </ng-container>\\n</div>\\n</div>\\n</div>\"","export default \"<div class=\\\"reports-wrapper\\\">\\n\\n\\t<app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n\\n\\t<ng-container *ngIf=\\\"isDataLoaded\\\">\\n\\n\\t\\t<h5 class=\\\"mb-3\\\">Reports</h5>\\n\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-sm-6 mb-20\\\" *ngFor=\\\"let report of reportDataList\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"card report-card\\\">\\n\\t\\t\\t\\t\\t\\t<a class=\\\"t-no-decor\\\" href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t\\t\\t\\trouterLink = \\\"{{report.menuName}}/{{report.lookupValueID}}\\\" \\n\\t\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<h6>{{report.lookupValueName}}</h6>\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>{{report.description}}</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t</ng-container>\\n\\n</div>\"","export default \"<div class=\\\"inbox-setup-wrapper\\\">\\n\\t\\n\\t<app-loader *ngIf=\\\"!isInboxCategoryLoaded\\\"></app-loader>\\n\\n\\t<div class=\\\"category-list list-boxes\\\" *ngIf=\\\"isInboxCategoryLoaded\\\">\\n\\t\\t<h4 class=\\\"main-title-mini\\\">Categories</h4>\\n\\t\\t<ng-container *ngFor=\\\"let item of inboxCategoryData; let i = index\\\">\\n\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"icons\\\">\\n\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\"><i-feather class=\\\"icon edit\\\" name=\\\"edit\\\" (click)=\\\"updateInboxCategory(item, i)\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" class=\\\"d-none\\\"><i-feather class=\\\"icon del\\\" name=\\\"x\\\" (click)=\\\"deleteInboxCategory(item, i)\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<h4>{{item.lookupValueName}}</h4>\\n\\t\\t\\t\\t\\t\\t<p></p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</li>\\n\\t\\t</ng-container>\\n\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t<div class=\\\"card-body new text-center\\\">\\n\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" class=\\\"rounded-btn blue\\\" (click)=\\\"addNewInboxCategory()\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"icon\\\">+</div>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t<h5>Add New Category</h5>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</li>\\n\\t</div>\\n\\n\\t<div class=\\\"card mt-30\\\" *ngIf=\\\"isInboxCategoryNew || isInboxCategoryUpdate\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5 *ngIf=\\\"isInboxCategoryNew\\\">Add Category</h5>\\n    \\t\\t\\t<h5 *ngIf=\\\"!isInboxCategoryNew\\\">Update Category</h5>\\n    \\t\\t</div>\\n    \\t\\t<div class=\\\"float-right\\\" (click)=\\\"removeCategoryBox()\\\">\\n    \\t\\t\\t<i-feather class=\\\"icon del\\\" name=\\\"x\\\"></i-feather>\\n    \\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\n\\t\\t\\t<app-alert-message [message]=\\\"errorMessage\\\" [isAlert]=\\\"isError\\\"></app-alert-message>\\n\\n\\t\\t\\t<app-loader *ngIf=\\\"!isInboxCategorySubmitted\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"isInboxCategorySubmitted\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<form #addInboxCategoryForm = \\\"ngForm\\\" name=\\\"addInboxCategoryForm\\\" (ngSubmit)=\\\"submitInboxCategoryForm(addInboxCategoryForm)\\\"  novalidate>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Category Type*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"inboxCategory\\\" [(ngModel)]=\\\"inboxCategory\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Category Owner*</label>\\n\\t\\t\\t                    <select \\n\\t\\t\\t\\t\\t\\t\\t        name=\\\"inboxCategoryOwner\\\" \\n\\t\\t\\t\\t\\t\\t\\t        id=\\\"inboxCategoryOwner\\\" \\n\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"inboxCategoryOwner\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of inboxCategoryOwnerData\\\" [value]=\\\"item.userId\\\">{{ item.firstName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline float-right mt-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addInboxCategoryForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t</div>\\n\\t</div>\\n\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from '../.././auth.guard';\n\nimport { AmsInboxComponent } from './ams-inbox.component';\nimport { AmsInboxSetupComponent } from './components/ams-inbox-setup/ams-inbox-setup.component';\nimport { AmsInboxNotifyComponent } from './components/ams-inbox-notify/ams-inbox-notify.component';\nimport { AmsInboxHistoryComponent } from './components/ams-inbox-history/ams-inbox-history.component';\nimport { AmsInboxReportsComponent } from './components/ams-inbox-reports/ams-inbox-reports.component';\nimport { AmsInboxMessageComponent } from './components/ams-inbox-message/ams-inbox-message.component';\n\n\n\nconst routes: Routes = [\n\n\t{ path: '', redirectTo: 'settings', pathMatch: 'full'},\n\t{ path: 'settings', component: AmsInboxSetupComponent },\n\t{ path: 'notify', component: AmsInboxNotifyComponent },\n  { path: 'history', component: AmsInboxHistoryComponent },\n  { path: 'viewMessage', component: AmsInboxMessageComponent },\n\t{ path: 'reports', component: AmsInboxReportsComponent },\n\t{ path: '**', redirectTo: 'settings', pathMatch: 'full'}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AmsInboxRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9hbXMtaW5ib3gvYW1zLWluYm94LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ams-inbox',\n  templateUrl: './ams-inbox.component.html',\n  styleUrls: ['./ams-inbox.component.scss']\n})\nexport class AmsInboxComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AmsInboxRoutingModule } from './ams-inbox-routing.module';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { AmsInboxComponent } from './ams-inbox.component';\nimport { AmsInboxSetupComponent } from './components/ams-inbox-setup/ams-inbox-setup.component';\nimport { AmsInboxNotifyComponent } from './components/ams-inbox-notify/ams-inbox-notify.component';\nimport { AmsInboxHistoryComponent } from './components/ams-inbox-history/ams-inbox-history.component';\nimport { AmsInboxReportsComponent } from './components/ams-inbox-reports/ams-inbox-reports.component';\nimport { AmsInboxMessageComponent } from './components/ams-inbox-message/ams-inbox-message.component'\nimport {AngularMultiSelectModule} from \"angular2-multiselect-dropdown\";\n@NgModule({\n  declarations: [\n\tAmsInboxComponent,\n\tAmsInboxSetupComponent,\n\tAmsInboxNotifyComponent,\n\tAmsInboxHistoryComponent,\n  AmsInboxReportsComponent,\n  AmsInboxMessageComponent,\n  \n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    AmsInboxRoutingModule,\n    AngularMultiSelectModule\n  ],\n  bootstrap: [ AmsInboxComponent ]\n})\nexport class AmsInboxModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9hbXMtaW5ib3gvY29tcG9uZW50cy9hbXMtaW5ib3gtaGlzdG9yeS9hbXMtaW5ib3gtaGlzdG9yeS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ams-inbox-history',\n  templateUrl: './ams-inbox-history.component.html',\n  styleUrls: ['./ams-inbox-history.component.scss']\n})\nexport class AmsInboxHistoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9hbXMtaW5ib3gvY29tcG9uZW50cy9hbXMtaW5ib3gtbWVzc2FnZS9hbXMtaW5ib3gtbWVzc2FnZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ams-inbox-message',\n  templateUrl: './ams-inbox-message.component.html',\n  styleUrls: ['./ams-inbox-message.component.scss']\n})\nexport class AmsInboxMessageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \".broadcast-message-wrapper .nav-tabs .nav-item.show .nav-link, .broadcast-message-wrapper .nav-tabs .nav-link.active {\\n  color: #0062cc;\\n  background-color: transparent;\\n  border-color: transparent transparent #f3f3f3;\\n  border-bottom: 3px solid !important;\\n  font-size: 16px;\\n  font-weight: bold;\\n}\\n.broadcast-message-wrapper .tab-content > .active {\\n  margin-top: 18px;\\n}\\n.broadcast-message-wrapper angular2-multiselect {\\n  font-family: \\\"Lato\\\", sans-serif;\\n  font-weight: 400;\\n  letter-spacing: 0.3px;\\n  -webkit-font-smoothing: inherit;\\n  -moz-osx-font-smoothing: inherit;\\n  font-size: 1.2rem !important;\\n}\\n.broadcast-message-wrapper .selected-list .c-list .c-token {\\n  font-size: 1.2rem !important;\\n}\\n.broadcast-message-wrapper .c-btn {\\n  font-size: 1.2rem !important;\\n}\\n.broadcast-message-wrapper .recipentsDiv {\\n  margin-bottom: 10px;\\n}\\n.broadcast-message-wrapper .recipentsDiv .box {\\n  border: 1px solid #ccc;\\n  height: 150px;\\n  overflow-y: auto;\\n}\\n.broadcast-message-wrapper .recipentsDiv .box label {\\n  margin-right: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9hbXMvYW1zLWluYm94L2NvbXBvbmVudHMvYW1zLWluYm94LW5vdGlmeS9hbXMtaW5ib3gtbm90aWZ5LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hbXMvYW1zLWluYm94L2NvbXBvbmVudHMvYW1zLWluYm94LW5vdGlmeS9hbXMtaW5ib3gtbm90aWZ5LmNvbXBvbmVudC5zY3NzIiwiL1VzZXJzL3NlbnRoaWxrdW1hcnNlZXRoYXJhbWFuL0RvY3VtZW50cy93b3Jrcy9jbGlja215Y29uZG8vYXBwLW5nOS9zcmMvc2Nzcy9mb250cy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdFO0VBQ0UsY0FBQTtFQUNBLDZCQUFBO0VBQ0EsNkNBQUE7RUFDQSxtQ0FBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQ0ZKO0FESUE7RUFDRSxnQkFBQTtBQ0ZGO0FESUU7RUUrQ0EsK0JBQUE7RUFDQSxnQkFBQTtFQUNBLHFCQUFBO0VBQ0EsK0JBQUE7RUFDQSxnQ0FBQTtFRmpETSw0QkFBQTtBQ0VSO0FEQ0k7RUFDRSw0QkFBQTtBQ0NOO0FERUk7RUFDRSw0QkFBQTtBQ0FOO0FERUk7RUFDRSxtQkFBQTtBQ0FOO0FEQ007RUFDRSxzQkFBQTtFQUNBLGFBQUE7RUFDQSxnQkFBQTtBQ0NSO0FEQVE7RUFDRSxrQkFBQTtBQ0VWIiwiZmlsZSI6InNyYy9hcHAvYW1zL2Ftcy1pbmJveC9jb21wb25lbnRzL2Ftcy1pbmJveC1ub3RpZnkvYW1zLWluYm94LW5vdGlmeS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCIuLi8uLi8uLi8uLi8uLi9zY3NzL2ZvbnRzLnNjc3NcIjtcblxuLmJyb2FkY2FzdC1tZXNzYWdlLXdyYXBwZXJ7XG4gIC5uYXYtdGFicyAubmF2LWl0ZW0uc2hvdyAubmF2LWxpbmssIC5uYXYtdGFicyAubmF2LWxpbmsuYWN0aXZlIHtcbiAgICBjb2xvcjogIzAwNjJjYztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICNmM2YzZjM7XG4gICAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICFpbXBvcnRhbnQ7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuLnRhYi1jb250ZW50Pi5hY3RpdmUgeyAgXG4gIG1hcmdpbi10b3A6IDE4cHg7XG59XG4gIGFuZ3VsYXIyLW11bHRpc2VsZWN0e1xuICAgICAgQGluY2x1ZGUgIGRlc3AtcmVndWxhcjtcbiAgICAgICAgZm9udC1zaXplOiAxLjJyZW0gIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICAuc2VsZWN0ZWQtbGlzdCAuYy1saXN0IC5jLXRva2Vue1xuICAgICAgZm9udC1zaXplOiAxLjJyZW0gIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICAuYy1idG57XG4gICAgICBmb250LXNpemU6IDEuMnJlbSAhaW1wb3J0YW50O1xuICAgIH1cbiAgICAucmVjaXBlbnRzRGl2e1xuICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICAgIC5ib3h7XG4gICAgICAgIGJvcmRlcjoxcHggc29saWQgI2NjYztcbiAgICAgICAgaGVpZ2h0OjE1MHB4O1xuICAgICAgICBvdmVyZmxvdy15OmF1dG87XG4gICAgICAgIGxhYmVse1xuICAgICAgICAgIG1hcmdpbi1yaWdodDoxMHB4O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgXG59IiwiLmJyb2FkY2FzdC1tZXNzYWdlLXdyYXBwZXIgLm5hdi10YWJzIC5uYXYtaXRlbS5zaG93IC5uYXYtbGluaywgLmJyb2FkY2FzdC1tZXNzYWdlLXdyYXBwZXIgLm5hdi10YWJzIC5uYXYtbGluay5hY3RpdmUge1xuICBjb2xvcjogIzAwNjJjYztcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgI2YzZjNmMztcbiAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICFpbXBvcnRhbnQ7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uYnJvYWRjYXN0LW1lc3NhZ2Utd3JhcHBlciAudGFiLWNvbnRlbnQgPiAuYWN0aXZlIHtcbiAgbWFyZ2luLXRvcDogMThweDtcbn1cbi5icm9hZGNhc3QtbWVzc2FnZS13cmFwcGVyIGFuZ3VsYXIyLW11bHRpc2VsZWN0IHtcbiAgZm9udC1mYW1pbHk6IFwiTGF0b1wiLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsZXR0ZXItc3BhY2luZzogMC4zcHg7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGluaGVyaXQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBpbmhlcml0O1xuICBmb250LXNpemU6IDEuMnJlbSAhaW1wb3J0YW50O1xufVxuLmJyb2FkY2FzdC1tZXNzYWdlLXdyYXBwZXIgLnNlbGVjdGVkLWxpc3QgLmMtbGlzdCAuYy10b2tlbiB7XG4gIGZvbnQtc2l6ZTogMS4ycmVtICFpbXBvcnRhbnQ7XG59XG4uYnJvYWRjYXN0LW1lc3NhZ2Utd3JhcHBlciAuYy1idG4ge1xuICBmb250LXNpemU6IDEuMnJlbSAhaW1wb3J0YW50O1xufVxuLmJyb2FkY2FzdC1tZXNzYWdlLXdyYXBwZXIgLnJlY2lwZW50c0RpdiB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG4uYnJvYWRjYXN0LW1lc3NhZ2Utd3JhcHBlciAucmVjaXBlbnRzRGl2IC5ib3gge1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICBoZWlnaHQ6IDE1MHB4O1xuICBvdmVyZmxvdy15OiBhdXRvO1xufVxuLmJyb2FkY2FzdC1tZXNzYWdlLXdyYXBwZXIgLnJlY2lwZW50c0RpdiAuYm94IGxhYmVsIHtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xufSIsIlxuQGltcG9ydCBcInZhcmlhYmxlc1wiO1xuXG5AbWl4aW4gcHVibGljLWxpZ2h0IHtcbiAgZm9udC1mYW1pbHk6ICdQb3BwaW5zJywgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbn1cblxuQG1peGluIHB1YmxpYy1yZWd1bGFyIHtcbiAgZm9udC1mYW1pbHk6ICdQb3BwaW5zJywgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbn1cblxuQG1peGluIHB1YmxpYy1tZWRpdW0ge1xuICBmb250LWZhbWlseTogJ1BvcHBpbnMnLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNTAwO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xufVxuXG5AbWl4aW4gcHVibGljLWJvbGQge1xuICBmb250LWZhbWlseTogJ1BvcHBpbnMnLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNjAwO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xufVxuXG5AbWl4aW4gaGVhZC1saWdodCB7XG4gIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGluaGVyaXQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBpbmhlcml0O1xufVxuXG5AbWl4aW4gaGVhZC1yZWd1bGFyIHtcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuM3B4O1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBpbmhlcml0O1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogaW5oZXJpdDtcbn1cblxuQG1peGluIGhlYWQtbWVkaXVtIHtcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMnB4O1xufVxuXG5AbWl4aW4gaGVhZC1ib2xkIHtcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuM3B4O1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBpbmhlcml0O1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogaW5oZXJpdDtcbn1cblxuQG1peGluIGRlc3AtcmVndWxhciB7XG4gIGZvbnQtZmFtaWx5OiAnTGF0bycsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxldHRlci1zcGFjaW5nOiAwLjNweDsgICBcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogaW5oZXJpdDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGluaGVyaXQ7XG59XG5cbkBtaXhpbiBkZXNwLW1lZGl1bSB7XG4gIGZvbnQtZmFtaWx5OiAnTGF0bycsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGxldHRlci1zcGFjaW5nOiAwLjNweDtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG59XG5cbkBtaXhpbiBmdC1jYWxjKCRwaXhlbHMpIHtcbiAgZm9udC1zaXplOiAoICRwaXhlbHMgLyAkZnQtYmFzZSApICsgcmVtO1xufVxuIl19 */\"","import { Component, OnInit ,Injector} from '@angular/core';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { BroadcastService } from '../../../../api/controllers/Broadcast';\nimport { UserService } from '../../../../api/controllers/User';\nimport { ApartmentService } from '../../../../api/controllers/Apartment';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport { StaffService } from '../../../../api/controllers/Staff';\nimport * as _ from 'underscore';\n\n\n\n@Component({\n  selector: 'app-ams-inbox-notify',\n  templateUrl: './ams-inbox-notify.component.html',\n  styleUrls: ['./ams-inbox-notify.component.scss']\n})\nexport class AmsInboxNotifyComponent implements OnInit {\n  IsBroadcast:boolean;\n  message:any;\n  allcategory:any;\n  apartmentID:any;\n  modalService:any;\n  roleType:any;\n  condtionRequired:boolean;\n  dropdownSettings={};\n  blockdropdownSettings={}\n  roleTypedropdownSettings={}\n  broadCastdropdownSettings={}\n  groupCategorySetting={}\n  roleDropdownSettings={};\n  adminDropdownSettings={}\n  tenantDropdownSettings={}\n  staffDropdownSettings={}\n  ownerDropdownSettings={};\n  staffCategoryMap=new Map();\n  staffSubCategoryMap=new Map();\n  isStaff:boolean;\n  users:any;\n  allUsers:any;\n  selectedTab:string;\n  roleTypeArr={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n  };\n\n  adminList={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n  };\n  \n  tenantList={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n  };\n  staffList={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n  };\n  ownerList={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n  };\n  roleCategory={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n\n  };\n  staffCategory={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n\n  };\n  staffSubCategory={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n\n  };\n  broadCastCategory={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n\n  };\napartmentBlock={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n    };\n condition={\n      \"dropdownList\":[],\n      \"selectedItems\":[]\n      };\n     \n      broadModeArr={\n        \"dropdownList\":[],\n        \"selectedItems\":[]\n      };\n      broadCastGroupCategory={\n        \"dropdownList\":[],\n        \"selectedItems\":[]\n      };\n  allBroadcastMessageGroup = [];\n  interestGroupUsers:any;\n  isFlashNotice:boolean=false;\n  loginedUser:any;\n  editorPlacehorder:string = \"\";\n\n  constructor(\n    public broadcastService: BroadcastService,\n    private sharedService:SharedService,\n    private cookieService:CookieService,\n    private userService:UserService,\n    private staffService:StaffService,\n    private apartmentService:ApartmentService,\n    private injector: Injector,\n  ) { \n\n    this.modalService = this.injector.get(ModalService);\n  }\n\n  onContentChanged(event){\n    \n  }\n\n  ngOnInit() {\n    \n    this.message={};\n    this.IsBroadcast=true;\n    this.loginedUser= parseInt(this.cookieService.get('userId'));\n    this.apartmentID=parseInt(this.cookieService.get('apartmentId'));\n    this.getAllUsers();\n    this.getAllCategory();\n    this.getAllRoleTypesList();\n    this.getAllApartmentBlockList();\n    this.getAllGroupCategory();\n    this.getInterestGroupUsers();\n    this.getAllInterestGroupUser();\n    this.groupCategorySetting={\n      singleSelection: true, \n      enableSearchFilter: true,\n      labelKey: 'groupName',\n      primaryKey: 'broadCastGroupCategoryId',\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    }; \n    this.dropdownSettings={\n      singleSelection: false, \n      enableSearchFilter: true,\n      labelKey: 'name',\n      primaryKey: 'value',\n      groupBy:\"category\",\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    }; \n    this.roleDropdownSettings={\n      singleSelection: false, \n      enableSearchFilter: true,\n      labelKey: 'name',\n      primaryKey: 'value',\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    }; \n    this.blockdropdownSettings={\n      singleSelection: false,\n      primaryKey: 'apartmentBlockId',\n      labelKey: 'apartmentBlockNumber',\n      enableSearchFilter: true,\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    }; \n    \n    this.roleTypedropdownSettings={\n      singleSelection: true,\n      primaryKey: 'value',\n      labelKey: 'name',\n      enableSearchFilter: true,\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    }; \n\n    this.adminDropdownSettings={\n      singleSelection: true,\n      primaryKey: 'userId',\n      labelKey: 'userName',\n      enableSearchFilter: true,\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    }\n    this.tenantDropdownSettings={\n      singleSelection: true,\n      primaryKey: 'userId',\n      labelKey: 'userName',\n      enableSearchFilter: true,\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    }\n    this.staffDropdownSettings={\n      singleSelection: true,\n      primaryKey: 'userId',\n      labelKey: 'userName',\n      enableSearchFilter: true,\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    }\n    this.ownerDropdownSettings={\n      singleSelection: true,\n      primaryKey: 'userId',\n      labelKey: 'userName',\n      enableSearchFilter: true,\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    }\n    \n\n    this.broadCastdropdownSettings={\n      singleSelection: true,\n      primaryKey: 'broadCastMessageCategoryId',\n      labelKey: 'broadCastMessageCategory1',\n      enableSearchFilter: true,\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    };\n    this.selectedTab='role';\n  }\n\n  currentTab(item){\n    this.selectedTab=item;\n    if(this.selectedTab=='interest'){\n     // this.users=[];\n      this.IsBroadcast=false;\n      if(this.broadCastGroupCategory.selectedItems.length>0)\n      {\n        this.selectInterestGroup(this.broadCastGroupCategory.selectedItems[0]);\n      }else{\n        this.users=[];\n      }\n      \n    }\n    if(this.selectedTab=='role'){\n      this.updateUsers();\n      this.IsBroadcast=true;\n    }\n  }\n  filterOptions={\n    \"roleids\":\"\",\n    \"ApartmentId\":0,\n    \"blockids\":\"\",\n    \"keyword\":\"\"\n  }\n  allnterestGroupUsers:any;\n  getAllInterestGroupUser(){\n    this.filterOptions.ApartmentId=this.apartmentID;\n    \n    this.userService.getUsersByKeyword(this.filterOptions).subscribe((res:any)=>{\n       \n       res.forEach(element => {\n        element.userFullName=element.userName+\" \"+element.roleName+\" \"+element.apartmentBlockNumber+\" \"+element.apartmentBlockUnitNumber;\n      }); \n      this.allnterestGroupUsers=res;\n\n      },\n      error=>console.log(error)\n      );\n  }\n  getAllUsers(){\n    let queryParamBase = {\n      apartmentId: this.apartmentID\n    };\n    this.userService.getUsersByApartmentId(queryParamBase)\n      .subscribe(\n          (res:any)=>{\n          res.forEach(element => {\n            element.userFullName=element.userName+\" \"+element.roleName+\" \"+element.apartmentBlockNumber+\" \"+element.apartmentBlockUnitNumber;\n        });\n        this.allUsers=res;\n        this.updateUsers();\n      }\n    );\n  }\n  \n  selectInterestGroup(item){\n    let categoryUsers=this.interestGroupUsers.filter(function(obj){\n      return obj.broadCastGroupCategoryId==item.broadCastGroupCategoryId;\n   });\n   let tempAssignUsers=[];\n   let tempUsers=[...this.allnterestGroupUsers];\n   categoryUsers.forEach(element => {\n     tempUsers.forEach(obj => {\n     let isFound= obj.userId==element.userId && obj.roleID==element.roleId && obj.apartmentBlockID==element.apartmentBlockId && obj.apartmentBlockUnitID==element.unitId ;\n  if(isFound)\n  {\n   tempAssignUsers.push(obj);\n  }\n   });\n   });\n \n   this.AssignInterestUsers=[...tempAssignUsers];\n  }\n  AssignInterestUsers:any;\n  removeInterestGroup(item){\n    this.AssignInterestUsers=[];\n  }\n  //broadCastGroupCategoryId\n  flashNotice(bool){\n    \n    this.isFlashNotice = bool;\n  }\n  categoryChange(item){\n    \n    let id = parseInt(item.broadCastMessageCategoryId);\n    var data = _.filter( this.allcategory, function( item ) {\n      if(item.broadCastMessageCategoryId === id)\n        return item;\n      } );\n\n      if(data === undefined || data === null || data.length == 0){\n        this.message.ckeditor = '';\n      }\n      else {\n        this.message.ckeditor = data[0].template;\n      }\n  }\n\n  getAllApartmentBlockList(){\n    let queryParamBase = {\n      apartmentId: this.apartmentID\n    };\n    this.apartmentService.getApartmentBlockByApartmentId(queryParamBase).subscribe((res:any) => {\n     this.apartmentBlock.dropdownList=res;\n     var broadCastModeArr=[{\"name\":\"General SMS\",\"value\":40},\n    {\"name\":\"Whatsapp\",\"value\":41},\n    {\"name\":\"Email\",\"value\":42}];\n    this.broadModeArr.dropdownList=broadCastModeArr;\n  });\n  }\n  //Get All Broadcast Category\n  getAllCategory(){\n    \n    let queryParamBase = {\n      apartmentId: this.apartmentID\n    };\n    this.broadcastService.getBroadCastMessageCategories(queryParamBase).subscribe((res:any) => {\n      this.allcategory = res;\n      this.broadCastCategory.dropdownList=res;\n      })\n  }\n  getAllRoleTypesList(){\n    this.userService.getAllRoleTypes().subscribe((res:any) => {\n     this.roleTypeArr.dropdownList=res;\n  });\n}\n\n\n  getAppartmentRole(item){\n   \n    this.roleCategory.selectedItems=[];\n    this.staffCategory.selectedItems=[];\n    var params={\n      'RoleTypeId': item.value,\n      'ApartmentId': this.apartmentID\n    }\n    this.userService.getApartmentRolesByRoleTypeId(params).subscribe((res:any) => {\n      this.condtionRequired=parseInt(item.value)==2 || parseInt(item.value)==4;;\n      this.roleCategory.dropdownList=res;\n      let conditinArr=[{\"name\":\"IsLiving\",\"value\":1}\n                       ,{\"name\":\"IsPrimaryContact\",\"value\":2}];\n      if(this.condtionRequired){\n        this.condition.dropdownList=conditinArr;\n      }\n         else{\n          this.condition.dropdownList=[];\n          this.condition.selectedItems=[];\n         }\n         this.updateUsers();\n      });\n\n  }\n  adminUsers:any;\n  tenantUsers:any;\n  ownerUsers:any;\n  staffUsers:any;\n  updateUsers(){\n    //this.tempUsers=[...this.allUsers];\n    this.getUserIds$().subscribe((res:any)=>{\n       if(res.length>0){\n        this.users=this.allUsers.filter(function(obj){\n        return res.includes(obj.userId);\n      });\n      debugger;\n//filter user based on role, admin,owner, staff,tenent\nthis.adminUsers=this.users.filter((obj)=>{\n   return obj.roleName.toLowerCase()==\"admin\";\n});\nthis.adminList.dropdownList=this.adminUsers;\n\nthis.tenantUsers=this.users.filter((obj)=>{\n  return obj.roleName.toLowerCase()==\"tenant\";\n});\nthis.tenantList.dropdownList=this.tenantUsers;\n\nthis.staffUsers=this.users.filter((obj)=>{\n  return obj.roleName.toLowerCase()==\"staff\";\n});\nthis.staffList.dropdownList=this.staffUsers;\n\nthis.ownerUsers=this.users.filter((obj)=>{\n  return obj.roleName.toLowerCase()==\"owner\";\n});\nthis.ownerList.dropdownList=this.ownerUsers;\n\n      }else{\n        this.users=[];\n      }\n      \n    });\n  }\n  getAllGroupCategory(){\n    let queryParamBase = {\n      apartmentId: this.apartmentID\n    };\n    this.broadcastService.getAllBroadCastGroupCategory(queryParamBase).subscribe((res:any) => {\n      this.broadCastGroupCategory.dropdownList= res;\n     \n    });\n  }\n  getInterestGroupUsers(){\n    let queryParamBase = {\n      apartmentId: this.apartmentID\n    };\n    this.broadcastService.getBroadCastGroupCategoryUser(queryParamBase).subscribe((res:any) => {\n      this.interestGroupUsers= res;\n    });\n  }\n  getstaffCategories(item){\n    this.isStaff=this.roleTypeArr.selectedItems[0].name.toLowerCase()==\"staff\";\n    if(this.isStaff)\n    {\n      \n      if(this.staffCategoryMap.get(item.value)==undefined){\n        let params={\n          'roleId':item.value,\n          'apartmentId':this.apartmentID\n        }\n        \n        this.staffService.getStaffCategoryByRole(params).subscribe((res:any) => {\n        let temp=[...this.staffCategory.dropdownList];\n          res.forEach(element => {\n            element.category=item.name;\n            temp.push(element);\n          });\n          this.staffCategoryMap.set(item.value,res);\n          this.staffCategory.dropdownList=temp;\n          this.updateUsers();\n         });\n         }else{\n          let temp=[...this.staffCategory.dropdownList];\n        let addStaffCategory= this.staffCategoryMap.get(item.value);\n        addStaffCategory.forEach(element => {\n          temp.push(element);\n            });\n            this.staffCategory.dropdownList=temp;\n            \n      }\n     \n\n      }\n      this.updateUsers();\n   }\n\n   getAllStaffCategories(items){\n     items.forEach(element => {\n      this.getstaffCategories(element);\n     });\n     \n   }\n   removeAllStaffCategories(items){\n    this.roleCategory.selectedItems=[];\n    this.staffCategory.dropdownList=[];\n    this.staffCategory.selectedItems=[];\n    this.updateUsers();\n  }\n  \n\nremoveStaffCategories(item){\n \n    if(this.roleTypeArr.selectedItems[0].name.toLowerCase()==\"staff\")\n    {\n     \n         let removeStaffCategory= this.staffCategoryMap.get(item.value);\n         removeStaffCategory.forEach(element => {\n             this.staffCategory.dropdownList=this.staffCategory.dropdownList.filter(function(obj){\n               return obj.value!==element.value;\n             });\n            });\n    \n    }\n    this.updateUsers();\n}\nremoveSubStaffCategories(item){\n       let removeSubStaffCategory= this.staffSubCategoryMap.get(item.value);\n         removeSubStaffCategory.forEach(element => {\n             this.staffSubCategory.dropdownList=this.staffSubCategory.dropdownList.filter(function(obj){\n               return obj.value!==element.value;\n             });\n            });\n            this.updateUsers();\n  }\n  getStaffSubCategories(item){\n     if(this.staffSubCategoryMap.get(item.value)==undefined){\n       let params={\n        'categoryId':item.value,\n        'apartmentId':this.apartmentID\n       }\n        this.staffService.getSubStaffCategoryByCategory(params).subscribe((res:any) => {\n          let temp=[...this.staffSubCategory.dropdownList];\n          res.forEach(element => {\n            element.category=item.name;\n            temp.push(element);\n          });\n          this.staffSubCategoryMap.set(item.value,res);\n          this.staffSubCategory.dropdownList=temp;\n          this.updateUsers();\n         });\n         \n      }else{\n        \n        let addSubStaffCategory= this.staffSubCategoryMap.get(item.value);\n        let temp=[...this.staffSubCategory.dropdownList];\n        addSubStaffCategory.forEach(element => {\n          temp.push(element);\n            });\n            this.staffSubCategory.dropdownList=temp;\n            this.updateUsers();\n      }\n      \n  }\n\n  getAllSubStaffCategories(items){\n    items.forEach(element => {\n     this.getStaffSubCategories(element);\n    });   \n  }\nremoveRole(item){\nthis.roleCategory.dropdownList=[];\nthis.condition.dropdownList=[];\nthis.condition.selectedItems=[];\nthis.removeAllStaffCategories([]);\nthis.removeAllSubStaffCategories([]);\n}\n\n  removeAllSubStaffCategories(items){\n   this.staffSubCategory.dropdownList=[];\n   this.staffCategory.selectedItems=[];\n   this.updateUsers();\n }\n removeGroupSubStaffCategories(items){\n  items.list.forEach(element => {\n      this.removeSubStaffCategories(element);\n     });\n     this.updateUsers();\n}\ngetGroupSubStaffCategories(items){\n  items.list.forEach(element => {\n      this.getStaffSubCategories(element);\n     });\n     this.updateUsers();\n}\n\n\ngetUserIds$(){\n  let roleIds= Array.prototype.map.call(this.roleCategory.selectedItems,function(item){ return item.value}).join(\",\");\n  let blockIds= Array.prototype.map.call(this.apartmentBlock.selectedItems,function(item){ return item.apartmentBlockId}).join(\",\");\n  let conditionIds= Array.prototype.map.call(this.condition.selectedItems,function(item){ return item.value}).join(\",\");\n  let staffcategoryIds= Array.prototype.map.call(this.staffCategory.selectedItems,function(item){ return item.value}).join(\",\");\n  let staffSubCategoryIds= Array.prototype.map.call(this.staffSubCategory.selectedItems,function(item){ return item.value}).join(\",\");\n  let params={\n    'roleIds':roleIds,\n    'conditionIds':conditionIds,\n    'appartmentbBlockIds':blockIds,\n    'apartmentId':this.apartmentID,\n    'staffcategoryIds':staffcategoryIds,\n    'staffSubCategoryIds':staffSubCategoryIds\n  }  \n  return this.userService.getUsersByFilter(params);\n}\n  //Submit Category\n async submitCreateBroadcastMessageForm(form){\n    let broadCastGroupCategoryIDs= Array.prototype.map.call(this.broadCastGroupCategory.selectedItems,function(item){ return item.broadCastGroupCategoryId}).join(\",\");      \n    let broadcastModeIds= Array.prototype.map.call(this.broadModeArr.selectedItems,function(item){ return item.value}).join(\",\");\n    let broadcastMessage={\n          \"broadCastMessageId\": 0,\n          \"apartmentId\": this.apartmentID,\n          \"subject\": this.message.subject,\n          \"broadcastMessage1\": this.message.ckeditor,\n          \"broadcastBy\": this.loginedUser,\n          \"broadcastOn\": new Date().toISOString(),\n          \"broadcastMessageCategoryId\":0,\n          \"broadcastModeIds\": broadcastModeIds,\n          \"broadCastGroupcategoryId\": null,\n          \"userIds\":null ,\n          \"isReadAllowed\": false,\n          \"isLater\": true,\n          \"laterDate\": null,\n          \"isFlashNotice\": this.isFlashNotice,\n          \"isActive\": true,\n          \"insertedBy\": this.loginedUser,\n          \"insertedOn\": new Date().toISOString(),\n          \"updatedBy\": null,\n          \"updatedOn\": null,\n          \"serialNo\":0,\n          \"description\":\"\",\n          \"filterId\":null\n\n        }\n        \n        if(this.selectedTab=='interest'){\n          broadcastMessage.broadCastGroupcategoryId=parseInt(broadCastGroupCategoryIDs);\n          broadcastMessage.broadcastMessageCategoryId=null;\n          broadcastMessage.userIds= Array.prototype.map.call(this.AssignInterestUsers,function(item){ return item.userId}).join(\",\");\n          if(broadcastMessage.userIds.length==0)\n          {\n            this.modalService.showErrorModal(\"No such Users exists to broadcast message.\");\n          }else{\n            let params={\n              \"sourceBroadCastMessage_model\":broadcastMessage\n            }\n            this.broadcastService.addBroadCastMessage(params).subscribe((res:any) => {\n              if(res.message) {\n                this.sharedService.setAlertMessage(\"Broadcast Message sent successfully\");\n               this.ClearFormData();\n              }\n            });\n          }\n       \n        }\n        if(this.selectedTab=='role'){\n          broadcastMessage.userIds= Array.prototype.map.call(this.users,function(item){ return item.userId}).join(\",\");\n          broadcastMessage.broadcastMessageCategoryId=this.broadCastCategory.selectedItems[0].broadCastMessageCategoryId;\n          broadcastMessage.broadCastGroupcategoryId=null;\n          let roleIds= Array.prototype.map.call(this.roleCategory.selectedItems,function(item){ return item.value}).join(\",\");\n          let blockIds= Array.prototype.map.call(this.apartmentBlock.selectedItems,function(item){ return item.apartmentBlockId}).join(\",\");\n          let conditionIds= Array.prototype.map.call(this.condition.selectedItems,function(item){ return item.value}).join(\",\");\n          let staffcategoryIds= Array.prototype.map.call(this.staffCategory.selectedItems,function(item){ return item.value}).join(\",\");\n          let staffSubCategoryIds= Array.prototype.map.call(this.staffSubCategory.selectedItems,function(item){ return item.value}).join(\",\");\n          let params={\n            'filterId':0,\n            'roleIds':roleIds,\n            'conditions':conditionIds,\n            'appartmentbBlockIds':blockIds,\n            'apartmentId':this.apartmentID,\n            'staffCategoryIds':staffcategoryIds,\n            'subStaffCategoryIds':staffSubCategoryIds,\n            \"insertedBy\": this.loginedUser,\n            \"insertedOn\": new Date().toISOString(),\n            \"updatedBy\": null,\n            \"updatedOn\": null,\n            'isActive':true,\n            'roleTypeId':this.roleTypeArr.selectedItems[0].value\n           }  \n          \n          let params2={\n            \"broadCastFilters_model\":params\n          }\n             \n           this.broadcastService.upsertBroadCastFilters(params2).subscribe(\n                (res:any)=>{\n                  broadcastMessage.filterId=parseInt(res.message);\n                  if(broadcastMessage.userIds.length==0)\n                  {\n                    this.modalService.showErrorModal(\"No such Users exists to broadcast message.\");\n                  }else{\n                    let params={\n                      \"sourceBroadCastMessage_model\":broadcastMessage\n                    }\n                    this.broadcastService.addBroadCastMessage(params).subscribe((res:any) => {\n                      if(res.message) {\n                        this.sharedService.setAlertMessage(\"Broadcast Message sent successfully\");\n                       this.ClearFormData();\n                      }\n                    });\n                  }\n                }\n\n           );\n           \n                  // .subscribe((res)=>{\n                  //       broadcastMessage.filterId=parseInt(res);\n                  //                   }).toPromise();\n          }\n\n       \n            \n       \n        }\n  ClearFormData(){\n    this.message = {};\n    this.roleTypeArr.selectedItems=[];\n    this.broadCastCategory.selectedItems=[];\n    this.apartmentBlock.selectedItems=[];\n    this.broadModeArr.selectedItems=[];\n    this.broadCastGroupCategory.selectedItems=[];\n    this.removeRole([]);\n    if(this.selectedTab=='role'){\n      this.users=[...this.allUsers];\n    }\n    if(this.selectedTab=='interest'){\n      this.users=[];\n    }\n  }  \n \n\n  \n\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9hbXMtaW5ib3gvY29tcG9uZW50cy9hbXMtaW5ib3gtcmVwb3J0cy9hbXMtaW5ib3gtcmVwb3J0cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-ams-inbox-reports',\n  templateUrl: './ams-inbox-reports.component.html',\n  styleUrls: ['./ams-inbox-reports.component.scss']\n})\nexport class AmsInboxReportsComponent implements OnInit {\n\n  reportDataList:any;\n\n  isDataLoaded:boolean = false;\n\n  constructor(\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) { }\n\n\n\n  ngOnInit() {\n\n    let details = {\n      ApartmentId: parseInt(this.cookieService.get('apartmentId')),\n      LookupTypeId: 87, //lookuptypeid for report\n      MenuName: 'Inbox'\n    }\n\n    this.lookupService.getLookupValuesByApartmentIdLookupTypeIdMenuName(details).subscribe((res:any) => {\n\n      this.reportDataList = res;\n\n      this.isDataLoaded = true;\n\n    })\n\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9hbXMtaW5ib3gvY29tcG9uZW50cy9hbXMtaW5ib3gtc2V0dXAvYW1zLWluYm94LXNldHVwLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\nimport { UserService } from 'src/app/api/controllers/User';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-ams-inbox-setup',\n  templateUrl: './ams-inbox-setup.component.html',\n  styleUrls: ['./ams-inbox-setup.component.scss']\n})\nexport class AmsInboxSetupComponent implements OnInit {\n\n  inboxCategoryData:any;\n\n  isInboxCategoryLoaded:boolean = false;\n  isInboxCategorySubmitted:boolean = true;\n\n  isInboxCategoryNew:boolean = false;\n  isInboxCategoryUpdate:boolean = false;\n\n  inboxCategory:string = \"\";\n  inboxCategoryOwner:string = \"\";\n  inboxCategoryOwnerData:any;\n\n  inboxCategoryUpdateId:number = 0;\n\n  errorMessage:string = \"\";\n  isError:boolean = false; \n\n  constructor(\n  \tprivate userService:UserService,\n  \tprivate lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) { }\n\n  addNewInboxCategory(){\n  \tthis.isInboxCategoryNew = true;\n  \tthis.isInboxCategoryUpdate = false;\n  }\n\n  updateInboxCategory(item){\n  \tthis.isInboxCategoryUpdate = true;\n  \tthis.isInboxCategoryNew = false;\n  \tthis.inboxCategory = item.lookupValueName;\n  \tthis.inboxCategoryUpdateId = item.lookupValueId;\n  }\n\n  deleteInboxCategory(item, index){\n\n  \tthis.isInboxCategoryLoaded = false;\n\n  \tvar params = {\n      lookupValueId: item.lookupValueId,\n      updateUserId: parseInt(this.cookieService.get('userId'))\n    }\n\n  \tthis.lookupService.deleteLookupvalue(params).subscribe((res:any) => {\n\n  \t  this.inboxCategoryData.splice(index, 1);\n\t  this.isInboxCategoryLoaded = true;\n\n\t});\n\n  }\n\n  removeCategoryBox(){\n  \tthis.isInboxCategoryNew = false;\n  \tthis.isInboxCategoryUpdate = false;\n  \tthis.isError = false;\n  }\n\n  ngOnInit() {\n\n    this.isInboxCategoryLoaded = true;\n    \n    let params = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n\n  \t//get all users\n    this.userService.getAllUsersByApartmentId(params).subscribe((res:any) => {\n       \n      this.inboxCategoryOwnerData = res;\n\n    },\n    error => {\n      \n    });\n\n  }\n\n}\n"]}