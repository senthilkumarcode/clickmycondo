{"version":3,"sources":["webpack:///src/app/modules/user/announcements/announcements.component.html","webpack:///src/app/modules/user/announcements/announcements-routing.module.ts","webpack:///src/app/modules/user/announcements/announcements.component.scss","webpack:///src/app/modules/user/announcements/announcements.component.ts","webpack:///src/app/modules/user/announcements/announcements.module.ts"],"names":["routes","path","component","children","loadChildren","then","m","UserGroupAnnouncementModule","UserInterestAnnouncementModule","redirectTo","pathMatch","AnnouncementsRoutingModule","imports","forChild","exports","AnnouncementsComponent","navArray","link","name","selector","template","AnnouncementsModule","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMf,UAAMA,MAAM,GAAW,CACrB;AACA;AACEC,YAAI,EAAE,EADR;AACYC,iBAAS,EAAE,+EADvB;AAEEC,gBAAQ,EAAE,CACR;AAAEF,cAAI,EAAE,+BAAR;AAAyCG,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,+GAAoGC,IAApG,CAAyG,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACC,2BAAN;AAAA,aAA1G,CAAN;AAAA;AAAvD,SADQ,EAER;AAAEN,cAAI,EAAE,kCAAR;AAA4CG,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,qHAA0GC,IAA1G,CAA+G,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACE,8BAAN;AAAA,aAAhH,CAAN;AAAA;AAA1D,SAFQ,EAGR;AAAEP,cAAI,EAAE,IAAR;AAAcQ,oBAAU,EAAE,+BAA1B;AAA2DC,mBAAS,EAAE;AAAtE,SAHQ;AAFZ,OAFqB,CAAvB;;UAgBaC,0BAA0B;AAAA;AAAA,O;;AAA1BA,gCAA0B,6DAJtC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBb,MAAtB,CAAD,CADD;AAERc,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIsC,GAA1BH,0BAA0B,CAA1B;;;;;;;;;;;;;;;;ACtBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCYAI,sBAAsB;AAEne;;AAhMoB;AAAA;AAAA,qCAkMzB;AACV,iBAAKC,QAAL,GAAgB,CACf;AAAEC,kBAAI,EAAE,oCAAR;AAA8CC,kBAAI,EAAE;AAApD,aADe,EAEf;AAAED,kBAAI,EAAE,uCAAR;AAAiDC,kBAAI,EAAE;AAAvD,aAFe,CAAhB;AAIA;AAvMmC;;AAAA;AAAA,S;;;;;;AAAtBH,4BAAsB,6DALlC,gEAAU;AACTI,gBAAQ,EAAE,mBADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,8HAFS;;;;AAAA,OAAV,CAKkC,E,iFAAA,GAAtBL,sBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOFM,mBAAmB;AAAA;AAAA,O;;AAAnBA,yBAAmB,6DAT/B,+DAAS;AACRC,oBAAY,EAAE,CAAC,+EAAD,CADN;AAERV,eAAO,EAAE,CACP,4DADO,EAEP,yEAFO,EAGP,wFAHO,EAIP,sFAJO;AAFD,OAAT,CAS+B,GAAnBS,mBAAmB,CAAnB","file":"modules-user-announcements-announcements-module-es5.js","sourcesContent":["export default \"<!-- <div class=\\\"user-announcements-wrapper col-sm-10 col-offset-2 m-auto\\\">\\n  <mat-tab-group dynamicHeight>\\n                 <mat-tab label=\\\"BroadCast Group Based\\\">\\n<div class=\\\"row\\\">\\n<div class=\\\"col-3\\\"> \\n    <angular2-multiselect [data]=\\\"filterGroupCategory.dropdownList\\\"\\n     name=\\\"groupTypeDropDown\\\"\\n    [(ngModel)]=\\\"filterGroupCategory.selectedItems\\\" \\n    [settings]=\\\"groupCategorySetting\\\"  \\n    (onSelect)=\\\"filterMessages($event,'broadcastGroup')\\\">\\n</angular2-multiselect>\\n</div>\\n  \\n</div>\\n                    \\n  <ngb-carousel  class=\\\"mt-5\\\" >\\n      <ng-template ngbSlide *ngFor=\\\"let broadCastMessage of broadCastBased\\\">\\n          \\n        <div class=\\\"picsum-img-wrapper\\\">\\n            \\n          <img [src]=\\\"imagePath\\\" alt=\\\"Random first slide\\\">\\n         \\n        </div>\\n        <div class=\\\"carousel-caption1\\\">\\n          <h5> {{broadCastMessage.CategoryName}}</h5>\\n        </div>\\n        <div class=\\\"carousel-caption2\\\"> \\n          <h5><b> {{broadCastMessage.subject}}</b> </h5>\\n        </div>\\n        <div class=\\\"carousel-caption3\\\">\\n          <h5>Posted By: {{broadCastMessage.UserName}}</h5>\\n          </div>\\n      </ng-template>\\n     </ngb-carousel>\\n</mat-tab>\\n                          <mat-tab label=\\\"Interest Group Based \\\"> \\n                              <div class=\\\"row\\\">\\n                                  <div class=\\\"col-3 offset-3\\\"> \\n                                 <angular2-multiselect  [data]=\\\"interestGroupCategory.dropdownList\\\" \\n                                      name=\\\"interestGroupTypeDropDown\\\"\\n                                      [(ngModel)]=\\\"interestGroupCategory.selectedItems\\\" \\n                                      [settings]=\\\"interestGroupCategorySetting\\\"\\n                                      (onSelect)=\\\"filterMessages($event,'interestGroup')\\\"\\n                                      >\\n                                  </angular2-multiselect>\\n                                  </div>\\n                                  </div>\\n                              \\n                            <ngb-carousel class=\\\"mt-5\\\" >\\n                              \\n                              <ng-template ngbSlide *ngFor=\\\"let broadCastMessage of interestGroupBased\\\">\\n                                <div class=\\\"picsum-img-wrapper\\\">\\n                                  <img [src]=\\\"imagePath\\\" alt=\\\"Random first slide\\\">\\n                                 \\n                                </div>\\n                                <div class=\\\"carousel-caption1\\\">\\n                                  <h5> {{broadCastMessage.CategoryName}}</h5>\\n                                </div>\\n                                <div class=\\\"carousel-caption2\\\"> \\n                                  <h5><b> {{broadCastMessage.subject}}</b> </h5>\\n                                </div>\\n                                <div class=\\\"carousel-caption3\\\">\\n                                  <h5>Posted By: {{broadCastMessage.UserName}}</h5>\\n                                  </div>\\n                              </ng-template>\\n                              \\n                            </ngb-carousel> </mat-tab>\\n                          \\n                         </mat-tab-group> \\n  </div>\\n -->\\n\\n <div class=\\\"parking-mangae-allocated-slots-list-wrapper\\\">  \\n  <div class=\\\"main\\\">\\n    <h4 class=\\\"mb-4\\\">Announcements</h4>\\n    <div class=\\\"bg-card shadow p-0\\\">\\n      <nav mat-tab-nav-bar>\\n        <a mat-tab-link \\n        *ngFor=\\\"let link of navArray\\\" \\n        [routerLink]=\\\"link.link\\\" \\n        routerLinkActive #rla=\\\"routerLinkActive\\\" [active]=\\\"rla.isActive\\\">\\n        {{link.name}}\\n        </a>\\n      </nav>\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nimport { AnnouncementsComponent } from './announcements.component';\n\nconst routes: Routes = [\n  // { path: '', component: AnnouncementsComponent },\n  {\n    path: '', component: AnnouncementsComponent,\n    children: [\n      { path: 'user-group-based-announcement', loadChildren: () => import('src/app/modules/user/announcements/user-group-announcement/user-group-announcement.module').then(m => m.UserGroupAnnouncementModule) },\n      { path: 'user-interest-based-announcement', loadChildren: () => import('src/app/modules/user/announcements/user-interest-announcement/user-interest-announcement.module').then(m => m.UserInterestAnnouncementModule) },\n      { path: '**', redirectTo: 'user-group-based-announcement', pathMatch: 'full' }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AnnouncementsRoutingModule { }\n","export default \".user-announcements-wrapper img {\\n  width: 100%;\\n}\\n.user-announcements-wrapper .carousel-caption1 {\\n  position: absolute;\\n  right: 10%;\\n  top: 50px;\\n  left: -30%;\\n  z-index: 10;\\n  padding-top: 20px;\\n  padding-bottom: 20px;\\n  text-align: center;\\n}\\n.user-announcements-wrapper .carousel-caption2 {\\n  position: absolute;\\n  top: 100px;\\n  left: 22%;\\n  z-index: 10;\\n  padding-top: 20px;\\n  padding-bottom: 20px;\\n  text-align: center;\\n}\\n.user-announcements-wrapper .carousel-caption3 {\\n  position: absolute;\\n  right: 15%;\\n  bottom: 87px;\\n  left: 10%;\\n  z-index: 10;\\n  padding-top: 20px;\\n  padding-bottom: 20px;\\n  color: #fff;\\n  text-align: center;\\n}\\n.user-announcements-wrapper angular2-multiselect .c-btn {\\n  border: none !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy91c2VyL2Fubm91bmNlbWVudHMvYW5ub3VuY2VtZW50cy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHRztFQUNDLFdBQUE7QUFGSjtBQUlFO0VBQ0ksa0JBQUE7RUFDQSxVQUFBO0VBQ0EsU0FBQTtFQUNBLFVBQUE7RUFDQSxXQUFBO0VBQ0EsaUJBQUE7RUFDQSxvQkFBQTtFQUNBLGtCQUFBO0FBRk47QUFJRTtFQUNJLGtCQUFBO0VBRUEsVUFBQTtFQUNBLFNBQUE7RUFDQSxXQUFBO0VBQ0EsaUJBQUE7RUFDQSxvQkFBQTtFQUNBLGtCQUFBO0FBSE47QUFLRTtFQUNJLGtCQUFBO0VBQ0EsVUFBQTtFQUNBLFlBQUE7RUFDQSxTQUFBO0VBQ0EsV0FBQTtFQUNBLGlCQUFBO0VBQ0Esb0JBQUE7RUFDQSxXQUFBO0VBQ0Esa0JBQUE7QUFITjtBQUtFO0VBQ0UsdUJBQUE7QUFISiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXNlci9hbm5vdW5jZW1lbnRzL2Fubm91bmNlbWVudHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudXNlci1hbm5vdW5jZW1lbnRzLXdyYXBwZXJ7XG4gIC8vIG1hcmdpbi1sZWZ0OiAxMDBweDsgXG4gIC8vIG1hcmdpbi1yaWdodDogMTIxcHg7XG4gICBpbWd7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgLmNhcm91c2VsLWNhcHRpb24xe1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgcmlnaHQ6IDEwJTtcbiAgICAgIHRvcDogNTBweDtcbiAgICAgIGxlZnQ6IC0zMCU7XG4gICAgICB6LWluZGV4OiAxMDtcbiAgICAgIHBhZGRpbmctdG9wOiAyMHB4O1xuICAgICAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgLmNhcm91c2VsLWNhcHRpb24ye1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgLy8gcmlnaHQ6IDI2JTtcbiAgICAgIHRvcDogMTAwcHg7XG4gICAgICBsZWZ0OiAyMiU7XG4gICAgICB6LWluZGV4OiAxMDtcbiAgICAgIHBhZGRpbmctdG9wOiAyMHB4O1xuICAgICAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgLmNhcm91c2VsLWNhcHRpb24ze1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgcmlnaHQ6IDE1JTtcbiAgICAgIGJvdHRvbTo4N3B4O1xuICAgICAgbGVmdDogMTAlO1xuICAgICAgei1pbmRleDogMTA7XG4gICAgICBwYWRkaW5nLXRvcDogMjBweDtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAyMHB4O1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgYW5ndWxhcjItbXVsdGlzZWxlY3QgLmMtYnRuIHtcbiAgICBib3JkZXI6IG5vbmUhaW1wb3J0YW50OyBcbiAgICBcbn1cbn0iXX0= */\";","\n  import { Component, OnInit ,Injector } from '@angular/core';\n  import { SessionService } from 'src/app/core/session/session.service';\n  import { BroadcastService } from \"src/app/api/controllers/Broadcast\"\n  import { UserService } from 'src/app/api/controllers/User';\n  import * as _ from 'underscore';\n  import {concatMap } from 'rxjs/operators';\n  @Component({\n    selector: 'app-announcements',\n    templateUrl: './announcements.component.html',\n    styleUrls: ['./announcements.component.scss']\n  })\n  export class AnnouncementsComponent implements OnInit  {\n  \n  //   imagePath=\"assets/images/announcement_background.jpeg\";\n  //   modalService:any;\n   \n  //   constructor(\n  //     public broadcastService: BroadcastService,\n  //     private sessionService:SessionService,\n  //     private userService:UserService,\n  //     //private injector: Injector,\n  //   ) { \n  \n  //     //this.modalService = this.injector.get(ModalService);\n  //   }\n  //   filterGroupCategory={\n  //     \"dropdownList\":[],\n  //     \"selectedItems\":[]\n  //   };\n  //   interestGroupCategory={\n  //     \"dropdownList\":[],\n  //     \"selectedItems\":[]\n  //   };\n  //   apartmentID:any;\n  //   loginUserId:any;\n  //   groupCategorySetting:any;\n  //   interestGroupCategorySetting:any;\n  \n  //   ngOnInit(): void {\n  //     this.apartmentID=this.sessionService.apartmentId;\n  //     this.loginUserId=parseInt(this.sessionService.userId);\n  //     this.getAllCategory();\n  //     this.getAllGroupCategory();\n  //     this.getAllBroadcastMessage();\n  //      this.groupCategorySetting={\n  //       singleSelection: true, \n  //       labelKey: 'name',\n  //       primaryKey: 'value',\n  //       enableFilterSelectAll: false,\n  //       autoPosition: false,\n  //       maxHeight:240\n  //     };\n  //     this.interestGroupCategorySetting={\n  //       singleSelection: true, \n  //       labelKey: 'name',\n  //       primaryKey: 'value',\n  //       enableFilterSelectAll: false,\n  //       autoPosition: false,\n  //       maxHeight:240\n  //     };\n  //     this.filterGroupCategory.dropdownList=[{name:\"today\",value:0},{name:\"yesterday\",value:1},{name:\"Past Week\",value:7},{name:\"Past 2 Week\",value:14}];\n  //     this.interestGroupCategory.dropdownList=[{name:\"today\",value:0},{name:\"yesterday\",value:1},{name:\"Past Week\",value:7},{name:\"Past 2 Week\",value:14}];\n  //     this.filterGroupCategory.selectedItems=[{name:\"today\",value:0}];\n  //     this.interestGroupCategory.selectedItems=[{name:\"today\",value:0}];\n     \n  //   }\n   \n  //   broadCastMessages:any;\n  //   allUser:any;\n  //   allCategory:any;\n  //    //Get All Category\n  //    getAllCategory(){\n  //     let queryParamBase = {\n  //       apartmentId:this.sessionService.apartmentId\n  //     };\n  //     this.broadcastService.getBroadCastMessageCategories(queryParamBase).subscribe((res:any) => {\n  //       this.allCategory = res;\n  //     })\n  //   }\n  //   broadCastGroupCategory:any;\n    \n  //   getAllGroupCategory(){\n  //     let queryParamBase = {\n  //       apartmentId: this.apartmentID,\n  //     };\n  //     this.broadcastService.getAllBroadCastGroupCategories(queryParamBase).subscribe((res:any) => {\n  //       this.broadCastGroupCategory= res; \n  //       });\n  //   }\n  //   getGroupCategoryName(groupcategoryId){\n  //    let groupcategory= this.broadCastGroupCategory.filter(function(obj){\n  //     return obj.broadCastGroupCategoryId==groupcategoryId;\n  //     });\n  //   return  groupcategory[0].groupName;\n  //   }\n  //   getCategoryName(name){\n  //     var data = _.filter( this.allCategory, function( item ) {\n  //       if(item.broadCastMessageCategoryId === name)\n  //         return item;\n  //       } );\n  \n  //       if(data === undefined || data === null || data.length == 0){\n  //         return '';\n  //       }\n  //       else {\n  //         return data[0].broadCastMessageCategory1;\n  //       }\n  //   }\n  //   getBroadcastGroupCategory(item){\n  \n  //   }\n  //   getUserName(name){\n  //     var data = _.filter( this.allUser, function( item ) {\n  //       if(item.userId === name)\n  //         return item;\n  //       } );\n  \n  //       if(data === undefined || data === null || data.length == 0){\n  //         return '';\n  //       }\n  //       else {\n  //         return data[0].firstName;\n  //       }\n  //   }\n  //   broadCastBased:any;\n  //   interestGroupBased:any;\n  //   getAllBroadcastMessage(){\n     \n  //     var users$=this.userService.getAllUsers();\n  //   var allBroadCastmessages$= users$.pipe(\n  //      concatMap((users:any) =>{\n  //        this.allUser = users;\n  //        let queryParamBase = {\n  //         apartmentId:this.sessionService.apartmentId\n  //       };\n  //        return  this.broadcastService.getAllBroadcastMessages(queryParamBase);\n  //      } )\n  //     );\n      \n     \n  //      allBroadCastmessages$.subscribe(\n  //                  (res:any)=>{\n  //                      this.broadCastMessages=res;\n  //                      this.broadCastMessages.forEach(element => {\n  //                        if(element.broadCastGroupcategoryId==null)\n  //                        { \n  //                          element.CategoryName=this.getCategoryName(element.broadcastMessageCategoryId);\n  \n  //                        }else{\n  //                         element.CategoryName=this.getGroupCategoryName(element.broadCastGroupcategoryId);\n  \n  //                        }\n                        \n  //                        element.UserName=this.getUserName(element.broadcastBy);\n  //                      });\n  //                      this.filterMessages({name:\"today\",value:0},\"interestGroup\");\n  //                      this.filterMessages({name:\"today\",value:0},\"broadcastGroup\");\n  //                 }\n   \n  //      );\n       \n  //    }\n  //    getDate(inDays) {\n  //     const today = new Date(); \n  //     return new Date(today.getFullYear(),\n  //                     today.getMonth(),\n  //                     today.getDate() + (inDays * -1));\n  // }\n     \n  //    filterMessages(item,messageType){\n  //      let numberOfDays=item.value\n  //     let current= new Date();\n  //     let previousDate=this.getDate(numberOfDays);\n  //     let loginUserId=this.loginUserId;\n  //       if(messageType==\"interestGroup\")\n  //       {\n      \n  //         this.interestGroupBased=this.broadCastMessages.filter(function(obj){\n  //           return obj.broadCastGroupcategoryId!=null \n  //           && current>new Date(Date.parse(obj.broadcastOn))\n  //           && previousDate<new Date(Date.parse(obj.broadcastOn))\n  //           && obj.userIds.split(',').includes(loginUserId.toString());\n         \n  //         });\n  //         if(this.interestGroupBased.length==0){\n  //           this.interestGroupBased=[{}];\n  //           } \n  //       }\n  //       if(messageType==\"broadcastGroup\"){\n          \n  //         this.broadCastBased=this.broadCastMessages.filter(function(obj){\n  //           return obj.broadCastGroupcategoryId==null\n  //                 && current>new Date(Date.parse(obj.broadcastOn))\n  //                 && previousDate<new Date(Date.parse(obj.broadcastOn))\n  //                 && obj.userIds.split(',').includes(loginUserId.toString());\n  //         });\n  //         if(this.broadCastBased.length==0){\n  //           this.broadCastBased=[{}];\n  //         }   \n  //       }\n        \n           \n  // }\n  constructor(){}\n  navArray: any;\n\tngOnInit() {\n\t\tthis.navArray = [\n\t\t\t{ link: 'user-group-based-announcement/list', name: 'BroadCast Group Based' },\n\t\t\t{ link: 'user-interest-based-announcement/list', name: 'Interest Group Based' }\n\t\t]\n\t}\n  \n  }\n  \n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AnnouncementsRoutingModule } from './announcements-routing.module'\n\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { AnnouncementsComponent } from './announcements.component';\n\nimport {AngularMultiSelectModule} from \"angular2-multiselect-dropdown\";\n\n@NgModule({\n  declarations: [AnnouncementsComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    AnnouncementsRoutingModule,\n    AngularMultiSelectModule\n  ]\n})\nexport class AnnouncementsModule { }\n"]}