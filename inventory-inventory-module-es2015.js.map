{"version":3,"sources":["./src/app/ams/inventory/components/inventory-create/inventory-create.component.html","./src/app/ams/inventory/components/inventory-reports/inventory-reports.component.html","./src/app/ams/inventory/components/inventory-setup/inventory-setup.component.html","./src/app/ams/inventory/components/inventory-update/inventory-update.component.html","./src/app/ams/inventory/components/inventory-view/inventory-view.component.html","./src/app/ams/inventory/inventory.component.html","./src/app/ams/inventory/components/inventory-create/inventory-create.component.scss","./src/app/ams/inventory/components/inventory-create/inventory-create.component.ts","./src/app/ams/inventory/components/inventory-reports/inventory-reports.component.scss","./src/app/ams/inventory/components/inventory-reports/inventory-reports.component.ts","./src/app/ams/inventory/components/inventory-setup/inventory-setup.component.scss","./src/app/ams/inventory/components/inventory-setup/inventory-setup.component.ts","./src/app/ams/inventory/components/inventory-update/inventory-update.component.scss","./src/app/ams/inventory/components/inventory-update/inventory-update.component.ts","./src/app/ams/inventory/components/inventory-view/inventory-view.component.scss","./src/app/ams/inventory/components/inventory-view/inventory-view.component.ts","./src/app/ams/inventory/inventory-routing.module.ts","./src/app/ams/inventory/inventory.component.scss","./src/app/ams/inventory/inventory.component.ts","./src/app/ams/inventory/inventory.module.ts"],"names":[],"mappings":"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","file":"inventory-inventory-module-es2015.js","sourcesContent":["export default \"<div class=\\\"inventory-create-wrapper\\\">\\n\\t\\n\\t<form #addInventoryForm = \\\"ngForm\\\" name=\\\"addInventoryForm\\\" (ngSubmit)=\\\"submitAddInventoryForm(addInventoryForm)\\\"  novalidate>\\n\\n\\t\\t<h4 class=\\\"main-title-mini float-left mt-3\\\">\\n\\t\\t\\t\\n\\t\\t\\t<span *ngIf=\\\"!isEditInventory\\\">Create Inventory</span>\\n    \\t\\t<span *ngIf=\\\"isEditInventory\\\">Update Inventory</span>\\n\\n\\t\\t</h4>\\n\\n\\t\\t<div class=\\\"card ov clear\\\">\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"card-body ov\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<app-loader *ngIf=\\\"!isInventorySubmitted\\\"></app-loader>\\n\\n\\t\\t\\t\\t<app-alert-message [message]=\\\"alertMessage\\\" [isError]=\\\"isError\\\" ></app-alert-message>\\n\\n\\t\\t\\t\\t<ng-container *ngIf=\\\"isInventorySubmitted\\\">\\n\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Inventory Name*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"inventoryName\\\" [(ngModel)]=\\\"inventory.inventoryName\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<!-- <div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Inventory Unit*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"InventoryUnit\\\" [(ngModel)]=\\\"inventory.InventoryUnit\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div> -->\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<app-select-box \\n\\t\\t\\t\\t\\t\\t\\t\\tfieldName = \\\"vendorName\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tfieldText = \\\"Vendor Name\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tfieldItemName=\\\"vendorName\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tfieldItemId=\\\"vendorId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[fieldModel] = \\\"inventory.vendorId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tfieldPlaceholder = \\\"Select\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[fieldRequired] = \\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[fieldList] = \\\"vendorDataList\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t(inputChange) = \\\"onVendorChange($event)\\\">\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</app-select-box>\\n\\t                \\t\\t</div> \\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<app-select-box \\n\\t\\t\\t\\t\\t\\t\\t\\tfieldName = \\\"inventoryCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tfieldText = \\\"inventory Category\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tfieldItemName=\\\"lookupValueName\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tfieldItemId=\\\"lookupValueId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[fieldModel] = \\\"inventory.inventoryCategoryId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tfieldPlaceholder = \\\"Select\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[fieldRequired] = \\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[fieldList] = \\\"inventoryCategoryDataList\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t(inputChange) = \\\"oninventoryCategoryChange($event)\\\">\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</app-select-box>\\n\\t                \\t\\t</div> \\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Location</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"inventoryLocation\\\" [(ngModel)]=\\\"inventory.location\\\">\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Re-Order Level</label>\\n\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"reorderLevel\\\" [(ngModel)]=\\\"inventory.reOrderTriggerLevel\\\">\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Re-Order Quantity</label>\\n\\t\\t\\t                    <input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"reorderQuantity\\\" [(ngModel)]=\\\"inventory.reOrderQuantity\\\">\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Comments</label>\\n\\t\\t\\t                    <textarea placeholder=\\\"some text here\\\" name=\\\"inventoryComments\\\" [(ngModel)]=\\\"inventory.notes\\\"></textarea>\\n\\t\\t\\t                </div>\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t<ul class=\\\"list-inline float-right mt-4\\\">\\n\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addInventoryForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t</ul>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t</form>\\n</div>\"","export default \"<p>\\n  inventory-reports works!\\n</p>\\n\"","export default \"<div class=\\\"inventorys-setup-wrapper\\\">\\n\\n\\t<app-loader *ngIf=\\\"!isInventoryCategoryLoaded\\\"></app-loader>\\n\\n\\t<div class=\\\"category-list list-boxes\\\" *ngIf=\\\"isInventoryCategoryLoaded\\\">\\n\\t\\t<h4 class=\\\"main-title-mini\\\">Inventory Categories</h4>\\n\\t\\t<ng-container *ngFor=\\\"let item of inventoryCategoryData; let i = index\\\">\\n\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"card-body nohover\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"icons\\\">\\n\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" routerLink=\\\"/ams/inventory/view/{{item.lookupValueId}}\\\" \\n\\t\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\"><i-feather class=\\\"icon view\\\" name=\\\"eye\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\"><i-feather class=\\\"icon edit\\\" name=\\\"edit\\\" (click)=\\\"updateInventoryCategory(item, i)\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" class=\\\"d-none\\\"><i-feather class=\\\"icon del\\\" name=\\\"x\\\" (click)=\\\"deleteInventoryCategory(item)\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<h6>{{item.lookupValueName}}</h6>\\n\\t\\t\\t\\t\\t\\t<p>{{getInventoryList(item.lookupValueId)}} Inventorie(s) added</p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</li>\\n\\t\\t</ng-container>\\n\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t<div class=\\\"card-body new text-center\\\">\\n\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" class=\\\"rounded-btn green\\\" (click)=\\\"addNewInventoryCategory()\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"icon\\\">+</div>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t<h6 class=\\\"tc-green\\\">Add New Category</h6>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</li>\\n\\t</div>\\n\\n\\t<div class=\\\"card mt-30\\\" *ngIf=\\\"isInventoryCategoryNew || isInventoryCategoryUpdate\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h6 *ngIf=\\\"isInventoryCategoryNew\\\">Add Inventory Category</h6>\\n    \\t\\t\\t<h6 *ngIf=\\\"!isInventoryCategoryNew\\\">Update Inventory Category</h6>\\n    \\t\\t</div>\\n    \\t\\t<div class=\\\"float-right\\\" (click)=\\\"removeCategoryBox()\\\">\\n    \\t\\t\\t<i-feather class=\\\"icon del\\\" name=\\\"x\\\"></i-feather>\\n    \\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\n\\t\\t\\t<app-alert-message [message]=\\\"alertTicketMessage\\\" [isError]=\\\"isCategoryError\\\" [isSuccess]=\\\"isCategorySuccess\\\"></app-alert-message>\\n\\n\\t\\t\\t<app-loader *ngIf=\\\"!isInventoryCategorySubmitted\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"isInventoryCategorySubmitted\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<form #addInventoryCategoryForm = \\\"ngForm\\\" name=\\\"addInventoryCategoryForm\\\" (ngSubmit)=\\\"submitInventoryCategoryForm(addInventoryCategoryForm)\\\"  novalidate>\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Category Type*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"inventoryCategory\\\" [(ngModel)]=\\\"inventoryCategory\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline float-right mt-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addInventoryCategoryForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t</div>\\n\\t</div>\\n\\n</div>\"","export default \"<p>\\n  inventory-update works!\\n</p>\\n\"","export default \"<div class=\\\"inventory-view-wrapper\\\">\\n\\t\\n\\n\\t<form #viewInventoryForm = \\\"ngForm\\\" name=\\\"viewInventoryForm\\\"  novalidate>\\n\\n\\t\\t<div class=\\\"card ov mb-30\\\">\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t\\t<div class=\\\"float-left\\\">\\n\\t    \\t\\t\\t<h5>Select Category</h5>\\n\\t    \\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-body ov\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\n\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<app-select-box \\n\\t\\t\\t\\t\\t\\t\\t\\tfieldName = \\\"inventoryCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tfieldText = \\\"Inventory Category\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tfieldItemName=\\\"lookupValueName\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tfieldItemId=\\\"lookupValueId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[fieldModel] = \\\"inventoryCategory\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tfieldPlaceholder = \\\"Select\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[fieldRequired] = \\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[fieldList] = \\\"inventoryCategoryData\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t(inputChange) = \\\"onInventoryCatregoryChange($event)\\\">\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</app-select-box>\\n                \\t\\t</div> \\n\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\n\\t</form>\\n\\n\\n\\t<div class=\\\"card table-card\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All {{inventoryCategoryName}} Inventory <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"inventoryData\\\" >\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n    \\t\\t\\t\\t<a class=\\\"btn trans-white mt_5\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Print</span>\\n    \\t\\t\\t\\t</a>\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\n    \\t\\t\\t\\t<a class=\\\"btn lime-green mt_5\\\"\\n    \\t\\t\\t\\trouterLink=\\\"/ams/inventory/create-inventory\\\" \\n\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon plus\\\" name=\\\"plus\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Create Inventory</span>\\n    \\t\\t\\t\\t</a>\\n\\n    \\t\\t\\t</li>\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n\\n  \\t\\t<app-loader *ngIf=\\\"!isInventoryLoaded\\\"></app-loader>\\n\\n  \\t\\t<div class=\\\"card-body p-0\\\">           \\n  \\t\\t\\t\\n  \\t\\t\\t<ng-container *ngIf=\\\"isInventoryLoaded\\\">\\n  \\t\\t\\t\\t\\n  \\t\\t\\t\\t<table class=\\\"table table-checker table-resizable\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">Inventory Name\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('inventoryName')\\\" [ngClass]=\\\"getFieldOrderBy('inventoryName')\\\"></span>\\n\\t\\t\\t\\t\\t      \\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"columnField['inventoryName']\\\" (ngModelChange)=\\\"selectColInput('inventoryName')\\\" >\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">Quantity \\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('reOrderQuantity')\\\" [ngClass]=\\\"getFieldOrderBy('reOrderQuantity')\\\"></span>\\n\\t\\t\\t\\t\\t      \\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Quantity\\\" [(ngModel)]=\\\"columnField['reOrderQuantity']\\\" (ngModelChange)=\\\"selectColInput('reOrderQuantity')\\\" >\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">Vendor Name \\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('vendorName')\\\" [ngClass]=\\\"getFieldOrderBy('vendorName')\\\"></span>\\n\\t\\t\\t\\t\\t      \\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"columnField['vendorName']\\\" (ngModelChange)=\\\"selectColInput('vendorName')\\\" >\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">Reorder Level \\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('reOrderTriggerLevel')\\\" [ngClass]=\\\"getFieldOrderBy('reOrderTriggerLevel')\\\"></span>\\n\\t\\t\\t\\t\\t      \\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Reorder\\\" [(ngModel)]=\\\"columnField['reOrderTriggerLevel']\\\" (ngModelChange)=\\\"selectColInput('reOrderTriggerLevel')\\\" >\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th  class=\\\"simple-actions\\\" scope=\\\"col\\\">Actions\\n\\t\\t\\t\\t\\t\\t    <input type=\\\"text\\\" class=\\\"form-control vis-h\\\" placeholder=\\\"Action\\\" [(ngModel)]=\\\"columnField['action']\\\" (ngModelChange)=\\\"selectColInput('action')\\\" >\\n\\t\\t\\t\\t\\t\\t  </th>\\n\\t\\t\\t\\t\\t    </tr>\\n\\t\\t\\t\\t    </thead>\\n\\t\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t\\t    <tr *ngFor=\\\"let inventory of inventoryListData | simpleSearch: inventoryData | columnSearch: columnField:selectedInput | sort : unitFieldType: unitOrder | slice:ItemUserStartIndex:ItemUserEndIndex ; let i = index\\\" [ngClass]=\\\"inventory.isActive ? '' : 'notactive'\\\">\\n\\t\\t\\t\\t\\t      <td class=\\\"name\\\">{{inventory.inventoryName}}</td>\\n\\t\\t\\t\\t\\t      <td class=\\\"grey\\\">{{inventory.reOrderQuantity}}</td>\\n\\t\\t\\t\\t\\t      <td class=\\\"grey\\\">{{getVendorName(inventory, inventory.vendorId)}}</td>\\n\\t\\t\\t\\t\\t      <td class=\\\"grey\\\">{{inventory.reOrderTriggerLevel}}</td>\\n\\t\\t\\t\\t\\t      <td>\\n\\t\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t\\t      \\tclass=\\\"mr-2\\\"\\n\\t\\t\\t\\t\\t      \\tplacement=\\\"top\\\" [ngbPopover]=\\\"popAddCheckInContent\\\" triggers=\\\"mouseenter:mouseleave\\\"\\n\\t\\t\\t\\t\\t      \\trouterLink=\\\"/ams/inventory/edit-inventory/{{inventory.inventoryId}}\\\" \\n\\t\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon edit\\\" name=\\\"edit\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" (click)=\\\"showConfirmModal(inventory.inventoryId)\\\"><i-feather class=\\\"icon delete\\\" name=\\\"trash\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t    </tr>\\n\\t\\t\\t\\t    </tbody>\\n\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t<div class=\\\"button-wrapper border-top\\\" *ngIf=\\\"isNoItemsAvailable()\\\">\\n\\t    \\t\\t\\t<p class=\\\"snippet\\\">No Records Found</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<app-pagination \\n\\t\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t\\t\\t</app-pagination>\\n\\n  \\t\\t\\t</ng-container>\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n\\n</div>\"","export default \"<router-outlet></router-outlet>\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9pbnZlbnRvcnkvY29tcG9uZW50cy9pbnZlbnRvcnktY3JlYXRlL2ludmVudG9yeS1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { InventoryService } from 'src/app/api/controllers/Inventory';\nimport { VendorService } from 'src/app/api/controllers/Vendor';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-inventory-create',\n  templateUrl: './inventory-create.component.html',\n  styleUrls: ['./inventory-create.component.scss']\n})\nexport class InventoryCreateComponent implements OnInit {\n   \n  inventory:any; \n  vendorDataList:any;\n  inventoryCategoryDataList:any;\n\n  isEditInventory:boolean = false;\n\n  isInventorySubmitted:boolean = true;\n\n  isError:boolean = false;\n  alertMessage:string = \"\";\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private inventoryService: InventoryService,\n    private lookupService: LookupService,\n    private vendorService:VendorService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) { }\n\n\n  onVendorChange(event){\n    if(event != null)\n    this.inventory.vendorId = event.vendorId;\n  }\n\n  oninventoryCategoryChange(event){\n   if(event != null)\n   this.inventory.inventoryCategoryId = event.lookupValueId;\n  }\n\n  submitAddInventoryForm(form) {\n\n\n    this.isInventorySubmitted = false;\n    \n    if(!this.isEditInventory){\n\n      let details = {\n\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"inventoryName\": this.inventory.inventoryName,\n        \"inventoryUnit\": 1,\n        \"vendorId\": parseInt(this.inventory.vendorId),\n        \"inventoryCategoryId\": parseInt(this.inventory.inventoryCategoryId),\n        \"location\": this.inventory.location,\n        \"reOrderTriggerLevel\": this.inventory.reOrderTriggerLevel,\n        \"reOrderQuantity\": this.inventory.reOrderQuantity,\n        \"notes\": this.inventory.notes,\n        \"isActive\": true,\n        \"insertedBy\": parseInt(this.cookieService.get('userId')),\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": 0,\n        \"updatedOn\": null\n\n      }\n\n      let params = {\n        inventory: details\n      }\n\n      this.inventoryService.addInventory(params).subscribe((res:any) => {\n\n          if(res.message) {\n             \n            this.isInventorySubmitted = true;\n            this.sharedService.setAlertMessage(\"Inventory added successfully\");\n            this.router.navigate(['ams/inventory/view']);\n\n          }\n          else {\n            this.isInventorySubmitted = true;\n            this.isError = true;\n            this.alertMessage = res.errorMessage;\n          }\n\n        }, error => {\n          this.isInventorySubmitted = true;\n          this.isError = true;\n          this.alertMessage = \"Some error occured\";\n              \n      });\n\n\n    }\n\n    else {\n\n      let details = {\n\n        \"inventoryId\": this.inventory.inventoryId,\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"inventoryName\": this.inventory.inventoryName,\n        \"inventoryUnit\": 1,\n        \"vendorId\": parseInt(this.inventory.vendorId),\n        \"inventoryCategoryId\": parseInt(this.inventory.inventoryCategoryId),\n        \"location\": this.inventory.location,\n        \"reOrderTriggerLevel\": this.inventory.reOrderTriggerLevel,\n        \"reOrderQuantity\": this.inventory.reOrderQuantity,\n        \"notes\": this.inventory.notes,\n        \"isActive\": this.inventory.isActive,\n        \"insertedBy\": this.inventory.insertedBy,\n        \"insertedOn\": this.inventory.insertedOn,\n        \"updatedBy\": parseInt(this.cookieService.get('userId')),\n        \"updatedOn\": new Date().toISOString()\n\n      }\n\n      let params = {\n        inventory: details\n      }\n\n      this.inventoryService.updateInventory(params).subscribe((res:any) => {\n\n          if(res.message) {\n           \n            this.sharedService.setAlertMessage(\"Inventory updated successfully\");\n            this.router.navigate(['ams/inventory/view']);\n\n          }\n          else {\n            this.isError = true;\n            this.alertMessage = res.errorMessage;\n          }\n\n        }, error => {\n\n          this.isError = true;\n          this.alertMessage = \"Some error occured\";\n              \n      });\n\n    }\n\n  }\n\n  ngOnInit() {\n\n  \tthis.inventory = {};\n\n  \tif(this.route.params['value'].id != undefined) {\n      \n      this.isEditInventory = true;\n      this.inventory.inventoryId  = this.route.params['value'].id;\n\n      this.inventoryService.getAllInventoryByInventoryId(this.inventory.inventoryId).subscribe((res:any) => {\n\n        this.inventory = res[0];\n\n      });\n\n\n    }\n\n    let vendorListparams = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n\n    this.vendorService.getVendorByApartmentId(vendorListparams).subscribe((res:any) => {\n\n      this.vendorDataList = res;\n\n    });\n\n    let inventoryListparams = {\n      LookupTypeId: 20\n    }\n\n    this.lookupService.getLookupValueByLookupTypeId(inventoryListparams).subscribe((res:any) => {\n      this.inventoryCategoryDataList = res;\n    },\n    error => {\n\n    });\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9pbnZlbnRvcnkvY29tcG9uZW50cy9pbnZlbnRvcnktcmVwb3J0cy9pbnZlbnRvcnktcmVwb3J0cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inventory-reports',\n  templateUrl: './inventory-reports.component.html',\n  styleUrls: ['./inventory-reports.component.scss']\n})\nexport class InventoryReportsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9pbnZlbnRvcnkvY29tcG9uZW50cy9pbnZlbnRvcnktc2V0dXAvaW52ZW50b3J5LXNldHVwLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\nimport { InventoryService } from 'src/app/api/controllers/Inventory';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-inventory-setup',\n  templateUrl: './inventory-setup.component.html',\n  styleUrls: ['./inventory-setup.component.scss']\n})\nexport class InventorySetupComponent implements OnInit {\n\n  inventoryCategoryData:any;\n\n  isInventoryCategoryLoaded:boolean = false;\n  isInventoryCategorySubmitted:boolean = true;\n\n  isInventoryCategoryNew:boolean = false;\n  isInventoryCategoryUpdate:boolean = false;\n\n  inventoryCategory:string = \"\";\n  inventoryCategoryUpdateId:number = 0;\n  \n  alertTicketMessage:string = \"\";\n  isCategoryError:boolean = false; \n  isCategorySuccess:boolean = false; \n\n  inventoryDataList:any;\n\n  constructor(\n    private inventoryService: InventoryService,\n  \tprivate lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) { }\n\n  addNewInventoryCategory(){\n  \tthis.isInventoryCategoryNew = true;\n  \tthis.isInventoryCategoryUpdate = false;\n  }\n\n  updateInventoryCategory(item){\n  \tthis.isInventoryCategoryUpdate = true;\n  \tthis.isInventoryCategoryNew = false;\n  \tthis.inventoryCategory = item.lookupValueName;\n  \tthis.inventoryCategoryUpdateId = item.lookupValueId;\n  }\n\n  deleteInventoryCategory(item, index){\n\n  \tthis.isInventoryCategoryLoaded = false;\n\n  \tvar params = {\n      lookupValueId: item.lookupValueId,\n      updateUserId: parseInt(this.cookieService.get('userId'))\n    }\n\n  \tthis.lookupService.deleteLookupvalue(params).subscribe((res:any) => {\n\n  \t  this.inventoryCategoryData.splice(index, 1);\n\t  this.isInventoryCategoryLoaded = true;\n\n\t});\n\n  }\n\n  removeCategoryBox(){\n  \tthis.isInventoryCategoryNew = false;\n  \tthis.isInventoryCategoryUpdate = false;\n  \tthis.isCategoryError = false;\n  }\n\n  getInventoryList(id){\n\n    var data = _.filter( this.inventoryDataList, function( item ) {\n      if(item.inventoryCategoryId === id)\n        return item;\n    });\n\n    if(data === undefined || data.length == 0){\n      return 0;\n    }\n    else {\n      return data.length;\n    }\n\n  }\n\n  submitInventoryCategoryForm(form) {\n\n  \tthis.isInventoryCategorySubmitted = false;\n\n  \tif(this.isInventoryCategoryNew) {\n\n  \t\tlet details = {\n\n\t\t  \"lookupTypeId\": 20, // inventory category lookup id\n\t\t  \"lookupValueName\": this.inventoryCategory,\n\t\t  \"description\": this.inventoryCategory,\n\t\t  \"isActive\": true,\n\t\t  \"insertedBy\": parseInt(this.cookieService.get('userId')),\n\t\t  \"insertedOn\": \"2019-11-20T16:51:24.105Z\",\n\t\t  \"updatedBy\": 0,\n\t\t  \"updatedOn\": \"2019-11-20T16:51:24.105Z\"\n\n\t\t}\n\n\t\tlet params = {\n\t\t\tlookupvalue: details\n\t\t}\n\n\t\tthis.lookupService.addLookupValue(params).subscribe((res:any) => {\n\n\t  \t\tif(res.message) {\n\n\t\t\t\tlet params = {\n\t\t\t\t\tLookupTypeId: 20\n\t\t\t\t}\n\t  \t\t\t\n\t  \t\t\tthis.lookupService.getLookupValueByLookupTypeId(params).subscribe((res:any) => {\n\n\t  \t\t\t\tthis.isInventoryCategorySubmitted = true;\n\t\t  \t\t\tthis.isCategorySuccess = true;\n\t\t          \tthis.alertTicketMessage = \"Category Added Successfully!\";\n\t\t          \t\n\t\t          \tthis.inventoryCategoryData = res.filter(item => {\n\t                \treturn item.isActive;\n\t              \t});\t\n\n\t  \t\t\t});\n\n\t  \t\t\t\n\n\t  \t\t}\n\t  \t\telse {\n\n\t  \t\t\tthis.isInventoryCategorySubmitted = true;\t\n\t          \tthis.isCategoryError = true;\n\t          \tthis.alertTicketMessage = res.errorMessage;\n\t  \t\t}\n\n  \t\t});\n\n  \t}\n\n  \telse {\n\n  \t\tlet details = {\n\n  \t\t  \"lookupValueId\": this.inventoryCategoryUpdateId,\n\t\t  \"lookupTypeId\": 20, // inventory category lookup id\n\t\t  \"lookupValueName\": this.inventoryCategory,\n\t\t  \"description\": this.inventoryCategory,\n\t\t  \"isActive\": true,\n\t\t  \"insertedBy\": 0,\n\t\t  \"insertedOn\": \"2019-11-20T16:51:24.105Z\",\n\t\t  \"updatedBy\": parseInt(this.cookieService.get('userId')),\n\t\t  \"updatedOn\": \"2019-11-20T16:51:24.105Z\"\n\n\t\t}\n\n\t\tlet params = {\n\t\t\tlookupvalue: details\n\t\t}\n\n\t\tthis.lookupService.updateLookupValue(params).subscribe((res:any) => {\n\n\t  \t\tif(res.message) {\n\t\t\t\t\n\t\t\t\tlet params = {\n\t\t\t\t\tLookupTypeId: 20\n\t\t\t\t}\n\n\t  \t\t\tthis.lookupService.getLookupValueByLookupTypeId(params).subscribe((res:any) => {\n\n\t  \t\t\t\tthis.isInventoryCategorySubmitted = true;\n\t\t  \t\t\tthis.isCategorySuccess = true;\n\t\t          \tthis.alertTicketMessage = \"Category Updated Successfully!\";\n\t\t          \t\n\t\t          \tthis.inventoryCategoryData = res.filter(item => {\n\t                \treturn item.isActive;\n\t              \t});\t\n\n\t  \t\t\t});\n\n\t  \t\t\t\n\n\t  \t\t}\n\t  \t\telse {\n\n\t  \t\t\tthis.isInventoryCategorySubmitted = true;\t\n\t          \tthis.isCategoryError = true;\n\t          \tthis.alertTicketMessage = res.errorMessage;\n\t  \t\t}\n\n  \t\t});\n\n  \t}\n\n  \t\n\n  }\n\n  ngOnInit() {\n\n\tlet params = {\n\t\tLookupTypeId: 20\n\t}\n\n  \tthis.lookupService.getLookupValueByLookupTypeId(params).subscribe((res:any) => {\n\n  \t\tthis.isInventoryCategoryLoaded = true;\n\n  \t\tthis.inventoryCategoryData = res.filter(item => {\n        \treturn item.isActive;\n      });\n\n  \t});\n\n\tlet inventoryDataList = {\n\t\tapartmentId: parseInt(this.cookieService.get('apartmentId'))\n\t}\n\n    this.inventoryService.getAllInventoryByApartmentId(inventoryDataList).subscribe((res:any) => {\n\n      this.inventoryDataList = res.filter(item => {\n          return item.isActive;\n      });\n\n    });\n\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9pbnZlbnRvcnkvY29tcG9uZW50cy9pbnZlbnRvcnktdXBkYXRlL2ludmVudG9yeS11cGRhdGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inventory-update',\n  templateUrl: './inventory-update.component.html',\n  styleUrls: ['./inventory-update.component.scss']\n})\nexport class InventoryUpdateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9pbnZlbnRvcnkvY29tcG9uZW50cy9pbnZlbnRvcnktdmlldy9pbnZlbnRvcnktdmlldy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Injector } from '@angular/core';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\n\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { InventoryService } from 'src/app/api/controllers/Inventory';\nimport { VendorService } from 'src/app/api/controllers/Vendor';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { ModalService } from '../../../../shared/services/modal.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-inventory-view',\n  templateUrl: './inventory-view.component.html',\n  styleUrls: ['./inventory-view.component.scss']\n})\nexport class InventoryViewComponent implements OnInit {\n\n  inventoryCategoryData:any;\n  inventoryCategory:string = \"\";\n\n  isInventoryCategoryLoaded:boolean = false;\n\n  isInventoryCategorySelected:boolean = false;\n  isInventoryLoaded:boolean = false;\n\n  inventoryData:string = \"\";\n\n  unitFieldType:string = \"inventoryName\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n  totalFilterItems:any;\n\n  inventory:any;\n  inventoryListData:any;\n  inventoryCategoryName:string = \"\";\n\n  vendorListData:any;\n\n  selectedInput:string = \"\";\n  columnField: any = {}\n\n  modalService:any;\n\n  constructor(\n    private injector: Injector,\n    public dialog: MatDialog,\n    private router: Router,\n    private route: ActivatedRoute,\n    private inventoryService: InventoryService,\n  \tprivate vendorService: VendorService,\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) { \n\n    this.modalService = this.injector.get(ModalService);\n\n    router.events.subscribe((event: any) => {\n      if (event instanceof NavigationEnd) {\n        this.getAllInventories(); \n      }\n    });\n\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  selectColInput(value){\n    this.selectedInput = value;\n  }\n\n  onInventoryCatregoryChange(event){\n    if(event != null){\n      this.inventoryCategory = event.lookupValueId;\n      this.router.navigateByUrl('/ams/inventory/view/'+parseInt(this.inventoryCategory));\n    }\n    else {\n      this.router.navigateByUrl('/ams/inventory/view');\n    }\n  }\n\n  getVendorName(inventory, id){\n\n    var data = _.filter( this.vendorListData, function( item ) {\n      if(item.vendorId === id)\n        return item;\n    });\n\n    if(data === undefined || data.length == 0){\n      return '';\n    }\n    else {\n\n      this.inventoryListData.map(obj=> {\n        if(obj.inventoryId == inventory.inventoryId){\n          obj.vendorName = data[0].vendorName;\n        }\n      });\n\n      return data[0].vendorName;\n    }\n\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  isNoItemsAvailable(){\n    return this.totalItems == 0 ? true : false;\n  }\n\n  getInventoryCategoryName(id){\n  \tthis.router.navigateByUrl('/ams/inventory/view/'+id);\n  }\n\n  showConfirmModal(id) {\n    this.modalService.showConfirmModal(id);\n  }\n\n  getAllInventories(){\n\n    this.isInventoryLoaded = false;\n\n    let params = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n\n    this.inventoryService.getAllInventoryByApartmentId(params).subscribe((res:any) => {\n\n        this.inventoryListData = res.filter(item => {\n            return item.isActive;\n        });\n\n        if(this.route.params['value'].id != undefined) {\n\n          this.inventoryListData = this.inventoryListData.filter(item => {\n            return item.inventoryCategoryId == this.route.params['value'].id && item.isActive;\n          });\n\n          _.each(this.inventoryCategoryData, (item, index) => {\n\n            if(item.lookupValueId == this.route.params['value'].id){\n              this.inventoryCategoryName = item.lookupValueName;\n              this.inventoryCategory = item.lookupValueId;\n            }\n\n            this.isInventoryLoaded = true;\n\n          });\n\n        }\n\n        this.totalItems = this.inventoryListData.length;\n\n        if(this.totalItems>this.itemLimit){\n          this.ItemEndIndex = this.itemLimit;\n        }\n\n        else {\n          this.ItemEndIndex = this.totalItems;\n        }\n\n        this.isInventoryLoaded = true;\n\n    });\n\n  }\n\n\n  ngOnInit() {\n\n  \tthis.inventory = {};\n\n    let params = {\n      LookupTypeId: 20\n    }\n\n  \tthis.lookupService.getLookupValueByLookupTypeId(params).subscribe((res:any) => {\n\n  \t\tthis.inventoryCategoryData = res.filter(item => {\n        \treturn item.isActive;\n      });\n\n      this.getAllInventories();\n\n  \t});\n\n    let vendorParams = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n\n    this.vendorService.getVendorByApartmentId(vendorParams).subscribe((res:any) => {\n\n      this.vendorListData = res;\n\n    });\n\n    // delete item\n    this.sharedService.unitlistdeleteindexcast.subscribe( id => {\n\n      if(id != null){\n\n        var params = {\n          inventoryId: id,\n          deleteBy: parseInt(this.cookieService.get('userId'))\n        }\n\n\n        this.inventoryService.deleteInventory(params).subscribe((res:any) => {\n\n          _.each(this.inventoryListData, (type)=>{\n            if(type.inventoryId == id){\n              type.isActive = false;\n            }\n          })\n\n          setTimeout(() => {\n\n            this.inventoryListData = this.inventoryListData.filter((type) => type.id !== id);\n            this.totalItems = this.inventoryListData.length;\n            this.sharedService.setAlertMessage(\"Inventory deleted\");\n            this.sharedService.setUnitListDeleteIndex(null);\n\n          }, 500)          \n\n        }, error => {\n          console.log(error);\n        });\n\n        \n      }\n\n    });\n\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from '../.././auth.guard';\n\nimport { InventoryComponent } from './inventory.component';\nimport { InventorySetupComponent } from './components/inventory-setup/inventory-setup.component';\nimport { InventoryCreateComponent } from './components/inventory-create/inventory-create.component';\nimport { InventoryUpdateComponent } from './components/inventory-update/inventory-update.component';\nimport { InventoryViewComponent } from './components/inventory-view/inventory-view.component';\nimport { InventoryReportsComponent } from './components/inventory-reports/inventory-reports.component';\n\nconst routes: Routes = [\n\n\t{ path: '', redirectTo: 'settings', pathMatch: 'full'},\n\t{ path: 'settings', component: InventorySetupComponent},\n\t{ path: 'create-inventory', component: InventoryCreateComponent},\n\t{ path: 'edit-inventory/:id', component: InventoryCreateComponent},\n\t{ path: 'view', component: InventoryViewComponent},\n\t{ path: 'view/:id', component: InventoryViewComponent},\n\t{ path: 'reports', component: InventoryReportsComponent},\n\t{ path: '**', redirectTo: 'settings', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InventoryRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9pbnZlbnRvcnkvaW52ZW50b3J5LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.scss']\n})\nexport class InventoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { InventoryRoutingModule } from './inventory-routing.module';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { InventoryComponent } from './inventory.component';\nimport { InventorySetupComponent } from './components/inventory-setup/inventory-setup.component';\nimport { InventoryCreateComponent } from './components/inventory-create/inventory-create.component';\nimport { InventoryUpdateComponent } from './components/inventory-update/inventory-update.component';\nimport { InventoryViewComponent } from './components/inventory-view/inventory-view.component';\nimport { InventoryReportsComponent } from './components/inventory-reports/inventory-reports.component';\n\n@NgModule({\n  declarations: [\n\tInventoryComponent,\n\tInventorySetupComponent,\n\tInventoryCreateComponent,\n\tInventoryUpdateComponent,\n\tInventoryViewComponent,\n\tInventoryReportsComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    InventoryRoutingModule\n  ],\n  bootstrap: [ InventoryComponent ]\n})\nexport class InventoryModule { }\n"],"sourceRoot":"webpack:///"}