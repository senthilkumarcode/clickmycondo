{"version":3,"sources":["./src/app/ams/inventory/components/inventory-create/inventory-create.component.html","./src/app/ams/inventory/components/inventory-reports/inventory-reports.component.html","./src/app/ams/inventory/components/inventory-setup/inventory-setup.component.html","./src/app/ams/inventory/components/inventory-update/inventory-update.component.html","./src/app/ams/inventory/components/inventory-view/inventory-view.component.html","./src/app/ams/inventory/inventory.component.html","./src/app/ams/inventory/components/inventory-create/inventory-create.component.scss","./src/app/ams/inventory/components/inventory-create/inventory-create.component.ts","./src/app/ams/inventory/components/inventory-reports/inventory-reports.component.scss","./src/app/ams/inventory/components/inventory-reports/inventory-reports.component.ts","./src/app/ams/inventory/components/inventory-setup/inventory-setup.component.scss","./src/app/ams/inventory/components/inventory-setup/inventory-setup.component.ts","./src/app/ams/inventory/components/inventory-update/inventory-update.component.scss","./src/app/ams/inventory/components/inventory-update/inventory-update.component.ts","./src/app/ams/inventory/components/inventory-view/inventory-view.component.scss","./src/app/ams/inventory/components/inventory-view/inventory-view.component.ts","./src/app/ams/inventory/inventory-routing.module.ts","./src/app/ams/inventory/inventory.component.scss","./src/app/ams/inventory/inventory.component.ts","./src/app/ams/inventory/inventory.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,m3F;;;;;;;;;;;;ACAf;AAAe,wG;;;;;;;;;;;;ACAf;AAAe,0XAA2T,wPAAwP,oBAAoB,6FAA6F,WAAW,maAAma,sBAAsB,yzE;;;;;;;;;;;;ACAvnC;AAAe,uG;;;;;;;;;;;;ACAf;AAAe,itCAAkpC,wBAAwB,uaAAua,uBAAuB,8CAA8C,YAAY,kyBAAkyB,WAAW,y4CAAy4C,sDAAsD,yBAAyB,0CAA0C,6BAA6B,0CAA0C,yBAAyB,0CAA0C,iCAAiC,oPAAoP,uBAAuB,yFAAyF,WAAW,se;;;;;;;;;;;;ACA1/I;AAAe,kG;;;;;;;;;;;;ACAf;AAAe,6GAA8C,2M;;;;;;;;;;;;;;;;;;ACAX;AACuC;AAOzF,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IAMnC,YACU,MAAc,EACb,KAAqB;QADtB,WAAM,GAAN,MAAM,CAAQ;QACb,UAAK,GAAL,KAAK,CAAgB;QAJhC,oBAAe,GAAW,KAAK,CAAC;IAK5B,CAAC;IAEL,sBAAsB,CAAC,IAAI;IAE3B,CAAC;IAED,QAAQ;QAEP,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QAEpB,IAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,SAAS,EAAE;YAE5C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SAE7B;IAEH,CAAC;CAEF;;YApBmB,sDAAM;YACN,8DAAc;;AARrB,wBAAwB;IALpC,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,6QAAgD;;KAEjD,CAAC;2EAQkB,sDAAM;QACN,8DAAc;GARrB,wBAAwB,CA2BpC;AA3BoC;;;;;;;;;;;;;ACRrC;AAAe,6GAA8C,2M;;;;;;;;;;;;;;;;;ACAX;AAOlD,IAAa,yBAAyB,GAAtC,MAAa,yBAAyB;IAEpC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,yBAAyB;IALrC,+DAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,gRAAiD;;KAElD,CAAC;;GACW,yBAAyB,CAOrC;AAPqC;;;;;;;;;;;;;ACPtC;AAAe,6GAA8C,uM;;;;;;;;;;;;;;;;;;;;ACAX;AAEsB;AACG;AACxB;AAQnD,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IAiBlC,YACS,aAA4B,EAC3B,aAA2B,EAC3B,aAA2B;QAF5B,kBAAa,GAAb,aAAa,CAAe;QAC3B,kBAAa,GAAb,aAAa,CAAc;QAC3B,kBAAa,GAAb,aAAa,CAAc;QAhBrC,8BAAyB,GAAW,KAAK,CAAC;QAC1C,iCAA4B,GAAW,IAAI,CAAC;QAE5C,2BAAsB,GAAW,KAAK,CAAC;QACvC,8BAAyB,GAAW,KAAK,CAAC;QAE1C,sBAAiB,GAAU,EAAE,CAAC;QAC9B,8BAAyB,GAAU,CAAC,CAAC;QAErC,uBAAkB,GAAU,EAAE,CAAC;QAC/B,oBAAe,GAAW,KAAK,CAAC;QAChC,sBAAiB,GAAW,KAAK,CAAC;IAM9B,CAAC;IAEL,uBAAuB;QACtB,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;QACnC,IAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;IACxC,CAAC;IAED,uBAAuB,CAAC,IAAI;QAC3B,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;QACtC,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;QACpC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,eAAe,CAAC;QAC9C,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,aAAa,CAAC;IACrD,CAAC;IAED,uBAAuB,CAAC,IAAI,EAAE,KAAK;QAElC,IAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;QAEvC,IAAI,MAAM,GAAG;YACV,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,YAAY,EAAE,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SACzD;QAEF,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,GAAO,EAAE,EAAE;YAEjE,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;QAExC,CAAC,CAAC,CAAC;IAEF,CAAC;IAED,iBAAiB;QAChB,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;QACpC,IAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;QACvC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IAC9B,CAAC;IAED,2BAA2B,CAAC,IAAI;QAE/B,IAAI,CAAC,4BAA4B,GAAG,KAAK,CAAC;QAE1C,IAAG,IAAI,CAAC,sBAAsB,EAAE;YAE/B,IAAI,OAAO,GAAG;gBAEd,cAAc,EAAE,EAAE;gBAClB,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;gBACzC,aAAa,EAAE,IAAI,CAAC,iBAAiB;gBACrC,UAAU,EAAE,IAAI;gBAChB,YAAY,EAAE,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACxD,YAAY,EAAE,0BAA0B;gBACxC,WAAW,EAAE,CAAC;gBACd,WAAW,EAAE,0BAA0B;aAExC;YAED,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,GAAO,EAAE,EAAE;gBAE9D,IAAG,GAAG,CAAC,OAAO,EAAE;oBAEf,IAAI,CAAC,aAAa,CAAC,4BAA4B,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,GAAO,EAAE,EAAE;wBAEzE,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;wBACzC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;wBACxB,IAAI,CAAC,kBAAkB,GAAG,8BAA8B,CAAC;wBAEzD,IAAI,CAAC,qBAAqB,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;4BAC1C,OAAO,IAAI,CAAC,QAAQ,CAAC;wBACvB,CAAC,CAAC,CAAC;oBAEb,CAAC,CAAC,CAAC;iBAIH;qBACI;oBAEJ,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;oBACnC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;oBAC5B,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC,YAAY,CAAC;iBACjD;YAEF,CAAC,CAAC,CAAC;SAEH;aAEI;YAEJ,IAAI,OAAO,GAAG;gBAEZ,eAAe,EAAE,IAAI,CAAC,yBAAyB;gBACjD,cAAc,EAAE,EAAE;gBAClB,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;gBACzC,aAAa,EAAE,IAAI,CAAC,iBAAiB;gBACrC,UAAU,EAAE,IAAI;gBAChB,YAAY,EAAE,CAAC;gBACf,YAAY,EAAE,0BAA0B;gBACxC,WAAW,EAAE,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACvD,WAAW,EAAE,0BAA0B;aAExC;YAED,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,GAAO,EAAE,EAAE;gBAEjE,IAAG,GAAG,CAAC,OAAO,EAAE;oBAEf,IAAI,CAAC,aAAa,CAAC,4BAA4B,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,GAAO,EAAE,EAAE;wBAEzE,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;wBACzC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;wBACxB,IAAI,CAAC,kBAAkB,GAAG,gCAAgC,CAAC;wBAE3D,IAAI,CAAC,qBAAqB,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;4BAC1C,OAAO,IAAI,CAAC,QAAQ,CAAC;wBACvB,CAAC,CAAC,CAAC;oBAEb,CAAC,CAAC,CAAC;iBAIH;qBACI;oBAEJ,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;oBACnC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;oBAC5B,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC,YAAY,CAAC;iBACjD;YAEF,CAAC,CAAC,CAAC;SAEH;IAIF,CAAC;IAED,QAAQ;QAEP,IAAI,CAAC,aAAa,CAAC,4BAA4B,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,GAAO,EAAE,EAAE;YAEzE,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;YAEtC,IAAI,CAAC,qBAAqB,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;gBAC1C,OAAO,IAAI,CAAC,QAAQ,CAAC;YACtB,CAAC,CAAC,CAAC;QAER,CAAC,CAAC,CAAC;IAEJ,CAAC;CAGF;;YA3JyB,0EAAa;YACb,6EAAa;YACb,gEAAa;;AApB1B,uBAAuB;IALnC,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,0QAA+C;;KAEhD,CAAC;2EAmBwB,0EAAa;QACb,6EAAa;QACb,gEAAa;GApB1B,uBAAuB,CA6KnC;AA7KmC;;;;;;;;;;;;;ACZpC;AAAe,6GAA8C,2M;;;;;;;;;;;;;;;;;ACAX;AAOlD,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IAEnC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,wBAAwB;IALpC,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,6QAAgD;;KAEjD,CAAC;;GACW,wBAAwB,CAOpC;AAPoC;;;;;;;;;;;;;ACPrC;AAAe,6GAA8C,mM;;;;;;;;;;;;;;;;;;;;;;;ACAX;AACuC;AAEjB;AACG;AACxB;AAEnB;AAOhC,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAyBjC,YACU,MAAc,EACd,KAAqB,EACtB,aAA4B,EAC3B,aAA2B,EAC3B,aAA2B;QAJ3B,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACtB,kBAAa,GAAb,aAAa,CAAe;QAC3B,kBAAa,GAAb,aAAa,CAAc;QAC3B,kBAAa,GAAb,aAAa,CAAc;QA3BrC,sBAAiB,GAAU,EAAE,CAAC;QAE9B,8BAAyB,GAAW,KAAK,CAAC;QAE1C,gCAA2B,GAAW,KAAK,CAAC;QAC5C,sBAAiB,GAAW,KAAK,CAAC;QAElC,kBAAa,GAAU,EAAE,CAAC;QAE1B,kBAAa,GAAU,QAAQ,CAAC;QAChC,cAAS,GAAW,KAAK,CAAC;QAE1B,mBAAc,GAAO,CAAC,CAAC;QAGvB,cAAS,GAAO,EAAE,CAAC;QAKnB,0BAAqB,GAAU,EAAE,CAAC;IAQ9B,CAAC;IAEL,cAAc,CAAC,KAAK;QAClB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,cAAc,CAAC;QAC3C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC;IACzC,CAAC;IAED,YAAY,CAAC,IAAI;QACf,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;IACnC,CAAC;IAED,eAAe,CAAC,IAAI;QAClB,IAAG,IAAI,CAAC,aAAa,IAAI,IAAI,EAAC;YAC5B,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC;SACxC;;YACI,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,YAAY;QACV,OAAO,MAAM,CAAC,UAAU,IAAI,GAAG,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5D,CAAC;IAGD,wBAAwB,CAAC,EAAE;QAE1B,+CAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YAElD,IAAG,IAAI,CAAC,aAAa,IAAI,QAAQ,CAAC,EAAE,CAAC,EAAC;gBACrC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,eAAe,CAAC;aAClD;YAEC,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC;QAE3C,CAAC,CAAC,CAAC;IAEJ,CAAC;IAED,QAAQ;QAEP,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QAEnB,IAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,SAAS,EAAE;YAE7C,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC;YACxC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC;SAGxD;QAEF,IAAI,CAAC,aAAa,CAAC,4BAA4B,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,GAAO,EAAE,EAAE;YAEzE,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;YAEtC,IAAI,CAAC,qBAAqB,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;gBAC1C,OAAO,IAAI,CAAC,QAAQ,CAAC;YACvB,CAAC,CAAC,CAAC;YAEJ,IAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,SAAS,EAAE;gBAE5C,+CAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;oBAElD,IAAG,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,EAAC;wBACrD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,eAAe,CAAC;qBACnD;gBAGH,CAAC,CAAC,CAAC;aAEJ;QAGJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,GAAG,CAAE;gBAC1B,aAAa,EAAG,CAAC;gBACjB,eAAe,EAAG,OAAO;gBACzB,mBAAmB,EAAG,IAAI;gBAC1B,eAAe,EAAG,QAAQ;gBAC1B,uBAAuB,EAAG,EAAE;aAE5B;YACD;gBACC,aAAa,EAAG,CAAC;gBACjB,eAAe,EAAG,QAAQ;gBAC1B,mBAAmB,EAAG,IAAI;gBAC1B,eAAe,EAAG,QAAQ;gBAC1B,uBAAuB,EAAG,KAAK;aAE/B;SACC,CAAC;QAGJ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;QAEjD,IAAG,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,SAAS,EAAC;YACjC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC;SACnC;aAEI;YACJ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC;SACpC;QAED,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;IAG7B,CAAC;CAEF;;YAjHmB,sDAAM;YACP,8DAAc;YACP,0EAAa;YACb,6EAAa;YACb,gEAAa;;AA9B1B,sBAAsB;IALlC,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,uQAA8C;;KAE/C,CAAC;2EA2BkB,sDAAM;QACP,8DAAc;QACP,0EAAa;QACb,6EAAa;QACb,gEAAa;GA9B1B,sBAAsB,CA2IlC;AA3IkC;;;;;;;;;;;;;;;;;;;;;;;ACdM;AACc;AAK0C;AACG;AAEN;AACS;AAEvG,MAAM,MAAM,GAAW;IAEtB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAC;IACtD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,6GAAuB,EAAC;IACvD,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,gHAAwB,EAAC;IAChE,EAAE,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,gHAAwB,EAAC;IAClE,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,0GAAsB,EAAC;IAClD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,0GAAsB,EAAC;IACtD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,mHAAyB,EAAC;IACxD,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAC;CACxD,CAAC;AAMF,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;CAAI;AAA1B,sBAAsB;IAJlC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,sBAAsB,CAAI;AAAJ;;;;;;;;;;;;;AC5BnC;AAAe,6GAA8C,2J;;;;;;;;;;;;;;;;;ACAX;AAOlD,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAE7B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,kBAAkB;IAL9B,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,mOAAyC;;KAE1C,CAAC;;GACW,kBAAkB,CAO9B;AAP8B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPU;AACM;AAEqB;AAEV;AAEC;AACsC;AACG;AACA;AACN;AACS;AAkBvG,IAAa,eAAe,GAA5B,MAAa,eAAe;CAAI;AAAnB,eAAe;IAhB3B,8DAAQ,CAAC;QACR,YAAY,EAAE;YACf,uEAAkB;YAClB,6GAAuB;YACvB,gHAAwB;YACxB,gHAAwB;YACxB,0GAAsB;YACtB,oHAAyB;SACvB;QACD,OAAO,EAAE;YACP,4DAAY;YACZ,kEAAY,CAAC,OAAO,EAAE;YACtB,gFAAsB;SACvB;QACD,SAAS,EAAE,CAAE,uEAAkB,CAAE;KAClC,CAAC;GACW,eAAe,CAAI;AAAJ","file":"inventory-inventory-module-es2015.js","sourcesContent":["export default \"<div class=\\\"inventory-create-wrapper\\\">\\n\\t\\n\\t<form #addInventoryForm = \\\"ngForm\\\" name=\\\"addInventoryForm\\\" (ngSubmit)=\\\"submitAddInventoryForm(addInventoryForm)\\\"  novalidate>\\n\\n\\t\\t<h3 class=\\\"main-title\\\">\\n\\t\\t\\t\\n\\t\\t\\t<span *ngIf=\\\"!isEditInventory\\\">Create Inventory</span>\\n    \\t\\t<span *ngIf=\\\"isEditInventory\\\">Update Inventory</span>\\n\\n\\t\\t</h3>\\n\\n\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t                    <label>Inventory Name*</label>\\n\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"inventoryName\\\" [(ngModel)]=\\\"inventory.inventoryName\\\" required>\\n                \\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t                    <label>Inventory Unit*</label>\\n\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"InventoryUnit\\\" [(ngModel)]=\\\"inventory.InventoryUnit\\\" required>\\n                \\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t                    <label>Vendor Name*</label>\\n\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"vendorName\\\" [(ngModel)]=\\\"inventory.vendorName\\\" required>\\n                \\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t                    <label>Location</label>\\n\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"inventoryLocation\\\" [(ngModel)]=\\\"inventory.inventoryLocation\\\">\\n                \\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t                    <label>Re-Order Level</label>\\n\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"reorderLevel\\\" [(ngModel)]=\\\"inventory.reorderLevel\\\">\\n                \\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t                    <label>Re-Order Quantity</label>\\n\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"reorderQuantity\\\" [(ngModel)]=\\\"inventory.reorderQuantity\\\">\\n                \\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t<ul class=\\\"list-inline float-right mt-4\\\">\\n\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addInventoryForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t</ul>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t</form>\\n</div>\"","export default \"<p>\\n  inventory-reports works!\\n</p>\\n\"","export default \"<div class=\\\"inventorys-setup-wrapper\\\">\\n\\n\\t<app-loader *ngIf=\\\"!isInventoryCategoryLoaded\\\"></app-loader>\\n\\n\\t<div class=\\\"category-list list-boxes\\\" *ngIf=\\\"isInventoryCategoryLoaded\\\">\\n\\t\\t<h4 class=\\\"main-title-mini\\\">Inventory Categories</h4>\\n\\t\\t<ng-container *ngFor=\\\"let item of inventoryCategoryData; let i = index\\\">\\n\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"card-body nohover\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"icons\\\">\\n\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" routerLink=\\\"/ams/inventory/view/{{item.lookupValueId}}\\\" \\n\\t\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\"><i-feather class=\\\"icon view\\\" name=\\\"eye\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\"><i-feather class=\\\"icon edit\\\" name=\\\"edit\\\" (click)=\\\"updateInventoryCategory(item, i)\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" class=\\\"d-none\\\"><i-feather class=\\\"icon del\\\" name=\\\"x\\\" (click)=\\\"deleteInventoryCategory(item)\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<h6>{{item.lookupValueName}}</h6>\\n\\t\\t\\t\\t\\t\\t<p>3 Inventories</p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</li>\\n\\t\\t</ng-container>\\n\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t<div class=\\\"card-body new text-center\\\">\\n\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" class=\\\"rounded-btn green\\\" (click)=\\\"addNewInventoryCategory()\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"icon\\\">+</div>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t<h6 class=\\\"tc-green\\\">Add New Category</h6>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</li>\\n\\t</div>\\n\\n\\t<div class=\\\"card mt-30\\\" *ngIf=\\\"isInventoryCategoryNew || isInventoryCategoryUpdate\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h6 *ngIf=\\\"isInventoryCategoryNew\\\">Add Inventory Category</h6>\\n    \\t\\t\\t<h6 *ngIf=\\\"!isInventoryCategoryNew\\\">Update Inventory Category</h6>\\n    \\t\\t</div>\\n    \\t\\t<div class=\\\"float-right\\\" (click)=\\\"removeCategoryBox()\\\">\\n    \\t\\t\\t<i-feather class=\\\"icon del\\\" name=\\\"x\\\"></i-feather>\\n    \\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\n\\t\\t\\t<app-alert-message [message]=\\\"alertTicketMessage\\\" [isError]=\\\"isCategoryError\\\" [isSuccess]=\\\"isCategorySuccess\\\"></app-alert-message>\\n\\n\\t\\t\\t<app-loader *ngIf=\\\"!isInventoryCategorySubmitted\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"isInventoryCategorySubmitted\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<form #addInventoryCategoryForm = \\\"ngForm\\\" name=\\\"addInventoryCategoryForm\\\" (ngSubmit)=\\\"submitInventoryCategoryForm(addInventoryCategoryForm)\\\"  novalidate>\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Category Type*</label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"inventoryCategory\\\" [(ngModel)]=\\\"inventoryCategory\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline float-right mt-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addInventoryCategoryForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t</div>\\n\\t</div>\\n\\n</div>\"","export default \"<p>\\n  inventory-update works!\\n</p>\\n\"","export default \"<div class=\\\"inventory-view-wrapper\\\">\\n\\t\\n\\t<app-loader *ngIf=\\\"!isInventoryCategoryLoaded\\\"></app-loader>\\n\\n\\t<ng-container *ngIf=\\\"isInventoryCategoryLoaded\\\">\\n\\n\\t\\t<form #viewInventoryForm = \\\"ngForm\\\" name=\\\"viewInventoryForm\\\"  novalidate>\\n\\n\\t\\t\\t<div class=\\\"card mb-30\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"float-left\\\">\\n\\t\\t    \\t\\t\\t<h5>Select Category</h5>\\n\\t\\t    \\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t                    <label>Category Type*</label>\\n\\t\\t\\t                    <select \\n\\t\\t\\t\\t\\t\\t\\t        name=\\\"inventoryCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\t        id=\\\"inventoryCategory\\\" \\n\\t\\t\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t        [(ngModel)]=\\\"inventoryCategory\\\" (ngModelChange) = \\\"getInventoryCategoryName(inventoryCategory)\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of inventoryCategoryData\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t    </select>\\n\\t\\t            \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t</div>\\n\\n\\t\\t</form>\\n\\n\\t</ng-container>\\n\\n\\t<app-loader *ngIf=\\\"!isInventoryLoaded\\\"></app-loader>\\n\\n\\t<div class=\\\"card card-table\\\" *ngIf=\\\"isInventoryLoaded && isInventoryCategorySelected\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All {{inventoryCategoryName}} Inventory <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"inventoryData\\\" >\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n    \\t\\t\\t\\t<a class=\\\"btn l-blue mt_5\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Print</span>\\n    \\t\\t\\t\\t</a>\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\n    \\t\\t\\t\\t<a class=\\\"btn lime-green mt_5\\\"\\n    \\t\\t\\t\\trouterLink=\\\"/ams/inventory/create-inventory\\\" \\n\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon plus\\\" name=\\\"plus\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Create Inventory</span>\\n    \\t\\t\\t\\t</a>\\n\\n    \\t\\t\\t</li>\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n\\n  \\t\\t<app-filter-box *ngIf=\\\"isInventoryLoaded\\\" [totalItems]=\\\"totalFilterItems\\\"  (outputParams) = \\\"getFilterData($event)\\\" class=\\\"d-sm-block d-none\\\"></app-filter-box>\\n\\n  \\t\\t<div class=\\\"card-body p-0\\\">\\n  \\t\\t\\t\\n  \\t\\t\\t<table class=\\\"table\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('inventoryName')\\\">Inventory Name<span [ngClass]=\\\"getFieldOrderBy('inventoryName')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('InventoryQuantity')\\\">Quantity <span [ngClass]=\\\"getFieldOrderBy('InventoryQuantity')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('InventoryUnit')\\\">Unit <span [ngClass]=\\\"getFieldOrderBy('InventoryUnit')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\" (click)=\\\"sortUnitData('InventoryReOrderLevel')\\\">Reorder Level <span [ngClass]=\\\"getFieldOrderBy('InventoryReOrderLevel')\\\"></span></th>\\n\\t\\t\\t\\t      <th scope=\\\"col\\\">Action</th>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </thead>\\n\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t    <tr *ngFor=\\\"let inventory of inventoryListData | orderBy : unitFieldType: unitOrder | slice:ItemUserStartIndex:ItemUserEndIndex | simpleSearch: inventoryData ; let i = index\\\">\\n\\t\\t\\t\\t      <td class=\\\"name\\\">{{inventory.InventoryName}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{inventory.InventoryQuantity}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{inventory.InventoryUnit}}</td>\\n\\t\\t\\t\\t      <td class=\\\"grey\\\">{{inventory.InventoryReOrderLevel}}</td>\\n\\t\\t\\t\\t      <td>\\n\\t\\t\\t\\t      \\t<a href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t      \\tplacement=\\\"top\\\" [ngbPopover]=\\\"popAddCheckInContent\\\" triggers=\\\"mouseenter:mouseleave\\\"\\n\\t\\t\\t\\t      \\trouterLink=\\\"/ams/inventory/edit-inventory/{{inventory.inventoryId}}\\\" \\n\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i-feather class=\\\"icon edit\\\" name=\\\"edit\\\"></i-feather>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t    </tr>\\n\\t\\t\\t    </tbody>\\n\\t\\t\\t</table>\\n\\t\\t\\t\\n\\t\\t\\t<app-pagination \\n\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t\\t</app-pagination>\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n\\n</div>\"","export default \"<router-outlet></router-outlet>\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9pbnZlbnRvcnkvY29tcG9uZW50cy9pbnZlbnRvcnktY3JlYXRlL2ludmVudG9yeS1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-inventory-create',\n  templateUrl: './inventory-create.component.html',\n  styleUrls: ['./inventory-create.component.scss']\n})\nexport class InventoryCreateComponent implements OnInit {\n   \n  inventory:any; \n\n  isEditInventory:boolean = false;\n\n  constructor(\n  \t private router: Router,\n     private route: ActivatedRoute,\n  ) { }\n\n  submitAddInventoryForm(form) {\n    \n  }\n\n  ngOnInit() {\n\n  \tthis.inventory = {};\n\n  \tif(this.route.params['value'].id != undefined) {\n      \n      this.isEditInventory = true;\n\n    }\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9pbnZlbnRvcnkvY29tcG9uZW50cy9pbnZlbnRvcnktcmVwb3J0cy9pbnZlbnRvcnktcmVwb3J0cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inventory-reports',\n  templateUrl: './inventory-reports.component.html',\n  styleUrls: ['./inventory-reports.component.scss']\n})\nexport class InventoryReportsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9pbnZlbnRvcnkvY29tcG9uZW50cy9pbnZlbnRvcnktc2V0dXAvaW52ZW50b3J5LXNldHVwLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\nimport { LookupService } from '../../../../api/services/lookup.service';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n@Component({\n  selector: 'app-inventory-setup',\n  templateUrl: './inventory-setup.component.html',\n  styleUrls: ['./inventory-setup.component.scss']\n})\nexport class InventorySetupComponent implements OnInit {\n\n  inventoryCategoryData:any;\n\n  isInventoryCategoryLoaded:boolean = false;\n  isInventoryCategorySubmitted:boolean = true;\n\n  isInventoryCategoryNew:boolean = false;\n  isInventoryCategoryUpdate:boolean = false;\n\n  inventoryCategory:string = \"\";\n  inventoryCategoryUpdateId:number = 0;\n  \n  alertTicketMessage:string = \"\";\n  isCategoryError:boolean = false; \n  isCategorySuccess:boolean = false; \n\n  constructor(\n  \tprivate lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) { }\n\n  addNewInventoryCategory(){\n  \tthis.isInventoryCategoryNew = true;\n  \tthis.isInventoryCategoryUpdate = false;\n  }\n\n  updateInventoryCategory(item){\n  \tthis.isInventoryCategoryUpdate = true;\n  \tthis.isInventoryCategoryNew = false;\n  \tthis.inventoryCategory = item.lookupValueName;\n  \tthis.inventoryCategoryUpdateId = item.lookupValueId;\n  }\n\n  deleteInventoryCategory(item, index){\n\n  \tthis.isInventoryCategoryLoaded = false;\n\n  \tvar params = {\n      lookupValueId: item.lookupValueId,\n      updateUserId: parseInt(this.cookieService.get('userId'))\n    }\n\n  \tthis.lookupService.deleteLookupvalue(params).subscribe((res:any) => {\n\n  \t  this.inventoryCategoryData.splice(index, 1);\n\t  this.isInventoryCategoryLoaded = true;\n\n\t});\n\n  }\n\n  removeCategoryBox(){\n  \tthis.isInventoryCategoryNew = false;\n  \tthis.isInventoryCategoryUpdate = false;\n  \tthis.isCategoryError = false;\n  }\n\n  submitInventoryCategoryForm(form) {\n\n  \tthis.isInventoryCategorySubmitted = false;\n\n  \tif(this.isInventoryCategoryNew) {\n\n  \t\tlet details = {\n\n\t\t  \"lookupTypeId\": 20, // inventory category lookup id\n\t\t  \"lookupValueName\": this.inventoryCategory,\n\t\t  \"description\": this.inventoryCategory,\n\t\t  \"isActive\": true,\n\t\t  \"insertedBy\": parseInt(this.cookieService.get('userId')),\n\t\t  \"insertedOn\": \"2019-11-20T16:51:24.105Z\",\n\t\t  \"updatedBy\": 0,\n\t\t  \"updatedOn\": \"2019-11-20T16:51:24.105Z\"\n\n\t\t}\n\n\t\tthis.lookupService.addLookupValue(details).subscribe((res:any) => {\n\n\t  \t\tif(res.message) {\n\t  \t\t\t\n\t  \t\t\tthis.lookupService.getLookupValueByLookupTypeId(20).subscribe((res:any) => {\n\n\t  \t\t\t\tthis.isInventoryCategorySubmitted = true;\n\t\t  \t\t\tthis.isCategorySuccess = true;\n\t\t          \tthis.alertTicketMessage = \"Category Added Successfully!\";\n\t\t          \t\n\t\t          \tthis.inventoryCategoryData = res.filter(item => {\n\t                \treturn item.isActive;\n\t              \t});\t\n\n\t  \t\t\t});\n\n\t  \t\t\t\n\n\t  \t\t}\n\t  \t\telse {\n\n\t  \t\t\tthis.isInventoryCategorySubmitted = true;\t\n\t          \tthis.isCategoryError = true;\n\t          \tthis.alertTicketMessage = res.errorMessage;\n\t  \t\t}\n\n  \t\t});\n\n  \t}\n\n  \telse {\n\n  \t\tlet details = {\n\n  \t\t  \"lookupValueId\": this.inventoryCategoryUpdateId,\n\t\t  \"lookupTypeId\": 20, // inventory category lookup id\n\t\t  \"lookupValueName\": this.inventoryCategory,\n\t\t  \"description\": this.inventoryCategory,\n\t\t  \"isActive\": true,\n\t\t  \"insertedBy\": 0,\n\t\t  \"insertedOn\": \"2019-11-20T16:51:24.105Z\",\n\t\t  \"updatedBy\": parseInt(this.cookieService.get('userId')),\n\t\t  \"updatedOn\": \"2019-11-20T16:51:24.105Z\"\n\n\t\t}\n\n\t\tthis.lookupService.updateLookupValue(details).subscribe((res:any) => {\n\n\t  \t\tif(res.message) {\n\t  \t\t\t\n\t  \t\t\tthis.lookupService.getLookupValueByLookupTypeId(20).subscribe((res:any) => {\n\n\t  \t\t\t\tthis.isInventoryCategorySubmitted = true;\n\t\t  \t\t\tthis.isCategorySuccess = true;\n\t\t          \tthis.alertTicketMessage = \"Category Updated Successfully!\";\n\t\t          \t\n\t\t          \tthis.inventoryCategoryData = res.filter(item => {\n\t                \treturn item.isActive;\n\t              \t});\t\n\n\t  \t\t\t});\n\n\t  \t\t\t\n\n\t  \t\t}\n\t  \t\telse {\n\n\t  \t\t\tthis.isInventoryCategorySubmitted = true;\t\n\t          \tthis.isCategoryError = true;\n\t          \tthis.alertTicketMessage = res.errorMessage;\n\t  \t\t}\n\n  \t\t});\n\n  \t}\n\n  \t\n\n  }\n\n  ngOnInit() {\n\n  \tthis.lookupService.getLookupValueByLookupTypeId(20).subscribe((res:any) => {\n\n  \t\tthis.isInventoryCategoryLoaded = true;\n\n  \t\tthis.inventoryCategoryData = res.filter(item => {\n        \treturn item.isActive;\n        });\n\n  \t});\n\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9pbnZlbnRvcnkvY29tcG9uZW50cy9pbnZlbnRvcnktdXBkYXRlL2ludmVudG9yeS11cGRhdGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inventory-update',\n  templateUrl: './inventory-update.component.html',\n  styleUrls: ['./inventory-update.component.scss']\n})\nexport class InventoryUpdateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9pbnZlbnRvcnkvY29tcG9uZW50cy9pbnZlbnRvcnktdmlldy9pbnZlbnRvcnktdmlldy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\n\nimport { LookupService } from '../../../../api/services/lookup.service';\nimport { SharedService } from '../../../../shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-inventory-view',\n  templateUrl: './inventory-view.component.html',\n  styleUrls: ['./inventory-view.component.scss']\n})\nexport class InventoryViewComponent implements OnInit {\n\n  inventoryCategoryData:any;\n  inventoryCategory:string = \"\";\n\n  isInventoryCategoryLoaded:boolean = false;\n\n  isInventoryCategorySelected:boolean = false;\n  isInventoryLoaded:boolean = false;\n\n  inventoryData:string = \"\";\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = false;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 20;\n  totalFilterItems:any;\n\n  inventory:any;\n  inventoryListData:any;\n  inventoryCategoryName:string = \"\";\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n  \tprivate lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) { }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'desc' : 'asc';\n    }\n    else return '';\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n\n  getInventoryCategoryName(id){\n  \t\n  \t_.each(this.inventoryCategoryData, (item, index) => {\n\n  \t\tif(item.lookupValueId == parseInt(id)){\n  \t\t\tthis.inventoryCategoryName = item.lookupValueName;\n  \t\t}\n\n      this.isInventoryCategorySelected = true;\n\n  \t});\n\n  }\n\n  ngOnInit() {\n\n  \tthis.inventory = {};\n\n    if(this.route.params['value'].id != undefined) {\n      \n      this.isInventoryCategorySelected = true;\n      this.inventoryCategory = this.route.params['value'].id;\n\n\n    }\n\n  \tthis.lookupService.getLookupValueByLookupTypeId(20).subscribe((res:any) => {\n\n  \t\tthis.isInventoryCategoryLoaded = true;\n\n  \t\tthis.inventoryCategoryData = res.filter(item => {\n        \treturn item.isActive;\n       });\n\n      if(this.route.params['value'].id != undefined) {\n\n         _.each(this.inventoryCategoryData, (item, index) => {\n\n          if(item.lookupValueId == this.route.params['value'].id){\n            this.inventoryCategoryName = item.lookupValueName;\n          }\n\n\n        });\n\n      }\n\n\n  \t});\n\n  \tthis.inventoryListData = [ {\n  \t\t\"inventoryId\" : 1,\n  \t\t\"InventoryName\" : \"Water\",\n  \t\t\"InventoryQuantity\" : \"10\",\n  \t\t\"InventoryUnit\" : \"Litres\",\n  \t\t\"InventoryReOrderLevel\" : \"\"\n\n  \t},\n  \t{\n  \t\t\"inventoryId\" : 2,\n  \t\t\"InventoryName\" : \"Diesel\",\n  \t\t\"InventoryQuantity\" : \"10\",\n  \t\t\"InventoryUnit\" : \"Litres\",\n  \t\t\"InventoryReOrderLevel\" : \"300\"\n\n  \t}\n  \t ];\n\n\n  this.totalItems = this.inventoryListData.length;\n\n\tif(this.totalItems>this.itemLimit){\n\t\tthis.ItemEndIndex = this.itemLimit;\n\t}\n\n\telse {\n\t\tthis.ItemEndIndex = this.totalItems;\n\t}\n\n\tthis.isInventoryLoaded = true;\n\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from '../.././auth.guard';\n\nimport { InventoryComponent } from './inventory.component';\nimport { InventorySetupComponent } from './components/inventory-setup/inventory-setup.component';\nimport { InventoryCreateComponent } from './components/inventory-create/inventory-create.component';\nimport { InventoryUpdateComponent } from './components/inventory-update/inventory-update.component';\nimport { InventoryViewComponent } from './components/inventory-view/inventory-view.component';\nimport { InventoryReportsComponent } from './components/inventory-reports/inventory-reports.component';\n\nconst routes: Routes = [\n\n\t{ path: '', redirectTo: 'settings', pathMatch: 'full'},\n\t{ path: 'settings', component: InventorySetupComponent},\n\t{ path: 'create-inventory', component: InventoryCreateComponent},\n\t{ path: 'edit-inventory/:id', component: InventoryCreateComponent},\n\t{ path: 'view', component: InventoryViewComponent},\n\t{ path: 'view/:id', component: InventoryViewComponent},\n\t{ path: 'reports', component: InventoryReportsComponent},\n\t{ path: '**', redirectTo: 'settings', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InventoryRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9pbnZlbnRvcnkvaW52ZW50b3J5LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.scss']\n})\nexport class InventoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { InventoryRoutingModule } from './inventory-routing.module';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { InventoryComponent } from './inventory.component';\nimport { InventorySetupComponent } from './components/inventory-setup/inventory-setup.component';\nimport { InventoryCreateComponent } from './components/inventory-create/inventory-create.component';\nimport { InventoryUpdateComponent } from './components/inventory-update/inventory-update.component';\nimport { InventoryViewComponent } from './components/inventory-view/inventory-view.component';\nimport { InventoryReportsComponent } from './components/inventory-reports/inventory-reports.component';\n\n@NgModule({\n  declarations: [\n\tInventoryComponent,\n\tInventorySetupComponent,\n\tInventoryCreateComponent,\n\tInventoryUpdateComponent,\n\tInventoryViewComponent,\n\tInventoryReportsComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule.forRoot(),\n    InventoryRoutingModule\n  ],\n  bootstrap: [ InventoryComponent ]\n})\nexport class InventoryModule { }\n"],"sourceRoot":"webpack:///"}