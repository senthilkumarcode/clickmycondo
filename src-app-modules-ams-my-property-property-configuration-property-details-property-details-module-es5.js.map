{"version":3,"sources":["webpack:///src/app/modules/ams/my-property/property-configuration/property-details/property-details.component.html","webpack:///src/app/modules/ams/my-property/property-configuration/property-details/property-tower-info/property-tower-info.component.html","webpack:///src/app/modules/ams/my-property/property-configuration/property-details/property-tower-unit-info/property-tower-unit-info.component.html","webpack:///src/app/modules/ams/my-property/property-configuration/property-details/property-details-routing.module.ts","webpack:///src/app/modules/ams/my-property/property-configuration/property-details/property-details.component.scss","webpack:///src/app/modules/ams/my-property/property-configuration/property-details/property-details.component.ts","webpack:///src/app/modules/ams/my-property/property-configuration/property-details/property-details.module.ts","webpack:///src/app/modules/ams/my-property/property-configuration/property-details/property-tower-info/property-tower-info.component.scss","webpack:///src/app/modules/ams/my-property/property-configuration/property-details/property-tower-info/property-tower-info.component.ts","webpack:///src/app/modules/ams/my-property/property-configuration/property-details/property-tower-unit-info/property-tower-unit-info.component.scss","webpack:///src/app/modules/ams/my-property/property-configuration/property-details/property-tower-unit-info/property-tower-unit-info.component.ts"],"names":["routes","path","component","PropertyDetailsRoutingModule","imports","forChild","exports","PropertyDetailsComponent","apartmentService","sessionService","isDataLoaded","params","apartmentId","getApartmentBlockByApartmentId","subscribe","res","propertyTowerData","selector","template","PropertyDetailsModule","declarations","bootstrap","PropertyTowerInfoComponent","sharedService","isEdit","isTowersLoaded","isUnitSold","isUnitVacant","ItemStartIndex","itemLimit","event","ItemEndIndex","form","details","parseInt","tower","apartmentBlockId","apartmentBlockNumber","description","isActive","insertedBy","insertedOn","userId","Date","toISOString","totalItems","blockConstructedArea","unitsUnderConstruction","blockCommonArea","apartmentBlock","updateApartmentBlock","message","setAlertMessage","getApartmentBlockUnitByBlockId","towerUnitData","length","PropertyTowerUnitInfoComponent","lookupService","status","name","data","unitTypeData","item","lookupValueName","undefined","unitTypeId","lookupValueId","unit","apartmentBlockUnitId","apartmentBlockUnitNumber","builtupArea","carpetArea","intercom","cars","isAvailableForRent","rentAmount","advanceAmount","isPetsAllowed","isFurnished","isVacant","isSold","constructionInProgress","unitConstructionArea","apartmentBlockUnit","updateApartmentBlockUnit","unitParams","LookupTypeId","getLookupValueByLookupTypeId","setTimeout","getUnitType","unitType","error"],"mappings":"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","file":"src-app-modules-ams-my-property-property-configuration-property-details-property-details-module-es5.js","sourcesContent":["export default \"<div class=\\\"property-details-wrapper profile-section\\\">\\n\\t\\n\\t<h4 class=\\\"main-title-mini float-left\\\">Towers</h4>\\n\\n\\t<div class=\\\"card clear\\\" id=\\\"propertyDetailsAccordion\\\">\\n\\n\\t\\t<div class=\\\"card-body p-0\\\">\\n\\t\\t\\t\\n\\t\\t\\t<app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"isDataLoaded\\\">\\n\\n\\t\\t\\t\\t<ul class=\\\"list-group tabs clear\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<ng-container  *ngFor=\\\"let tower of propertyTowerData; let i = index; first as isFirst\\\">\\n\\t\\t\\t\\t\\t\\t<li class=\\\"list-group-item collapsed\\\" data-toggle=\\\"collapse\\\" attr.data-target=\\\"#towerDetail{{i}}\\\" aria-expanded=\\\"true\\\" attr.aria-controls=\\\"towerDetail{{i}}\\\">\\n\\t\\t\\t\\t\\t\\t\\t<span>{{tower.apartmentBlockNumber}}</span>\\n\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t<div id=\\\"towerDetail{{i}}\\\" class=\\\"collapse\\\" [ngClass]=\\\"isFirst ? 'show': ''\\\" attr.aria-labelledby=\\\"towerDetail{{i}}\\\" data-parent=\\\"#propertyDetailsAccordion\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"details\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<app-property-tower-info [tower]=\\\"tower\\\"></app-property-tower-info>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t</ul>\\n\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n</div>\";","export default \"<div class=\\\"property-tower-wrapper\\\">\\n\\n\\t<div class=\\\"icon-wrapper float-right mb-2\\\" *ngIf=\\\"!isEdit\\\">\\n\\t\\t<i-feather class=\\\"icon edit\\\" name=\\\"edit\\\" (click)=\\\"showEditForm()\\\"></i-feather>\\n\\t</div>\\n\\n\\t<div class=\\\"icon-wrapper float-right mb-2\\\" *ngIf=\\\"isEdit\\\">\\n\\t\\t<i-feather class=\\\"icon back\\\" name=\\\"chevron-left\\\" (click)=\\\"showEditForm()\\\"></i-feather>\\n\\t</div>\\n\\n\\t<ng-container *ngIf=\\\"!isEdit\\\">\\n\\n\\t\\t<form #propertyDetailsForm = \\\"ngForm\\\" name=\\\"propertyDetailsForm\\\" novalidate>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"data-wrapper\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                <label>Construction Area SQ.M</label>\\n\\t\\t\\t                <p>{{tower.blockConstructedArea | notAvail}}</p>\\n\\t\\t\\t    \\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                <label>Common Area SQ.M</label>\\n\\t\\t\\t                <p>{{tower.blockCommonArea | notAvail}}</p>\\n\\t\\t\\t    \\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                <label>Units under construction</label>\\n\\t\\t\\t                <p>{{tower.unitsUnderConstruction | notAvail}}</p>\\n\\t\\t\\t    \\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                <label>Total Units</label>\\n\\t\\t\\t                <p>{{totalItems}}</p>\\n\\t\\t\\t    \\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t</div>\\n\\n\\t\\t</form>\\n\\n\\t</ng-container>\\n\\n\\t<ng-container *ngIf=\\\"isEdit\\\">\\n\\t\\t\\n\\t\\t<form #propertyDetailsForm = \\\"ngForm\\\" name=\\\"propertyDetailsForm\\\" novalidate (ngSubmit)=\\\"submitPropertyDetailsForm(propertyDetailsForm)\\\">\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t                    <label>Construction Area SQ.M</label>\\n\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"blockConstructedArea\\\" [(ngModel)]=\\\"tower.unitsUnderConstruction\\\">\\n\\t        \\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t                    <label>Common Area SQ.M</label>\\n\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"blockCommonArea\\\" [(ngModel)]=\\\"tower.blockCommonArea\\\">\\n\\t        \\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t                    <label>Units under construction SQ.M</label>\\n\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"constructionInProgress\\\" [(ngModel)]=\\\"tower.blockConstructedArea\\\">\\n\\t        \\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue\\\" [disabled]=\\\"propertyDetailsForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t</form>\\n\\n\\t</ng-container>\\n\\n\\t<ng-container *ngIf=\\\"!isEdit && isTowersLoaded\\\">\\n\\t\\t\\n\\t\\t<div id=\\\"propertyUnitDetailsAccordion\\\">\\n\\t\\t\\t\\n\\t\\t\\t<h4 class=\\\"main-title-mini float-left mb-3\\\">Units</h4>\\n\\n\\t\\t\\t<ul class=\\\"list-group tabs clear border\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t<ng-container  *ngFor=\\\"let unit of towerUnitData | slice:ItemStartIndex:ItemEndIndex; let i = index; first as isFirst\\\">\\n\\t\\t\\t\\t\\t<li class=\\\"list-group-item collapsed\\\" data-toggle=\\\"collapse\\\" attr.data-target=\\\"#unitDetail{{i}}\\\" aria-expanded=\\\"true\\\" attr.aria-controls=\\\"unitDetail{{i}}\\\">\\n\\t\\t\\t\\t\\t\\t<span>{{unit.apartmentBlockUnitNumber}}</span>\\n\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t<div id=\\\"unitDetail{{i}}\\\" class=\\\"collapse\\\" [ngClass]=\\\"isFirst ? 'show': ''\\\" attr.aria-labelledby=\\\"unitDetail{{i}}\\\" data-parent=\\\"#propertyUnitDetailsAccordion\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"details\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t<app-property-tower-unit-info [unit]=\\\"unit\\\" [tower]=\\\"tower\\\"></app-property-tower-unit-info>\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t</ul>\\n\\n\\t\\t\\t<app-pagination \\n\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"  \\n\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\t\\n\\t\\t\\t</app-pagination>\\n\\n\\t\\t</div>\\n\\n\\t</ng-container>\\n\\n</div>\";","export default \"<div class=\\\"property-tower-unit-wrapper\\\">\\n\\t\\n\\t<div class=\\\"icon-wrapper float-right mb-2\\\" *ngIf=\\\"!isEdit\\\">\\n\\t\\t<i-feather class=\\\"icon edit\\\" name=\\\"edit\\\" (click)=\\\"showEditForm()\\\"></i-feather>\\n\\t</div>\\n\\n\\t<div class=\\\"icon-wrapper float-right mb-2\\\" *ngIf=\\\"isEdit\\\">\\n\\t\\t<i-feather class=\\\"icon back\\\" name=\\\"chevron-left\\\" (click)=\\\"showEditForm()\\\"></i-feather>\\n\\t</div>\\n\\n\\t<ng-container *ngIf=\\\"!isEdit\\\">\\n\\n\\t\\t<form #propertyUnitDetailsForm = \\\"ngForm\\\" name=\\\"propertyUnitDetailsForm\\\" novalidate>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"data-wrapper\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t                    <label>Bulit Area SQ.M</label>\\n\\t\\t                    <p>{{unit.builtupArea | notAvail}}</p>\\n\\t\\t        \\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t                    <label>Unit Construction Area SQ.M</label>\\n\\t\\t                    <p>{{unit.unitConstructionArea | notAvail}}</p>\\n\\t\\t        \\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t                    <label>Unit Type</label>\\n\\t\\t                    <p>{{unit.unitType | notAvail}}</p>\\n\\t\\t        \\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                <label>Units Sold</label>\\n\\t\\t\\t                <p>{{getBooleanStatus(unit.isSold)}}</p>\\n\\t\\t\\t    \\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                <label>Units Vacant</label>\\n\\t\\t\\t                <p>{{getBooleanStatus(unit.isVacant)}}</p>\\n\\t\\t\\t    \\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                <label>Pets Allowed</label>\\n\\t\\t\\t                <p>{{getBooleanStatus(unit.isPetsAllowed)}}</p>\\n\\t\\t\\t    \\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                <label>Furnished</label>\\n\\t\\t\\t                <p>{{getBooleanStatus(unit.isFurnished)}}</p>\\n\\t\\t\\t    \\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t</div>\\n\\n\\t\\t</form>\\n\\n\\t</ng-container>\\n\\n\\t<ng-container *ngIf=\\\"isEdit\\\">\\n\\t\\t\\n\\t\\t<form #propertyUnitDetailsForm = \\\"ngForm\\\" name=\\\"propertyUnitDetailsForm\\\" novalidate (ngSubmit)=\\\"submitPropertyUnitDetailsForm(propertyDetailsForm)\\\">\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t                    <label>Bulit Area SQ.M</label>\\n\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"builtupArea\\\" [(ngModel)]=\\\"unit.builtupArea\\\">\\n\\t        \\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t                    <label>Unit Construction Area SQ.M</label>\\n\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter value\\\" name=\\\"unitConstructionArea\\\" [(ngModel)]=\\\"unit.unitConstructionArea\\\">\\n\\t        \\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t                    <label>Unit Type*</label>\\n\\t                    <select \\n\\t\\t\\t\\t\\t        name=\\\"unitType\\\" \\n\\t\\t\\t\\t\\t        id=\\\"unitType\\\" \\n\\t\\t\\t\\t\\t        class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t        [(ngModel)]=\\\"unitTypeId\\\" required>\\n\\t\\t\\t\\t\\t        <option value=\\\"\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t        <option *ngFor=\\\"let item of unitTypeData\\\" [value]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t    </select>\\n\\t        \\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-sm-3\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"input-box d-inline-block oh\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-check recur-check float-left\\\">\\n\\t\\t\\t\\t\\t\\t\\t    <input type=\\\"checkbox\\\" #unitSold class=\\\"form-check-input\\\" id=\\\"unitSlod\\\" name=\\\"unitSold\\\" [(ngModel)]=\\\"unit.isSold\\\">\\n\\t\\t\\t\\t\\t\\t\\t    <label class=\\\"form-check-label tiny\\\" for=\\\"unitSlod\\\">Is Sold</label>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-sm-3\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"input-box d-inline-block oh\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-check recur-check float-left\\\">\\n\\t\\t\\t\\t\\t\\t\\t    <input type=\\\"checkbox\\\" #unitVacant class=\\\"form-check-input\\\" id=\\\"unitVacant\\\" name=\\\"unitVacant\\\" [(ngModel)]=\\\"unit.isVacant\\\">\\n\\t\\t\\t\\t\\t\\t\\t    <label class=\\\"form-check-label tiny\\\" for=\\\"unitVacant\\\">Is Vacant</label>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-sm-3\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"input-box d-inline-block oh\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-check recur-check float-left\\\">\\n\\t\\t\\t\\t\\t\\t\\t    <input type=\\\"checkbox\\\" #petsAllowed class=\\\"form-check-input\\\" id=\\\"petsAllowed\\\" name=\\\"petsAllowed\\\" [(ngModel)]=\\\"unit.isPetsAllowed\\\">\\n\\t\\t\\t\\t\\t\\t\\t    <label class=\\\"form-check-label tiny\\\" for=\\\"petsAllowed\\\">Is Pets Allowed</label>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-sm-3\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"input-box d-inline-block oh\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-check recur-check float-left\\\">\\n\\t\\t\\t\\t\\t\\t\\t    <input type=\\\"checkbox\\\" #furnished class=\\\"form-check-input\\\" id=\\\"petsAllowed\\\" name=\\\"furnished\\\" [(ngModel)]=\\\"unit.isFurnished\\\">\\n\\t\\t\\t\\t\\t\\t\\t    <label class=\\\"form-check-label tiny\\\" for=\\\"furnished\\\">Is Furnished</label>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue\\\" [disabled]=\\\"propertyUnitDetailsForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t</form>\\n\\n\\t</ng-container>\\n\\n</div>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PropertyDetailsComponent } from './property-details.component';\n\nexport const routes: Routes = [\n  { path: '', component: PropertyDetailsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PropertyDetailsRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL215LXByb3BlcnR5L3Byb3BlcnR5LWNvbmZpZ3VyYXRpb24vcHJvcGVydHktZGV0YWlscy9wcm9wZXJ0eS1kZXRhaWxzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { SessionService } from 'src/app/core/session/session.service';\n\n@Component({\n  selector: 'app-property-details',\n  templateUrl: './property-details.component.html',\n  styleUrls: ['./property-details.component.scss']\n})\nexport class PropertyDetailsComponent implements OnInit {\n  \n  isDataLoaded:boolean = false;\n  propertyTowerData:any;\n\n  unitsLength:any;\n\n  constructor(\n  \tprivate apartmentService:ApartmentService,\n    private sessionService:SessionService\n  ) { }\n\n  ngOnInit() {\n\n    let params = {\n      apartmentId: this.sessionService.apartmentId\n    }\n\n  \tthis.apartmentService.getApartmentBlockByApartmentId(params).subscribe((res:any) => {\n\n  \t\tthis.propertyTowerData = res;\n  \t\tthis.isDataLoaded = true;\n\n  \t});\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RouterModule } from '@angular/router';\nimport { routes } from './property-details-routing.module';\nimport { PropertyDetailsRoutingModule } from './property-details-routing.module';\n\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CondoCardModule } from 'src/app/modules/ui/card/card.module';\nimport { SelectModule } from 'src/app/modules/ui/select/select.module';\n\nimport { PropertyDetailsComponent } from './property-details.component';\nimport { PropertyTowerInfoComponent } from './property-tower-info/property-tower-info.component';\nimport { PropertyTowerUnitInfoComponent } from './property-tower-unit-info/property-tower-unit-info.component';\n\n@NgModule({\n  declarations: [ PropertyDetailsComponent, PropertyTowerInfoComponent, PropertyTowerUnitInfoComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    CondoCardModule,\n    SelectModule,\n    RouterModule.forChild(routes),\n    PropertyDetailsRoutingModule\n  ],\n  bootstrap: [\n    PropertyDetailsComponent\n  ]\n})\nexport class PropertyDetailsModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL215LXByb3BlcnR5L3Byb3BlcnR5LWNvbmZpZ3VyYXRpb24vcHJvcGVydHktZGV0YWlscy9wcm9wZXJ0eS10b3dlci1pbmZvL3Byb3BlcnR5LXRvd2VyLWluZm8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, Input } from '@angular/core';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\n\n@Component({\n  selector: 'app-property-tower-info',\n  templateUrl: './property-tower-info.component.html',\n  styleUrls: ['./property-tower-info.component.scss']\n})\nexport class PropertyTowerInfoComponent implements OnInit {\n  \n  @Input() tower:any;\n\n  isEdit:boolean = false;\n  isTowersLoaded:boolean = false;\n\n  isUnitSold:boolean = false;\n  isUnitVacant:boolean = false;\n\n  towerUnitData:any;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n\n  constructor(\n  \tprivate apartmentService:ApartmentService,\n    private sharedService:SharedService,\n    private sessionService:SessionService\n  ) { }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  showEditForm(){\n  \tthis.isEdit = !this.isEdit;\n  }\n\n\n  submitPropertyDetailsForm(form){\n\n\n    let details = {\n\n      \"apartmentBlockId\": parseInt(this.tower.apartmentBlockId),\n      \"apartmentBlockNumber\": this.tower.apartmentBlockNumber,\n      \"description\": this.tower.description,\n      \"apartmentId\": this.sessionService.apartmentId,\n      \"isActive\": this.tower.isActive,\n      \"insertedBy\": parseInt(this.tower.insertedBy),\n      \"insertedOn\": this.tower.insertedOn,\n      \"updatedBy\": parseInt(this.sessionService.userId),\n      \"updatedOn\": new Date().toISOString(),\n      \"totalNounits\": parseInt(this.totalItems),\n      \"blockConstructedArea\": parseInt(this.tower.blockConstructedArea),\n      \"unitsUnderConstruction\": parseInt(this.tower.unitsUnderConstruction),\n      \"blockCommonArea\": parseInt(this.tower.blockCommonArea)\n\n    }\n\n    let params = {\n      apartmentBlock: details\n    }\n\n    this.apartmentService.updateApartmentBlock(params).subscribe((res:any) => {\n\n      if(res.message) {\n        this.isEdit = false;\n        this.sharedService.setAlertMessage(this.tower.apartmentBlockNumber + \" updated successfully\");\n      }\n      else {\n        this.isEdit = false;\n      }\n\n    });\n\n\n  }\n\n  ngOnInit() {\n\n    let params = {\n      apartmentBlockId: parseInt(this.tower.apartmentBlockId)\n    }\n\n  \tthis.apartmentService.getApartmentBlockUnitByBlockId(params).subscribe((res:any) => {\n  \t\t\n      this.towerUnitData = res;\n      this.totalItems = this.towerUnitData.length;\n\n      if(this.totalItems>this.itemLimit){\n        this.ItemEndIndex = this.itemLimit;\n      }\n      else {\n        this.ItemEndIndex = this.totalItems;\n      }\n\n      this.isTowersLoaded = true;\n\n  \t});\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL215LXByb3BlcnR5L3Byb3BlcnR5LWNvbmZpZ3VyYXRpb24vcHJvcGVydHktZGV0YWlscy9wcm9wZXJ0eS10b3dlci11bml0LWluZm8vcHJvcGVydHktdG93ZXItdW5pdC1pbmZvLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, Input } from '@angular/core';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SessionService } from 'src/app/core/session/session.service';\n\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-property-tower-unit-info',\n  templateUrl: './property-tower-unit-info.component.html',\n  styleUrls: ['./property-tower-unit-info.component.scss']\n})\nexport class PropertyTowerUnitInfoComponent implements OnInit {\n  \n  @Input() tower:any;\n  @Input() unit:any;\n\n  unitTypeData:any;\n  unitTypeId:any;\n\n  isEdit:boolean = false;\n\n  constructor(\n  \tprivate apartmentService:ApartmentService,\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private sessionService:SessionService\n  ) { }\n\n  showEditForm(){\n  \tthis.isEdit = !this.isEdit;\n  }\n\n  getBooleanStatus(status){\n    return status ? 'Yes' : 'No'\n  }\n\n  getUnitType(name){\n\n    var data = _.filter( this.unitTypeData, function( item ) {\n      if(item.lookupValueName === name)\n        return item;\n    } );\n\n    if(data === undefined || data.length == 0){\n      this.unitTypeId = \"\";\n    }\n    else {\n      this.unitTypeId = data[0].lookupValueId;\n    }\n\n    \n  }\n\n\n  submitPropertyUnitDetailsForm(form){\n\n  \tlet details = {\n\n\t  \"apartmentBlockUnitId\": parseInt(this.unit.apartmentBlockUnitId),\n\t  \"apartmentBlockUnitNumber\": this.unit.apartmentBlockUnitNumber,\n\t  \"apartmentBlockId\": parseInt(this.tower.apartmentBlockId),\n\t  \"unitTypeId\": parseInt(this.unitTypeId),\n\t  \"builtupArea\": parseInt(this.unit.builtupArea),\n\t  \"carpetArea\": parseInt(this.unit.carpetArea),\n\t  \"intercom\": this.unit.intercom,\n\t  \"cars\": parseInt(this.unit.cars),\n\t  \"isAvailableForRent\": this.unit.isAvailableForRent,\n\t  \"availableDate\": \"2020-02-08T06:52:31.682Z\",\n\t  \"rentAmount\": parseInt(this.unit.rentAmount),\n\t  \"advanceAmount\": parseInt(this.unit.advanceAmount),\n\t  \"isPetsAllowed\": this.unit.isPetsAllowed,\n\t  \"isFurnished\": this.unit.isFurnished,\n\t  \"isVacant\": this.unit.isVacant,\n\t  \"isSold\":  this.unit.isSold,\n\t  \"constructionInProgress\": this.unit.constructionInProgress || false,\n\t  \"unitConstructionArea\": this.unit.unitConstructionArea,\n\t  \"propertyManagerId\": 1,\n\t  \"isActive\": this.unit.isActive,\n      \"insertedBy\": parseInt(this.unit.insertedBy),\n      \"insertedOn\": this.unit.insertedOn,\n      \"updatedBy\": parseInt(this.sessionService.userId),\n      \"updatedOn\": new Date().toISOString(),\n  }\n  \n  let params = {\n    apartmentBlockUnit: details\n  }\n\n\tthis.apartmentService.updateApartmentBlockUnit(params).subscribe((res:any) => {\n\n      if(res.message) {\n        this.isEdit = false;\n        this.sharedService.setAlertMessage(this.tower.apartmentBlockNumber+\" \"+this.unit.apartmentBlockUnitNumber + \" updated successfully\");\n      }\n      else {\n        this.isEdit = false;\n      }\n\n    });\n\n  }\n\n  ngOnInit() {\n\n    this.unitTypeId = \"\";\n    \n    let unitParams = {\n      LookupTypeId: 1\n    }\n\n  \t//get unit type\n    this.lookupService.getLookupValueByLookupTypeId(unitParams).subscribe((res:any) => {\n      this.unitTypeData = res;\n\n      setTimeout(() => {\n      \tthis.getUnitType(this.unit.unitType);\n      }, 1000);\n\n    },\n    error => {\n      \n    });\n\n  }\n\n}\n"]}