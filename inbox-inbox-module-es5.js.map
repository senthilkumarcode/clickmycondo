{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/chips.js","webpack:///src/app/ams/inbox/compose-message/compose-message.component.html","webpack:///src/app/ams/inbox/inbox-list/inbox-list.component.html","webpack:///src/app/ams/inbox/sent-list/sent-list.component.html","webpack:///src/app/ams/inbox/trash/trash.component.html","webpack:///src/app/ams/inbox/compose-message/compose-message.component.scss","webpack:///src/app/ams/inbox/compose-message/compose-message.component.ts","webpack:///src/app/ams/inbox/inbox-list/inbox-list.component.scss","webpack:///src/app/ams/inbox/inbox-list/inbox-list.component.ts","webpack:///src/app/ams/inbox/inbox-routing.module.ts","webpack:///src/app/ams/inbox/inbox.module.ts","webpack:///src/app/ams/inbox/sent-list/sent-list.component.scss","webpack:///src/app/ams/inbox/sent-list/sent-list.component.ts","webpack:///src/app/ams/inbox/trash/trash.component.scss","webpack:///src/app/ams/inbox/trash/trash.component.ts"],"names":["_c0","MatChipEvent","MatChipSelectionChange","source","selected","isUserInput","MatChipBase","_elementRef","_MatChipMixinBase","MatChipAvatar","ɵfac","MatChipAvatar_Factory","t","ɵdir","type","selectors","hostAttrs","args","selector","host","MatChipTrailingIcon","MatChipTrailingIcon_Factory","MatChip","_ngZone","platform","globalRippleOptions","animationMode","_changeDetectorRef","tabIndex","_document","_hasFocus","chipListSelectable","_chipListMultiple","_selected","_selectable","_removable","_onFocus","_onBlur","selectionChange","destroyed","removed","_addHostClassName","_chipRippleTarget","document","createElement","classList","add","nativeElement","appendChild","_chipRipple","setupTriggerEvents","rippleConfig","_animationsDisabled","parseInt","basicChipAttrName","element","hasAttribute","tagName","toLowerCase","emit","chip","_removeTriggerEvents","_dispatchSelectionChange","_markForCheck","focus","next","removable","event","disabled","preventDefault","stopPropagation","keyCode","remove","selectable","toggleSelected","onStable","asObservable","pipe","subscribe","run","markForCheck","disableRipple","value","coercedValue","_value","undefined","textContent","toString","MatChip_Factory","contentQueries","MatChip_ContentQueries","rf","ctx","dirIndex","MatChipRemove","_t","avatar","first","trailingIcon","removeIcon","hostVars","hostBindings","MatChip_HostBindings","MatChip_click_HostBindingHandler","$event","_handleClick","MatChip_keydown_HostBindingHandler","_handleKeydown","MatChip_focus_HostBindingHandler","MatChip_blur_HostBindingHandler","_blur","ariaSelected","inputs","color","outputs","exportAs","features","ctorParameters","decorators","String","propDecorators","_parentChip","elementRef","nodeName","setAttribute","parentChip","MatChipRemove_Factory","MatChipRemove_HostBindings","MatChipRemove_click_HostBindingHandler","MatChipsDefaultOptions","MAT_CHIPS_DEFAULT_OPTIONS","MatChipListBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_MatChipListMixinBase","nextUniqueId","MatChipListChange","MatChipList","_dir","controlType","_lastDestroyedChipIndex","_destroyed","_uid","_tabIndex","_userTabIndex","_onTouched","_onChange","_multiple","_compareWith","o1","o2","_required","_disabled","ariaOrientation","change","valueChange","valueAccessor","_keyManager","chips","withWrap","withVerticalOrientation","withHorizontalOrientation","dir","tabOut","_allowFocusEscape","changes","Promise","resolve","then","_syncChipsState","_resetChips","_initializeSelection","_updateTabIndex","_updateFocusForDestroyedChips","stateChanges","_selectionModel","multiple","updateErrorState","complete","_dropSubscriptions","inputElement","_chipInput","ids","_ariaDescribedby","join","_setSelectionByValue","fn","isDisabled","_originatesFromChip","options","focused","length","setFirstItemActive","_focusInput","target","_isInputEmpty","setLastItemActive","contains","onKeydown","newChipIndex","Math","min","setActiveItem","index","input","_clearSelection","forEach","deselect","Array","isArray","currentValue","_selectValue","_sortValues","correspondingChip","find","selectViaInteraction","select","skip","clear","fallbackValue","valueToEmit","map","_hasFocusedChip","setTimeout","_markAsTouched","_listenToChipsFocus","_listenToChipsSelection","_listenToChipsRemoved","_chipFocusSubscription","unsubscribe","_chipBlurSubscription","_chipSelectionSubscription","_chipRemoveSubscription","chipSelectionChanges","isSelected","_propagateChanges","chipFocusChanges","chipIndex","toArray","indexOf","_isValidIndex","updateActiveItem","chipBlurChanges","chipRemoveChanges","currentElement","parentElement","some","empty","writeValue","id","placeholder","_placeholder","MatChipList_Factory","ɵcmp","MatChipList_ContentQueries","MatChipList_HostBindings","MatChipList_focus_HostBindingHandler","MatChipList_blur_HostBindingHandler","MatChipList_keydown_HostBindingHandler","_keydown","role","required","errorState","compareWith","errorStateMatcher","provide","useExisting","ngContentSelectors","decls","vars","consts","template","MatChipList_Template","styles","encapsulation","changeDetection","descendants","providers","None","OnPush","MatChipInputEvent","nextUniqueId$1","MatChipInput","_defaultOptions","_addOnBlur","separatorKeyCodes","chipEnd","_inputElement","_chipList","_emitChipEnd","addOnBlur","_isSeparatorKey","separators","has","registerInput","MatChipInput_Factory","MatChipInput_HostBindings","MatChipInput_keydown_HostBindingHandler","MatChipInput_blur_HostBindingHandler","MatChipInput_focus_HostBindingHandler","_focus","MatChipInput_input_HostBindingHandler","_onInput","invalid","chipList","CHIP_DECLARATIONS","ɵ0","MatChipsModule","ɵmod","ɵinj","factory","MatChipsModule_Factory","useValue","ngJitMode","declarations","exports","ComposeMessageComponent","broadcastService","sharedService","cookieService","userService","staffService","apartmentService","injector","visible","separatorKeysCodes","receiptCtrl","selectedReceipt","dropdownSettings","blockdropdownSettings","roleTypedropdownSettings","broadCastdropdownSettings","groupCategorySetting","roleDropdownSettings","staffCategoryMap","Map","staffSubCategoryMap","rawSelectedUsers","roleTypeArr","roleCategory","staffCategory","staffSubCategory","broadCastCategory","apartmentBlock","condition","broadModeArr","broadCastGroupCategory","allBroadcastMessageGroup","isFlashNotice","editorPlacehorder","filterOptions","modalService","get","message","IsBroadcast","loginedUser","apartmentID","getAllUsers","getAllCategory","getAllRoleTypesList","getAllApartmentBlockList","getAllGroupCategory","getInterestGroupUsers","getAllInterestGroupUser","singleSelection","enableSearchFilter","labelKey","primaryKey","enableFilterSelectAll","autoPosition","maxHeight","groupBy","selectedTab","item","selectedItems","selectInterestGroup","users","updateUsers","ApartmentId","getUsersByKeyword","res","userFullName","userName","roleName","apartmentBlockNumber","apartmentBlockUnitNumber","allnterestGroupUsers","error","console","log","queryParamBase","apartmentId","getUsersByApartmentId","allUsers","categoryUsers","interestGroupUsers","filter","obj","broadCastGroupCategoryId","tempAssignUsers","tempUsers","isFound","userId","roleID","roleId","apartmentBlockID","apartmentBlockId","apartmentBlockUnitID","unitId","push","AssignInterestUsers","bool","broadCastMessageCategoryId","data","allcategory","ckeditor","getApartmentBlockByApartmentId","dropdownList","broadCastModeArr","getBroadCastMessageCategories","allBroadCastCategory","isActive","getAllRoleTypes","params","getApartmentRolesByRoleTypeId","condtionRequired","conditinArr","getUserIds$","includes","JSON","parse","stringify","getAllBroadCastGroupCategory","getBroadCastGroupCategoryUser","isStaff","name","getStaffCategoryByRole","temp","category","set","addStaffCategory","items","getstaffCategories","removeStaffCategory","removeSubStaffCategory","getSubStaffCategoryByCategory","addSubStaffCategory","getStaffSubCategories","removeAllStaffCategories","removeAllSubStaffCategories","list","removeSubStaffCategories","roleIds","prototype","call","blockIds","conditionIds","staffcategoryIds","staffSubCategoryIds","getUsersByFilter","form","broadCastGroupCategoryIDs","broadcastModeIds","broadcastMessage","subject","Date","toISOString","broadCastGroupcategoryId","broadcastMessageCategoryId","userIds","showErrorModal","addBroadCastMessage","setAlertMessage","ClearFormData","roleTypeIds","params2","upsertBroadCastFilters","filterId","removeRole","option","key","receiptList","setValue","user","splice","Object","assign","firstName","InboxListComponent","messageDate","routes","path","redirectTo","pathMatch","component","InboxRouting","imports","forChild","InboxModule","SentListComponent","TrashComponent"],"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","file":"inbox-inbox-module-es5.js","sourcesContent":["import { SPACE, BACKSPACE, DELETE, HOME, END, TAB, hasModifierKey, ENTER } from '@angular/cdk/keycodes';\nimport { Directive, EventEmitter, ElementRef, NgZone, Optional, Inject, ChangeDetectorRef, Attribute, ContentChild, forwardRef, Input, Output, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Self, ContentChildren, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, RippleRenderer, MAT_RIPPLE_GLOBAL_OPTIONS, mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { DOCUMENT } from '@angular/common';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, merge } from 'rxjs';\nimport { take, takeUntil, startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Represents an event fired on an individual `mat-chip`.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/forms';\nimport * as ɵngcc4 from '@angular/material/core';\n\nconst _c0 = [\"*\"];\nfunction MatChipEvent() { }\nif (false) {\n    /**\n     * The chip the event was fired on.\n     * @type {?}\n     */\n    MatChipEvent.prototype.chip;\n}\n/**\n * Event object emitted by MatChip when selected or deselected.\n */\nclass MatChipSelectionChange {\n    /**\n     * @param {?} source\n     * @param {?} selected\n     * @param {?=} isUserInput\n     */\n    constructor(source, selected, isUserInput = false) {\n        this.source = source;\n        this.selected = selected;\n        this.isUserInput = isUserInput;\n    }\n}\nif (false) {\n    /**\n     * Reference to the chip that emitted the event.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.source;\n    /**\n     * Whether the chip that emitted the event is selected.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.selected;\n    /**\n     * Whether the selection change was a result of a user interaction.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.isUserInput;\n}\n// Boilerplate for applying mixins to MatChip.\n/**\n * \\@docs-private\n */\nclass MatChipBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatChipBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatChipMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatChipBase)), 'primary'), -1);\n/**\n * Dummy directive to add CSS class to chip avatar.\n * \\@docs-private\n */\nclass MatChipAvatar {\n}\nMatChipAvatar.ɵfac = function MatChipAvatar_Factory(t) { return new (t || MatChipAvatar)(); };\nMatChipAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipAvatar, selectors: [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], hostAttrs: [1, \"mat-chip-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipAvatar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-avatar, [matChipAvatar]',\n                host: { 'class': 'mat-chip-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Dummy directive to add CSS class to chip trailing icon.\n * \\@docs-private\n */\nclass MatChipTrailingIcon {\n}\nMatChipTrailingIcon.ɵfac = function MatChipTrailingIcon_Factory(t) { return new (t || MatChipTrailingIcon)(); };\nMatChipTrailingIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipTrailingIcon, selectors: [[\"mat-chip-trailing-icon\"], [\"\", \"matChipTrailingIcon\", \"\"]], hostAttrs: [1, \"mat-chip-trailing-icon\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipTrailingIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n                host: { 'class': 'mat-chip-trailing-icon' }\n            }]\n    }], null, null); })();\n/**\n * Material design styled Chip component. Used inside the MatChipList component.\n */\nclass MatChip extends _MatChipMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} platform\n     * @param {?} globalRippleOptions\n     * @param {?=} animationMode\n     * @param {?=} _changeDetectorRef\n     * @param {?=} tabIndex\n     * @param {?=} _document\n     */\n    constructor(_elementRef, _ngZone, platform, globalRippleOptions, \n    // @breaking-change 8.0.0 `animationMode` parameter to become required.\n    animationMode, _changeDetectorRef, tabIndex, \n    // @breaking-change 11.0.0 `_document` parameter to become required.\n    _document) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Whether the chip has focus.\n         */\n        this._hasFocus = false;\n        /**\n         * Whether the chip list is selectable\n         */\n        this.chipListSelectable = true;\n        /**\n         * Whether the chip list is in multi-selection mode.\n         */\n        this._chipListMultiple = false;\n        this._selected = false;\n        this._selectable = true;\n        this._removable = true;\n        /**\n         * Emits when the chip is focused.\n         */\n        this._onFocus = new Subject();\n        /**\n         * Emits when the chip is blured.\n         */\n        this._onBlur = new Subject();\n        /**\n         * Emitted when the chip is selected or deselected.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Emitted when the chip is destroyed.\n         */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emitted when a chip is to be removed.\n         */\n        this.removed = new EventEmitter();\n        this._addHostClassName();\n        // Dynamically create the ripple target, append it within the chip, and use it as the\n        // chip's ripple target. Adding the class '.mat-chip-ripple' ensures that it will have\n        // the proper styles.\n        this._chipRippleTarget = (_document || document).createElement('div');\n        this._chipRippleTarget.classList.add('mat-chip-ripple');\n        this._elementRef.nativeElement.appendChild(this._chipRippleTarget);\n        this._chipRipple = new RippleRenderer(this, _ngZone, this._chipRippleTarget, platform);\n        this._chipRipple.setupTriggerEvents(_elementRef);\n        this.rippleConfig = globalRippleOptions || {};\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n        this.tabIndex = tabIndex != null ? (parseInt(tabIndex) || -1) : -1;\n    }\n    /**\n     * Whether ripples are disabled on interaction\n     * \\@docs-private\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || !!this.rippleConfig.disabled;\n    }\n    /**\n     * Whether the chip is selected.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        /** @type {?} */\n        const coercedValue = coerceBooleanProperty(value);\n        if (coercedValue !== this._selected) {\n            this._selected = coercedValue;\n            this._dispatchSelectionChange();\n        }\n    }\n    /**\n     * The value of the chip. Defaults to the content inside `<mat-chip>` tags.\n     * @return {?}\n     */\n    get value() {\n        return this._value !== undefined\n            ? this._value\n            : this._elementRef.nativeElement.textContent;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) { this._value = value; }\n    /**\n     * Whether or not the chip is selectable. When a chip is not selectable,\n     * changes to its selected state are always ignored. By default a chip is\n     * selectable, and it becomes non-selectable if its parent chip list is\n     * not selectable.\n     * @return {?}\n     */\n    get selectable() { return this._selectable && this.chipListSelectable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n    }\n    /**\n     * Determines whether or not the chip displays the remove styling and emits (removed) events.\n     * @return {?}\n     */\n    get removable() { return this._removable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set removable(value) {\n        this._removable = coerceBooleanProperty(value);\n    }\n    /**\n     * The ARIA selected applied to the chip.\n     * @return {?}\n     */\n    get ariaSelected() {\n        // Remove the `aria-selected` when the chip is deselected in single-selection mode, because\n        // it adds noise to NVDA users where \"not selected\" will be read out for each chip.\n        return this.selectable && (this._chipListMultiple || this.selected) ?\n            this.selected.toString() : null;\n    }\n    /**\n     * @return {?}\n     */\n    _addHostClassName() {\n        /** @type {?} */\n        const basicChipAttrName = 'mat-basic-chip';\n        /** @type {?} */\n        const element = (/** @type {?} */ (this._elementRef.nativeElement));\n        if (element.hasAttribute(basicChipAttrName) ||\n            element.tagName.toLowerCase() === basicChipAttrName) {\n            element.classList.add(basicChipAttrName);\n            return;\n        }\n        else {\n            element.classList.add('mat-standard-chip');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroyed.emit({ chip: this });\n        this._chipRipple._removeTriggerEvents();\n    }\n    /**\n     * Selects the chip.\n     * @return {?}\n     */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /**\n     * Deselects the chip.\n     * @return {?}\n     */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /**\n     * Select this chip and emit selected event\n     * @return {?}\n     */\n    selectViaInteraction() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange(true);\n            this._markForCheck();\n        }\n    }\n    /**\n     * Toggles the current selected state of this chip.\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    toggleSelected(isUserInput = false) {\n        this._selected = !this.selected;\n        this._dispatchSelectionChange(isUserInput);\n        this._markForCheck();\n        return this.selected;\n    }\n    /**\n     * Allows for programmatic focusing of the chip.\n     * @return {?}\n     */\n    focus() {\n        if (!this._hasFocus) {\n            this._elementRef.nativeElement.focus();\n            this._onFocus.next({ chip: this });\n        }\n        this._hasFocus = true;\n    }\n    /**\n     * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or\n     * BACKSPACE keys are pressed.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     * @return {?}\n     */\n    remove() {\n        if (this.removable) {\n            this.removed.emit({ chip: this });\n        }\n    }\n    /**\n     * Handles click events on the chip.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        if (this.disabled) {\n            event.preventDefault();\n        }\n        else {\n            event.stopPropagation();\n        }\n    }\n    /**\n     * Handle custom key presses.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (this.disabled) {\n            return;\n        }\n        switch (event.keyCode) {\n            case DELETE:\n            case BACKSPACE:\n                // If we are removable, remove the focused chip\n                this.remove();\n                // Always prevent so page navigation does not occur\n                event.preventDefault();\n                break;\n            case SPACE:\n                // If we are selectable, toggle the focused chip\n                if (this.selectable) {\n                    this.toggleSelected(true);\n                }\n                // Always prevent space from scrolling the page since the list has focus\n                event.preventDefault();\n                break;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _blur() {\n        // When animations are enabled, Angular may end up removing the chip from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n        // that moves focus not the next item. To work around the issue, we defer marking the chip\n        // as not focused until the next time the zone stabilizes.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this._hasFocus = false;\n                this._onBlur.next({ chip: this });\n            }));\n        }));\n    }\n    /**\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _dispatchSelectionChange(isUserInput = false) {\n        this.selectionChange.emit({\n            source: this,\n            isUserInput,\n            selected: this._selected\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _markForCheck() {\n        // @breaking-change 9.0.0 Remove this method once the _changeDetectorRef is a required param.\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n}\nMatChip.ɵfac = function MatChip_Factory(t) { return new (t || MatChip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nMatChip.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChip, selectors: [[\"mat-basic-chip\"], [\"\", \"mat-basic-chip\", \"\"], [\"mat-chip\"], [\"\", \"mat-chip\", \"\"]], contentQueries: function MatChip_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChipAvatar, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChipTrailingIcon, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChipRemove, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trailingIcon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.removeIcon = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-chip\", \"mat-focus-indicator\"], hostVars: 14, hostBindings: function MatChip_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChip_click_HostBindingHandler($event) { return ctx._handleClick($event); })(\"keydown\", function MatChip_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatChip_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChip_blur_HostBindingHandler() { return ctx._blur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx.tabIndex)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-selected\", ctx.ariaSelected);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-selected\", ctx.selected)(\"mat-chip-with-avatar\", ctx.avatar)(\"mat-chip-with-trailing-icon\", ctx.trailingIcon || ctx.removeIcon)(\"mat-chip-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationsDisabled);\n    } }, inputs: { color: \"color\", disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", selected: \"selected\", value: \"value\", selectable: \"selectable\", removable: \"removable\" }, outputs: { selectionChange: \"selectionChange\", destroyed: \"destroyed\", removed: \"removed\" }, exportAs: [\"matChip\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatChip.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatChip.propDecorators = {\n    avatar: [{ type: ContentChild, args: [MatChipAvatar,] }],\n    trailingIcon: [{ type: ContentChild, args: [MatChipTrailingIcon,] }],\n    removeIcon: [{ type: ContentChild, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatChipRemove)),] }],\n    selected: [{ type: Input }],\n    value: [{ type: Input }],\n    selectable: [{ type: Input }],\n    removable: [{ type: Input }],\n    selectionChange: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    removed: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChip, [{\n        type: Directive,\n        args: [{\n                selector: `mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]`,\n                inputs: ['color', 'disabled', 'disableRipple', 'tabIndex'],\n                exportAs: 'matChip',\n                host: {\n                    'class': 'mat-chip mat-focus-indicator',\n                    '[attr.tabindex]': 'disabled ? null : tabIndex',\n                    'role': 'option',\n                    '[class.mat-chip-selected]': 'selected',\n                    '[class.mat-chip-with-avatar]': 'avatar',\n                    '[class.mat-chip-with-trailing-icon]': 'trailingIcon || removeIcon',\n                    '[class.mat-chip-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationsDisabled',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-selected]': 'ariaSelected',\n                    '(click)': '_handleClick($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], removed: [{\n            type: Output\n        }], selected: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], removable: [{\n            type: Input\n        }], avatar: [{\n            type: ContentChild,\n            args: [MatChipAvatar]\n        }], trailingIcon: [{\n            type: ContentChild,\n            args: [MatChipTrailingIcon]\n        }], removeIcon: [{\n            type: ContentChild,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => MatChipRemove))]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatChip.ngAcceptInputType_selected;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_selectable;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_removable;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_disableRipple;\n    /**\n     * Reference to the RippleRenderer for the chip.\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._chipRipple;\n    /**\n     * Reference to the element that acts as the chip's ripple target. This element is\n     * dynamically added as a child node of the chip. The chip itself cannot be used as the\n     * ripple target because it must be the host of the focus indicator.\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._chipRippleTarget;\n    /**\n     * Ripple configuration for ripples that are launched on pointer down. The ripple config\n     * is set to the global ripple options since we don't have any configurable options for\n     * the chip ripples.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChip.prototype.rippleConfig;\n    /**\n     * Whether the chip has focus.\n     * @type {?}\n     */\n    MatChip.prototype._hasFocus;\n    /**\n     * Whether animations for the chip are enabled.\n     * @type {?}\n     */\n    MatChip.prototype._animationsDisabled;\n    /**\n     * Whether the chip list is selectable\n     * @type {?}\n     */\n    MatChip.prototype.chipListSelectable;\n    /**\n     * Whether the chip list is in multi-selection mode.\n     * @type {?}\n     */\n    MatChip.prototype._chipListMultiple;\n    /**\n     * The chip avatar\n     * @type {?}\n     */\n    MatChip.prototype.avatar;\n    /**\n     * The chip's trailing icon.\n     * @type {?}\n     */\n    MatChip.prototype.trailingIcon;\n    /**\n     * The chip's remove toggler.\n     * @type {?}\n     */\n    MatChip.prototype.removeIcon;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._selected;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._selectable;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._removable;\n    /**\n     * Emits when the chip is focused.\n     * @type {?}\n     */\n    MatChip.prototype._onFocus;\n    /**\n     * Emits when the chip is blured.\n     * @type {?}\n     */\n    MatChip.prototype._onBlur;\n    /**\n     * Emitted when the chip is selected or deselected.\n     * @type {?}\n     */\n    MatChip.prototype.selectionChange;\n    /**\n     * Emitted when the chip is destroyed.\n     * @type {?}\n     */\n    MatChip.prototype.destroyed;\n    /**\n     * Emitted when a chip is to be removed.\n     * @type {?}\n     */\n    MatChip.prototype.removed;\n    /** @type {?} */\n    MatChip.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._changeDetectorRef;\n}\n/**\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n *     `<mat-chip>\n *       <mat-icon matChipRemove>cancel</mat-icon>\n *     </mat-chip>`\n *\n * You *may* use a custom icon, but you may need to override the `mat-chip-remove` positioning\n * styles to properly center the icon within the chip.\n */\nclass MatChipRemove {\n    /**\n     * @param {?} _parentChip\n     * @param {?=} elementRef\n     */\n    constructor(_parentChip, \n    // @breaking-change 11.0.0 `elementRef` parameter to be made required.\n    elementRef) {\n        this._parentChip = _parentChip;\n        // @breaking-change 11.0.0 Remove null check for `elementRef`.\n        if (elementRef && elementRef.nativeElement.nodeName === 'BUTTON') {\n            elementRef.nativeElement.setAttribute('type', 'button');\n        }\n    }\n    /**\n     * Calls the parent chip's public `remove()` method if applicable.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        /** @type {?} */\n        const parentChip = this._parentChip;\n        if (parentChip.removable && !parentChip.disabled) {\n            parentChip.remove();\n        }\n        // We need to stop event propagation because otherwise the event will bubble up to the\n        // form field and cause the `onContainerClick` method to be invoked. This method would then\n        // reset the focused chip that has been focused after chip removal. Usually the parent\n        // the parent click listener of the `MatChip` would prevent propagation, but it can happen\n        // that the chip is being removed before the event bubbles up.\n        event.stopPropagation();\n    }\n}\nMatChipRemove.ɵfac = function MatChipRemove_Factory(t) { return new (t || MatChipRemove)(ɵngcc0.ɵɵdirectiveInject(MatChip), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatChipRemove.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipRemove, selectors: [[\"\", \"matChipRemove\", \"\"]], hostAttrs: [1, \"mat-chip-remove\", \"mat-chip-trailing-icon\"], hostBindings: function MatChipRemove_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChipRemove_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } } });\n/** @nocollapse */\nMatChipRemove.ctorParameters = () => [\n    { type: MatChip },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipRemove, [{\n        type: Directive,\n        args: [{\n                selector: '[matChipRemove]',\n                host: {\n                    'class': 'mat-chip-remove mat-chip-trailing-icon',\n                    '(click)': '_handleClick($event)'\n                }\n            }]\n    }], function () { return [{ type: MatChip }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipRemove.prototype._parentChip;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-default-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default options, for the chips module, that can be overridden.\n * @record\n */\nfunction MatChipsDefaultOptions() { }\nif (false) {\n    /**\n     * The list of key codes that will trigger a chipEnd event.\n     * @type {?}\n     */\n    MatChipsDefaultOptions.prototype.separatorKeyCodes;\n}\n/**\n * Injection token to be used to override the default options for the chips module.\n * @type {?}\n */\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatChipList.\n/**\n * \\@docs-private\n */\nclass MatChipListBase {\n    /**\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatChipListBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatChipListBase.prototype._parentForm;\n    /** @type {?} */\n    MatChipListBase.prototype._parentFormGroup;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipListBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatChipListMixinBase = mixinErrorState(MatChipListBase);\n// Increasing integer for generating unique ids for chip-list components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Change event object that is emitted when the chip list value has changed.\n */\nclass MatChipListChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Chip list that emitted the event.\n     * @type {?}\n     */\n    MatChipListChange.prototype.source;\n    /**\n     * Value of the chip list when the event was emitted.\n     * @type {?}\n     */\n    MatChipListChange.prototype.value;\n}\n/**\n * A material design chips component (named ChipList for its similarity to the List component).\n */\nclass MatChipList extends _MatChipListMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _changeDetectorRef, _dir, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, ngControl) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this.ngControl = ngControl;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.controlType = 'mat-chip-list';\n        /**\n         * When a chip is destroyed, we store the index of the destroyed chip until the chips\n         * query list notifies about the update. This is necessary because we cannot determine an\n         * appropriate chip that should receive focus until the array of chips updated completely.\n         */\n        this._lastDestroyedChipIndex = null;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Uid of the chip list\n         */\n        this._uid = `mat-chip-list-${nextUniqueId++}`;\n        /**\n         * Tab index for the chip list.\n         */\n        this._tabIndex = 0;\n        /**\n         * User defined tab index.\n         * When it is not null, use user defined tab index. Otherwise use _tabIndex\n         */\n        this._userTabIndex = null;\n        /**\n         * Function when touched\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Function when changed\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._multiple = false;\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        this._required = false;\n        this._disabled = false;\n        /**\n         * Orientation of the chip list.\n         */\n        this.ariaOrientation = 'horizontal';\n        this._selectable = true;\n        /**\n         * Event emitted when the selected chip list value has been changed by the user.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n    /**\n     * The array of selected chips inside chip list.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The ARIA role applied to the chip list.\n     * @return {?}\n     */\n    get role() { return this.empty ? null : 'listbox'; }\n    /**\n     * Whether the user should be allowed to select multiple chips.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        this.writeValue(value);\n        this._value = value;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get id() {\n        return this._chipInput ? this._chipInput.id : this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get placeholder() {\n        return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether any chips or the matChipInput inside of this chip-list has focus.\n     * @return {?}\n     */\n    get focused() {\n        return (this._chipInput && this._chipInput.focused) || this._hasFocusedChip();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get empty() {\n        return (!this._chipInput || this._chipInput.empty) && this.chips.length === 0;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() { return !this.empty || this.focused; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() { return this.ngControl ? !!this.ngControl.disabled : this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * Whether or not this chip list is selectable. When a chip list is not selectable,\n     * the selected states for all the chips inside the chip list are always ignored.\n     * @return {?}\n     */\n    get selectable() { return this._selectable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n        if (this.chips) {\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => chip.chipListSelectable = this._selectable));\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tabIndex(value) {\n        this._userTabIndex = value;\n        this._tabIndex = value;\n    }\n    /**\n     * Combined stream of all of the child chips' selection change events.\n     * @return {?}\n     */\n    get chipSelectionChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.selectionChange)));\n    }\n    /**\n     * Combined stream of all of the child chips' focus change events.\n     * @return {?}\n     */\n    get chipFocusChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._onFocus)));\n    }\n    /**\n     * Combined stream of all of the child chips' blur change events.\n     * @return {?}\n     */\n    get chipBlurChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._onBlur)));\n    }\n    /**\n     * Combined stream of all of the child chips' remove change events.\n     * @return {?}\n     */\n    get chipRemoveChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.destroyed)));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this.chips)\n            .withWrap()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr');\n        if (this._dir) {\n            this._dir.change\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @param {?} dir\n             * @return {?}\n             */\n            dir => this._keyManager.withHorizontalOrientation(dir)));\n        }\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._allowFocusEscape();\n        }));\n        // When the list changes, re-subscribe\n        this.chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.disabled) {\n                // Since this happens after the content has been\n                // checked, we need to defer it to the next tick.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._syncChipsState();\n                }));\n            }\n            this._resetChips();\n            // Reset chips selected/deselected status\n            this._initializeSelection();\n            // Check to see if we need to update our tab index\n            this._updateTabIndex();\n            // Check to see if we have a destroyed chip and need to refocus\n            this._updateFocusForDestroyedChips();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.stateChanges.complete();\n        this._dropSubscriptions();\n    }\n    /**\n     * Associates an HTML input element with this chip list.\n     * @param {?} inputElement\n     * @return {?}\n     */\n    registerInput(inputElement) {\n        this._chipInput = inputElement;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) { this._ariaDescribedby = ids.join(' '); }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.chips) {\n            this._setSelectionByValue(value, false);\n        }\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    onContainerClick(event) {\n        if (!this._originatesFromChip(event)) {\n            this.focus();\n        }\n    }\n    /**\n     * Focuses the first non-disabled chip in this chip list, or the associated input when there\n     * are no eligible chips.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        if (this.disabled) {\n            return;\n        }\n        // TODO: ARIA says this should focus the first `selected` chip if any are selected.\n        // Focus on first element if there's no chipInput inside chip-list\n        if (this._chipInput && this._chipInput.focused) {\n            // do nothing\n        }\n        else if (this.chips.length > 0) {\n            this._keyManager.setFirstItemActive();\n            this.stateChanges.next();\n        }\n        else {\n            this._focusInput(options);\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Attempt to focus an input if we have one.\n     * @param {?=} options\n     * @return {?}\n     */\n    _focusInput(options) {\n        if (this._chipInput) {\n            this._chipInput.focus(options);\n        }\n    }\n    /**\n     * Pass events to the keyboard manager. Available here for tests.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        /** @type {?} */\n        const target = (/** @type {?} */ (event.target));\n        // If they are on an empty input and hit backspace, focus the last chip\n        if (event.keyCode === BACKSPACE && this._isInputEmpty(target)) {\n            this._keyManager.setLastItemActive();\n            event.preventDefault();\n        }\n        else if (target && target.classList.contains('mat-chip')) {\n            if (event.keyCode === HOME) {\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n            }\n            else if (event.keyCode === END) {\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                this._keyManager.onKeydown(event);\n            }\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Check the tab index as you should not be allowed to focus an empty list.\n     * @protected\n     * @return {?}\n     */\n    _updateTabIndex() {\n        // If we have 0 chips, we should not allow keyboard focus\n        this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);\n    }\n    /**\n     * If the amount of chips changed, we need to update the\n     * key manager state and focus the next closest chip.\n     * @protected\n     * @return {?}\n     */\n    _updateFocusForDestroyedChips() {\n        // Move focus to the closest chip. If no other chips remain, focus the chip-list itself.\n        if (this._lastDestroyedChipIndex != null) {\n            if (this.chips.length) {\n                /** @type {?} */\n                const newChipIndex = Math.min(this._lastDestroyedChipIndex, this.chips.length - 1);\n                this._keyManager.setActiveItem(newChipIndex);\n            }\n            else {\n                this.focus();\n            }\n        }\n        this._lastDestroyedChipIndex = null;\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @private\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of chips.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.chips.length;\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _isInputEmpty(element) {\n        if (element && element.nodeName.toLowerCase() === 'input') {\n            /** @type {?} */\n            let input = (/** @type {?} */ (element));\n            return !input.value;\n        }\n        return false;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _setSelectionByValue(value, isUserInput = true) {\n        this._clearSelection();\n        this.chips.forEach((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.deselect()));\n        if (Array.isArray(value)) {\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            currentValue => this._selectValue(currentValue, isUserInput)));\n            this._sortValues();\n        }\n        else {\n            /** @type {?} */\n            const correspondingChip = this._selectValue(value, isUserInput);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what chip the user interacted with last.\n            if (correspondingChip) {\n                if (isUserInput) {\n                    this._keyManager.setActiveItem(correspondingChip);\n                }\n            }\n        }\n    }\n    /**\n     * Finds and selects the chip based on its value.\n     * @private\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?} Chip that has the corresponding value.\n     */\n    _selectValue(value, isUserInput = true) {\n        /** @type {?} */\n        const correspondingChip = this.chips.find((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => {\n            return chip.value != null && this._compareWith(chip.value, value);\n        }));\n        if (correspondingChip) {\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n            this._selectionModel.select(correspondingChip);\n        }\n        return correspondingChip;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            if (this.ngControl || this._value) {\n                this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\n                this.stateChanges.next();\n            }\n        }));\n    }\n    /**\n     * Deselects every chip in the list.\n     * @private\n     * @param {?=} skip Chip that should not be deselected.\n     * @return {?}\n     */\n    _clearSelection(skip) {\n        this._selectionModel.clear();\n        this.chips.forEach((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => {\n            if (chip !== skip) {\n                chip.deselect();\n            }\n        }));\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this._multiple) {\n            this._selectionModel.clear();\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => {\n                if (chip.selected) {\n                    this._selectionModel.select(chip);\n                }\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => chip.value));\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new MatChipListChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * When blurred, mark the field as touched when focus moved outside the chip list.\n     * @return {?}\n     */\n    _blur() {\n        if (!this._hasFocusedChip()) {\n            this._keyManager.setActiveItem(-1);\n        }\n        if (!this.disabled) {\n            if (this._chipInput) {\n                // If there's a chip input, we should check whether the focus moved to chip input.\n                // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n                // to chip input, do nothing.\n                // Timeout is needed to wait for the focus() event trigger on chip input.\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (!this.focused) {\n                        this._markAsTouched();\n                    }\n                }));\n            }\n            else {\n                // If there's no chip input, then mark the field as touched.\n                this._markAsTouched();\n            }\n        }\n    }\n    /**\n     * Mark the field as touched\n     * @return {?}\n     */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Removes the `tabindex` from the chip list and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the list from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     * @return {?}\n     */\n    _allowFocusEscape() {\n        if (this._tabIndex !== -1) {\n            this._tabIndex = -1;\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this._tabIndex = this._userTabIndex || 0;\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _resetChips() {\n        this._dropSubscriptions();\n        this._listenToChipsFocus();\n        this._listenToChipsSelection();\n        this._listenToChipsRemoved();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _dropSubscriptions() {\n        if (this._chipFocusSubscription) {\n            this._chipFocusSubscription.unsubscribe();\n            this._chipFocusSubscription = null;\n        }\n        if (this._chipBlurSubscription) {\n            this._chipBlurSubscription.unsubscribe();\n            this._chipBlurSubscription = null;\n        }\n        if (this._chipSelectionSubscription) {\n            this._chipSelectionSubscription.unsubscribe();\n            this._chipSelectionSubscription = null;\n        }\n        if (this._chipRemoveSubscription) {\n            this._chipRemoveSubscription.unsubscribe();\n            this._chipRemoveSubscription = null;\n        }\n    }\n    /**\n     * Listens to user-generated selection events on each chip.\n     * @private\n     * @return {?}\n     */\n    _listenToChipsSelection() {\n        this._chipSelectionSubscription = this.chipSelectionChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.source.selected\n                ? this._selectionModel.select(event.source)\n                : this._selectionModel.deselect(event.source);\n            // For single selection chip list, make sure the deselected value is unselected.\n            if (!this.multiple) {\n                this.chips.forEach((/**\n                 * @param {?} chip\n                 * @return {?}\n                 */\n                chip => {\n                    if (!this._selectionModel.isSelected(chip) && chip.selected) {\n                        chip.deselect();\n                    }\n                }));\n            }\n            if (event.isUserInput) {\n                this._propagateChanges();\n            }\n        }));\n    }\n    /**\n     * Listens to user-generated selection events on each chip.\n     * @private\n     * @return {?}\n     */\n    _listenToChipsFocus() {\n        this._chipFocusSubscription = this.chipFocusChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            /** @type {?} */\n            let chipIndex = this.chips.toArray().indexOf(event.chip);\n            if (this._isValidIndex(chipIndex)) {\n                this._keyManager.updateActiveItem(chipIndex);\n            }\n            this.stateChanges.next();\n        }));\n        this._chipBlurSubscription = this.chipBlurChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._blur();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _listenToChipsRemoved() {\n        this._chipRemoveSubscription = this.chipRemoveChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            /** @type {?} */\n            const chip = event.chip;\n            /** @type {?} */\n            const chipIndex = this.chips.toArray().indexOf(event.chip);\n            // In case the chip that will be removed is currently focused, we temporarily store\n            // the index in order to be able to determine an appropriate sibling chip that will\n            // receive focus.\n            if (this._isValidIndex(chipIndex) && chip._hasFocus) {\n                this._lastDestroyedChipIndex = chipIndex;\n            }\n        }));\n    }\n    /**\n     * Checks whether an event comes from inside a chip element.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _originatesFromChip(event) {\n        /** @type {?} */\n        let currentElement = (/** @type {?} */ (event.target));\n        while (currentElement && currentElement !== this._elementRef.nativeElement) {\n            if (currentElement.classList.contains('mat-chip')) {\n                return true;\n            }\n            currentElement = currentElement.parentElement;\n        }\n        return false;\n    }\n    /**\n     * Checks whether any of the chips is focused.\n     * @private\n     * @return {?}\n     */\n    _hasFocusedChip() {\n        return this.chips.some((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._hasFocus));\n    }\n    /**\n     * Syncs the list's state with the individual chips.\n     * @private\n     * @return {?}\n     */\n    _syncChipsState() {\n        if (this.chips) {\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => {\n                chip.disabled = this._disabled;\n                chip._chipListMultiple = this.multiple;\n            }));\n        }\n    }\n}\nMatChipList.ɵfac = function MatChipList_Factory(t) { return new (t || MatChipList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgControl, 10)); };\nMatChipList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatChipList, selectors: [[\"mat-chip-list\"]], contentQueries: function MatChipList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChip, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chips = _t);\n    } }, hostAttrs: [1, \"mat-chip-list\"], hostVars: 15, hostBindings: function MatChipList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatChipList_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChipList_blur_HostBindingHandler() { return ctx._blur(); })(\"keydown\", function MatChipList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx._uid);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx._tabIndex)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-required\", ctx.role ? ctx.required : null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-multiselectable\", ctx.multiple)(\"role\", ctx.role)(\"aria-orientation\", ctx.ariaOrientation);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-list-disabled\", ctx.disabled)(\"mat-chip-list-invalid\", ctx.errorState)(\"mat-chip-list-required\", ctx.required);\n    } }, inputs: { ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"], multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", required: \"required\", placeholder: \"placeholder\", disabled: \"disabled\", selectable: \"selectable\", tabIndex: \"tabIndex\", errorStateMatcher: \"errorStateMatcher\" }, outputs: { change: \"change\", valueChange: \"valueChange\" }, exportAs: [\"matChipList\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatChipList }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-chip-list-wrapper\"]], template: function MatChipList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatChipList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] }\n];\nMatChipList.propDecorators = {\n    errorStateMatcher: [{ type: Input }],\n    multiple: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    required: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    disabled: [{ type: Input }],\n    ariaOrientation: [{ type: Input, args: ['aria-orientation',] }],\n    selectable: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    change: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    chips: [{ type: ContentChildren, args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-chip-list',\n                template: `<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>`,\n                exportAs: 'matChipList',\n                host: {\n                    '[attr.tabindex]': 'disabled ? null : _tabIndex',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-required]': 'role ? required : null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.role]': 'role',\n                    '[class.mat-chip-list-disabled]': 'disabled',\n                    '[class.mat-chip-list-invalid]': 'errorState',\n                    '[class.mat-chip-list-required]': 'required',\n                    '[attr.aria-orientation]': 'ariaOrientation',\n                    'class': 'mat-chip-list',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()',\n                    '(keydown)': '_keydown($event)',\n                    '[id]': '_uid'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatChipList }],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.ErrorStateMatcher }, { type: ɵngcc3.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }]; }, { ariaOrientation: [{\n            type: Input,\n            args: ['aria-orientation']\n        }], change: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], tabIndex: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }], chips: [{\n            type: ContentChildren,\n            args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_required;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_selectable;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.controlType;\n    /**\n     * When a chip is destroyed, we store the index of the destroyed chip until the chips\n     * query list notifies about the update. This is necessary because we cannot determine an\n     * appropriate chip that should receive focus until the array of chips updated completely.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._lastDestroyedChipIndex;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._destroyed;\n    /**\n     * Subscription to focus changes in the chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipFocusSubscription;\n    /**\n     * Subscription to blur changes in the chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipBlurSubscription;\n    /**\n     * Subscription to selection changes in chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipSelectionSubscription;\n    /**\n     * Subscription to remove changes in chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipRemoveSubscription;\n    /**\n     * The chip input to add more chips\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._chipInput;\n    /**\n     * Uid of the chip list\n     * @type {?}\n     */\n    MatChipList.prototype._uid;\n    /**\n     * The aria-describedby attribute on the chip list for improved a11y.\n     * @type {?}\n     */\n    MatChipList.prototype._ariaDescribedby;\n    /**\n     * Tab index for the chip list.\n     * @type {?}\n     */\n    MatChipList.prototype._tabIndex;\n    /**\n     * User defined tab index.\n     * When it is not null, use user defined tab index. Otherwise use _tabIndex\n     * @type {?}\n     */\n    MatChipList.prototype._userTabIndex;\n    /**\n     * The FocusKeyManager which handles focus.\n     * @type {?}\n     */\n    MatChipList.prototype._keyManager;\n    /**\n     * Function when touched\n     * @type {?}\n     */\n    MatChipList.prototype._onTouched;\n    /**\n     * Function when changed\n     * @type {?}\n     */\n    MatChipList.prototype._onChange;\n    /** @type {?} */\n    MatChipList.prototype._selectionModel;\n    /**\n     * An object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatChipList.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._compareWith;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._required;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._placeholder;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._disabled;\n    /**\n     * Orientation of the chip list.\n     * @type {?}\n     */\n    MatChipList.prototype.ariaOrientation;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._selectable;\n    /**\n     * Event emitted when the selected chip list value has been changed by the user.\n     * @type {?}\n     */\n    MatChipList.prototype.change;\n    /**\n     * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.valueChange;\n    /**\n     * The chip components contained within this chip list.\n     * @type {?}\n     */\n    MatChipList.prototype.chips;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._dir;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.ngControl;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Represents an input event on a `matChipInput`.\n * @record\n */\nfunction MatChipInputEvent() { }\nif (false) {\n    /**\n     * The native `<input>` element that the event is being fired for.\n     * @type {?}\n     */\n    MatChipInputEvent.prototype.input;\n    /**\n     * The value of the input.\n     * @type {?}\n     */\n    MatChipInputEvent.prototype.value;\n}\n// Increasing integer for generating unique ids.\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of an `<mat-chip-list>`.\n */\nclass MatChipInput {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultOptions\n     */\n    constructor(_elementRef, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._defaultOptions = _defaultOptions;\n        /**\n         * Whether the control is focused.\n         */\n        this.focused = false;\n        this._addOnBlur = false;\n        /**\n         * The list of key codes that will trigger a chipEnd event.\n         *\n         * Defaults to `[ENTER]`.\n         */\n        this.separatorKeyCodes = this._defaultOptions.separatorKeyCodes;\n        /**\n         * Emitted when a chip is to be added.\n         */\n        this.chipEnd = new EventEmitter();\n        /**\n         * The input's placeholder text.\n         */\n        this.placeholder = '';\n        /**\n         * Unique id for the input.\n         */\n        this.id = `mat-chip-list-input-${nextUniqueId$1++}`;\n        this._disabled = false;\n        this._inputElement = (/** @type {?} */ (this._elementRef.nativeElement));\n    }\n    /**\n     * Register input for chip list\n     * @param {?} value\n     * @return {?}\n     */\n    set chipList(value) {\n        if (value) {\n            this._chipList = value;\n            this._chipList.registerInput(this);\n        }\n    }\n    /**\n     * Whether or not the chipEnd event will be emitted when the input is blurred.\n     * @return {?}\n     */\n    get addOnBlur() { return this._addOnBlur; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set addOnBlur(value) { this._addOnBlur = coerceBooleanProperty(value); }\n    /**\n     * Whether the input is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || (this._chipList && this._chipList.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Whether the input is empty.\n     * @return {?}\n     */\n    get empty() { return !this._inputElement.value; }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Utility method to make host definition/tests more clear.\n     * @param {?=} event\n     * @return {?}\n     */\n    _keydown(event) {\n        // Allow the user's focus to escape when they're tabbing forward. Note that we don't\n        // want to do this when going backwards, because focus should go back to the first chip.\n        if (event && event.keyCode === TAB && !hasModifierKey(event, 'shiftKey')) {\n            this._chipList._allowFocusEscape();\n        }\n        this._emitChipEnd(event);\n    }\n    /**\n     * Checks to see if the blur should emit the (chipEnd) event.\n     * @return {?}\n     */\n    _blur() {\n        if (this.addOnBlur) {\n            this._emitChipEnd();\n        }\n        this.focused = false;\n        // Blur the chip list if it is not focused\n        if (!this._chipList.focused) {\n            this._chipList._blur();\n        }\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    _focus() {\n        this.focused = true;\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Checks to see if the (chipEnd) event needs to be emitted.\n     * @param {?=} event\n     * @return {?}\n     */\n    _emitChipEnd(event) {\n        if (!this._inputElement.value && !!event) {\n            this._chipList._keydown(event);\n        }\n        if (!event || this._isSeparatorKey(event)) {\n            this.chipEnd.emit({ input: this._inputElement, value: this._inputElement.value });\n            if (event) {\n                event.preventDefault();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onInput() {\n        // Let chip list know whenever the value changes.\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Focuses the input.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._inputElement.focus(options);\n    }\n    /**\n     * Checks whether a keycode is one of the configured separators.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _isSeparatorKey(event) {\n        if (hasModifierKey(event)) {\n            return false;\n        }\n        /** @type {?} */\n        const separators = this.separatorKeyCodes;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        return Array.isArray(separators) ? separators.indexOf(keyCode) > -1 : separators.has(keyCode);\n    }\n}\nMatChipInput.ɵfac = function MatChipInput_Factory(t) { return new (t || MatChipInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_CHIPS_DEFAULT_OPTIONS)); };\nMatChipInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipInput, selectors: [[\"input\", \"matChipInputFor\", \"\"]], hostAttrs: [1, \"mat-chip-input\", \"mat-input-element\"], hostVars: 5, hostBindings: function MatChipInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatChipInput_keydown_HostBindingHandler($event) { return ctx._keydown($event); })(\"blur\", function MatChipInput_blur_HostBindingHandler() { return ctx._blur(); })(\"focus\", function MatChipInput_focus_HostBindingHandler() { return ctx._focus(); })(\"input\", function MatChipInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null)(\"placeholder\", ctx.placeholder || null)(\"aria-invalid\", ctx._chipList && ctx._chipList.ngControl ? ctx._chipList.ngControl.invalid : null)(\"aria-required\", ctx._chipList && ctx._chipList.required || null);\n    } }, inputs: { separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"], placeholder: \"placeholder\", id: \"id\", chipList: [\"matChipInputFor\", \"chipList\"], addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\"], disabled: \"disabled\" }, outputs: { chipEnd: \"matChipInputTokenEnd\" }, exportAs: [\"matChipInput\", \"matChipInputFor\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatChipInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_CHIPS_DEFAULT_OPTIONS,] }] }\n];\nMatChipInput.propDecorators = {\n    chipList: [{ type: Input, args: ['matChipInputFor',] }],\n    addOnBlur: [{ type: Input, args: ['matChipInputAddOnBlur',] }],\n    separatorKeyCodes: [{ type: Input, args: ['matChipInputSeparatorKeyCodes',] }],\n    chipEnd: [{ type: Output, args: ['matChipInputTokenEnd',] }],\n    placeholder: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matChipInputFor]',\n                exportAs: 'matChipInput, matChipInputFor',\n                host: {\n                    'class': 'mat-chip-input mat-input-element',\n                    '(keydown)': '_keydown($event)',\n                    '(blur)': '_blur()',\n                    '(focus)': '_focus()',\n                    '(input)': '_onInput()',\n                    '[id]': 'id',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.placeholder]': 'placeholder || null',\n                    '[attr.aria-invalid]': '_chipList && _chipList.ngControl ? _chipList.ngControl.invalid : null',\n                    '[attr.aria-required]': '_chipList && _chipList.required || null'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_CHIPS_DEFAULT_OPTIONS]\n            }] }]; }, { separatorKeyCodes: [{\n            type: Input,\n            args: ['matChipInputSeparatorKeyCodes']\n        }], chipEnd: [{\n            type: Output,\n            args: ['matChipInputTokenEnd']\n        }], placeholder: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], chipList: [{\n            type: Input,\n            args: ['matChipInputFor']\n        }], addOnBlur: [{\n            type: Input,\n            args: ['matChipInputAddOnBlur']\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatChipInput.ngAcceptInputType_addOnBlur;\n    /** @type {?} */\n    MatChipInput.ngAcceptInputType_disabled;\n    /**\n     * Whether the control is focused.\n     * @type {?}\n     */\n    MatChipInput.prototype.focused;\n    /** @type {?} */\n    MatChipInput.prototype._chipList;\n    /** @type {?} */\n    MatChipInput.prototype._addOnBlur;\n    /**\n     * The list of key codes that will trigger a chipEnd event.\n     *\n     * Defaults to `[ENTER]`.\n     * @type {?}\n     */\n    MatChipInput.prototype.separatorKeyCodes;\n    /**\n     * Emitted when a chip is to be added.\n     * @type {?}\n     */\n    MatChipInput.prototype.chipEnd;\n    /**\n     * The input's placeholder text.\n     * @type {?}\n     */\n    MatChipInput.prototype.placeholder;\n    /**\n     * Unique id for the input.\n     * @type {?}\n     */\n    MatChipInput.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipInput.prototype._disabled;\n    /**\n     * The native input element to which this directive is attached.\n     * @type {?}\n     * @protected\n     */\n    MatChipInput.prototype._inputElement;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipInput.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipInput.prototype._defaultOptions;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chips-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst CHIP_DECLARATIONS = [\n    MatChipList,\n    MatChip,\n    MatChipInput,\n    MatChipRemove,\n    MatChipAvatar,\n    MatChipTrailingIcon,\n];\nconst ɵ0 = ({\n    separatorKeyCodes: [ENTER]\n});\nclass MatChipsModule {\n}\nMatChipsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatChipsModule });\nMatChipsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatChipsModule_Factory(t) { return new (t || MatChipsModule)(); }, providers: [\n        ErrorStateMatcher,\n        {\n            provide: MAT_CHIPS_DEFAULT_OPTIONS,\n            useValue: ( /** @type {?} */(ɵ0))\n        }\n    ] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatChipsModule, { declarations: [MatChipList,\n        MatChip,\n        MatChipInput,\n        MatChipRemove,\n        MatChipAvatar,\n        MatChipTrailingIcon], exports: [MatChipList,\n        MatChip,\n        MatChipInput,\n        MatChipRemove,\n        MatChipAvatar,\n        MatChipTrailingIcon] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipsModule, [{\n        type: NgModule,\n        args: [{\n                exports: CHIP_DECLARATIONS,\n                declarations: CHIP_DECLARATIONS,\n                providers: [\n                    ErrorStateMatcher,\n                    {\n                        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                        useValue: ( /** @type {?} */(ɵ0))\n                    }\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHIPS_DEFAULT_OPTIONS, MatChip, MatChipAvatar, MatChipInput, MatChipList, MatChipListChange, MatChipRemove, MatChipSelectionChange, MatChipTrailingIcon, MatChipsModule };\n\n//# sourceMappingURL=chips.js.map","export default \"<div class=\\\"broadcast-message-wrapper\\\">\\n    <div class=\\\"card clear form-group\\\">\\n        <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">\\n            <div class=\\\"\\\">\\n                <h5>\\n                    <span>Compose Mail</span>\\n                </h5>\\n                <div class=\\\"remainder\\\">\\n                    <span>All fields with * are required.</span>\\n                </div>\\n            </div>\\n            <ul class=\\\"list-inline float-right\\\">\\n                <li class=\\\"list-inline-item\\\">\\n                    <!-- <button class=\\\"btn blue mr-2\\\" (click)=\\\"ClearFormData()\\\">Cancel</button> -->\\n                    <button class=\\\"btn blue mr-2\\\"\\n                        (click)=\\\"submitCreateBroadcastMessageForm(createBroadcastMessageForm)\\\"\\n                        [disabled]=\\\"createBroadcastMessageForm.invalid\\\">Submit</button>\\n                </li>\\n            </ul>\\n        </div>\\n        <div class=\\\"card-body p-0\\\">\\n            <ng-container>\\n                <form #createBroadcastMessageForm=\\\"ngForm\\\" name=\\\"createBroadcastMessageForm\\\" novalidate>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12 d-flex plr-0 \\\">\\n                            <div class=\\\"col-lg-3 col-md-3 col-sm-3 col-xs-3 plr-0\\\" >\\n                                <div class=\\\"row m-0 p-5 rowBorder\\\">\\n                                    <div class=\\\"col-md-12\\\">\\n                                        <div class=\\\"select-box\\\">\\n                                            <label>Role Type</label>\\n                                            <angular2-multiselect [data]=\\\"roleTypeArr.dropdownList\\\"\\n                                                name=\\\"roleTypeDropDown\\\" [(ngModel)]=\\\"roleTypeArr.selectedItems\\\"\\n                                                [settings]=\\\"roleTypedropdownSettings\\\"\\n                                                (onSelect)=\\\"getAppartmentRole($event)\\\" (onDeSelect)=\\\"removeRole($event)\\\"\\n                                                (onDeSelectAll)=\\\"removeRole($event)\\\"></angular2-multiselect>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"col-md-12\\\">\\n                                        <div class=\\\"select-box\\\">\\n                                            <label>Apartment Block</label>\\n                                            <angular2-multiselect [data]=\\\"apartmentBlock.dropdownList\\\"\\n                                                name=\\\"blockdropdown\\\" [(ngModel)]=\\\"apartmentBlock.selectedItems\\\"\\n                                                [settings]=\\\"blockdropdownSettings\\\" (onSelect)=\\\"updateUsers()\\\"\\n                                                (onDeSelect)=\\\"updateUsers()\\\" (onSelectAll)=\\\"updateUsers()\\\"\\n                                                (onDeSelectAll)=\\\"removeDropdownItems('block')\\\"></angular2-multiselect>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"col-md-12\\\">\\n                                        <div class=\\\"select-box\\\">\\n                                            <label>Conditions</label>\\n                                            <angular2-multiselect [data]=\\\"condition.dropdownList\\\"\\n                                                name=\\\"conditiondropdown\\\" [(ngModel)]=\\\"condition.selectedItems\\\"\\n                                                [settings]=\\\"roleDropdownSettings\\\" (onSelect)=\\\"updateUsers()\\\"\\n                                                (onDeSelect)=\\\"updateUsers()\\\" (onSelectAll)=\\\"updateUsers()\\\"\\n                                                (onDeSelectAll)=\\\"removeDropdownItems('condition')\\\">\\n                                            </angular2-multiselect>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"col-md-12\\\">\\n                                        <div class=\\\"select-box\\\">\\n                                            <label>Role</label>\\n                                            <angular2-multiselect [data]=\\\"roleCategory.dropdownList\\\" name=\\\"roleDropDown\\\"\\n                                                [(ngModel)]=\\\"roleCategory.selectedItems\\\"\\n                                                [settings]=\\\"roleDropdownSettings\\\"\\n                                                (onSelect)=\\\"getstaffCategories($event)\\\"\\n                                                (onDeSelect)=\\\"removeStaffCategories($event)\\\"\\n                                                (onSelectAll)=\\\"getAllStaffCategories($event)\\\"\\n                                                (onDeSelectAll)=\\\"removeAllStaffCategories($event)\\\">\\n\\n                                            </angular2-multiselect>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"col-md-12\\\">\\n                                        <div class=\\\"select-box\\\">\\n                                            <label>Broadcast Category<span class=\\\"mandatory\\\">*</span></label>\\n                                            <angular2-multiselect [data]=\\\"broadCastCategory.dropdownList\\\"\\n                                                name=\\\"broadcastDropDown\\\" [(ngModel)]=\\\"broadCastCategory.selectedItems\\\"\\n                                                [settings]=\\\"broadCastdropdownSettings\\\" (onSelect)=\\\"categoryChange($event)\\\"\\n                                                required></angular2-multiselect>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"col-md-12\\\" *ngIf=\\\"this.roleCategory.selectedItems.length>0 && isStaff\\\">\\n                                        <div class=\\\"select-box\\\">\\n                                            <label>Staff Category</label>\\n                                            <angular2-multiselect [data]=\\\"staffCategory.dropdownList\\\"\\n                                                name=\\\"staffDropDown\\\" [(ngModel)]=\\\"staffCategory.selectedItems\\\"\\n                                                [settings]=\\\"dropdownSettings\\\" (onSelect)=\\\"getStaffSubCategories($event)\\\"\\n                                                (onDeSelect)=\\\"removeSubStaffCategories($event)\\\"\\n                                                (onSelectAll)=\\\"getAllSubStaffCategories($event)\\\"\\n                                                (onDeSelectAll)=\\\"removeAllSubStaffCategories($event)\\\"\\n                                                (onGroupDeSelect)=\\\"getGroupSubStaffCategories($event)\\\"\\n                                                (onGroupSelect)=\\\"removeGroupSubStaffCategories($event)\\\">\\n                                            </angular2-multiselect>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"col-md-12\\\" *ngIf=\\\"this.staffCategory.selectedItems.length>0\\\">\\n                                        <div class=\\\"select-box\\\">\\n                                            <label>Staff SubCategory</label>\\n                                            <angular2-multiselect [data]=\\\"staffSubCategory.dropdownList\\\"\\n                                                name=\\\"subStaffDropDown\\\" [(ngModel)]=\\\"staffSubCategory.selectedItems\\\"\\n                                                [settings]=\\\"dropdownSettings\\\" (onSelect)=\\\"updateUsers()\\\"\\n                                                (onDeSelect)=\\\"updateUsers()\\\" (onSelectAll)=\\\"updateUsers()\\\"\\n                                                (onDeSelectAll)=\\\"updateUsers()\\\" (onGroupDeSelect)=\\\"updateUsers()\\\"\\n                                                (onGroupSelect)=\\\"updateUsers()\\\"></angular2-multiselect>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-lg-9 col-md-9 col-sm-9 col-xs-9 plr-0\\\">\\n                                <div class=\\\"row m-0 p-5\\\">\\n                                    <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12 \\\">\\n                                        <label>Recipients</label>\\n                                        <!-- <div class=\\\"col-sm-12 box\\\" *ngIf=\\\"IsBroadcast\\\">\\n                                            <label *ngFor=\\\"let user of users\\\">\\n                                                {{user.firstName+\\\" \\\"+user.middleName+\\\" \\\"+user.lastName+\\\",\\\"}}\\n                                            </label>\\n                                        </div>\\n                                        <div class=\\\"col-sm-12 box\\\" *ngIf=\\\"!IsBroadcast\\\">\\n                                            <label *ngFor=\\\"let user of AssignInterestUsers\\\">\\n                                                {{user.userFullName +\\\",\\\"}}\\n                                            </label>\\n                                        </div> -->\\n                                        <mat-form-field class=\\\"w-100\\\">\\n                                            <mat-chip-list #receipt>\\n                                              <mat-chip\\n                                                *ngFor=\\\"let user of selectedReceipt\\\"\\n                                                [selectable]=\\\"selectable\\\"\\n                                                [removable]=\\\"removable\\\"\\n                                                (removed)=\\\"remove(user)\\\">\\n                                                {{user.firstName+\\\" \\\"+user.middleName+\\\" \\\"+user.lastName}}\\n                                                <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\n                                              </mat-chip>\\n                                              <input\\n                                                #receiptList\\n                                                [formControl]=\\\"receiptCtrl\\\"\\n                                                [matAutocomplete]=\\\"auto\\\"\\n                                                [matChipInputFor]=\\\"receipt\\\"\\n                                                (input)=\\\"filterItem(receiptList.value)\\\"\\n                                                [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\">\\n                                            </mat-chip-list>\\n                                            <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selected($event)\\\">\\n                                              <mat-option *ngFor=\\\"let user of users\\\" [value]=\\\"user.userId\\\">\\n                                                {{user.firstName+\\\" \\\"+user.middleName+\\\" \\\"+user.lastName+\\\" \\\"+user.firstName+\\\" \\\"+user.middleName+\\\" \\\"+user.lastName}}\\n                                              </mat-option>\\n                                            </mat-autocomplete>\\n                                          </mat-form-field>\\n                                    </div>\\n                                    <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12 \\\">\\n                                        <div class=\\\"input-box\\\">\\n                                            <label>Subject<span class=\\\"mandatory\\\">*</span></label>\\n                                            <input type=\\\"text\\\" class=\\\"form-control form-group\\\" placeholder=\\\"Enter\\\"\\n                                                name=\\\"subject\\\" [(ngModel)]=\\\"message.subject\\\" required>\\n                                            <quill-editor class=\\\"quill-editor\\\" name=\\\"ckeditor\\\"\\n                                                [placeholder]=\\\"editorPlacehorder\\\" [(ngModel)]=\\\"message.ckeditor\\\"\\n                                                (onContentChanged)=\\\"onContentChanged($event)\\\" required>\\n                                            </quill-editor>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12 \\\">\\n                                       \\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </form>\\n            </ng-container>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"row\\\">\\n    <mat-card class=\\\"inbox  d-flex\\\">\\n        <div class=\\\"col-md-4 col-lg-4 col-sm-4 col-xs-12 plr-0\\\">\\n            <div class=\\\"inbox-list\\\">\\n                <div class=\\\"inbox-head\\\">\\n                    <div class=\\\"input-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <div class=\\\"input-group-text\\\">\\n                                <i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n                            </div>\\n                        </div>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\"\\n                            aria-label=\\\"Text input with checkbox\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"inbox-content\\\">\\n                    <mat-card class=\\\"inbox-main-content\\\" *ngFor=\\\"let item of [1,3,2,3,4,5,6,7,8,9,0];let i=index\\\" [ngClass]=\\\"{'active-inbox-list': i == 0}\\\" >\\n                        <div class=\\\"content-name\\\">\\n                            <span>Dharvesh Mydeen</span>\\n                            <span>Jun 15 2020</span>\\n                        </div>\\n                        <div class=\\\"content-subject\\\">\\n                            What is Lorem Ipsum Lorem Ipsum is simply dummy text of the printing and typesetting\\n                            industry Lorem Ipsum has been the industry's standard dummy text ever since the 1500s when\\n                            an unknown printer took a galley of type and scrambled it to make a type specimen book it\\n                            has\\n                        </div>\\n                    </mat-card>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-md-8 col-lg-8 col-sm-8 col-xs-12 plr-0\\\">\\n            <div class=\\\"inbox-details\\\">\\n                <div class=\\\"details-head\\\">\\n                    <span>{{messageDate | date : 'medium'}}</span>\\n                    <span>\\n                        <i class=\\\"fa fa-trash-o\\\" aria-hidden=\\\"true\\\"></i>\\n                        <i class=\\\"ml-4 fa fa-ellipsis-v\\\" aria-hidden=\\\"true\\\" [matMenuTriggerFor]=\\\"mail_options\\\"></i>\\n                        <mat-menu #mail_options=\\\"matMenu\\\">\\n                            <button mat-menu-item>Forward</button>\\n                            <button mat-menu-item>Reply</button>\\n                          </mat-menu>\\n                    </span>\\n                </div>\\n                <div class=\\\"detail-address\\\">\\n                    <img src=\\\"../../../../assets/images/img-users.jpg\\\" alt=\\\"\\\">\\n                    <div>\\n                        <span>Dharvesh Mydeen</span>\\n                        <small>dharu@gmail.com</small>\\n                    </div>\\n                </div>\\n                <div class=\\\"detail-subject\\\">\\n                    What is Lorem Ipsum Lorem Ipsum is simply dummy text of the printing and typesetting\\n                    industry Lorem\\n                </div>\\n                <div class=\\\"detail-content\\\">\\n                    What is Lorem Ipsum Lorem Ipsum is simply dummy text of the printing and typesetting\\n                    industry Lorem Ipsum has been the industry's standard dummy text ever since the 1500s when\\n                    an unknown printer took a galley of type and scrambled it to make a type specimen book it\\n                    has\\n                    <br>\\n                    What is Lorem Ipsum Lorem Ipsum is simply dummy text of the printing and typesetting\\n                    industry Lorem\\n                </div>\\n                <div class=\\\"detail-attachment\\\">\\n                    <div class=\\\"attach-head\\\">\\n                        Attachement\\n                    </div>\\n                    <div class=\\\"attached-file\\\">\\n                        <i class=\\\"fa fa-file-excel-o icon-excel mr-4\\\" title=\\\"excel.xlsx\\\" aria-hidden=\\\"true\\\"></i>\\n                        <i class=\\\"fa fa-file-word-o icon-word mr-4\\\" aria-hidden=\\\"true\\\"></i>\\n                        <i class=\\\"fa fa-file-pdf-o icon-pdf\\\" aria-hidden=\\\"true\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </mat-card>\\n</div>\"","export default \"<p>sent-list works!</p>\\n\"","export default \"<p>trash works!</p>\\n\"","export default \"::ng-deep .ql-container {\\n  height: 220px;\\n}\\n\\n.broadcast-message-wrapper form input:required.ng-dirty.ng-invalid {\\n  border: 1px solid #cccccc !important;\\n}\\n\\n.broadcast-message-wrapper .remainder {\\n  color: rgba(255, 0, 0, 0.8);\\n  font-size: 10px;\\n  padding: 5px 0px 0px 0px;\\n  display: block;\\n}\\n\\n.broadcast-message-wrapper .mandatory {\\n  color: red;\\n  font-size: 16px;\\n}\\n\\n.broadcast-message-wrapper .nav-tabs .nav-item.show .nav-link, .broadcast-message-wrapper .nav-tabs .nav-link.active {\\n  color: #0062cc;\\n  background-color: transparent;\\n  border-color: transparent transparent #f3f3f3;\\n  border-bottom: 3px solid !important;\\n  font-size: 16px;\\n  font-weight: bold;\\n}\\n\\n.broadcast-message-wrapper .tab-content > .active {\\n  margin-top: 18px;\\n}\\n\\n.broadcast-message-wrapper angular2-multiselect {\\n  font-family: \\\"Lato\\\", sans-serif;\\n  font-weight: 400;\\n  letter-spacing: 0.3px;\\n  -webkit-font-smoothing: inherit;\\n  -moz-osx-font-smoothing: inherit;\\n  font-size: 1.2rem !important;\\n}\\n\\n.broadcast-message-wrapper .selected-list .c-list .c-token {\\n  font-size: 1.2rem !important;\\n}\\n\\n.broadcast-message-wrapper .c-btn {\\n  font-size: 1.2rem !important;\\n}\\n\\n.broadcast-message-wrapper .recipentsDiv {\\n  margin-bottom: 10px;\\n}\\n\\n.broadcast-message-wrapper .recipentsDiv .box {\\n  border: 1px solid #ccc;\\n  height: 150px;\\n  overflow-y: auto;\\n}\\n\\n.broadcast-message-wrapper .recipentsDiv .box label {\\n  margin-right: 10px;\\n}\\n\\n.rowBorder {\\n  position: relative;\\n}\\n\\n.rowBorder:after {\\n  position: absolute;\\n  content: \\\"\\\";\\n  height: 90%;\\n  width: 1px;\\n  background-color: #cccccc;\\n  right: 0px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9hbXMvaW5ib3gvY29tcG9zZS1tZXNzYWdlL2NvbXBvc2UtbWVzc2FnZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYW1zL2luYm94L2NvbXBvc2UtbWVzc2FnZS9jb21wb3NlLW1lc3NhZ2UuY29tcG9uZW50LnNjc3MiLCIvVXNlcnMvc2VudGhpbGt1bWFyc2VldGhhcmFtYW4vRG9jdW1lbnRzL3dvcmtzL2NsaWNrbXljb25kby9hcHAtbmc5L3NyYy9zY3NzL2ZvbnRzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSxhQUFBO0FDREo7O0FES0U7RUFDRSxvQ0FBQTtBQ0ZKOztBRElBO0VBQ0ksMkJBQUE7RUFDQSxlQUFBO0VBQ0Esd0JBQUE7RUFDQSxjQUFBO0FDRko7O0FESUE7RUFDRSxVQUFBO0VBQ0UsZUFBQTtBQ0ZKOztBRElFO0VBQ0UsY0FBQTtFQUNBLDZCQUFBO0VBQ0EsNkNBQUE7RUFDQSxtQ0FBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQ0ZKOztBRElBO0VBQ0UsZ0JBQUE7QUNGRjs7QURJRTtFRThCQSwrQkFBQTtFQUNBLGdCQUFBO0VBQ0EscUJBQUE7RUFDQSwrQkFBQTtFQUNBLGdDQUFBO0VGaENNLDRCQUFBO0FDRVI7O0FEQ0k7RUFDRSw0QkFBQTtBQ0NOOztBREVJO0VBQ0UsNEJBQUE7QUNBTjs7QURFSTtFQUNFLG1CQUFBO0FDQU47O0FEQ007RUFDRSxzQkFBQTtFQUNBLGFBQUE7RUFDQSxnQkFBQTtBQ0NSOztBREFRO0VBQ0Usa0JBQUE7QUNFVjs7QURNQTtFQUNJLGtCQUFBO0FDSEo7O0FESUk7RUFDSSxrQkFBQTtFQUNBLFdBQUE7RUFDQSxXQUFBO0VBQ0EsVUFBQTtFQUNBLHlCQUFBO0VBQ0EsVUFBQTtBQ0ZSIiwiZmlsZSI6InNyYy9hcHAvYW1zL2luYm94L2NvbXBvc2UtbWVzc2FnZS9jb21wb3NlLW1lc3NhZ2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiLi4vLi4vLi4vLi4vc2Nzcy9mb250cy5zY3NzXCI7XG5cbjo6bmctZGVlcCAucWwtY29udGFpbmVye1xuICAgIGhlaWdodDogMjIwcHg7XG59XG5cbi5icm9hZGNhc3QtbWVzc2FnZS13cmFwcGVye1xuICBmb3JtIGlucHV0OnJlcXVpcmVkLm5nLWRpcnR5Lm5nLWludmFsaWQge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2NjY2MgIWltcG9ydGFudDtcbn1cbi5yZW1haW5kZXJ7XG4gICAgY29sb3I6IHJnYmEoMjU1LCAwLCAwLCAwLjgpO1xuICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgICBwYWRkaW5nOiA1cHggMHB4IDBweCAwcHg7XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG4ubWFuZGF0b3J5e1xuICBjb2xvcjogcmVkO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbn1cbiAgLm5hdi10YWJzIC5uYXYtaXRlbS5zaG93IC5uYXYtbGluaywgLm5hdi10YWJzIC5uYXYtbGluay5hY3RpdmUge1xuICAgIGNvbG9yOiAjMDA2MmNjO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgI2YzZjNmMztcbiAgICBib3JkZXItYm90dG9tOiAzcHggc29saWQgIWltcG9ydGFudDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4udGFiLWNvbnRlbnQ+LmFjdGl2ZSB7ICBcbiAgbWFyZ2luLXRvcDogMThweDtcbn1cbiAgYW5ndWxhcjItbXVsdGlzZWxlY3R7XG4gICAgICBAaW5jbHVkZSAgZGVzcC1yZWd1bGFyO1xuICAgICAgICBmb250LXNpemU6IDEuMnJlbSAhaW1wb3J0YW50O1xuICAgIH1cblxuICAgIC5zZWxlY3RlZC1saXN0IC5jLWxpc3QgLmMtdG9rZW57XG4gICAgICBmb250LXNpemU6IDEuMnJlbSAhaW1wb3J0YW50O1xuICAgIH1cblxuICAgIC5jLWJ0bntcbiAgICAgIGZvbnQtc2l6ZTogMS4ycmVtICFpbXBvcnRhbnQ7XG4gICAgfVxuICAgIC5yZWNpcGVudHNEaXZ7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgLmJveHtcbiAgICAgICAgYm9yZGVyOjFweCBzb2xpZCAjY2NjO1xuICAgICAgICBoZWlnaHQ6MTUwcHg7XG4gICAgICAgIG92ZXJmbG93LXk6YXV0bztcbiAgICAgICAgbGFiZWx7XG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OjEwcHg7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICBcbn1cblxuLnJvd0JvcmRlcntcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgJjphZnRlcntcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgaGVpZ2h0OiA5MCU7XG4gICAgICAgIHdpZHRoOiAxcHg7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNjY2NjY2M7XG4gICAgICAgIHJpZ2h0OiAwcHg7XG4gICAgfVxufSIsIjo6bmctZGVlcCAucWwtY29udGFpbmVyIHtcbiAgaGVpZ2h0OiAyMjBweDtcbn1cblxuLmJyb2FkY2FzdC1tZXNzYWdlLXdyYXBwZXIgZm9ybSBpbnB1dDpyZXF1aXJlZC5uZy1kaXJ0eS5uZy1pbnZhbGlkIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjY2NjYyAhaW1wb3J0YW50O1xufVxuLmJyb2FkY2FzdC1tZXNzYWdlLXdyYXBwZXIgLnJlbWFpbmRlciB7XG4gIGNvbG9yOiByZ2JhKDI1NSwgMCwgMCwgMC44KTtcbiAgZm9udC1zaXplOiAxMHB4O1xuICBwYWRkaW5nOiA1cHggMHB4IDBweCAwcHg7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuLmJyb2FkY2FzdC1tZXNzYWdlLXdyYXBwZXIgLm1hbmRhdG9yeSB7XG4gIGNvbG9yOiByZWQ7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cbi5icm9hZGNhc3QtbWVzc2FnZS13cmFwcGVyIC5uYXYtdGFicyAubmF2LWl0ZW0uc2hvdyAubmF2LWxpbmssIC5icm9hZGNhc3QtbWVzc2FnZS13cmFwcGVyIC5uYXYtdGFicyAubmF2LWxpbmsuYWN0aXZlIHtcbiAgY29sb3I6ICMwMDYyY2M7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICNmM2YzZjM7XG4gIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCAhaW1wb3J0YW50O1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuLmJyb2FkY2FzdC1tZXNzYWdlLXdyYXBwZXIgLnRhYi1jb250ZW50ID4gLmFjdGl2ZSB7XG4gIG1hcmdpbi10b3A6IDE4cHg7XG59XG4uYnJvYWRjYXN0LW1lc3NhZ2Utd3JhcHBlciBhbmd1bGFyMi1tdWx0aXNlbGVjdCB7XG4gIGZvbnQtZmFtaWx5OiBcIkxhdG9cIiwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuM3B4O1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBpbmhlcml0O1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogaW5oZXJpdDtcbiAgZm9udC1zaXplOiAxLjJyZW0gIWltcG9ydGFudDtcbn1cbi5icm9hZGNhc3QtbWVzc2FnZS13cmFwcGVyIC5zZWxlY3RlZC1saXN0IC5jLWxpc3QgLmMtdG9rZW4ge1xuICBmb250LXNpemU6IDEuMnJlbSAhaW1wb3J0YW50O1xufVxuLmJyb2FkY2FzdC1tZXNzYWdlLXdyYXBwZXIgLmMtYnRuIHtcbiAgZm9udC1zaXplOiAxLjJyZW0gIWltcG9ydGFudDtcbn1cbi5icm9hZGNhc3QtbWVzc2FnZS13cmFwcGVyIC5yZWNpcGVudHNEaXYge1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuLmJyb2FkY2FzdC1tZXNzYWdlLXdyYXBwZXIgLnJlY2lwZW50c0RpdiAuYm94IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgaGVpZ2h0OiAxNTBweDtcbiAgb3ZlcmZsb3cteTogYXV0bztcbn1cbi5icm9hZGNhc3QtbWVzc2FnZS13cmFwcGVyIC5yZWNpcGVudHNEaXYgLmJveCBsYWJlbCB7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbn1cblxuLnJvd0JvcmRlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi5yb3dCb3JkZXI6YWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGhlaWdodDogOTAlO1xuICB3aWR0aDogMXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NjY2NjO1xuICByaWdodDogMHB4O1xufSIsIlxuQGltcG9ydCBcInZhcmlhYmxlc1wiO1xuXG5AbWl4aW4gcHVibGljLWxpZ2h0IHtcbiAgZm9udC1mYW1pbHk6ICdQb3BwaW5zJywgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbn1cblxuQG1peGluIHB1YmxpYy1yZWd1bGFyIHtcbiAgZm9udC1mYW1pbHk6ICdQb3BwaW5zJywgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbn1cblxuQG1peGluIHB1YmxpYy1tZWRpdW0ge1xuICBmb250LWZhbWlseTogJ1BvcHBpbnMnLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNTAwO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xufVxuXG5AbWl4aW4gcHVibGljLWJvbGQge1xuICBmb250LWZhbWlseTogJ1BvcHBpbnMnLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNjAwO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xufVxuXG5AbWl4aW4gaGVhZC1saWdodCB7XG4gIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGluaGVyaXQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBpbmhlcml0O1xufVxuXG5AbWl4aW4gaGVhZC1yZWd1bGFyIHtcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuM3B4O1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBpbmhlcml0O1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogaW5oZXJpdDtcbn1cblxuQG1peGluIGhlYWQtbWVkaXVtIHtcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMnB4O1xufVxuXG5AbWl4aW4gaGVhZC1ib2xkIHtcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuM3B4O1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBpbmhlcml0O1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogaW5oZXJpdDtcbn1cblxuQG1peGluIGRlc3AtcmVndWxhciB7XG4gIGZvbnQtZmFtaWx5OiAnTGF0bycsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxldHRlci1zcGFjaW5nOiAwLjNweDsgICBcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogaW5oZXJpdDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGluaGVyaXQ7XG59XG5cbkBtaXhpbiBkZXNwLW1lZGl1bSB7XG4gIGZvbnQtZmFtaWx5OiAnTGF0bycsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGxldHRlci1zcGFjaW5nOiAwLjNweDtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG59XG5cbkBtaXhpbiBmdC1jYWxjKCRwaXhlbHMpIHtcbiAgZm9udC1zaXplOiAoICRwaXhlbHMgLyAkZnQtYmFzZSApICsgcmVtO1xufVxuIl19 */\"","import { Component, OnInit, Injector, ViewChild, ElementRef } from '@angular/core';\nimport { BroadcastService } from 'src/app/api/controllers/Broadcast';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { UserService } from 'src/app/api/controllers/User';\nimport { StaffService } from 'src/app/api/controllers/Staff';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { ModalService } from 'src/app/shared/services/modal.service';\nimport * as _ from 'underscore';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { MatAutocomplete, MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport {map, startWith} from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-compose-message',\n  templateUrl: './compose-message.component.html',\n  styleUrls: ['./compose-message.component.scss']\n})\nexport class ComposeMessageComponent implements OnInit {\n\n  visible = true;\n  selectable = true;\n  removable = true;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  receiptCtrl = new FormControl();\n  filteredUsers: Observable<string[]>;\n  selectedReceipt:Array<any>=[];\n  @ViewChild('receiptList') receiptList: ElementRef<HTMLInputElement>;\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\n\n  IsBroadcast:boolean;\n  message:any;\n  allcategory:any;\n  apartmentID:any;\n  modalService:any;\n  roleType:any;\n  condtionRequired:boolean;\n  dropdownSettings={};\n  blockdropdownSettings={}\n  roleTypedropdownSettings={}\n  broadCastdropdownSettings={}\n  groupCategorySetting={}\n  roleDropdownSettings={};\n  staffCategoryMap=new Map();\n  staffSubCategoryMap=new Map();\n  isStaff:boolean;\n  users:any;\n  rawSelectedUsers:Array<any>=[];\n  allUsers:any;\n  selectedTab:string;\n  roleTypeArr={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n  };\n  \n  roleCategory={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n\n  };\n  staffCategory={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n\n  };\n  staffSubCategory={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n\n  };\n  broadCastCategory={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n\n  };\napartmentBlock={\n    \"dropdownList\":[],\n    \"selectedItems\":[]\n    };\n condition={\n      \"dropdownList\":[],\n      \"selectedItems\":[]\n      };\n     \n      broadModeArr={\n        \"dropdownList\":[],\n        \"selectedItems\":[]\n      };\n      broadCastGroupCategory={\n        \"dropdownList\":[],\n        \"selectedItems\":[]\n      };\n  allBroadcastMessageGroup = [];\n  interestGroupUsers:any;\n  isFlashNotice:boolean=false;\n  loginedUser:any;\n  editorPlacehorder:string = \"\";\n\n  constructor(\n    public broadcastService: BroadcastService,\n    private sharedService:SharedService,\n    private cookieService:CookieService,\n    private userService:UserService,\n    private staffService:StaffService,\n    private apartmentService:ApartmentService,\n    private injector: Injector,\n  ) { \n    this.modalService = this.injector.get(ModalService);\n  }\n\n  onContentChanged(event){\n    \n  }\n\n  ngOnInit() {\n    \n    this.message={};\n    this.IsBroadcast=true;\n    this.loginedUser= parseInt(this.cookieService.get('userId'));\n    this.apartmentID=parseInt(this.cookieService.get('apartmentId'));\n    this.getAllUsers();\n    this.getAllCategory();\n    this.getAllRoleTypesList();\n    this.getAllApartmentBlockList();\n    this.getAllGroupCategory();\n    this.getInterestGroupUsers();\n    this.getAllInterestGroupUser();\n    this.groupCategorySetting={\n      singleSelection: true, \n      enableSearchFilter: true,\n      labelKey: 'groupName',\n      primaryKey: 'broadCastGroupCategoryId',\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    }; \n    this.dropdownSettings={\n      singleSelection: false, \n      enableSearchFilter: true,\n      labelKey: 'name',\n      primaryKey: 'value',\n      groupBy:\"category\",\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    }; \n    this.roleDropdownSettings={\n      singleSelection: false, \n      enableSearchFilter: true,\n      labelKey: 'name',\n      primaryKey: 'value',\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    }; \n    this.blockdropdownSettings={\n      singleSelection: false,\n      primaryKey: 'apartmentBlockId',\n      labelKey: 'apartmentBlockNumber',\n      enableSearchFilter: true,\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    }; \n    \n    this.roleTypedropdownSettings={\n      singleSelection: true,\n      primaryKey: 'value',\n      labelKey: 'name',\n      enableSearchFilter: true,\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    }; \n    this.broadCastdropdownSettings={\n      singleSelection: true,\n      primaryKey: 'broadCastMessageCategoryId',\n      labelKey: 'broadCastMessageCategory1',\n      enableSearchFilter: true,\n      enableFilterSelectAll: false,\n      autoPosition: false,\n      maxHeight:240\n    };\n    this.selectedTab='role';\n  }\n\n  currentTab(item){\n    this.selectedTab=item;\n    if(this.selectedTab=='interest'){\n     // this.users=[];\n      this.IsBroadcast=false;\n      if(this.broadCastGroupCategory.selectedItems.length>0)\n      {\n        this.selectInterestGroup(this.broadCastGroupCategory.selectedItems[0]);\n      }else{\n        this.users=[];\n      }\n      \n    }\n    if(this.selectedTab=='role'){\n      this.updateUsers();\n      this.IsBroadcast=true;\n    }\n  }\n  filterOptions={\n    \"roleids\":\"\",\n    \"ApartmentId\":0,\n    \"blockids\":\"\",\n    \"keyword\":\"\"\n  }\n  allnterestGroupUsers:any;\n  getAllInterestGroupUser(){\n    this.filterOptions.ApartmentId=this.apartmentID;\n    \n    this.userService.getUsersByKeyword(this.filterOptions).subscribe((res:any)=>{\n       \n       res.forEach(element => {\n        element.userFullName=element.userName+\" \"+element.roleName+\" \"+element.apartmentBlockNumber+\" \"+element.apartmentBlockUnitNumber;\n      }); \n      this.allnterestGroupUsers=res;\n\n      },\n      error=>console.log(error)\n      );\n  }\n  getAllUsers(){\n    let queryParamBase = {\n      apartmentId: this.apartmentID\n    };\n    this.userService.getUsersByApartmentId(queryParamBase)\n      .subscribe(\n          (res:any)=>{\n          res.forEach(element => {\n            element.userFullName=element.userName+\" \"+element.roleName+\" \"+element.apartmentBlockNumber+\" \"+element.apartmentBlockUnitNumber;\n        });\n        this.allUsers=res;\n        this.updateUsers();\n      }\n    );\n  }\n  \n  selectInterestGroup(item){\n    let categoryUsers=this.interestGroupUsers.filter(function(obj){\n      return obj.broadCastGroupCategoryId==item.broadCastGroupCategoryId;\n   });\n   let tempAssignUsers=[];\n   let tempUsers=[...this.allnterestGroupUsers];\n   categoryUsers.forEach(element => {\n     tempUsers.forEach(obj => {\n     let isFound= obj.userId==element.userId && obj.roleID==element.roleId && obj.apartmentBlockID==element.apartmentBlockId && obj.apartmentBlockUnitID==element.unitId ;\n  if(isFound)\n  {\n   tempAssignUsers.push(obj);\n  }\n   });\n   });\n \n   this.AssignInterestUsers=[...tempAssignUsers];\n  }\n  AssignInterestUsers:any;\n  removeInterestGroup(item){\n    this.AssignInterestUsers=[];\n  }\n  //broadCastGroupCategoryId\n  flashNotice(bool){\n    \n    this.isFlashNotice = bool;\n  }\n  categoryChange(item){\n    \n    let id = parseInt(item.broadCastMessageCategoryId);\n    var data = _.filter( this.allcategory, function( item ) {\n      if(item.broadCastMessageCategoryId === id)\n        return item;\n      } );\n\n      if(data === undefined || data === null || data.length == 0){\n        this.message.ckeditor = '';\n      }\n      else {\n        this.message.ckeditor = data[0].template;\n      }\n  }\n\n  getAllApartmentBlockList(){\n    let queryParamBase = {\n      apartmentId: this.apartmentID\n    };\n    this.apartmentService.getApartmentBlockByApartmentId(queryParamBase).subscribe((res:any) => {\n     this.apartmentBlock.dropdownList=res;\n     var broadCastModeArr=[{\"name\":\"General SMS\",\"value\":40},\n    {\"name\":\"Whatsapp\",\"value\":41},\n    {\"name\":\"Email\",\"value\":42}];\n    this.broadModeArr.dropdownList=broadCastModeArr;\n  });\n  }\n  //Get All Broadcast Category\n //Get All Broadcast Category\n getAllCategory(){\n    \n  let queryParamBase = {\n    apartmentId: this.apartmentID\n  };\n  this.broadcastService.getBroadCastMessageCategories(queryParamBase).subscribe((res:any) => {\n   let  allBroadCastCategory=res.filter((obj)=>{\n      return obj.isActive;\n    });\n    this.allcategory = allBroadCastCategory\n    this.broadCastCategory.dropdownList=allBroadCastCategory;\n    });\n}\n  getAllRoleTypesList(){\n    this.userService.getAllRoleTypes().subscribe((res:any) => {\n     this.roleTypeArr.dropdownList=res;\n  });\n}\n\n\n  getAppartmentRole(item){\n   \n    this.roleCategory.selectedItems=[];\n    this.staffCategory.selectedItems=[];\n    var params={\n      'RoleTypeId': item.value,\n      'ApartmentId': this.apartmentID\n    }\n    this.userService.getApartmentRolesByRoleTypeId(params).subscribe((res:any) => {\n      this.condtionRequired=parseInt(item.value)==2 || parseInt(item.value)==4;;\n      this.roleCategory.dropdownList=res;\n      let conditinArr=[{\"name\":\"IsLiving\",\"value\":1}\n                       ,{\"name\":\"IsPrimaryContact\",\"value\":2}];\n      if(this.condtionRequired){\n        this.condition.dropdownList=conditinArr;\n      }\n         else{\n          this.condition.dropdownList=[];\n          this.condition.selectedItems=[];\n         }\n         this.updateUsers();\n      });\n\n  }\n  updateUsers(){\n    //this.tempUsers=[...this.allUsers];\n    this.getUserIds$().subscribe((res:any)=>{\n       if(res.length>0){\n        this.users=this.allUsers.filter(function(obj){\n        return res.includes(obj.userId);\n      });\n      this.rawSelectedUsers = JSON.parse(JSON.stringify(this.users));\n      }else{\n        this.users=[];\n      }\n      \n    });\n  }\n  getAllGroupCategory(){\n    let queryParamBase = {\n      apartmentId: this.apartmentID\n    };\n    this.broadcastService.getAllBroadCastGroupCategory(queryParamBase).subscribe((res:any) => {\n      this.broadCastGroupCategory.dropdownList= res;\n     \n    });\n  }\n  getInterestGroupUsers(){\n    let queryParamBase = {\n      apartmentId: this.apartmentID\n    };\n    this.broadcastService.getBroadCastGroupCategoryUser(queryParamBase).subscribe((res:any) => {\n      this.interestGroupUsers= res;\n    });\n  }\n  getstaffCategories(item){\n    this.isStaff=this.roleTypeArr.selectedItems[0].name.toLowerCase()==\"staff\";\n    if(this.isStaff)\n    {\n      \n      if(this.staffCategoryMap.get(item.value)==undefined){\n        let params={\n          'roleId':item.value,\n          'apartmentId':this.apartmentID\n        }\n        \n        this.staffService.getStaffCategoryByRole(params).subscribe((res:any) => {\n        let temp=[...this.staffCategory.dropdownList];\n          res.forEach(element => {\n            element.category=item.name;\n            temp.push(element);\n          });\n          this.staffCategoryMap.set(item.value,res);\n          this.staffCategory.dropdownList=temp;\n          this.updateUsers();\n         });\n         }else{\n          let temp=[...this.staffCategory.dropdownList];\n        let addStaffCategory= this.staffCategoryMap.get(item.value);\n        addStaffCategory.forEach(element => {\n          temp.push(element);\n            });\n            this.staffCategory.dropdownList=temp;\n            \n      }\n     \n\n      }\n      this.updateUsers();\n   }\n\n   getAllStaffCategories(items){\n     items.forEach(element => {\n      this.getstaffCategories(element);\n     });\n     \n   }\n   removeAllStaffCategories(items){\n    this.roleCategory.selectedItems=[];\n    this.staffCategory.dropdownList=[];\n    this.staffCategory.selectedItems=[];\n    this.updateUsers();\n  }\n  \n\nremoveStaffCategories(item){\n \n    if(this.roleTypeArr.selectedItems[0].name.toLowerCase()==\"staff\")\n    {\n     \n         let removeStaffCategory= this.staffCategoryMap.get(item.value);\n         removeStaffCategory.forEach(element => {\n             this.staffCategory.dropdownList=this.staffCategory.dropdownList.filter(function(obj){\n               return obj.value!==element.value;\n             });\n            });\n    \n    }\n    this.updateUsers();\n}\nremoveSubStaffCategories(item){\n       let removeSubStaffCategory= this.staffSubCategoryMap.get(item.value);\n         removeSubStaffCategory.forEach(element => {\n             this.staffSubCategory.dropdownList=this.staffSubCategory.dropdownList.filter(function(obj){\n               return obj.value!==element.value;\n             });\n            });\n            this.updateUsers();\n  }\n  getStaffSubCategories(item){\n     if(this.staffSubCategoryMap.get(item.value)==undefined){\n       let params={\n        'categoryId':item.value,\n        'apartmentId':this.apartmentID\n       }\n        this.staffService.getSubStaffCategoryByCategory(params).subscribe((res:any) => {\n          let temp=[...this.staffSubCategory.dropdownList];\n          res.forEach(element => {\n            element.category=item.name;\n            temp.push(element);\n          });\n          this.staffSubCategoryMap.set(item.value,res);\n          this.staffSubCategory.dropdownList=temp;\n          this.updateUsers();\n         });\n         \n      }else{\n        \n        let addSubStaffCategory= this.staffSubCategoryMap.get(item.value);\n        let temp=[...this.staffSubCategory.dropdownList];\n        addSubStaffCategory.forEach(element => {\n          temp.push(element);\n            });\n            this.staffSubCategory.dropdownList=temp;\n            this.updateUsers();\n      }\n      \n  }\n\n  getAllSubStaffCategories(items){\n    items.forEach(element => {\n     this.getStaffSubCategories(element);\n    });   \n  }\nremoveRole(item){\nthis.roleCategory.dropdownList=[];\nthis.condition.dropdownList=[];\nthis.condition.selectedItems=[];\nthis.removeAllStaffCategories([]);\nthis.removeAllSubStaffCategories([]);\n}\n\n  removeAllSubStaffCategories(items){\n   this.staffSubCategory.dropdownList=[];\n   this.staffCategory.selectedItems=[];\n   this.updateUsers();\n }\n removeGroupSubStaffCategories(items){\n  items.list.forEach(element => {\n      this.removeSubStaffCategories(element);\n     });\n     this.updateUsers();\n}\ngetGroupSubStaffCategories(items){\n  items.list.forEach(element => {\n      this.getStaffSubCategories(element);\n     });\n     this.updateUsers();\n}\n\n\ngetUserIds$(){\n  let roleIds= Array.prototype.map.call(this.roleCategory.selectedItems,function(item){ return item.value}).join(\",\");\n  let blockIds= Array.prototype.map.call(this.apartmentBlock.selectedItems,function(item){ return item.apartmentBlockId}).join(\",\");\n  let conditionIds= Array.prototype.map.call(this.condition.selectedItems,function(item){ return item.value}).join(\",\");\n  let staffcategoryIds= Array.prototype.map.call(this.staffCategory.selectedItems,function(item){ return item.value}).join(\",\");\n  let staffSubCategoryIds= Array.prototype.map.call(this.staffSubCategory.selectedItems,function(item){ return item.value}).join(\",\");\n  let params={\n    'roleIds':roleIds,\n    'conditionIds':conditionIds,\n    'appartmentbBlockIds':blockIds,\n    'apartmentId':this.apartmentID,\n    'staffcategoryIds':staffcategoryIds,\n    'staffSubCategoryIds':staffSubCategoryIds\n  }  \n  return this.userService.getUsersByFilter(params);\n}\n  //Submit Category\n async submitCreateBroadcastMessageForm(form){\n    let broadCastGroupCategoryIDs= Array.prototype.map.call(this.broadCastGroupCategory.selectedItems,function(item){ return item.broadCastGroupCategoryId}).join(\",\");      \n    let broadcastModeIds= Array.prototype.map.call(this.broadModeArr.selectedItems,function(item){ return item.value}).join(\",\");\n    let broadcastMessage={\n          \"broadCastMessageId\": 0,\n          \"apartmentId\": this.apartmentID,\n          \"subject\": this.message.subject,\n          \"broadcastMessage1\": this.message.ckeditor,\n          \"broadcastBy\": this.loginedUser,\n          \"broadcastOn\": new Date().toISOString(),\n          \"broadcastMessageCategoryId\":0,\n          \"broadcastModeIds\": broadcastModeIds,\n          \"broadCastGroupcategoryId\": null,\n          \"userIds\":null ,\n          \"isReadAllowed\": false,\n          \"isLater\": true,\n          \"laterDate\": null,\n          \"isFlashNotice\": this.isFlashNotice,\n          \"isActive\": true,\n          \"insertedBy\": this.loginedUser,\n          \"insertedOn\": new Date().toISOString(),\n          \"updatedBy\": null,\n          \"updatedOn\": null,\n          \"serialNo\":0,\n          \"description\":\"\",\n          \"filterId\":null\n\n        }\n        \n        if(this.selectedTab=='interest'){\n          broadcastMessage.broadCastGroupcategoryId=parseInt(broadCastGroupCategoryIDs);\n          broadcastMessage.broadcastMessageCategoryId=null;\n          broadcastMessage.userIds= Array.prototype.map.call(this.AssignInterestUsers,function(item){ return item.userId}).join(\",\");\n          if(broadcastMessage.userIds.length==0)\n          {\n            this.modalService.showErrorModal(\"No such Users exists to broadcast message.\");\n          }else{\n            let params={\n              \"sourceBroadCastMessage_model\":broadcastMessage\n            }\n            this.broadcastService.addBroadCastMessage(params).subscribe((res:any) => {\n              if(res.message) {\n                this.sharedService.setAlertMessage(\"Broadcast Message sent successfully\");\n               this.ClearFormData();\n              }\n            });\n          }\n       \n        }\n        if(this.selectedTab=='role'){\n          broadcastMessage.userIds= Array.prototype.map.call(this.users,function(item){ return item.userId}).join(\",\");\n          broadcastMessage.broadcastMessageCategoryId=this.broadCastCategory.selectedItems[0].broadCastMessageCategoryId;\n          broadcastMessage.broadCastGroupcategoryId=null;\n          let roleIds= Array.prototype.map.call(this.roleCategory.selectedItems,function(item){ return item.value}).join(\",\");\n          let blockIds= Array.prototype.map.call(this.apartmentBlock.selectedItems,function(item){ return item.apartmentBlockId}).join(\",\");\n          let conditionIds= Array.prototype.map.call(this.condition.selectedItems,function(item){ return item.value}).join(\",\");\n          let staffcategoryIds= Array.prototype.map.call(this.staffCategory.selectedItems,function(item){ return item.value}).join(\",\");\n          let staffSubCategoryIds= Array.prototype.map.call(this.staffSubCategory.selectedItems,function(item){ return item.value}).join(\",\");\n          let roleTypeIds= Array.prototype.map.call(this.roleTypeArr.selectedItems,function(item){ return item.value}).join(\",\");\n          \n          let params={\n            'filterId':0,\n            'roleIds':roleIds,\n            'conditions':conditionIds,\n            'appartmentbBlockIds':blockIds,\n            'apartmentId':this.apartmentID,\n            'staffCategoryIds':staffcategoryIds,\n            'subStaffCategoryIds':staffSubCategoryIds,\n            \"insertedBy\": this.loginedUser,\n            \"insertedOn\": new Date().toISOString(),\n            \"updatedBy\": null,\n            \"updatedOn\": null,\n            'isActive':true,\n            'roleTypeId':roleTypeIds\n           }  \n          \n          let params2={\n            \"broadCastFilters_model\":params\n          }\n             \n           this.broadcastService.upsertBroadCastFilters(params2).subscribe(\n                (res:any)=>{\n                  broadcastMessage.filterId=parseInt(res.message);\n                  if(broadcastMessage.userIds.length==0)\n                  {\n                    this.modalService.showErrorModal(\"No such Users exists to broadcast message.\");\n                  }else{\n                    let params={\n                      \"sourceBroadCastMessage_model\":broadcastMessage\n                    }\n                    this.broadcastService.addBroadCastMessage(params).subscribe((res:any) => {\n                      if(res.message) {\n                        this.sharedService.setAlertMessage(\"Broadcast Message sent successfully\");\n                       this.ClearFormData();\n                      }\n                    });\n                  }\n                }\n\n           );\n           \n                  // .subscribe((res)=>{\n                  //       broadcastMessage.filterId=parseInt(res);\n                  //                   }).toPromise();\n          }\n\n       \n            \n       \n        }\n        removeDropdownItems(type){\n          if(type==\"block\")\n          {\n            this.apartmentBlock.selectedItems=[];\n          }\n          if(type==\"condition\")\n          {\n            this.condition.selectedItems=[];\n          }\n          this.updateUsers();\n        }\n  ClearFormData(){\n    this.message = {};\n    this.roleTypeArr.selectedItems=[];\n    this.broadCastCategory.selectedItems=[];\n    this.apartmentBlock.selectedItems=[];\n    this.broadModeArr.selectedItems=[];\n    this.broadCastGroupCategory.selectedItems=[];\n    this.removeRole([]);\n    if(this.selectedTab=='role'){\n      this.users=[...this.allUsers];\n    }\n    if(this.selectedTab=='interest'){\n      this.AssignInterestUsers=[];\n    }\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    console.log(event,event.option.value)\n    this.users.filter(key =>{\n      if(key.userId == event.option.value){\n        this.selectedReceipt.push(key);\n      }\n    })\n    this.receiptList.nativeElement.value = '';\n    this.receiptCtrl.setValue(null);\n  }\n  remove(user: string): void {\n    const index = this.selectedReceipt.indexOf(user);\n\n    if (index >= 0) {\n      this.selectedReceipt.splice(index, 1);\n    }\n  }\n\n\n  filterItem(value){\n    if(!value){\n        // this.getTodoList();\n        this.users = this.rawSelectedUsers;\n    }\n    this.users = Object.assign([], this.rawSelectedUsers).filter(item => item.firstName.toLowerCase().indexOf(value.toLowerCase()) > -1)\n }\n}\n","export default \".inbox {\\n  width: 100%;\\n  padding: 0px;\\n  border: 1px solid #dadada;\\n  border-radius: 4px;\\n  box-shadow: none;\\n}\\n.inbox .inbox-list {\\n  width: 100%;\\n  padding: 12px;\\n  background-color: #fbfbfb;\\n  border-radius: 6px;\\n}\\n.inbox .inbox-list .inbox-head .input-group-prepend .input-group-text {\\n  background-color: white;\\n}\\n.inbox .inbox-list .inbox-head .input-group-prepend .input-group-text > i {\\n  font-size: 16px;\\n  color: #9E9E9E;\\n}\\n.inbox .inbox-list .inbox-content {\\n  max-height: calc(100vh - 185px);\\n  overflow: auto;\\n  margin-top: 12px;\\n}\\n.inbox .inbox-list .inbox-content .active-inbox-list {\\n  background-color: #673ab7 !important;\\n}\\n.inbox .inbox-list .inbox-content .active-inbox-list .content-name span {\\n  color: #ffffff !important;\\n}\\n.inbox .inbox-list .inbox-content .active-inbox-list .content-subject {\\n  color: #ffffff !important;\\n}\\n.inbox .inbox-list .inbox-content .inbox-main-content {\\n  border-bottom: 1px solid #dadada;\\n  background: transparent;\\n  box-shadow: none;\\n  padding: 12px;\\n  font-family: \\\"Montserrat\\\", sans-serif;\\n}\\n.inbox .inbox-list .inbox-content .inbox-main-content:hover, .inbox .inbox-list .inbox-content .inbox-main-content:active {\\n  background-color: #673ab7;\\n}\\n.inbox .inbox-list .inbox-content .inbox-main-content:hover .content-name span, .inbox .inbox-list .inbox-content .inbox-main-content:active .content-name span {\\n  color: #ffffff;\\n}\\n.inbox .inbox-list .inbox-content .inbox-main-content:hover .content-subject, .inbox .inbox-list .inbox-content .inbox-main-content:active .content-subject {\\n  color: #ffffff;\\n}\\n.inbox .inbox-list .inbox-content .inbox-main-content .content-name {\\n  display: flex;\\n  justify-content: space-between;\\n}\\n.inbox .inbox-list .inbox-content .inbox-main-content .content-name span {\\n  color: #a5a2a2;\\n}\\n.inbox .inbox-list .inbox-content .inbox-main-content .content-name span:first-child {\\n  font-size: 14px;\\n}\\n.inbox .inbox-list .inbox-content .inbox-main-content .content-name span:last-child {\\n  font-size: 13px;\\n}\\n.inbox .inbox-list .inbox-content .inbox-main-content .content-subject {\\n  margin-top: 8px;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  font-size: 14px;\\n  color: #000000;\\n}\\n.inbox .inbox-details {\\n  width: 100%;\\n  padding: 24px 12px;\\n}\\n.inbox .inbox-details .details-head {\\n  display: flex;\\n  justify-content: space-between;\\n  padding: 12px;\\n}\\n.inbox .inbox-details .details-head span {\\n  color: #a5a2a2;\\n  font-size: 14px;\\n}\\n.inbox .inbox-details .details-head span i {\\n  font-size: 18px;\\n}\\n.inbox .inbox-details .detail-address {\\n  width: 100%;\\n  padding: 12px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: flex-start;\\n  margin-top: 12px;\\n}\\n.inbox .inbox-details .detail-address > img {\\n  width: 60px;\\n  height: 56px;\\n  border-radius: 8px;\\n}\\n.inbox .inbox-details .detail-address > div {\\n  margin-left: 20px;\\n  font-family: \\\"Montserrat\\\", sans-serif;\\n  display: flex;\\n  flex-direction: column;\\n}\\n.inbox .inbox-details .detail-address > div > span {\\n  font-size: 16px;\\n  width: 100%;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  color: #000000;\\n  font-weight: 600;\\n}\\n.inbox .inbox-details .detail-address > div > small {\\n  font-size: 12px;\\n  width: 100%;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  color: #a5a2a2;\\n}\\n.inbox .inbox-details .detail-subject {\\n  padding: 12px;\\n  width: 100%;\\n  font-family: \\\"Montserrat\\\", sans-serif;\\n  color: #000000;\\n  font-weight: 600;\\n  font-size: 22px;\\n  margin-top: 12px;\\n}\\n.inbox .inbox-details .detail-content {\\n  padding: 12px;\\n  width: 100%;\\n  font-family: \\\"Montserrat\\\", sans-serif;\\n  color: #a5a2a2;\\n  font-size: 14px;\\n}\\n.inbox .inbox-details .detail-attachment {\\n  padding: 12px;\\n  width: 100%;\\n  position: absolute;\\n  bottom: 0;\\n  margin-bottom: 12px;\\n}\\n.inbox .inbox-details .detail-attachment .attach-head {\\n  color: #716d6d;\\n  font-weight: 600;\\n  font-size: 16px;\\n  position: relative;\\n  font-family: \\\"Montserrat\\\", sans-serif;\\n}\\n.inbox .inbox-details .detail-attachment .attach-head:after {\\n  position: absolute;\\n  content: \\\"\\\";\\n  height: 1px;\\n  width: 80%;\\n  border-bottom: 1px solid #dadada;\\n  right: 30px;\\n  top: 12px;\\n}\\n.inbox .inbox-details .detail-attachment .attached-file {\\n  margin-top: 12px;\\n}\\n.inbox .inbox-details .detail-attachment .attached-file i {\\n  font-size: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inbox-list',\n  templateUrl: './inbox-list.component.html',\n  styleUrls: ['./inbox-list.component.scss']\n})\nexport class InboxListComponent implements OnInit {\n\n  public messageDate = new Date();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TrashComponent } from './trash/trash.component';\nimport { SentListComponent } from './sent-list/sent-list.component';\nimport { InboxListComponent } from './inbox-list/inbox-list.component';\nimport { ComposeMessageComponent } from './compose-message/compose-message.component';\n\n\n\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: 'compose', pathMatch: 'full'},\n\t{ path: 'inbox-list', component: InboxListComponent},\n\t{ path: 'compose', component: ComposeMessageComponent},\n\t{ path: 'sent', component: SentListComponent},\n\t{ path: 'trash', component: TrashComponent},\n\t{ path: '**', redirectTo: 'compose', pathMatch: 'full'}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InboxRouting { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InboxListComponent } from './inbox-list/inbox-list.component';\nimport { ComposeMessageComponent } from './compose-message/compose-message.component';\nimport { SentListComponent } from './sent-list/sent-list.component';\nimport { TrashComponent } from './trash/trash.component';\nimport { SharedModule } from '../../shared/shared.module';\nimport { InboxRouting } from './inbox-routing.module';\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\nimport {MatChipsModule} from '@angular/material/chips';\n\n\n\n@NgModule({\n  declarations: [InboxListComponent, ComposeMessageComponent, SentListComponent, TrashComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    InboxRouting,\n    AngularMultiSelectModule,\n    MatChipsModule\n  ]\n})\nexport class InboxModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9pbmJveC9zZW50LWxpc3Qvc2VudC1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sent-list',\n  templateUrl: './sent-list.component.html',\n  styleUrls: ['./sent-list.component.scss']\n})\nexport class SentListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Ftcy9pbmJveC90cmFzaC90cmFzaC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-trash',\n  templateUrl: './trash.component.html',\n  styleUrls: ['./trash.component.scss']\n})\nexport class TrashComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n"]}