{"version":3,"sources":["webpack:///src/app/modules/ams/utility/components/utility-add-reading/add-insurance/add-insurance.component.html","webpack:///src/app/modules/ams/utility/components/utility-add-reading/electricity-reading/electricity-reading.component.html","webpack:///src/app/modules/ams/utility/components/utility-add-reading/utility-add-reading.component.html","webpack:///src/app/modules/ams/utility/components/utility-add-reading/water-reading/tower-reading-info/tower-reading-info.component.html","webpack:///src/app/modules/ams/utility/components/utility-add-reading/water-reading/tower-reading-info/unit-reading-info/unit-reading-info.component.html","webpack:///src/app/modules/ams/utility/components/utility-add-reading/water-reading/water-reading.component.html","webpack:///src/app/modules/ams/utility/components/utility-history/utility-history.component.html","webpack:///src/app/modules/ams/utility/components/utility-reports/electricity-report/electricity-report.component.html","webpack:///src/app/modules/ams/utility/components/utility-reports/insurance-report/insurance-report.component.html","webpack:///src/app/modules/ams/utility/components/utility-reports/utility-reports.component.html","webpack:///src/app/modules/ams/utility/components/utility-reports/water-report/water-report.component.html","webpack:///src/app/modules/ams/utility/components/utility-setup/utility-setup.component.html","webpack:///src/app/modules/ams/utility/utility.component.html","webpack:///src/app/modules/ams/utility/components/utility-add-reading/add-insurance/add-insurance.component.scss","webpack:///src/app/modules/ams/utility/components/utility-add-reading/add-insurance/add-insurance.component.ts","webpack:///src/app/modules/ams/utility/components/utility-add-reading/electricity-reading/electricity-reading.component.scss","webpack:///src/app/modules/ams/utility/components/utility-add-reading/electricity-reading/electricity-reading.component.ts","webpack:///src/app/modules/ams/utility/components/utility-add-reading/utility-add-reading.component.scss","webpack:///src/app/modules/ams/utility/components/utility-add-reading/utility-add-reading.component.ts","webpack:///src/app/modules/ams/utility/components/utility-add-reading/water-reading/tower-reading-info/tower-reading-info.component.scss","webpack:///src/app/modules/ams/utility/components/utility-add-reading/water-reading/tower-reading-info/tower-reading-info.component.ts","webpack:///src/app/modules/ams/utility/components/utility-add-reading/water-reading/tower-reading-info/unit-reading-info/unit-reading-info.component.scss","webpack:///src/app/modules/ams/utility/components/utility-add-reading/water-reading/tower-reading-info/unit-reading-info/unit-reading-info.component.ts","webpack:///src/app/modules/ams/utility/components/utility-add-reading/water-reading/water-reading.component.scss","webpack:///src/app/modules/ams/utility/components/utility-add-reading/water-reading/water-reading.component.ts","webpack:///src/app/modules/ams/utility/components/utility-history/utility-history.component.scss","webpack:///src/app/modules/ams/utility/components/utility-history/utility-history.component.ts","webpack:///src/app/modules/ams/utility/components/utility-reports/electricity-report/electricity-report.component.scss","webpack:///src/app/modules/ams/utility/components/utility-reports/electricity-report/electricity-report.component.ts","webpack:///src/app/modules/ams/utility/components/utility-reports/insurance-report/insurance-report.component.scss","webpack:///src/app/modules/ams/utility/components/utility-reports/insurance-report/insurance-report.component.ts","webpack:///src/app/modules/ams/utility/components/utility-reports/utility-reports.component.scss","webpack:///src/app/modules/ams/utility/components/utility-reports/utility-reports.component.ts","webpack:///src/app/modules/ams/utility/components/utility-reports/water-report/water-report.component.scss","webpack:///src/app/modules/ams/utility/components/utility-reports/water-report/water-report.component.ts","webpack:///src/app/modules/ams/utility/components/utility-setup/utility-setup.component.scss","webpack:///src/app/modules/ams/utility/components/utility-setup/utility-setup.component.ts","webpack:///src/app/modules/ams/utility/utility-routing.module.ts","webpack:///src/app/modules/ams/utility/utility.component.scss","webpack:///src/app/modules/ams/utility/utility.component.ts","webpack:///src/app/modules/ams/utility/utility.module.ts"],"names":["AddInsuranceComponent","router","route","utilityTrackerService","lookupService","apartmentService","sharedService","cookieService","onCancel","isInsuranceSubmitted","isEdit","isError","alertMessage","params","apartmentId","parseInt","get","emit","form","details","insuranceCharge","AptunitCount","InsuranceNo","TotalCost","CostPerApt","DateEntered","Comments","Date","toISOString","utilityTrackerInsuranceCharge","addUtilityTrackerInsuranceCharge","subscribe","res","message","resetData","setAlertMessage","errorMessage","error","e","result_des","toFixed","undefined","getApartmentBlockUnitByApartmentId","length","selector","template","ElectricityReadingComponent","isReadingSubmitted","isEditReading","electric_period","electricReading","fromDate","toDate","utilityTrackerElectricityPeriod","addUtilityTrackerElectricityPeriod","period_res","ElectricityPeriodId","addOrUpdateElectricityReading","PrevReading","CurrReading","ElectricalUnit","DateTaken","comments","utilityTrackerElectricityCharge","addUtilityTrackerElectricityCharge","ElectricalUnitPerApT","sub","categoryCostPerApt","dateTaken","getUtilityTrackerCategorysByApartmentId","electric_category","find","x","category","ratePerUnit","UtilityAddReadingComponent","injector","isUtilityCategoryLoaded","selected_utility_type","modalService","utilityCategoryData","filter","item","isActive","i","selected_index","utility_selected_category","apartment_id","loadUtilityCategory","TowerReadingInfoComponent","isTowersLoaded","isUnitSold","isUnitVacant","ItemStartIndex","itemLimit","apartmentBlockId","tower","event","ItemEndIndex","waterReading","getApartmentBlockUnitByBlockId","towerUnitData","totalItems","unit","block_unit","allApartmentWaterCharge","aptUnit","apartmentBlockUnitNumber","water_charge","waterCharge","UnitReadingInfoComponent","status","name","data","unitTypeData","lookupValueName","unitTypeId","lookupValueId","apartmentBlockUnitId","waterReadingPeriodID","prevReading","currReading","units","cost","utilityTrackerWaterCharge","addUtilityTrackerWaterCharge","LookupTypeId","getLookupValueByLookupTypeId","setTimeout","getUnitType","unitType","WaterReadingComponent","isDataLoaded","isSetPeriod","water_reading_period","waterReadingFromDate","waterReadingToDate","utilityTrackerWaterChargePeriod","addUtilityTrackerWaterChargePeriod","getApartmentBlockByApartmentId","propertyTowerData","getUtilityTrackerWaterChargesByApartmentId","UtilityHistoryComponent","isUltilityElectricHisLoaded","isUltilityWaterHisLoaded","isUltilityInsuranceHisLoaded","utilitySearch","unitFieldType","unitOrder","selectedInput","columnField","type","value","selectedUtilityCategory","console","log","selectedTower","filteredUtilityWaterListData","utilityWaterListData","block","getAllElectricalUtiliy","getAllWaterUtiliy","getAllInsuranceUtiliy","window","innerWidth","period_id","electeicalListPeriods","utilityElecteicalListPeriods","periods","periodFrom","slice","periodTo","getElectricityChargesByApartmentId","utilityElecteicalListData","electrical_list","period_param","utilityTrackerElectricityPeriodId","getUtilityTrackerElectricityPeriodsById","period_data","push","getUtilityTrackerInsuranceChargesByApartmentId","utilityInsuranceListData","sort","a","b","dateEntered","ElectricityReportComponent","isReportLoaded","InsuranceReportComponent","UtilityReportsComponent","reportDataList","description","WaterReportComponent","UtilitySetupComponent","isUtilityCategorySubmitted","isUtilityCategoryNew","isUtilityCategoryUpdate","UtilityCategory","UtilityCategoryUpdateId","UtilityRateUnit","selectedItem","utilityTrackerCategoryId","utilityId","deleteBy","deleteUtilityTrackerCategory","submitUtilityCategoryForm","addOrUpdateUtilityCategoryForm","showConfirmModal","id","utilityListData","utilityCategoryId","utilityTrackerCategory","addUtilityTrackerCategory","insertedBy","insertedOn","updateUtilityTrackerCategory","newcategoryadd","is_category_form","unitlistdeleteindexcast","item_id","deleteUtilityCategory","routes","path","redirectTo","pathMatch","component","UtilityRoutingModule","imports","forChild","exports","UtilityComponent","UtilityModule","declarations","bootstrap"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACef,QAAaA,qBAAqB;AAAA;AAAA;AAehC,qCAAsBC,MAAtB,EACUC,KADV,EAEUC,qBAFV,EAGUC,aAHV,EAIUC,gBAJV,EAKUC,aALV,EAMUC,aANV,EAMuC;AAAA;;AANjB,aAAAN,MAAA,GAAAA,MAAA;AACZ,aAAAC,KAAA,GAAAA,KAAA;AACA,aAAAC,qBAAA,GAAAA,qBAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAC,gBAAA,GAAAA,gBAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AAnBA,aAAAC,QAAA,GAAW,IAAI,0DAAJ,EAAX;AAIV,aAAAC,oBAAA,GAAgC,IAAhC;AACA,aAAAC,MAAA,GAAkB,KAAlB;AACA,aAAAC,OAAA,GAAmB,KAAnB;AAEA,aAAAC,YAAA,GAAsB,EAAtB;AAEO,aAAAC,MAAA,GAAS;AACdC,qBAAW,EAAEC,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADP,SAAT;AASmC;;AArBV;AAAA;AAAA,iCAwB1B;AACJ,eAAKR,QAAL,CAAcS,IAAd,CAAmB,KAAnB;AACD;AA1B+B;AAAA;AAAA,kDA4BNC,IA5BM,EA4BA;AAAA;;AAE9B,eAAKT,oBAAL,GAA4B,KAA5B;AAEE,cAAIU,OAAO,GAAG;AAEZ,2BAAeJ,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD,CAFX;AAGZ,kCAAsB,KAAKI,eAAL,CAAqBC,YAH/B;AAIZ,+BAAmB,KAAKD,eAAL,CAAqBE,WAJ5B;AAKZ,yBAAa,KAAKF,eAAL,CAAqBG,SALtB;AAMZ,8BAAkB,KAAKH,eAAL,CAAqBI,UAN3B;AAOZ,2BAAe,KAAKJ,eAAL,CAAqBK,WAPxB;AAQZ,wBAAY,KAAKL,eAAL,CAAqBM,QARrB;AASZ,wBAAY,IATA;AAUZ,0BAAcX,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD,CAVV;AAWZ,0BAAc,IAAIW,IAAJ,GAAWC,WAAX,EAXF;AAYZ,yBAAa,IAZD;AAaZ,yBAAa;AAbD,WAAd;AAgBA,cAAIf,MAAM,GAAE;AACVgB,yCAA6B,EAAEV;AADrB,WAAZ;AAIA,eAAKhB,qBAAL,CAA2B2B,gCAA3B,CAA4DjB,MAA5D,EAAoEkB,SAApE,CAA8E,UAACC,GAAD,EAAa;AAEvF,gBAAGA,GAAG,CAACC,OAAP,EAAgB;AACd,mBAAI,CAACxB,oBAAL,GAA4B,IAA5B;;AACA,mBAAI,CAACyB,SAAL;;AACA,mBAAI,CAAC5B,aAAL,CAAmB6B,eAAnB,CAAmC,8BAAnC;AACD,aAJD,MAKK;AACH,mBAAI,CAAC1B,oBAAL,GAA4B,IAA5B;AACA,mBAAI,CAACE,OAAL,GAAe,IAAf;AACA,mBAAI,CAACC,YAAL,GAAoBoB,GAAG,CAACI,YAAxB;AACD;AACF,WAZH,EAYK,UAAAC,KAAK,EAAI;AACV,iBAAI,CAAC5B,oBAAL,GAA4B,IAA5B;AACA,iBAAI,CAACE,OAAL,GAAe,IAAf;AACA,iBAAI,CAACC,YAAL,GAAoB,oBAApB;AACH,WAhBD;AAkBH;AAtE+B;AAAA;AAAA,wDAwEA0B,CAxEA,EAwEC;AAC/B,cAAG,KAAKlB,eAAL,CAAqBG,SAAxB,EAAkC;AAChC,gBAAIgB,UAAU,GAAG,KAAKnB,eAAL,CAAqBG,SAArB,GAA+B,KAAKH,eAAL,CAAqBC,YAArE;AACD,iBAAKD,eAAL,CAAqBI,UAArB,GAAkCe,UAAU,CAACC,OAAX,CAAmB,CAAnB,CAAlC;AACA;AACF;AA7E+B;AAAA;AAAA,oCA+EvB;AACP,eAAKpB,eAAL,CAAqBE,WAArB,GAAmCmB,SAAnC;AACA,eAAKrB,eAAL,CAAqBG,SAArB,GAAiCkB,SAAjC;AACA,eAAKrB,eAAL,CAAqBI,UAArB,GAAkCiB,SAAlC;AACA,eAAKrB,eAAL,CAAqBM,QAArB,GAAgCe,SAAhC;AACD;AApF+B;AAAA;AAAA,mCAsFxB;AAAA;;AACN,eAAKrB,eAAL,GAAuB,EAAvB;AAEA,eAAKA,eAAL,CAAqBK,WAArB,GAAmC,IAAIE,IAAJ,GAAWC,WAAX,EAAnC;AAEA,cAAIf,MAAM,GAAG;AACXC,uBAAW,EAAEC,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADV,WAAb;AAGA,eAAKX,gBAAL,CAAsBqC,kCAAtB,CAAyD7B,MAAzD,EAAiEkB,SAAjE,CAA2E,UAACC,GAAD,EAAY;AACrF,kBAAI,CAACZ,eAAL,CAAqBC,YAArB,GAAoCW,GAAG,CAACW,MAAxC;AACD,WAFD,EARM,CAWN;AACA;AACA;AACA;AACA;AArG8B;;AAAA;AAAA,OAAlC;;;;cAegC;;cACb;;cACe;;cACP;;cACG;;cACJ;;cACA;;;;AAnBd,8DAAT,8DAAS,E,+EAAA,G,+BAAA,E,UAAA,E,MAAA;AAFC3C,yBAAqB,6DALjC,gEAAU;AACT4C,cAAQ,EAAE,mBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,kKAFS;;;;AAAA,KAAV,CAKiC,E,+EAeF,sD,EACb,8D,EACe,4F,EACP,4E,EACG,kF,EACJ,oF,EACA,gE,EArBQ,GAArB7C,qBAAqB,CAArB;;;;;;;;;;;;;;;;ACfb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACgBf,QAAa8C,2BAA2B;AAAA;AAAA;AAgBtC,2CAAsB7C,MAAtB,EACUC,KADV,EAEUC,qBAFV,EAGUC,aAHV,EAIUC,gBAJV,EAKUC,aALV,EAMUC,aANV,EAMuC;AAAA;;AANjB,aAAAN,MAAA,GAAAA,MAAA;AACZ,aAAAC,KAAA,GAAAA,KAAA;AACA,aAAAC,qBAAA,GAAAA,qBAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAC,gBAAA,GAAAA,gBAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AApBA,aAAAC,QAAA,GAAW,IAAI,0DAAJ,EAAX;AAIV,aAAAuC,kBAAA,GAA8B,IAA9B;AACA,aAAAC,aAAA,GAAyB,KAAzB;AACA,aAAAtC,MAAA,GAAkB,KAAlB;AACA,aAAAC,OAAA,GAAmB,KAAnB;AAEA,aAAAC,YAAA,GAAsB,EAAtB;AAEO,aAAAC,MAAA,GAAS;AACdC,qBAAW,EAAEC,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADP,SAAT;AASmC;;AAtBJ;AAAA;AAAA,iCAyBhC;AACJ,eAAKR,QAAL,CAAcS,IAAd,CAAmB,KAAnB;AACD;AA3BqC;AAAA;AAAA,0CA6BpBC,IA7BoB,EA6BhB;AAAA;;AAElB,cAAI+B,eAAe,GAAG;AAEpB,2BAAelC,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD,CAFH;AAGpB,0BAAc,KAAKkC,eAAL,CAAqBC,QAHf;AAIpB,wBAAY,KAAKD,eAAL,CAAqBE,MAJb;AAKpB,wBAAY,IALQ;AAMpB,0BAAcrC,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD,CANF;AAOpB,0BAAc,IAAIW,IAAJ,GAAWC,WAAX,EAPM;AAQpB,yBAAa,CARO;AASpB,yBAAa;AATO,WAAtB;AAWA,cAAIf,MAAM,GAAE;AACVwC,2CAA+B,EAAEJ;AADvB,WAAZ;AAIA,eAAK9C,qBAAL,CAA2BmD,kCAA3B,CAA8DzC,MAA9D,EAAsEkB,SAAtE,CAAgF,UAACwB,UAAD,EAAmB;AACjG,kBAAI,CAACL,eAAL,CAAqBM,mBAArB,GAA2CD,UAAU,CAACtB,OAAtD;;AACA,kBAAI,CAACwB,6BAAL,CAAmCvC,IAAnC;AACD,WAHD;AAIH;AAlDqC;AAAA;AAAA,sDAoDRA,IApDQ,EAoDF;AAAA;;AAElC,eAAK6B,kBAAL,GAA0B,KAA1B;;AAEA,cAAG,CAAC,KAAKC,aAAT,EAAuB;AAErB,gBAAI7B,OAAO,GAAG;AAEZ,6BAAeJ,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD,CAFX;AAGZ,oCAAsB,KAAKkC,eAAL,CAAqB7B,YAH/B;AAIZ,mDAAqC,KAAK6B,eAAL,CAAqBM,mBAJ9C;AAKZ,6BAAe,KAAKN,eAAL,CAAqBQ,WALxB;AAMZ,6BAAe,KAAKR,eAAL,CAAqBS,WANxB;AAOZ,0CAA4B,KAAKT,eAAL,CAAqBU,cAPrC;AAQZ,gCAAkB,KAAKV,eAAL,CAAqB1B,UAR3B;AASZ,2BAAa,KAAK0B,eAAL,CAAqBW,SATtB;AAUZ,0BAAY,KAAKX,eAAL,CAAqBY,QAVrB;AAWZ,0BAAY,IAXA;AAYZ,4BAAc/C,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD,CAZV;AAaZ,4BAAc,IAAIW,IAAJ,GAAWC,WAAX,EAbF;AAcZ,2BAAa,CAdD;AAeZ,2BAAa;AAfD,aAAd;AAkBA,gBAAIf,MAAM,GAAE;AACVkD,6CAA+B,EAAE5C;AADvB,aAAZ;AAIA,iBAAKhB,qBAAL,CAA2B6D,kCAA3B,CAA8DnD,MAA9D,EAAsEkB,SAAtE,CAAgF,UAACC,GAAD,EAAa;AAEzF,kBAAGA,GAAG,CAACC,OAAP,EAAgB;AACd,sBAAI,CAACc,kBAAL,GAA0B,IAA1B;;AACA,sBAAI,CAACb,SAAL;;AACA,sBAAI,CAAC5B,aAAL,CAAmB6B,eAAnB,CAAmC,wCAAnC;AACD,eAJD,MAKK;AACH,sBAAI,CAACY,kBAAL,GAA0B,IAA1B;AACA,sBAAI,CAACpC,OAAL,GAAe,IAAf;AACA,sBAAI,CAACC,YAAL,GAAoBoB,GAAG,CAACI,YAAxB;AACD;AACF,aAZH,EAYK,UAAAC,KAAK,EAAI;AACV,oBAAI,CAACU,kBAAL,GAA0B,IAA1B;AACA,oBAAI,CAACpC,OAAL,GAAe,IAAf;AACA,oBAAI,CAACC,YAAL,GAAoB,oBAApB;AACH,aAhBD;AAiBD,WAzCD,MA2CK;AAEH,gBAAIO,QAAO,GAAG;AAEZ,6BAAeJ,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD,CAFX;AAGZ,oCAAsB,KAAKkC,eAAL,CAAqB7B,YAH/B;AAIZ,mDAAqC,KAAK6B,eAAL,CAAqBM,mBAJ9C;AAKZ,6BAAe,KAAKN,eAAL,CAAqBQ,WALxB;AAMZ,6BAAe,KAAKR,eAAL,CAAqBS,WANxB;AAOZ,0CAA4B,KAAKT,eAAL,CAAqBe,oBAPrC;AAQZ,gCAAkB,KAAKf,eAAL,CAAqB1B,UAR3B;AASZ,2BAAa,KAAK0B,eAAL,CAAqBW,SATtB;AAUZ,0BAAY,KAAKX,eAAL,CAAqBxB,QAVrB;AAWZ,0BAAY,IAXA;AAYZ,4BAAcX,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD,CAZV;AAaZ,4BAAc,IAAIW,IAAJ,GAAWC,WAAX,EAbF;AAcZ,2BAAa,CAdD;AAeZ,2BAAa;AAfD,aAAd;AAkBA,gBAAIf,OAAM,GAAE;AACVkD,6CAA+B,EAAE5C;AADvB,aAAZ;AAIA,iBAAKhB,qBAAL,CAA2B6D,kCAA3B,CAA8DnD,OAA9D,EAAsEkB,SAAtE,CAAgF,UAACC,GAAD,EAAa;AAEzF,kBAAGA,GAAG,CAACC,OAAP,EAAgB;AACd,sBAAI,CAACc,kBAAL,GAA0B,IAA1B;;AACA,sBAAI,CAACb,SAAL;;AACA,sBAAI,CAAC5B,aAAL,CAAmB6B,eAAnB,CAAmC,0CAAnC;AACD,eAJD,MAKK;AACH,sBAAI,CAACxB,OAAL,GAAe,IAAf;AACA,sBAAI,CAACoC,kBAAL,GAA0B,IAA1B;AACA,sBAAI,CAACnC,YAAL,GAAoBoB,GAAG,CAACI,YAAxB;AACD;AACF,aAZH,EAYK,UAAAC,KAAK,EAAI;AACV,oBAAI,CAACU,kBAAL,GAA0B,IAA1B;AACA,oBAAI,CAACpC,OAAL,GAAe,IAAf;AACA,oBAAI,CAACC,YAAL,GAAoB,oBAApB;AACH,aAhBD;AAiBD;AACF;AA7IqC;AAAA;AAAA,yDA+IL0B,CA/IK,EA+IJ;AAChC;AACA,cAAG,KAAKY,eAAL,CAAqBS,WAArB,IAAoC,KAAKT,eAAL,CAAqBQ,WAA5D,EAAwE;AACtE,gBAAIQ,GAAG,GAAI,KAAKhB,eAAL,CAAqBS,WAArB,GAAmC,KAAKT,eAAL,CAAqBQ,WAAnE;AACA,gBAAInB,UAAU,GAAG2B,GAAG,GAAC,KAAKhB,eAAL,CAAqB7B,YAA1C;AACD,iBAAK6B,eAAL,CAAqBe,oBAArB,GAA4C1B,UAAU,CAACC,OAAX,CAAmB,CAAnB,CAA5C;AACA,iBAAKU,eAAL,CAAqB1B,UAArB,GAAkC,CAAC,KAAK0B,eAAL,CAAqBe,oBAArB,GAA4C,KAAKE,kBAAlD,EAAsE3B,OAAtE,CAA8E,CAA9E,CAAlC;AACA;AACF;AAvJqC;AAAA;AAAA,yDAyJLF,CAzJK,EAyJJ;AAChC;AACA,cAAG,KAAKY,eAAL,CAAqBS,WAArB,IAAoC,KAAKT,eAAL,CAAqBQ,WAA5D,EAAwE;AACtE,gBAAIQ,GAAG,GAAI,KAAKhB,eAAL,CAAqBS,WAArB,GAAmC,KAAKT,eAAL,CAAqBQ,WAAnE;AACA,gBAAInB,UAAU,GAAG2B,GAAG,GAAC,KAAKhB,eAAL,CAAqB7B,YAA1C;AACD,iBAAK6B,eAAL,CAAqBe,oBAArB,GAA4C1B,UAAU,CAACC,OAAX,CAAmB,CAAnB,CAA5C;AACA,iBAAKU,eAAL,CAAqB1B,UAArB,GAAkC,CAAC,KAAK0B,eAAL,CAAqBe,oBAArB,GAA4C,KAAKE,kBAAlD,EAAsE3B,OAAtE,CAA8E,CAA9E,CAAlC;AAEA;AACF;AAlKqC;AAAA;AAAA,oCAqK7B;AACP,eAAKU,eAAL,CAAqBC,QAArB,GAAgCV,SAAhC;AACA,eAAKS,eAAL,CAAqBE,MAArB,GAA8BX,SAA9B;AACA,eAAKS,eAAL,CAAqBQ,WAArB,GAAmCjB,SAAnC;AACA,eAAKS,eAAL,CAAqBS,WAArB,GAAmClB,SAAnC;AACA,eAAKS,eAAL,CAAqBe,oBAArB,GAA4CxB,SAA5C;AACA,eAAKS,eAAL,CAAqBxB,QAArB,GAAgCe,SAAhC;AACA,eAAKS,eAAL,CAAqB1B,UAArB,GAAkCiB,SAAlC;AACD;AA7KqC;AAAA;AAAA,mCA+K9B;AAAA;;AACN,eAAKS,eAAL,GAAuB,EAAvB;AAEA,eAAKA,eAAL,CAAqBkB,SAArB,GAAiC,IAAIzC,IAAJ,GAAWC,WAAX,EAAjC;AAEA,cAAIf,MAAM,GAAG;AACXC,uBAAW,EAAEC,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADV,WAAb;AAGA,eAAKX,gBAAL,CAAsBqC,kCAAtB,CAAyD7B,MAAzD,EAAiEkB,SAAjE,CAA2E,UAACC,GAAD,EAAY;AACrF,kBAAI,CAACkB,eAAL,CAAqB7B,YAArB,GAAoCW,GAAG,CAACW,MAAxC;AACD,WAFD;AAGA,eAAKxC,qBAAL,CAA2BkE,uCAA3B,CAAmExD,MAAnE,EAA2EkB,SAA3E,CAAqF,UAACC,GAAD,EAAa;AAC9F,gBAAIsC,iBAAiB,GAAGtC,GAAG,CAACuC,IAAJ,CAAS,UAAAC,CAAC;AAAA,qBAAGA,CAAC,CAACC,QAAF,IAAc,4BAAjB;AAAA,aAAV,CAAxB;AACA,kBAAI,CAACN,kBAAL,GAA0BG,iBAAiB,CAACI,WAA5C;AACD,WAHH;AAIA;AA9LoC;;AAAA;AAAA,OAAxC;;;;cAgBgC;;cACb;;cACe;;cACP;;cACG;;cACJ;;cACA;;;;AApBd,8DAAT,8DAAS,E,+EAAA,G,qCAAA,E,UAAA,E,MAAA;AAFC5B,+BAA2B,6DAPvC,gEAAU;AACTF,cAAQ,EAAE,yBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,8KAFS;;;;AAAA,KAAV,CAOuC,E,+EAgBR,sD,EACb,8D,EACe,4F,EACP,4E,EACG,kF,EACJ,oF,EACA,gE,EAtBc,GAA3BC,2BAA2B,CAA3B;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYf,QAAa6B,0BAA0B;AAAA;AAAA;AAgBrC,0CAAqBC,QAArB,EACUzE,qBADV,EAESC,aAFT,EAGUE,aAHV,EAIUC,aAJV,EAIqC;AAAA;;AAJhB,aAAAqE,QAAA,GAAAA,QAAA;AACX,aAAAzE,qBAAA,GAAAA,qBAAA;AACD,aAAAC,aAAA,GAAAA,aAAA;AACC,aAAAE,aAAA,GAAAA,aAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AAhBV,aAAAsE,uBAAA,GAAkC,KAAlC;AACA,aAAAC,qBAAA,GAAiC,KAAjC;AAQO,aAAAjE,MAAA,GAAS;AACdC,qBAAW,EAAEC,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADP,SAAT;AAQJ,aAAK+D,YAAL,GAAoB,KAAKH,QAAL,CAAc5D,GAAd,CAAkB,kFAAlB,CAApB;AACH;;AAtBqC;AAAA;AAAA,8CAwBlB;AAAA;;AACjB,cAAIH,MAAM,GAAG;AACXC,uBAAW,EAAEC,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADV,WAAb;AAGF,eAAKb,qBAAL,CAA2BkE,uCAA3B,CAAmExD,MAAnE,EAA2EkB,SAA3E,CAAqF,UAACC,GAAD,EAAa;AAC9F,kBAAI,CAACgD,mBAAL,GAA2BhD,GAAG,CAACiD,MAAJ,CAAW,UAAAC,IAAI,EAAI;AAC1C,qBAAOA,IAAI,CAACC,QAAZ;AACF,aAFyB,CAA3B;AAGG,kBAAI,CAACN,uBAAL,GAA+B,IAA/B;AACD,WALN,EAMK,UAAAxC,KAAK,EAAI,CACV,CAPJ;AAQC;AApCoC;AAAA;AAAA,oCAsCzB+C,CAtCyB,EAsCxB;AACX,eAAKC,cAAL,GAAsBD,CAAtB;AACD;AAxCoC;AAAA;AAAA,iCA0C5B9C,CA1C4B,EA0C3B;AACR,eAAKwC,qBAAL,GAA6B,KAA7B;AACD;AA5CoC;AAAA;AAAA,sCA8CvBL,QA9CuB,EA8Cf;AACrB,eAAKK,qBAAL,GAA6B,IAA7B;AACA,eAAKQ,yBAAL,GAAiCb,QAAjC;AACA;AAjDoC;AAAA;AAAA,mCAmD7B;AACN,eAAKc,YAAL,GAAoBxE,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD,CAA5B;AACA,eAAKwE,mBAAL;AACD;AAtDoC;;AAAA;AAAA,OAAvC;;;;cAgBiC;;cACC;;cACR;;cACA;;cACA;;;;AApBbb,8BAA0B,6DALtC,gEAAU;AACT/B,cAAQ,EAAE,yBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,0JAFS;;;;AAAA,KAAV,CAKsC,E,+EAgBN,sD,EACC,4F,EACR,4E,EACA,oF,EACA,gE,EApBa,GAA1B8B,0BAA0B,CAA1B;;;;;;;;;;;;;;;;ACZb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAac,yBAAyB;AAAA;AAAA;AA2BpC,yCACSpF,gBADT,EAEUD,aAFV,EAGUD,qBAHV,EAIUG,aAJV,EAKUC,aALV,EAKqC;AAAA;;AAJ5B,aAAAF,gBAAA,GAAAA,gBAAA;AACC,aAAAD,aAAA,GAAAA,aAAA;AACA,aAAAD,qBAAA,GAAAA,qBAAA;AACA,aAAAG,aAAA,GAAAA,aAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AAtBV,aAAAG,MAAA,GAAiB,KAAjB;AAEA,aAAAgF,cAAA,GAAyB,KAAzB;AAEA,aAAAC,UAAA,GAAqB,KAArB;AACA,aAAAC,YAAA,GAAuB,KAAvB;AAIA,aAAAC,cAAA,GAAqB,CAArB;AAGA,aAAAC,SAAA,GAAgB,EAAhB;AAEO,aAAAjF,MAAA,GAAS;AACdkF,0BAAgB,EAAEhF,QAAQ,CAAC,KAAKiF,KAAL,CAAWD,gBAAZ;AADZ,SAAT;AASF;;AAjC+B;AAAA;AAAA,uCAmCrBE,KAnCqB,EAmChB;AAClB,eAAKJ,cAAL,GAAsBI,KAAK,CAACJ,cAA5B;AACA,eAAKK,YAAL,GAAoBD,KAAK,CAACC,YAA1B;AACA,eAAKJ,SAAL,GAAiBG,KAAK,CAACH,SAAvB;AACD;AAvCmC;AAAA;AAAA,mCA0CzB;AAAA;;AAET,eAAKK,YAAL,GAAoB,EAApB;AAEA,cAAItF,MAAM,GAAG;AACXkF,4BAAgB,EAAEhF,QAAQ,CAAC,KAAKiF,KAAL,CAAWD,gBAAZ;AADf,WAAb;AAGA,eAAK1F,gBAAL,CAAsB+F,8BAAtB,CAAqDvF,MAArD,EAA6DkB,SAA7D,CAAuE,UAACC,GAAD,EAAc;AAEnF,kBAAI,CAACqE,aAAL,GAAqBrE,GAArB;AACA,kBAAI,CAACsE,UAAL,GAAkB,MAAI,CAACD,aAAL,CAAmB1D,MAArC;;AAEA,gBAAI,MAAI,CAAC2D,UAAL,GAAkB,MAAI,CAACR,SAA3B,EAAsC;AACpC,oBAAI,CAACI,YAAL,GAAoB,MAAI,CAACJ,SAAzB;AACD,aAFD,MAGK;AACH,oBAAI,CAACI,YAAL,GAAoB,MAAI,CAACI,UAAzB;AACD;;AAVkF,uDAWlE,MAAI,CAACD,aAX6D;AAAA;;AAAA;AAAA;AAAA,oBAW1EE,IAX0E;;AAYjF,oBAAIC,UAAU,GAAG,MAAI,CAACC,uBAAL,CAA6BlC,IAA7B,CAAkC,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACkC,OAAF,IAAaH,IAAI,CAACI,wBAAtB;AAAA,iBAAnC,CAAjB;;AACA,oBAAIH,UAAJ,EAAgB;AACdD,sBAAI,CAACK,YAAL,GAAoBJ,UAAU,CAACK,WAAX,CAAuB,CAAvB,CAApB;AACD,iBAFD,MAEO;AACLN,sBAAI,CAACK,YAAL,GAAoB,EAApB;AACD;AAjBgF;;AAWnF,kEAAqC;AAAA;AAOpC;AAlBkF;AAAA;AAAA;AAAA;AAAA;;AAmBnF,kBAAI,CAAClB,cAAL,GAAsB,IAAtB;AAED,WArBD;AAuBD;AAxEmC;;AAAA;AAAA,OAAtC;;;;cA4B4B;;cACD;;cACO;;cACR;;cACA;;;;AA9Bf,8DAAR,6DAAQ,E,+EAAA,G,mCAAA,E,OAAA,E,MAAA;AAEA,8DAAR,6DAAQ,E,+EAAA,G,mCAAA,E,sBAAA,E,MAAA;AAEA,8DAAR,6DAAQ,E,+EAAA,G,mCAAA,E,yBAAA,E,MAAA;AAEA,8DAAR,6DAAQ,E,+EAAA,G,mCAAA,E,2BAAA,E,MAAA;AARED,6BAAyB,6DALrC,gEAAU;AACT7C,cAAQ,EAAE,wBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,0LAFS;;;;AAAA,KAAV,CAKqC,E,+EA4BV,kF,EACD,4E,EACO,4F,EACR,oF,EACA,gE,EAhCY,GAAzB4C,yBAAyB,CAAzB;;;;;;;;;;;;;;;;ACbb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcf,QAAaqB,wBAAwB;AAAA;AAAA;AAiBnC,wCACSzG,gBADT,EAEUD,aAFV,EAGUD,qBAHV,EAIUG,aAJV,EAKUC,aALV,EAKqC;AAAA;;AAJ5B,aAAAF,gBAAA,GAAAA,gBAAA;AACC,aAAAD,aAAA,GAAAA,aAAA;AACA,aAAAD,qBAAA,GAAAA,qBAAA;AACA,aAAAG,aAAA,GAAAA,aAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AAVV,aAAAI,OAAA,GAAmB,KAAnB;AACA,aAAAC,YAAA,GAAsB,EAAtB;AAEA,aAAAF,MAAA,GAAiB,KAAjB;AAQK;;AAvB8B;AAAA;AAAA,uCAyBvB;AACX,eAAKA,MAAL,GAAc,CAAC,KAAKA,MAApB;AACA;AA3BkC;AAAA;AAAA,yCA6BlBqG,MA7BkB,EA6BZ;AACrB,iBAAOA,MAAM,GAAG,KAAH,GAAW,IAAxB;AACD;AA/BkC;AAAA;AAAA,oCAiCvBC,IAjCuB,EAiCnB;AAEd,cAAIC,IAAI,GAAG,kDAAU,KAAKC,YAAf,EAA6B,UAAUhC,IAAV,EAAc;AACpD,gBAAGA,IAAI,CAACiC,eAAL,KAAyBH,IAA5B,EACE,OAAO9B,IAAP;AACH,WAHU,CAAX;;AAKA,cAAG+B,IAAI,KAAKxE,SAAT,IAAsBwE,IAAI,CAACtE,MAAL,IAAe,CAAxC,EAA0C;AACxC,iBAAKyE,UAAL,GAAkB,EAAlB;AACD,WAFD,MAGK;AACH,iBAAKA,UAAL,GAAkBH,IAAI,CAAC,CAAD,CAAJ,CAAQI,aAA1B;AACD;AACF;AA9CkC;AAAA;AAAA,gDAiDXnG,IAjDW,EAiDP;AAAA;;AAE3B,cAAIC,OAAO,GAAG;AAEX,2BAAeJ,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD,CAFZ;AAGX,gCAAoB,KAAKgF,KAAL,CAAWD,gBAHpB;AAIX,oCAAwB,KAAKQ,IAAL,CAAUe,oBAJvB;AAKX,iCAAqB,IALV;AAMX,iDAAqC,KAAKC,oBAN/B;AAOX,2BAAe,KAAKpB,YAAL,CAAkBqB,WAPtB;AAQX,2BAAe,KAAKrB,YAAL,CAAkBsB,WARtB;AASX,qBAAS,KAAKtB,YAAL,CAAkBuB,KAThB;AAUX,0BAAc,IAVH;AAWX,oBAAQ3G,QAAQ,CAAC,KAAKoF,YAAL,CAAkBwB,IAAnB,CAXL;AAYX,yBAAa,KAAKxB,YAAL,CAAkB/B,SAZpB;AAaX,wBAAY,KAAK+B,YAAL,CAAkBrC,QAbnB;AAcX,wBAAY,IAdD;AAeX,0BAAc/C,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD,CAfX;AAgBX,0BAAc,IAAIW,IAAJ,GAAWC,WAAX,EAhBH;AAiBX,yBAAY,IAjBD;AAkBX,yBAAa;AAlBF,WAAd;AAqBD,cAAIf,MAAM,GAAG;AACX+G,qCAAyB,EAAEzG;AADhB,WAAb;AAIA,eAAKhB,qBAAL,CAA2B0H,4BAA3B,CAAwDhH,MAAxD,EAAgEkB,SAAhE,CAA0E,UAACC,GAAD,EAAa;AAEnF,gBAAGA,GAAG,CAACC,OAAP,EAAgB;AACd,oBAAI,CAACvB,MAAL,GAAc,KAAd;;AACA,oBAAI,CAACJ,aAAL,CAAmB6B,eAAnB,CAAmC,kCAAnC;AACD,aAHD,MAIK;AACH,oBAAI,CAACxB,OAAL,GAAe,IAAf;AACA,oBAAI,CAACC,YAAL,GAAoBoB,GAAG,CAACI,YAAxB;AACD;AACF,WAVH,EAUK,UAAAC,KAAK,EAAI;AACT,kBAAI,CAAC1B,OAAL,GAAe,IAAf;AACA,kBAAI,CAACC,YAAL,GAAoB,oBAApB;AACH,WAbF;AAcC;AA1FkC;AAAA;AAAA,yDA4FF0B,CA5FE,EA4FD;AAChC,cAAG,KAAK6D,YAAL,CAAkBsB,WAAlB,IAAiC,KAAKtB,YAAL,CAAkBqB,WAAtD,EAAkE;AAChE,iBAAKrB,YAAL,CAAkBuB,KAAlB,GAA2B,KAAKvB,YAAL,CAAkBsB,WAAlB,GAAgC,KAAKtB,YAAL,CAAkBqB,WAA7E;AACD,iBAAKrB,YAAL,CAAkBwB,IAAlB,GAAyB,CAAC,KAAKxB,YAAL,CAAkBuB,KAAlB,GAA0B,KAAKpC,yBAAL,CAA+BZ,WAA1D,EAAuElC,OAAvE,CAA+E,CAA/E,CAAzB;AACA;AACF;AAjGkC;AAAA;AAAA,yDAmGFF,CAnGE,EAmGD;AAChC,cAAG,KAAK6D,YAAL,CAAkBsB,WAAlB,IAAiC,KAAKtB,YAAL,CAAkBqB,WAAtD,EAAkE;AAChE,iBAAKrB,YAAL,CAAkBuB,KAAlB,GAA2B,KAAKvB,YAAL,CAAkBsB,WAAlB,GAAgC,KAAKtB,YAAL,CAAkBqB,WAA7E;AACD,iBAAKrB,YAAL,CAAkBwB,IAAlB,GAAyB,CAAC,KAAKxB,YAAL,CAAkBuB,KAAlB,GAA0B,KAAKpC,yBAAL,CAA+BZ,WAA1D,EAAuElC,OAAvE,CAA+E,CAA/E,CAAzB;AACA;AACF;AAxGkC;AAAA;AAAA,mCA2GxB;AAAA;;AACT,eAAK2D,YAAL,GAAoB,EAApB,CADS,CAET;;AACA,cAAG,KAAKI,IAAL,CAAUK,YAAV,IAA0BnE,SAA7B,EAAuC;AACrC,iBAAK8D,IAAL,CAAUK,YAAV,GAAyB,EAAzB;AACD;;AACD,cAAG,KAAKL,IAAL,CAAUK,YAAV,CAAuBY,WAAvB,IAAsC,KAAKjB,IAAL,CAAUK,YAAV,CAAuBa,WAAhE,EAA4E;AAC1E,iBAAK/G,MAAL,GAAc,KAAd;AACA,iBAAKyF,YAAL,CAAkBuB,KAAlB,GAA2B,KAAKnB,IAAL,CAAUK,YAAV,CAAuBa,WAAvB,GAAqC,KAAKlB,IAAL,CAAUK,YAAV,CAAuBY,WAAvF;AACD,WAHD,MAGK;AACH,iBAAK9G,MAAL,GAAc,IAAd;AACD;;AACD,eAAKyF,YAAL,CAAkBqB,WAAlB,GAAgC,KAAKjB,IAAL,CAAUK,YAAV,CAAuBY,WAAvD;AACA,eAAKrB,YAAL,CAAkBsB,WAAlB,GAAgC,KAAKlB,IAAL,CAAUK,YAAV,CAAuBa,WAAvD;AACA,eAAKtB,YAAL,CAAkB/B,SAAlB,GAA8B,IAAIzC,IAAJ,GAAWC,WAAX,EAA9B;AAED,eAAKwF,UAAL,GAAkB,EAAlB,CAhBU,CAkBV;;AACC,cAAIvG,MAAM,GAAG;AACXiH,wBAAY,EAAE;AADH,WAAb;AAGA,eAAK1H,aAAL,CAAmB2H,4BAAnB,CAAgDlH,MAAhD,EAAwDkB,SAAxD,CAAkE,UAACC,GAAD,EAAa;AAC7E,kBAAI,CAACkF,YAAL,GAAoBlF,GAApB;AAEAgG,sBAAU,CAAC,YAAM;AAChB,oBAAI,CAACC,WAAL,CAAiB,MAAI,CAAC1B,IAAL,CAAU2B,QAA3B;AACA,aAFS,EAEP,IAFO,CAAV;AAID,WAPD,EAQA,UAAA7F,KAAK,EAAI,CAER,CAVD;AAYA;AA7IiC;;AAAA;AAAA,OAArC;;;;cAkB4B;;cACD;;cACO;;cACR;;cACA;;;;AApBf,8DAAR,6DAAQ,E,+EAAA,G,kCAAA,E,OAAA,E,MAAA;AACA,8DAAR,6DAAQ,E,+EAAA,G,kCAAA,E,MAAA,E,MAAA;AACA,8DAAR,6DAAQ,E,+EAAA,G,kCAAA,E,sBAAA,E,MAAA;AACA,8DAAR,6DAAQ,E,+EAAA,G,kCAAA,E,2BAAA,E,MAAA;AALEyE,4BAAwB,6DALpC,gEAAU;AACTlE,cAAQ,EAAE,uBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,2MAFS;;;;AAAA,KAAV,CAKoC,E,+EAkBT,kF,EACD,4E,EACO,4F,EACR,oF,EACA,gE,EAtBW,GAAxBiE,wBAAwB,CAAxB;;;;;;;;;;;;;;;;ACdb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcf,QAAaqB,qBAAqB;AAAA;AAAA;AAqBhC,qCACS9H,gBADT,EAEUD,aAFV,EAGUD,qBAHV,EAIUG,aAJV,EAKUC,aALV,EAKqC;AAAA;;AAJ5B,aAAAF,gBAAA,GAAAA,gBAAA;AACC,aAAAD,aAAA,GAAAA,aAAA;AACA,aAAAD,qBAAA,GAAAA,qBAAA;AACA,aAAAG,aAAA,GAAAA,aAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AAxBA,aAAAC,QAAA,GAAW,IAAI,0DAAJ,EAAX;AAGV,aAAA4H,YAAA,GAAuB,KAAvB;AACA,aAAAC,WAAA,GAAsB,IAAtB;AAYO,aAAAxH,MAAA,GAAS;AACdC,qBAAW,EAAEC,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADP,SAAT;AASF;;AA3B2B;AAAA;AAAA,iCA6B1B;AACJ,eAAKR,QAAL,CAAcS,IAAd,CAAmB,KAAnB;AACD;AA/B+B;AAAA;AAAA,gDAiCRC,IAjCQ,EAiCJ;AAAA;;AAC1B,eAAKmH,WAAL,GAAmB,KAAnB;AACA,cAAIC,oBAAoB,GAAG;AAEzB,2BAAevH,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD,CAFE;AAGzB,0BAAc,KAAKuH,oBAHM;AAIzB,wBAAY,KAAKC,kBAJQ;AAKzB,wBAAY,IALa;AAMzB,0BAAczH,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD,CANG;AAOzB,0BAAc,IAAIW,IAAJ,GAAWC,WAAX,EAPW;AAQzB,yBAAa,CARY;AASzB,yBAAa;AATY,WAA3B;AAYA,cAAIf,MAAM,GAAG;AACX4H,2CAA+B,EAAEH;AADtB,WAAb;AAIA,eAAKnI,qBAAL,CAA2BuI,kCAA3B,CAA8D7H,MAA9D,EAAsEkB,SAAtE,CAAgF,UAACwB,UAAD,EAAmB;AACjG,mBAAI,CAACgE,oBAAL,GAA4BhE,UAAU,CAACtB,OAAvC;AACA,mBAAI,CAACoG,WAAL,GAAmB,IAAnB;AACD,WAHD;AAID;AAvD+B;AAAA;AAAA,mCAyDrB;AAAA;;AACT,eAAKd,oBAAL,GAA4B9E,SAA5B;AACA,cAAI5B,MAAM,GAAG;AACXC,uBAAW,EAAEC,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADV,WAAb;AAGD,eAAKX,gBAAL,CAAsBsI,8BAAtB,CAAqD9H,MAArD,EAA6DkB,SAA7D,CAAuE,UAACC,GAAD,EAAa;AACnF,mBAAI,CAAC4G,iBAAL,GAAyB5G,GAAzB;AACA,mBAAI,CAACoG,YAAL,GAAoB,IAApB;AAEA,WAJD;AAMC,eAAKjI,qBAAL,CAA2B0I,0CAA3B,CAAsEhI,MAAtE,EAA8EkB,SAA9E,CAAwF,UAACC,GAAD,EAAa;AACnG,mBAAI,CAACyE,uBAAL,GAA+BzE,GAA/B;AACD,WAFD;AAID;AAxE+B;;AAAA;AAAA,OAAlC;;;;cAsB4B;;cACD;;cACO;;cACR;;cACA;;;;AAxBd,8DAAT,8DAAS,E,+EAAA,G,+BAAA,E,UAAA,E,MAAA;AACD,8DAAR,6DAAQ,E,+EAAA,G,+BAAA,E,2BAAA,E,MAAA;AAHEmG,yBAAqB,6DALjC,gEAAU;AACTvF,cAAQ,EAAE,mBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,kKAFS;;;;AAAA,KAAV,CAKiC,E,+EAsBN,kF,EACD,4E,EACO,4F,EACR,oF,EACA,gE,EA1BQ,GAArBsF,qBAAqB,CAArB;;;;;;;;;;;;;;;;ACdb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACgBf,QAAaW,uBAAuB;AAAA;AAAA;AAwClC,uCACU1I,aADV,EAEUE,aAFV,EAGUD,gBAHV,EAIUF,qBAJV,EAKUI,aALV,EAKqC;AAAA;;AAJ3B,aAAAH,aAAA,GAAAA,aAAA;AACA,aAAAE,aAAA,GAAAA,aAAA;AACA,aAAAD,gBAAA,GAAAA,gBAAA;AACA,aAAAF,qBAAA,GAAAA,qBAAA;AACA,aAAAI,aAAA,GAAAA,aAAA;AA3CV,aAAAyE,mBAAA,GAA6B,EAA7B;AAEA,aAAAH,uBAAA,GAAkC,KAAlC;AACA,aAAAkE,2BAAA,GAAsC,KAAtC;AACA,aAAAC,wBAAA,GAAoC,KAApC;AACA,aAAAC,4BAAA,GAAwC,KAAxC;AAOA,aAAAC,aAAA,GAAuB,EAAvB;AASA,aAAAC,aAAA,GAAuB,aAAvB;AACA,aAAAC,SAAA,GAAoB,IAApB;AAEA,aAAAvD,cAAA,GAAqB,CAArB;AAGA,aAAAC,SAAA,GAAgB,EAAhB;AAGA,aAAAuD,aAAA,GAAuB,EAAvB;AACA,aAAAC,WAAA,GAAmB,EAAnB;AAIO,aAAAzI,MAAA,GAAS;AACdC,qBAAW,EAAEC,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADP,SAAT;AAWN;;AAhDiC;AAAA;AAAA,uCAkDnBiF,KAlDmB,EAkDd;AAClB,eAAKJ,cAAL,GAAsBI,KAAK,CAACJ,cAA5B;AACA,eAAKK,YAAL,GAAoBD,KAAK,CAACC,YAA1B;AACA,eAAKJ,SAAL,GAAiBG,KAAK,CAACH,SAAvB;AACD;AAtDiC;AAAA;AAAA,qCAwDrByD,IAxDqB,EAwDjB;AACf,eAAKJ,aAAL,GAAqBI,IAArB;AACA,eAAKH,SAAL,GAAiB,CAAC,KAAKA,SAAvB;AACD;AA3DiC;AAAA;AAAA,wCA6DlBG,IA7DkB,EA6DZ;AACpB,cAAG,KAAKJ,aAAL,IAAsBI,IAAzB,EAA8B;AAC5B,mBAAO,KAAKH,SAAL,GAAiB,KAAjB,GAAyB,MAAhC;AACD,WAFD,MAGK,OAAO,EAAP;AACN;AAlEiC;AAAA;AAAA,uCAoEnBI,KApEmB,EAoEd;AAClB,eAAKH,aAAL,GAAqBG,KAArB;AACD;AAtEiC;AAAA;AAAA,yCAwEpB;AACZ,cAAG,KAAKC,uBAAL,IAAgC,qBAAnC,EAAyD;AACvD,mBAAO,IAAP;AACD,WAFD,MAEK;AACH,mBAAO,KAAP;AACD;AACF;AA9EiC;AAAA;AAAA,gDAgFb;AAAA;;AACnBC,iBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,KAAKC,aAAvC;;AACA,cAAG,KAAKA,aAAL,IAAsB,KAAzB,EAA+B;AAC7B,iBAAKC,4BAAL,GAAmC,KAAKC,oBAAxC;AACD,WAFD,MAEK;AACH,iBAAKD,4BAAL,GAAmC,KAAKC,oBAAL,CAA0B7E,MAA1B,CAAiC,UAAAT,CAAC;AAAA,qBAAGA,CAAC,CAACuF,KAAF,IAAW,OAAI,CAACH,aAAnB;AAAA,aAAlC,CAAnC;AACF;;AACD,eAAKtD,UAAL,GAAkB,KAAKuD,4BAAL,CAAkClH,MAApD;AACA;AAxFiC;AAAA;AAAA,mDA0FV;AACvB,eAAKkD,cAAL,GAAsB,CAAtB;;AAGA,cAAG,KAAK4D,uBAAL,IAAgC,4BAAnC,EAAiE;AAC/D,iBAAKT,wBAAL,GAAgC,KAAhC;AACA,iBAAKC,4BAAL,GAAoC,KAApC;AACA,iBAAKe,sBAAL;AAEA,WALF,MAKO,IAAG,KAAKP,uBAAL,IAAgC,qBAAnC,EAA0D;AAC9D,iBAAKV,2BAAL,GAAmC,KAAnC;AACA,iBAAKE,4BAAL,GAAoC,KAApC;AACD,iBAAKgB,iBAAL;AAEA,WALK,MAKA,IAAG,KAAKR,uBAAL,IAAgC,kBAAnC,EAAsD;AAC3D,iBAAKT,wBAAL,GAAgC,KAAhC;AACA,iBAAKD,2BAAL,GAAmC,KAAnC;AACA,iBAAKmB,qBAAL;AAED,WALM,MAKD,IAAG,KAAKT,uBAAL,IAAgC,WAAnC,EAA+C;AACnD,iBAAKA,uBAAL,GAA+BhH,SAA/B;AACD;AACD;AAhHiC;AAAA;AAAA,uCAkHnB;AACb,iBAAO0H,MAAM,CAACC,UAAP,IAAqB,GAArB,GAA2B,kBAA3B,GAAgD,EAAvD;AACD;AApHiC;AAAA;AAAA,6CAsHhB;AAChB,iBAAO,KAAK9D,UAAL,IAAmB,CAAnB,GAAuB,IAAvB,GAA8B,KAArC;AACD;AAxHiC;AAAA;AAAA,6CA0Hb+D,SA1Ha,EA0HJ;AAC5B,cAAIC,qBAAqB,GAAG,KAAKC,4BAAL,CAAkChG,IAAlC,CAAuC,UAAAC,CAAC;AAAA,mBAAGA,CAAC,CAAC6F,SAAF,IAAeA,SAAlB;AAAA,WAAxC,CAA5B;;AACA,cAAGC,qBAAH,EAAyB;AACvB,mBAAQA,qBAAqB,CAACE,OAAtB,CAA8B,CAA9B,EAAiCC,UAAjC,CAA4CC,KAA5C,CAAkD,CAAlD,EAAoD,EAApD,CAAR;AACD;AACF;AA/HiC;AAAA;AAAA,2CAiIfL,SAjIe,EAiIN;AAC1B,cAAIC,qBAAqB,GAAG,KAAKC,4BAAL,CAAkChG,IAAlC,CAAuC,UAAAC,CAAC;AAAA,mBAAGA,CAAC,CAAC6F,SAAF,IAAeA,SAAlB;AAAA,WAAxC,CAA5B;;AACA,cAAGC,qBAAH,EAAyB;AACvB,mBAAOA,qBAAqB,CAACE,OAAtB,CAA8B,CAA9B,EAAiCG,QAAjC,CAA0CD,KAA1C,CAAgD,CAAhD,EAAkD,EAAlD,CAAP;AACD;AACF;AAtIiC;AAAA;AAAA,iDAyIZ;AAAA;;AACtB,eAAK3B,2BAAL,GAAmC,KAAnC;AACA,cAAIlI,MAAM,GAAG;AACXC,uBAAW,EAAEC,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADV,WAAb;AAGA,eAAKb,qBAAL,CAA2ByK,kCAA3B,CAA8D/J,MAA9D,EAAsEkB,SAAtE,CAAgF,UAACC,GAAD,EAAc;AAC5F,mBAAI,CAAC6I,yBAAL,GAAiC7I,GAAG,CAACiD,MAAJ,CAAW,UAAAC,IAAI,EAAI;AAClD,qBAAOA,IAAI,CAACC,QAAZ;AACD,aAFgC,CAAjC;AAGA,mBAAI,CAACoF,4BAAL,GAAoC,EAApC;;AAJ4F,wDAKjE,OAAI,CAACM,yBAL4D;AAAA;;AAAA;AAAA;AAAA,oBAKpFC,eALoF;AAM5F,oBAAIC,YAAY,GAAG;AAAC,iCAAehK,QAAQ,CAAC,OAAI,CAACR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD,CAAxB;AAAiE,uDAAqC8J,eAAe,CAACE;AAAtH,iBAAnB;;AACA,uBAAI,CAAC7K,qBAAL,CAA2B8K,uCAA3B,CAAmEF,YAAnE,EAAiFhJ,SAAjF,CAA2F,UAACC,GAAD,EAAc;AAEvG,sBAAIkJ,WAAW,GAAC;AAAC,+BAAWlJ,GAAZ;AAAiB,iCAAa8I,eAAe,CAACE;AAA9C,mBAAhB;;AACA,yBAAI,CAACT,4BAAL,CAAkCY,IAAlC,CAAuCD,WAAvC;AACD,iBAJD;AAP4F;;AAK5F,qEAA0D;AAAA;AAO1D;AAZ4F;AAAA;AAAA;AAAA;AAAA;;AAc5F,mBAAI,CAAC5E,UAAL,GAAkB,OAAI,CAACuE,yBAAL,CAA+BlI,MAAjD;;AAEA,gBAAI,OAAI,CAAC2D,UAAL,GAAkB,OAAI,CAACR,SAA3B,EAAsC;AACpC,qBAAI,CAACI,YAAL,GAAoB,OAAI,CAACJ,SAAzB;AACD,aAFD,MAGK;AACH,qBAAI,CAACI,YAAL,GAAoB,OAAI,CAACI,UAAzB;AACD;;AAED,mBAAI,CAACyC,2BAAL,GAAmC,IAAnC;AAED,WAzBD;AA2BD;AAzKmC;AAAA;AAAA,4CA4KnB;AAAA;;AACjB,eAAKa,aAAL,GAAqB,KAArB;AACA,eAAKZ,wBAAL,GAAgC,KAAhC;AACA,cAAInI,MAAM,GAAG;AACXC,uBAAW,EAAEC,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADV,WAAb;AAGA,eAAKb,qBAAL,CAA2B0I,0CAA3B,CAAsEhI,MAAtE,EAA8EkB,SAA9E,CAAwF,UAACC,GAAD,EAAc;AAEpG,mBAAI,CAAC8H,oBAAL,GAA4B9H,GAA5B;AACA,mBAAI,CAAC6H,4BAAL,GAAmC,OAAI,CAACC,oBAAxC;AACA,mBAAI,CAACxD,UAAL,GAAkB,OAAI,CAACuD,4BAAL,CAAkClH,MAApD;;AAEA,gBAAI,OAAI,CAAC2D,UAAL,GAAkB,OAAI,CAACR,SAA3B,EAAsC;AACpC,qBAAI,CAACI,YAAL,GAAoB,OAAI,CAACJ,SAAzB;AACD,aAFD,MAGK;AACH,qBAAI,CAACI,YAAL,GAAoB,OAAI,CAACI,UAAzB;AACD;;AAED,mBAAI,CAAC0C,wBAAL,GAAgC,IAAhC;AAED,WAfD;AAiBC;AAnMmC;AAAA;AAAA,gDAsMf;AAAA;;AACrB,eAAKC,4BAAL,GAAoC,KAApC;AACA,cAAIpI,MAAM,GAAG;AACXC,uBAAW,EAAEC,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADV,WAAb;AAGA,eAAKb,qBAAL,CAA2BiL,8CAA3B,CAA0EvK,MAA1E,EAAkFkB,SAAlF,CAA4F,UAACC,GAAD,EAAc;AAExG,mBAAI,CAACqJ,wBAAL,GAAgCrJ,GAAG,CAACiD,MAAJ,CAAW,UAAAC,IAAI,EAAI;AACjD,qBAAOA,IAAI,CAACC,QAAZ;AACD,aAF+B,CAAhC;;AAGA,mBAAI,CAACkG,wBAAL,CAA8BC,IAA9B,CAAmC,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAChDD,eAAC,GAAG,IAAI5J,IAAJ,CAAS4J,CAAC,CAACE,WAAX,CAAJ;AACAD,eAAC,GAAG,IAAI7J,IAAJ,CAAS6J,CAAC,CAACC,WAAX,CAAJ;AACA,qBAAOF,CAAC,GAACC,CAAF,GAAM,CAAC,CAAP,GAAWD,CAAC,GAACC,CAAF,GAAM,CAAN,GAAU,CAA5B;AACD,aAJD;;AAKA,mBAAI,CAAClF,UAAL,GAAkB,OAAI,CAAC+E,wBAAL,CAA8B1I,MAAhD;;AAEA,gBAAI,OAAI,CAAC2D,UAAL,GAAkB,OAAI,CAACR,SAA3B,EAAsC;AACpC,qBAAI,CAACI,YAAL,GAAoB,OAAI,CAACJ,SAAzB;AACD,aAFD,MAGK;AACH,qBAAI,CAACI,YAAL,GAAoB,OAAI,CAACI,UAAzB;AACD;;AAED,mBAAI,CAAC2C,4BAAL,GAAoC,IAApC;AAED,WArBD;AAuBC;AAlOmC;AAAA;AAAA,mCAqOvB;AAAA;;AAET,cAAIpI,MAAM,GAAG;AACXC,uBAAW,EAAEC,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADV,WAAb;AAGE,eAAKb,qBAAL,CAA2BkE,uCAA3B,CAAmExD,MAAnE,EAA2EkB,SAA3E,CAAqF,UAACC,GAAD,EAAc;AACnG,mBAAI,CAACgD,mBAAL,GAA2BhD,GAAG,CAACiD,MAAJ,CAAW,UAAAC,IAAI,EAAI;AAC5C,qBAAOA,IAAI,CAACC,QAAZ;AACD,aAF0B,CAA3B;AAGA,mBAAI,CAACN,uBAAL,GAA+B,IAA/B;AACD,WALC,EAMA,UAAAxC,KAAK,EAAI,CACR,CAPD;AAQA,eAAKhC,gBAAL,CAAsBsI,8BAAtB,CAAqD9H,MAArD,EAA6DkB,SAA7D,CAAuE,UAACC,GAAD,EAAa;AACjF,mBAAI,CAAC4G,iBAAL,GAAyB5G,GAAzB;AACJ,WAFC;AAGF;AArPgC;;AAAA;AAAA,OAApC;;;;cAyC2B;;cACD;;cACG;;cACK;;cACR;;;;AA7Cb8G,2BAAuB,6DALnC,gEAAU;AACTlG,cAAQ,EAAE,qBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,kJAFS;;;;AAAA,KAAV,CAKmC,E,+EAyCT,4E,EACD,oF,EACG,kF,EACK,4F,EACR,gE,EA7CU,GAAvBiG,uBAAuB,CAAvB;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACgBf,QAAa4C,0BAA0B;AAAA;AAAA;AA+BrC,0CACUtL,aADV,EAEUE,aAFV,EAGUD,gBAHV,EAIUF,qBAJV,EAKUI,aALV,EAKqC;AAAA;;AAJ3B,aAAAH,aAAA,GAAAA,aAAA;AACA,aAAAE,aAAA,GAAAA,aAAA;AACA,aAAAD,gBAAA,GAAAA,gBAAA;AACA,aAAAF,qBAAA,GAAAA,qBAAA;AACA,aAAAI,aAAA,GAAAA,aAAA;AAjCV,aAAAoL,cAAA,GAA0B,KAA1B;AAIA,aAAAzC,aAAA,GAAuB,EAAvB;AAOA,aAAAC,aAAA,GAAuB,aAAvB;AACA,aAAAC,SAAA,GAAoB,IAApB;AAEA,aAAAvD,cAAA,GAAqB,CAArB;AAGA,aAAAC,SAAA,GAAgB,EAAhB;AAGA,aAAAuD,aAAA,GAAuB,EAAvB;AACA,aAAAC,WAAA,GAAmB,EAAnB;AAIO,aAAAzI,MAAA,GAAS;AACdC,qBAAW,EAAEC,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADP,SAAT;AAWN;;AAvCoC;AAAA;AAAA,uCAyCtBiF,KAzCsB,EAyCjB;AAClB,eAAKJ,cAAL,GAAsBI,KAAK,CAACJ,cAA5B;AACA,eAAKK,YAAL,GAAoBD,KAAK,CAACC,YAA1B;AACA,eAAKJ,SAAL,GAAiBG,KAAK,CAACH,SAAvB;AACD;AA7CoC;AAAA;AAAA,qCA+CxByD,IA/CwB,EA+CpB;AACf,eAAKJ,aAAL,GAAqBI,IAArB;AACA,eAAKH,SAAL,GAAiB,CAAC,KAAKA,SAAvB;AACD;AAlDoC;AAAA;AAAA,wCAoDrBG,IApDqB,EAoDf;AACpB,cAAG,KAAKJ,aAAL,IAAsBI,IAAzB,EAA8B;AAC5B,mBAAO,KAAKH,SAAL,GAAiB,KAAjB,GAAyB,MAAhC;AACD,WAFD,MAGK,OAAO,EAAP;AACN;AAzDoC;AAAA;AAAA,uCA2DtBI,KA3DsB,EA2DjB;AAClB,eAAKH,aAAL,GAAqBG,KAArB;AACD;AA7DoC;AAAA;AAAA,uCAgEtB;AACb,iBAAOW,MAAM,CAACC,UAAP,IAAqB,GAArB,GAA2B,kBAA3B,GAAgD,EAAvD;AACD;AAlEoC;AAAA;AAAA,6CAoEnB;AAChB,iBAAO,KAAK9D,UAAL,IAAmB,CAAnB,GAAuB,IAAvB,GAA8B,KAArC;AACD;AAtEoC;AAAA;AAAA,6CAwEhB+D,SAxEgB,EAwEP;AAC5B,cAAIC,qBAAqB,GAAG,KAAKC,4BAAL,CAAkChG,IAAlC,CAAuC,UAAAC,CAAC;AAAA,mBAAGA,CAAC,CAAC6F,SAAF,IAAeA,SAAlB;AAAA,WAAxC,CAA5B;;AACA,cAAGC,qBAAH,EAAyB;AACvB,mBAAQA,qBAAqB,CAACE,OAAtB,CAA8B,CAA9B,EAAiCC,UAAjC,CAA4CC,KAA5C,CAAkD,CAAlD,EAAoD,EAApD,CAAR;AACD;AACF;AA7EoC;AAAA;AAAA,2CA+ElBL,SA/EkB,EA+ET;AAC1B,cAAIC,qBAAqB,GAAG,KAAKC,4BAAL,CAAkChG,IAAlC,CAAuC,UAAAC,CAAC;AAAA,mBAAGA,CAAC,CAAC6F,SAAF,IAAeA,SAAlB;AAAA,WAAxC,CAA5B;;AACA,cAAGC,qBAAH,EAAyB;AACvB,mBAAOA,qBAAqB,CAACE,OAAtB,CAA8B,CAA9B,EAAiCG,QAAjC,CAA0CD,KAA1C,CAAgD,CAAhD,EAAkD,EAAlD,CAAP;AACD;AACF;AApFoC;AAAA;AAAA,iDAuFf;AAAA;;AACtB,eAAKiB,cAAL,GAAsB,KAAtB;AACA,cAAI9K,MAAM,GAAG;AACXC,uBAAW,EAAEC,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADV,WAAb;AAGA,eAAKb,qBAAL,CAA2ByK,kCAA3B,CAA8D/J,MAA9D,EAAsEkB,SAAtE,CAAgF,UAACC,GAAD,EAAc;AAC5F,mBAAI,CAAC6I,yBAAL,GAAiC7I,GAAG,CAACiD,MAAJ,CAAW,UAAAC,IAAI,EAAI;AAClD,qBAAOA,IAAI,CAACC,QAAZ;AACD,aAFgC,CAAjC;AAGA,mBAAI,CAACoF,4BAAL,GAAoC,EAApC;;AAJ4F,wDAKjE,OAAI,CAACM,yBAL4D;AAAA;;AAAA;AAAA;AAAA,oBAKpFC,eALoF;AAM5F,oBAAIC,YAAY,GAAG;AAAC,iCAAehK,QAAQ,CAAC,OAAI,CAACR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD,CAAxB;AAAiE,uDAAqC8J,eAAe,CAACE;AAAtH,iBAAnB;;AACA,uBAAI,CAAC7K,qBAAL,CAA2B8K,uCAA3B,CAAmEF,YAAnE,EAAiFhJ,SAAjF,CAA2F,UAACC,GAAD,EAAc;AAEvG,sBAAIkJ,WAAW,GAAC;AAAC,+BAAWlJ,GAAZ;AAAiB,iCAAa8I,eAAe,CAACE;AAA9C,mBAAhB;;AACA,yBAAI,CAACT,4BAAL,CAAkCY,IAAlC,CAAuCD,WAAvC;AACD,iBAJD;AAP4F;;AAK5F,qEAA0D;AAAA;AAO1D;AAZ4F;AAAA;AAAA;AAAA;AAAA;;AAc5F,mBAAI,CAAC5E,UAAL,GAAkB,OAAI,CAACuE,yBAAL,CAA+BlI,MAAjD;;AAEA,gBAAI,OAAI,CAAC2D,UAAL,GAAkB,OAAI,CAACR,SAA3B,EAAsC;AACpC,qBAAI,CAACI,YAAL,GAAoB,OAAI,CAACJ,SAAzB;AACD,aAFD,MAGK;AACH,qBAAI,CAACI,YAAL,GAAoB,OAAI,CAACI,UAAzB;AACD;;AAED,mBAAI,CAACqF,cAAL,GAAsB,IAAtB;AAED,WAzBD;AA2BD;AAvHsC;AAAA;AAAA,mCA0H1B;AACT,eAAK3B,sBAAL;AACA;AA5HmC;;AAAA;AAAA,OAAvC;;;;cAgC2B;;cACD;;cACG;;cACK;;cACR;;;;AApCb0B,8BAA0B,6DALtC,gEAAU;AACT9I,cAAQ,EAAE,wBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,wKAFS;;;;AAAA,KAAV,CAKsC,E,+EAgCZ,4E,EACD,oF,EACG,kF,EACK,4F,EACR,gE,EApCa,GAA1B6I,0BAA0B,CAA1B;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACef,QAAaE,wBAAwB;AAAA;AAAA;AAiCnC,wCACUxL,aADV,EAEUE,aAFV,EAGUD,gBAHV,EAIUF,qBAJV,EAKUI,aALV,EAKqC;AAAA;;AAJ3B,aAAAH,aAAA,GAAAA,aAAA;AACA,aAAAE,aAAA,GAAAA,aAAA;AACA,aAAAD,gBAAA,GAAAA,gBAAA;AACA,aAAAF,qBAAA,GAAAA,qBAAA;AACA,aAAAI,aAAA,GAAAA,aAAA;AApCV,aAAAoL,cAAA,GAAyB,KAAzB;AAOA,aAAAzC,aAAA,GAAuB,EAAvB;AAOA,aAAAC,aAAA,GAAuB,aAAvB;AACA,aAAAC,SAAA,GAAoB,IAApB;AAEA,aAAAvD,cAAA,GAAqB,CAArB;AAGA,aAAAC,SAAA,GAAgB,EAAhB;AAGA,aAAAuD,aAAA,GAAuB,EAAvB;AACA,aAAAC,WAAA,GAAmB,EAAnB;AAIO,aAAAzI,MAAA,GAAS;AACdC,qBAAW,EAAEC,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADP,SAAT;AAWN;;AAzCkC;AAAA;AAAA,uCA2CpBiF,KA3CoB,EA2Cf;AAClB,eAAKJ,cAAL,GAAsBI,KAAK,CAACJ,cAA5B;AACA,eAAKK,YAAL,GAAoBD,KAAK,CAACC,YAA1B;AACA,eAAKJ,SAAL,GAAiBG,KAAK,CAACH,SAAvB;AACD;AA/CkC;AAAA;AAAA,qCAiDtByD,IAjDsB,EAiDlB;AACf,eAAKJ,aAAL,GAAqBI,IAArB;AACA,eAAKH,SAAL,GAAiB,CAAC,KAAKA,SAAvB;AACD;AApDkC;AAAA;AAAA,wCAsDnBG,IAtDmB,EAsDb;AACpB,cAAG,KAAKJ,aAAL,IAAsBI,IAAzB,EAA8B;AAC5B,mBAAO,KAAKH,SAAL,GAAiB,KAAjB,GAAyB,MAAhC;AACD,WAFD,MAGK,OAAO,EAAP;AACN;AA3DkC;AAAA;AAAA,uCA6DpBI,KA7DoB,EA6Df;AAClB,eAAKH,aAAL,GAAqBG,KAArB;AACD;AA/DkC;AAAA;AAAA,uCAiEpB;AACb,iBAAOW,MAAM,CAACC,UAAP,IAAqB,GAArB,GAA2B,kBAA3B,GAAgD,EAAvD;AACD;AAnEkC;AAAA;AAAA,6CAqEjB;AAChB,iBAAO,KAAK9D,UAAL,IAAmB,CAAnB,GAAuB,IAAvB,GAA8B,KAArC;AACD;AAvEkC;AAAA;AAAA,6CAyEd+D,SAzEc,EAyEL;AAC5B,cAAIC,qBAAqB,GAAG,KAAKC,4BAAL,CAAkChG,IAAlC,CAAuC,UAAAC,CAAC;AAAA,mBAAGA,CAAC,CAAC6F,SAAF,IAAeA,SAAlB;AAAA,WAAxC,CAA5B;;AACA,cAAGC,qBAAH,EAAyB;AACvB,mBAAQA,qBAAqB,CAACE,OAAtB,CAA8B,CAA9B,EAAiCC,UAAjC,CAA4CC,KAA5C,CAAkD,CAAlD,EAAoD,EAApD,CAAR;AACD;AACF;AA9EkC;AAAA;AAAA,2CAgFhBL,SAhFgB,EAgFP;AAC1B,cAAIC,qBAAqB,GAAG,KAAKC,4BAAL,CAAkChG,IAAlC,CAAuC,UAAAC,CAAC;AAAA,mBAAGA,CAAC,CAAC6F,SAAF,IAAeA,SAAlB;AAAA,WAAxC,CAA5B;;AACA,cAAGC,qBAAH,EAAyB;AACvB,mBAAOA,qBAAqB,CAACE,OAAtB,CAA8B,CAA9B,EAAiCG,QAAjC,CAA0CD,KAA1C,CAAgD,CAAhD,EAAkD,EAAlD,CAAP;AACD;AACF;AArFkC;AAAA;AAAA,gDAwFhB;AAAA;;AACnB,eAAKiB,cAAL,GAAsB,KAAtB;AACA,cAAI9K,MAAM,GAAG;AACXC,uBAAW,EAAEC,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADV,WAAb;AAGA,eAAKb,qBAAL,CAA2BiL,8CAA3B,CAA0EvK,MAA1E,EAAkFkB,SAAlF,CAA4F,UAACC,GAAD,EAAc;AAExG,mBAAI,CAACqJ,wBAAL,GAAgCrJ,GAAG,CAACiD,MAAJ,CAAW,UAAAC,IAAI,EAAI;AACjD,qBAAOA,IAAI,CAACC,QAAZ;AACD,aAF+B,CAAhC;;AAGA,mBAAI,CAACkG,wBAAL,CAA8BC,IAA9B,CAAmC,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAChDD,eAAC,GAAG,IAAI5J,IAAJ,CAAS4J,CAAC,CAACE,WAAX,CAAJ;AACAD,eAAC,GAAG,IAAI7J,IAAJ,CAAS6J,CAAC,CAACC,WAAX,CAAJ;AACA,qBAAOF,CAAC,GAACC,CAAF,GAAM,CAAC,CAAP,GAAWD,CAAC,GAACC,CAAF,GAAM,CAAN,GAAU,CAA5B;AACD,aAJD;;AAKA,mBAAI,CAAClF,UAAL,GAAkB,OAAI,CAAC+E,wBAAL,CAA8B1I,MAAhD;;AAEA,gBAAI,OAAI,CAAC2D,UAAL,GAAkB,OAAI,CAACR,SAA3B,EAAsC;AACpC,qBAAI,CAACI,YAAL,GAAoB,OAAI,CAACJ,SAAzB;AACD,aAFD,MAGK;AACH,qBAAI,CAACI,YAAL,GAAoB,OAAI,CAACI,UAAzB;AACD;;AAED,mBAAI,CAACqF,cAAL,GAAsB,IAAtB;AAED,WArBD;AAuBD;AApHoC;AAAA;AAAA,mCAsHxB;AAEX,eAAKzB,qBAAL;AAEC;AA1HkC;;AAAA;AAAA,OAArC;;;;cAkC2B;;cACD;;cACG;;cACK;;cACR;;;;AAtCb0B,4BAAwB,6DALpC,gEAAU;AACThJ,cAAQ,EAAE,sBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,oKAFS;;;;AAAA,KAAV,CAKoC,E,+EAkCV,4E,EACD,oF,EACG,kF,EACK,4F,EACR,gE,EAtCW,GAAxB+I,wBAAwB,CAAxB;;;;;;;;;;;;;;;;ACfb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQf,QAAaC,uBAAuB;AAAA;AAAA;AAKlC,uCAAoBtL,aAApB,EAAiD;AAAA;;AAA7B,aAAAA,aAAA,GAAAA,aAAA;AAFpB,aAAA6H,YAAA,GAAuB,KAAvB;AAEoD;;AALlB;AAAA;AAAA,mCAOvB;AACT,eAAK0D,cAAL,GAAsB,CACpB;AAACzE,yBAAa,EAAE,aAAhB;AAA8BF,2BAAe,EAAE,4BAA/C;AAA6E4E,uBAAW,EAAC,mDAAzF;AAA6IxC,gBAAI,EAAC;AAAlJ,WADoB,EAEpB;AAAClC,yBAAa,EAAE,OAAhB;AAAyBF,2BAAe,EAAE,uBAA1C;AAAkE4E,uBAAW,EAAC,+CAA9E;AAA8HxC,gBAAI,EAAC;AAAnI,WAFoB,EAGpB;AAAClC,yBAAa,EAAE,WAAhB;AAA6BF,2BAAe,EAAE,2BAA9C;AAA0E4E,uBAAW,EAAC,kDAAtF;AAAyIxC,gBAAI,EAAC;AAA9I,WAHoB,CAAtB;AAMC,eAAKnB,YAAL,GAAoB,IAApB;AACD;AAfgC;;AAAA;AAAA,OAApC;;;;cAKoC;;;;AALvByD,2BAAuB,6DALnC,gEAAU;AACTjJ,cAAQ,EAAE,qBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,kJAFS;;;;AAAA,KAAV,CAKmC,E,+EAKA,gE,EALA,GAAvBgJ,uBAAuB,CAAvB;;;;;;;;;;;;;;;;ACRb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACef,QAAaG,oBAAoB;AAAA;AAAA;AAkC/B,oCACU5L,aADV,EAEUE,aAFV,EAGUD,gBAHV,EAIUF,qBAJV,EAKUI,aALV,EAKqC;AAAA;;AAJ3B,aAAAH,aAAA,GAAAA,aAAA;AACA,aAAAE,aAAA,GAAAA,aAAA;AACA,aAAAD,gBAAA,GAAAA,gBAAA;AACA,aAAAF,qBAAA,GAAAA,qBAAA;AACA,aAAAI,aAAA,GAAAA,aAAA;AApCV,aAAAoL,cAAA,GAAyB,KAAzB;AAOA,aAAAzC,aAAA,GAAuB,EAAvB;AAOA,aAAAC,aAAA,GAAuB,aAAvB;AACA,aAAAC,SAAA,GAAoB,IAApB;AAEA,aAAAvD,cAAA,GAAqB,CAArB;AAGA,aAAAC,SAAA,GAAgB,EAAhB;AAGA,aAAAuD,aAAA,GAAuB,EAAvB;AACA,aAAAC,WAAA,GAAmB,EAAnB;AAIO,aAAAzI,MAAA,GAAS;AACdC,qBAAW,EAAEC,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADP,SAAT;AAWN;;AA1C8B;AAAA;AAAA,uCA4ChBiF,KA5CgB,EA4CX;AAClB,eAAKJ,cAAL,GAAsBI,KAAK,CAACJ,cAA5B;AACA,eAAKK,YAAL,GAAoBD,KAAK,CAACC,YAA1B;AACA,eAAKJ,SAAL,GAAiBG,KAAK,CAACH,SAAvB;AACD;AAhD8B;AAAA;AAAA,qCAkDlByD,IAlDkB,EAkDd;AACf,eAAKJ,aAAL,GAAqBI,IAArB;AACA,eAAKH,SAAL,GAAiB,CAAC,KAAKA,SAAvB;AACD;AArD8B;AAAA;AAAA,wCAuDfG,IAvDe,EAuDT;AACpB,cAAG,KAAKJ,aAAL,IAAsBI,IAAzB,EAA8B;AAC5B,mBAAO,KAAKH,SAAL,GAAiB,KAAjB,GAAyB,MAAhC;AACD,WAFD,MAGK,OAAO,EAAP;AACN;AA5D8B;AAAA;AAAA,uCA8DhBI,KA9DgB,EA8DX;AAClB,eAAKH,aAAL,GAAqBG,KAArB;AACD;AAhE8B;AAAA;AAAA,gDAmEV;AAAA;;AACnBE,iBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,KAAKC,aAAvC;;AACA,cAAG,KAAKA,aAAL,IAAsB,KAAzB,EAA+B;AAC7B,iBAAKC,4BAAL,GAAmC,KAAKC,oBAAxC;AACD,WAFD,MAEK;AACH,iBAAKD,4BAAL,GAAmC,KAAKC,oBAAL,CAA0B7E,MAA1B,CAAiC,UAAAT,CAAC;AAAA,qBAAGA,CAAC,CAACuF,KAAF,IAAW,OAAI,CAACH,aAAnB;AAAA,aAAlC,CAAnC;AACF;;AACD,eAAKtD,UAAL,GAAkB,KAAKuD,4BAAL,CAAkClH,MAApD;AACA;AA3E8B;AAAA;AAAA,uCA8EhB;AACb,iBAAOwH,MAAM,CAACC,UAAP,IAAqB,GAArB,GAA2B,kBAA3B,GAAgD,EAAvD;AACD;AAhF8B;AAAA;AAAA,6CAkFb;AAChB,iBAAO,KAAK9D,UAAL,IAAmB,CAAnB,GAAuB,IAAvB,GAA8B,KAArC;AACD;AApF8B;AAAA;AAAA,6CAsFV+D,SAtFU,EAsFD;AAC5B,cAAIC,qBAAqB,GAAG,KAAKC,4BAAL,CAAkChG,IAAlC,CAAuC,UAAAC,CAAC;AAAA,mBAAGA,CAAC,CAAC6F,SAAF,IAAeA,SAAlB;AAAA,WAAxC,CAA5B;;AACA,cAAGC,qBAAH,EAAyB;AACvB,mBAAQA,qBAAqB,CAACE,OAAtB,CAA8B,CAA9B,EAAiCC,UAAjC,CAA4CC,KAA5C,CAAkD,CAAlD,EAAoD,EAApD,CAAR;AACD;AACF;AA3F8B;AAAA;AAAA,2CA6FZL,SA7FY,EA6FH;AAC1B,cAAIC,qBAAqB,GAAG,KAAKC,4BAAL,CAAkChG,IAAlC,CAAuC,UAAAC,CAAC;AAAA,mBAAGA,CAAC,CAAC6F,SAAF,IAAeA,SAAlB;AAAA,WAAxC,CAA5B;;AACA,cAAGC,qBAAH,EAAyB;AACvB,mBAAOA,qBAAqB,CAACE,OAAtB,CAA8B,CAA9B,EAAiCG,QAAjC,CAA0CD,KAA1C,CAAgD,CAAhD,EAAkD,EAAlD,CAAP;AACD;AACF;AAlG8B;AAAA;AAAA,4CAsGhB;AAAA;;AACf,eAAKd,aAAL,GAAqB,KAArB;AACA,eAAK+B,cAAL,GAAsB,KAAtB;AACA,cAAI9K,MAAM,GAAG;AACXC,uBAAW,EAAEC,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADV,WAAb;AAGA,eAAKb,qBAAL,CAA2B0I,0CAA3B,CAAsEhI,MAAtE,EAA8EkB,SAA9E,CAAwF,UAACC,GAAD,EAAc;AAEpG,mBAAI,CAAC8H,oBAAL,GAA4B9H,GAA5B;AACA,mBAAI,CAAC6H,4BAAL,GAAmC,OAAI,CAACC,oBAAxC;AACA,mBAAI,CAACxD,UAAL,GAAkB,OAAI,CAACuD,4BAAL,CAAkClH,MAApD;;AAEA,gBAAI,OAAI,CAAC2D,UAAL,GAAkB,OAAI,CAACR,SAA3B,EAAsC;AACpC,qBAAI,CAACI,YAAL,GAAoB,OAAI,CAACJ,SAAzB;AACD,aAFD,MAGK;AACH,qBAAI,CAACI,YAAL,GAAoB,OAAI,CAACI,UAAzB;AACD;;AAED,mBAAI,CAACqF,cAAL,GAAsB,IAAtB;AAED,WAfD;AAiBD;AA7HgC;AAAA;AAAA,mCAgIpB;AAAA;;AACT,cAAI9K,MAAM,GAAG;AACXC,uBAAW,EAAEC,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADV,WAAb;AAGE,eAAKX,gBAAL,CAAsBsI,8BAAtB,CAAqD9H,MAArD,EAA6DkB,SAA7D,CAAuE,UAACC,GAAD,EAAa;AAClF,mBAAI,CAAC4G,iBAAL,GAAyB5G,GAAzB;AACH,WAFC;AAGD,eAAKiI,iBAAL;AACD;AAxI6B;;AAAA;AAAA,OAAjC;;;;cAmC2B;;cACD;;cACG;;cACK;;cACR;;;;AAvCb+B,wBAAoB,6DALhC,gEAAU;AACTpJ,cAAQ,EAAE,kBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,4JAFS;;;;AAAA,KAAV,CAKgC,E,+EAmCN,4E,EACD,oF,EACG,kF,EACK,4F,EACR,gE,EAvCO,GAApBmJ,oBAAoB,CAApB;;;;;;;;;;;;;;;;ACfb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcf,QAAaC,qBAAqB;AAAA;AAAA;AA2BhC,qCACUrH,QADV,EAEUzE,qBAFV,EAGSC,aAHT,EAIUE,aAJV,EAKUC,aALV,EAKqC;AAAA;;AAJ3B,aAAAqE,QAAA,GAAAA,QAAA;AACA,aAAAzE,qBAAA,GAAAA,qBAAA;AACD,aAAAC,aAAA,GAAAA,aAAA;AACC,aAAAE,aAAA,GAAAA,aAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AA3BV,aAAAsE,uBAAA,GAAkC,KAAlC;AACA,aAAAqH,0BAAA,GAAqC,IAArC;AAEA,aAAAC,oBAAA,GAA+B,KAA/B;AACA,aAAAC,uBAAA,GAAkC,KAAlC;AAIA,aAAAC,eAAA,GAAyB,EAAzB;AAEA,aAAAC,uBAAA,GAAiC,CAAjC;AAEA,aAAA1L,YAAA,GAAsB,EAAtB;AACA,aAAAD,OAAA,GAAkB,KAAlB;AAMO,aAAAE,MAAA,GAAS;AACdC,qBAAW,EAAEC,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADP,SAAT;AASJ,aAAK+D,YAAL,GAAoB,KAAKH,QAAL,CAAc5D,GAAd,CAAkB,kFAAlB,CAApB;AACH;;AAlCgC;AAAA;AAAA,gDAoCX;AACnB,eAAKqL,eAAL,GAAuB,EAAvB;AACA,eAAKE,eAAL,GAAuB9J,SAAvB;AACD,eAAK0J,oBAAL,GAA4B,IAA5B;AACA,eAAKC,uBAAL,GAA+B,KAA/B;AACA;AAzC+B;AAAA;AAAA,8CA2CVlH,IA3CU,EA2CN;AACzB,eAAKkH,uBAAL,GAA+B,IAA/B;AACA,eAAKD,oBAAL,GAA4B,KAA5B;AACC,eAAKK,YAAL,GAAoBtH,IAApB;AACD,eAAKmH,eAAL,GAAuBnH,IAAI,CAACT,QAA5B;AACC,eAAK8H,eAAL,GAAwBrH,IAAI,CAACR,WAA7B;AACD,eAAK4H,uBAAL,GAA+BpH,IAAI,CAACuH,wBAApC;AACA;AAlD+B;AAAA;AAAA,8CAoDVvH,IApDU,EAoDN;AAAA;;AAEzB,eAAKL,uBAAL,GAA+B,KAA/B;AACC6E,iBAAO,CAACC,GAAR,CAAYzE,IAAZ;AACD,cAAIrE,MAAM,GAAG;AACV6L,qBAAS,EAAExH,IAAI,CAACuH,wBADN;AAEVE,oBAAQ,EAAE5L,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD;AAFR,WAAb;AAKA,eAAKb,qBAAL,CAA2ByM,4BAA3B,CAAwD/L,MAAxD,EAAgEkB,SAAhE,CAA0E,UAACC,GAAD,EAAa;AACpF,mBAAI,CAACwD,mBAAL;AACF,WAFD;AAGA;AAhE+B;AAAA;AAAA,yCAkEftE,IAlEe,EAkET;AACrB,cAAI,KAAKiL,oBAAT,EAA+B;AAC/B;AACC,iBAAKU,yBAAL,CAA+B3L,IAA/B;AACA,WAHD,MAGO;AACL,iBAAK4L,8BAAL,CAAoC5L,IAApC;AACD;AACH;AAzEgC;AAAA;AAAA,uDA2EFgE,IA3EE,EA2EI;AAClC,eAAKH,YAAL,CAAkBgI,gBAAlB,CAAmC7H,IAAnC;AACF;AA7EgC;AAAA;AAAA,4CA+Ef;AAChB,eAAKiH,oBAAL,GAA4B,KAA5B;AACA,eAAKC,uBAAL,GAA+B,KAA/B;AACC,eAAKF,0BAAL,GAAkC,IAAlC;AACD,eAAKvL,OAAL,GAAe,KAAf;AACA;AApF+B;AAAA;AAAA,yCAsFfqM,EAtFe,EAsFb;AAEjB,cAAI/F,IAAI,GAAG,KAAKgG,eAAL,CAAqBhI,MAArB,CAA6B,UAAAC,IAAI,EAAI;AAC9C,mBAAOA,IAAI,CAACgI,iBAAL,IAA0BF,EAAjC;AACD,WAFU,CAAX;;AAIA,cAAG/F,IAAI,KAAKxE,SAAT,IAAsBwE,IAAI,CAACtE,MAAL,KAAgB,CAAzC,EAA4C;AAC1C,mBAAO,CAAP;AACD,WAFD,MAGK;AACH,mBAAOsE,IAAI,CAACtE,MAAZ;AACD;AAEF;AAnG+B;AAAA;AAAA,kDAqGNzB,IArGM,EAqGA;AAC/B;AACA,eAAKP,OAAL,GAAe,IAAf;AAEC,eAAKC,YAAL,GAAoB,6BAApB;AACD;AA1G+B;AAAA;AAAA,uDA4GDM,IA5GC,EA4GK;AAAA;;AAEpC,eAAKgL,0BAAL,GAAkC,KAAlC;AACC,eAAKvL,OAAL,GAAe,KAAf;;AAED,cAAG,KAAKwL,oBAAR,EAA8B;AAE7B,gBAAIhL,OAAO,GAAG;AAEd,6BAAe,KAAKoE,YAFN;AAGd,0BAAY,KAAK8G,eAHH;AAId,6BAAe,KAAKE,eAJN;AAKZ,0BAAY,EALA;AAMd,0BAAY,IANE;AAOd,4BAAcxL,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD,CAPR;AAQd,4BAAc,IAAIW,IAAJ,GAAWC,WAAX,EARA;AASd,2BAAa,IATC;AAUd,2BAAa;AAVC,aAAd;AAcA,gBAAIf,MAAM,GAAG;AACXsM,oCAAsB,EAAEhM;AADb,aAAb;AAIF,iBAAKhB,qBAAL,CAA2BiN,yBAA3B,CAAqDvM,MAArD,EAA6DkB,SAA7D,CAAuE,UAACC,GAAD,EAAa;AAEjF,kBAAGA,GAAG,CAACC,OAAP,EAAgB;AACX,oBAAIpB,QAAM,GAAG;AACXC,6BAAW,EAAEC,QAAQ,CAAC,OAAI,CAACR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADV,iBAAb;;AAGJ,uBAAI,CAACb,qBAAL,CAA2BkE,uCAA3B,CAAmExD,QAAnE,EAA2EkB,SAA3E,CAAqF,UAACC,GAAD,EAAa;AACjG,yBAAI,CAACkK,0BAAL,GAAkC,IAAlC;;AACM,yBAAI,CAAC5L,aAAL,CAAmB6B,eAAnB,CAAmC,8BAAnC;;AAEA,yBAAI,CAAC6C,mBAAL,GAA2BhD,GAAG,CAACiD,MAAJ,CAAW,UAAAC,IAAI,EAAI;AACzC,2BAAOA,IAAI,CAACC,QAAZ;AACD,mBAFuB,CAA3B;AAIN,iBARD;AASA,eAbD,MAcK;AACJ,uBAAI,CAAC+G,0BAAL,GAAkC,IAAlC;AACM,uBAAI,CAACvL,OAAL,GAAe,IAAf;AACA,uBAAI,CAACC,YAAL,GAAoBoB,GAAG,CAACI,YAAxB;AACN;AACD,aArBH;AAsBE,WA1CD,MA2CK;AAEJ,gBAAIjB,SAAO,GAAG;AAEV,0CAA4B,KAAKmL,uBAFvB;AAGV,6BAAevL,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD,CAHb;AAIZ,0BAAY,KAAKqL,eAJL;AAKZ,6BAAe,KAAKE,eALR;AAMV,0BAAY,EANF;AAOZ,0BAAY,IAPA;AAQZ,4BAAc,KAAKC,YAAL,CAAkBa,UARpB;AASZ,4BAAc,KAAKb,YAAL,CAAkBc,UATpB;AAUZ,2BAAavM,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,QAAvB,CAAD,CAVT;AAWZ,2BAAa,IAAIW,IAAJ,GAAWC,WAAX;AAXD,aAAd;AAcA,gBAAIf,QAAM,GAAG;AACXsM,oCAAsB,EAAEhM;AADb,aAAb;AAIF,iBAAKhB,qBAAL,CAA2BoN,4BAA3B,CAAwD1M,QAAxD,EAAgEkB,SAAhE,CAA0E,UAACC,GAAD,EAAa;AAEpF,kBAAGA,GAAG,CAACC,OAAP,EAAgB;AACX,oBAAIpB,QAAM,GAAG;AACXC,6BAAW,EAAEC,QAAQ,CAAC,OAAI,CAACR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADV,iBAAb;;AAGD,uBAAI,CAACb,qBAAL,CAA2BkE,uCAA3B,CAAmExD,QAAnE,EAA2EkB,SAA3E,CAAqF,UAACC,GAAD,EAAa;AACpG,yBAAI,CAACkK,0BAAL,GAAkC,IAAlC;;AACA,yBAAI,CAAC5L,aAAL,CAAmB6B,eAAnB,CAAmC,gCAAnC;;AAEM,yBAAI,CAAC6C,mBAAL,GAA2BhD,GAAG,CAACiD,MAAJ,CAAW,UAAAC,IAAI,EAAI;AACzC,2BAAOA,IAAI,CAACC,QAAZ;AACD,mBAFuB,CAA3B;AAGK,yBAAI,CAACgH,oBAAL,GAA4B,KAA5B;AACA,yBAAI,CAACC,uBAAL,GAA+B,KAA/B;AAEX,iBAVE;AAWH,eAfD,MAgBK;AACJ,uBAAI,CAACF,0BAAL,GAAkC,IAAlC;AACM,uBAAI,CAACvL,OAAL,GAAe,IAAf;AACA,uBAAI,CAACC,YAAL,GAAoBoB,GAAG,CAACI,YAAxB;AACN;AACD,aAvBH;AAwBE;AACA;AAzM8B;AAAA;AAAA,8CA2MZ;AAAA;;AACjB,cAAIvB,MAAM,GAAG;AACXC,uBAAW,EAAEC,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD;AADV,WAAb;AAGH,eAAKb,qBAAL,CAA2BkE,uCAA3B,CAAmExD,MAAnE,EAA2EkB,SAA3E,CAAqF,UAACC,GAAD,EAAa;AAC7F,mBAAI,CAACgD,mBAAL,GAA2BhD,GAAG,CAACiD,MAAJ,CAAW,UAAAC,IAAI,EAAI;AAC1C,qBAAOA,IAAI,CAACC,QAAZ;AACF,aAFyB,CAA3B;AAGG,mBAAI,CAACN,uBAAL,GAA+B,IAA/B;AACD,WALP,EAMM,UAAAxC,KAAK,EAAI,CACV,CAPL;AAQE;AAvN8B;AAAA;AAAA,mCAyNrB;AAAA;;AACT,eAAKkD,YAAL,GAAoBxE,QAAQ,CAAC,KAAKR,aAAL,CAAmBS,GAAnB,CAAuB,aAAvB,CAAD,CAA5B;AACA,eAAKwE,mBAAL;AAEA,eAAKlF,aAAL,CAAmBkN,cAAnB,CAAkCzL,SAAlC,CAA4C,UAAA0L,gBAAgB,EAAI;AAE9D,gBAAGA,gBAAH,EAAoB;AAClB,qBAAI,CAACZ,yBAAL,CAA+BY,gBAA/B;AACD;AACF,WALD;AAOA,eAAKnN,aAAL,CAAmBoN,uBAAnB,CAA2C3L,SAA3C,CAAqD,UAAA4L,OAAO,EAAI;AAE9D,gBAAGA,OAAH,EAAW;AACT,qBAAI,CAACC,qBAAL,CAA2BD,OAA3B;AACD;AACF,WALD;AAMF;AA1OgC;;AAAA;AAAA,OAAlC;;;;cA4BsB;;cACY;;cACR;;cACA;;cACA;;;;AAhCb1B,yBAAqB,6DALjC,gEAAU;AACTrJ,cAAQ,EAAE,mBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,8IAFS;;;;AAAA,KAAV,CAKiC,E,+EA4BZ,sD,EACY,4F,EACR,4E,EACA,oF,EACA,gE,EAhCQ,GAArBoJ,qBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCb,QAAM4B,MAAM,GAAW,CAEtB;AAAEC,UAAI,EAAE,EAAR;AAAYC,gBAAU,EAAE,UAAxB;AAAoCC,eAAS,EAAE;AAA/C,KAFsB,EAGtB;AAAEF,UAAI,EAAE,UAAR;AAAoBG,eAAS,EAAE;AAA/B,KAHsB,EAItB;AAAEH,UAAI,EAAE,SAAR;AAAmBG,eAAS,EAAE;AAA9B,KAJsB,EAKtB;AAAEH,UAAI,EAAE,kBAAR;AAA4BG,eAAS,EAAE;AAAvC,KALsB,EAMtB;AAAEH,UAAI,EAAE,eAAR;AAAyBG,eAAS,EAAE;AAApC,KANsB,EAOtB;AAAEH,UAAI,EAAE,SAAR;AAAmBG,eAAS,EAAE;AAA9B,KAPsB,EAQtB;AAAEH,UAAI,EAAE,SAAR;AAAmBG,eAAS,EAAE;AAA9B,KARsB,EAStB;AAAEH,UAAI,EAAE,qBAAR;AAA+BG,eAAS,EAAE;AAA1C,KATsB,EAUtB;AAAEH,UAAI,EAAE,eAAR;AAAyBG,eAAS,EAAE;AAApC,KAVsB,EAWtB;AAAEH,UAAI,EAAE,mBAAR;AAA6BG,eAAS,EAAE;AAAxC,KAXsB,EAYtB;AAAEH,UAAI,EAAE,IAAR;AAAcC,gBAAU,EAAE,UAA1B;AAAsCC,eAAS,EAAE;AAAjD,KAZsB,CAAvB;;AAoBA,QAAaE,oBAAoB;AAAA;AAAA,KAAjC;;AAAaA,wBAAoB,6DAJhC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBP,MAAtB,CAAD,CADD;AAERQ,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAIgC,GAApBH,oBAAoB,CAApB;;;;;;;;;;;;;;;;ACnCb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOf,QAAaI,gBAAgB;AAAA;AAAA;AAE3B,kCAAc;AAAA;AAAG;;AAFU;AAAA;AAAA,mCAIhB,CACV;AAL0B;;AAAA;AAAA,OAA7B;;AAAaA,oBAAgB,6DAL5B,gEAAU;AACT1L,cAAQ,EAAE,aADD;AAETC,cAAQ,EAAR;AAAA;AAAA,+GAFS;;;;AAAA,KAAV,CAK4B,E,iFAAA,GAAhByL,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACqCb,QAAaC,aAAa;AAAA;AAAA,KAA1B;;AAAaA,iBAAa,6DAvBzB,+DAAS;AACRC,kBAAY,EAAE,CACd,mEADc,EAEd,6GAFc,EAGd,uGAHc,EAId,wHAJc,EAKd,6IALc,EAMd,4HANc,EAOd,8GAPc,EAQd,wJARc,EASd,wKATc,EAUd,4HAVc,EAWd,uIAXc,EAYd,qHAZc,EAad,iIAbc,CADN;AAgBRL,aAAO,EAAE,CACP,4DADO,EAEP,yEAFO,EAGP,4EAHO,CAhBD;AAqBRM,eAAS,EAAE,CAAE,mEAAF;AArBH,KAAT,CAuByB,GAAbF,aAAa,CAAb","file":"modules-ams-utility-utility-module-es5.js","sourcesContent":["export default \"<div class=\\\"vendor-create-wrapper\\\">\\n\\n      <app-alert-message [message]=\\\"errorMessage\\\" [isAlert]=\\\"isError\\\"></app-alert-message>\\n      <form #createInsuranceChargeForm = \\\"ngForm\\\" name=\\\"createInsuranceChargeForm\\\" (ngSubmit)=\\\"submitInsuranceChargeForm(createInsuranceChargeForm)\\\"  novalidate>\\n        <h4 class=\\\"main-title-mini float-left mt-3\\\">\\n          <span>Add Insurance</span>\\n        </h4>\\n\\n        <div class=\\\"card ov clear\\\">\\n\\n          <div class=\\\"card-body ov\\\">\\n\\n            <app-loader *ngIf=\\\"!isInsuranceSubmitted\\\"></app-loader>\\n\\n            <app-alert-message [message]=\\\"alertMessage\\\" [isError]=\\\"isError\\\" ></app-alert-message>\\n\\n        <ng-container *ngIf=\\\"isInsuranceSubmitted\\\">\\n        <div class=\\\"row\\\">\\n\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                  <label>Condo Unit count<span class=\\\"mandatory\\\">*</span></label>\\n                  <input type=\\\"text\\\" [disabled]=true class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"aptunitCount\\\" [(ngModel)]=\\\"insuranceCharge.AptunitCount\\\" required>\\n              </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                  <label>Insurance Number<span class=\\\"mandatory\\\">*</span></label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"insuranceNo\\\" [(ngModel)]=\\\"insuranceCharge.InsuranceNo\\\" required>\\n              </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                  <label>Total Cost<span class=\\\"mandatory\\\">*</span></label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" (keyup)=\\\"calculateCostPerAptFrmTotalCost($event)\\\" placeholder=\\\"Enter\\\" name=\\\"totalUnit\\\" [(ngModel)]=\\\"insuranceCharge.TotalCost\\\" required>\\n              </div>\\n          </div>\\n\\n        </div>\\n          <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                  <label>Cost per Condo<span class=\\\"mandatory\\\">*</span></label>\\n                  <input type=\\\"text\\\" [disabled]=true class=\\\"form-control\\\"  placeholder=\\\"Enter\\\" name=\\\"costPerUnit\\\" [(ngModel)]=\\\"insuranceCharge.CostPerApt\\\" required>\\n              </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"input-box mb-3\\\">\\n                        <label>Date Entered<span class=\\\"mandatory\\\">*</span></label>\\n                        <input class=\\\"form-control\\\" name=\\\"dateTaken\\\" [owlDateTime]=\\\"dateTaken\\\" [owlDateTimeTrigger]=\\\"dateTaken\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"insuranceCharge.DateEntered\\\" required>\\n              <owl-date-time #dateTaken [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n              <div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"dateTaken\\\">\\n                  <mat-icon svgIcon=\\\"feather:calendar\\\"></mat-icon>\\n                </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"input-box\\\">\\n              <label>Comments</label>\\n              <textarea placeholder=\\\"some text here\\\" name=\\\"insuranceComments\\\" [(ngModel)]=\\\"insuranceCharge.Comments\\\"></textarea>\\n            </div>\\n          </div>\\n          </div>\\n        </ng-container>\\n      </div>\\n    </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"list-inline float-right mt-4\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn blue mr-4\\\"  (click)=\\\"Cancel()\\\">Cancel</button>\\n                  <button class=\\\"btn blue mr-2\\\" [disabled]=\\\"createInsuranceChargeForm.invalid\\\" *ngIf=\\\"!isEdit\\\">Submit</button>\\n                  <button class=\\\"btn blue mr-2\\\" [disabled]=\\\"createInsuranceChargeForm.invalid\\\" *ngIf=\\\"isEdit\\\">Update</button>\\n              </div>\\n            </div>\\n          </div>\\n      </form>\\n\\n</div>\\n\"","export default \"<div class=\\\"vendor-create-wrapper\\\">\\n\\n      <app-alert-message [message]=\\\"errorMessage\\\" [isAlert]=\\\"isError\\\"></app-alert-message>\\n      <form #createElectricityReadingForm = \\\"ngForm\\\" name=\\\"createElectricityReadingForm\\\" (ngSubmit)=\\\"submitReadingForm(createElectricityReadingForm)\\\"  novalidate>\\n        <h4 class=\\\"main-title-mini float-left mt-3\\\">\\n          <span>Add Electricity Reading</span>\\n        </h4>\\n\\n        <div class=\\\"card ov clear\\\">\\n\\n          <div class=\\\"card-body ov\\\">\\n\\n            <app-loader *ngIf=\\\"!isReadingSubmitted\\\"></app-loader>\\n\\n            <app-alert-message [message]=\\\"alertMessage\\\" [isError]=\\\"isError\\\" ></app-alert-message>\\n\\n        <ng-container *ngIf=\\\"isReadingSubmitted\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"input-box mb-3\\\">\\n                        <label>From<span class=\\\"mandatory\\\">*</span></label>\\n                        <input class=\\\"form-control\\\" name=\\\"reportFrom\\\" [owlDateTime]=\\\"reportFrom\\\" [owlDateTimeTrigger]=\\\"reportFrom\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"electricReading.fromDate\\\" required>\\n              <owl-date-time #reportFrom [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n              <div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"reportFrom\\\">\\n                  <mat-icon svgIcon=\\\"feather:calendar\\\"></mat-icon>\\n                </div>\\n                </div>\\n          </div>\\n\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"input-box mb-3\\\">\\n                        <label>To<span class=\\\"mandatory\\\">*</span></label>\\n                        <input class=\\\"form-control\\\" name=\\\"reportTo\\\" [owlDateTime]=\\\"reportTo\\\" [owlDateTimeTrigger]=\\\"reportTo\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"electricReading.toDate\\\" required>\\n              <owl-date-time #reportTo [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n              <div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"reportTo\\\">\\n                  <mat-icon svgIcon=\\\"feather:calendar\\\"></mat-icon>\\n                </div>\\n                </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                  <label>Condo Unit count<span class=\\\"mandatory\\\">*</span></label>\\n                  <input type=\\\"text\\\" [disabled]=true class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"aptunitCount\\\" [(ngModel)]=\\\"electricReading.AptunitCount\\\" required>\\n              </div>\\n          </div>\\n\\n        </div>\\n          <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                  <label>Previous Reading<span class=\\\"mandatory\\\">*</span></label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" (keyup)=\\\"calculateUnitPerAptFrmPreReading($event)\\\" placeholder=\\\"Enter\\\" name=\\\"prevReading\\\" [(ngModel)]=\\\"electricReading.PrevReading\\\" required>\\n              </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                  <label>Current Reading<span class=\\\"mandatory\\\">*</span></label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" (keyup)=\\\"calculateUnitPerAptFrmCurReading($event)\\\" placeholder=\\\"Enter\\\" name=\\\"currReading\\\" [(ngModel)]=\\\"electricReading.CurrReading\\\" required>\\n              </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"input-box mb-3\\\">\\n                        <label>Date Taken<span class=\\\"mandatory\\\">*</span></label>\\n                        <input class=\\\"form-control\\\" name=\\\"dateTaken\\\" [owlDateTime]=\\\"dateTaken\\\" [owlDateTimeTrigger]=\\\"dateTaken\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"electricReading.dateTaken\\\" required>\\n              <owl-date-time #dateTaken [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n              <div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"dateTaken\\\">\\n                  <mat-icon svgIcon=\\\"feather:calendar\\\"></mat-icon>\\n                </div>\\n                </div>\\n          </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                  <label>Electrical Units per Condo<span class=\\\"mandatory\\\">*</span></label>\\n                  <input type=\\\"text\\\" [disabled]=true  class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"electricUnit\\\" [(ngModel)]=\\\"electricReading.ElectricalUnitPerApT\\\" required>\\n              </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                  <label>Cost per Condo Unit<span class=\\\"mandatory\\\">*</span></label>\\n                  <input type=\\\"text\\\" [disabled]=true  class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"electricCost\\\" [(ngModel)]=\\\"electricReading.CostPerApt\\\" required>\\n              </div>\\n          </div>\\n          <div class=\\\"col-sm-6\\\">\\n\\n            <div class=\\\"input-box\\\">\\n                        <label>Comments</label>\\n                        <textarea placeholder=\\\"some text here\\\" name=\\\"UtilityReadingComments\\\" [(ngModel)]=\\\"electricReading.Comments\\\"></textarea>\\n                    </div>\\n\\n          </div>\\n          </div>\\n        </ng-container>\\n      </div>\\n\\n    </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"list-inline float-right mt-4\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn blue mr-4\\\"  (click)=\\\"Cancel()\\\">Cancel</button>\\n                  <button class=\\\"btn blue mr-2\\\" [disabled]=\\\"createElectricityReadingForm.invalid\\\" *ngIf=\\\"!isEdit\\\">Submit</button>\\n                  <button class=\\\"btn blue mr-2\\\" [disabled]=\\\"createElectricityReadingForm.invalid\\\" *ngIf=\\\"isEdit\\\">Update</button>\\n              </div>\\n            </div>\\n          </div>\\n      </form>\\n\\n</div>\\n\"","export default \"<div *ngIf=\\\"!selected_utility_type \\\"class=\\\"gl-other-reports-wrapper\\\">\\n\\n\\t<h4 class=\\\"main-title-mini\\\">Select the reports</h4>\\n\\t<div class=\\\"card\\\">\\n\\t\\t<div class=\\\"card-body p-0\\\">\\n\\t\\t\\t<div class=\\\"simple-lists\\\">\\n\\t\\t\\t\\t<ng-container *ngFor=\\\"let utility of utilityCategoryData; let i = index\\\">\\n\\t\\t\\t\\t\\t<a (click)=\\\"selectUtility(utility)\\\">{{utility.category}}</a>\\n\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\\n<ng-container *ngIf=\\\"selected_utility_type\\\">\\n    <app-electricity-reading *ngIf=\\\"utility_selected_category.category == 'Common Electricity Charges'\\\" (onCancel)=\\\"onCancel($event)\\\"></app-electricity-reading>\\n    <app-water-reading *ngIf=\\\"utility_selected_category.category == 'Water Meter Charges'\\\" (onCancel)=\\\"onCancel($event)\\\" [utility_selected_category]=\\\"utility_selected_category\\\"></app-water-reading>\\n\\t\\t<app-add-insurance *ngIf=\\\"utility_selected_category.category == 'Common Insurance'\\\" (onCancel)=\\\"onCancel($event)\\\" ></app-add-insurance>\\n</ng-container>\\n\"","export default \"<div class=\\\"property-tower-wrapper\\\">\\n\\n\\t<ng-container>\\n\\n\\t\\t<form #propertyDetailsForm = \\\"ngForm\\\" name=\\\"propertyDetailsForm\\\" novalidate>\\n\\n\\t\\t\\t<div class=\\\"data-wrapper\\\">\\n\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                <label>Total Units: {{totalItems}}</label>\\n\\t\\t\\t    \\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t</div>\\n\\n\\t\\t</form>\\n\\n\\t</ng-container>\\n\\n  <app-loader *ngIf=\\\"!isTowersLoaded\\\"></app-loader>\\n\\n\\t<ng-container *ngIf=\\\"isTowersLoaded\\\">\\n\\n\\t\\t<div id=\\\"propertyUnitDetailsAccordion\\\">\\n\\n\\t\\t\\t<!-- <h4 class=\\\"main-title-mini float-left mb-3\\\">Units</h4> -->\\n\\n\\t\\t\\t<ul class=\\\"list-group tabs clear\\\">\\n        <div class=\\\"row\\\">\\n          <div  class=\\\"col-sm-2\\\">\\n                  <label>Block Unit<span class=\\\"mandatory\\\">*</span></label>\\n          </div>\\n          <div  class=\\\"col-sm-2\\\">\\n                  <label>Previous reading<span class=\\\"mandatory\\\">*</span></label>\\n          </div>\\n          <div class=\\\"col-sm-2\\\">\\n                  <label>Current Reading<span class=\\\"mandatory\\\">*</span></label>\\n          </div>\\n          <div class=\\\"col-sm-2\\\">\\n                <label>Units this month<span class=\\\"mandatory\\\">*</span></label>\\n          </div>\\n          <div class=\\\"col-sm-2\\\">\\n                <label>Date Taken<span class=\\\"mandatory\\\">*</span></label>\\n          </div>\\n          </div>\\n\\t\\t\\t\\t<ng-container  *ngFor=\\\"let unit of towerUnitData | slice:ItemStartIndex:ItemEndIndex; let i = index; first as isFirst\\\">\\n          <app-unit-reading-info [unit]=\\\"unit\\\"  [tower]=\\\"tower\\\" [waterReadingPeriodID]=\\\"waterReadingPeriodID\\\" [utility_selected_category]=\\\"utility_selected_category\\\"></app-unit-reading-info>\\n\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t</ul>\\n\\n\\t\\t\\t<app-pagination\\n\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"\\n\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\n\\t\\t\\t</app-pagination>\\n\\n\\t\\t</div>\\n\\n\\t</ng-container>\\n\\n</div>\\n\"","export default \"<div class=\\\"property-tower-unit-wrapper\\\">\\n  <app-alert-message [message]=\\\"alertMessage\\\" [isError]=\\\"isError\\\" ></app-alert-message>\\n\\n  <form  #waterReadingDetailsForm = \\\"ngForm\\\" name=\\\"waterReadingDetailsForm\\\" (ngSubmit)=\\\"submitWaterMeterReading(waterReadingDetailsForm)\\\" novalidate>\\n\\n  <div class=\\\"data-wrapper\\\">\\n  <div class=\\\"row\\\">\\n    <div  class=\\\"col-sm-2\\\">\\n        <div class=\\\"input-box\\\">\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" [disabled]=true placeholder=\\\"Enter\\\" name=\\\"blockUnitNo\\\" [(ngModel)]=\\\"unit.apartmentBlockUnitNumber\\\" required>\\n        </div>\\n    </div>\\n    <div  class=\\\"col-sm-2\\\">\\n        <div class=\\\"input-box\\\">\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" [disabled]=\\\"unit.water_charge.prevReading || !isEdit\\\"  placeholder=\\\"Enter\\\" (keyup)=\\\"calculateUnitPerAptFrmPreReading($event)\\\" name=\\\"prevReading\\\" [(ngModel)]=\\\"waterReading.prevReading\\\" required>\\n        </div>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n        <div class=\\\"input-box\\\">\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" [disabled]=!isEdit placeholder=\\\"Enter\\\" (keyup)=\\\"calculateUnitPerAptFrmCurReading($event)\\\" name=\\\"currReading\\\" [(ngModel)]=\\\"waterReading.currReading\\\" required>\\n        </div>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n        <div class=\\\"input-box\\\">\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" [disabled]=true placeholder=\\\"Enter\\\" name=\\\"currUnit\\\" [(ngModel)]=\\\"waterReading.units\\\" required>\\n        </div>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n      <div class=\\\"input-box mb-3\\\">\\n                  <input class=\\\"form-control\\\" name=\\\"dateTaken\\\" [disabled]=!isEdit [owlDateTime]=\\\"dateTaken\\\" [owlDateTimeTrigger]=\\\"dateTaken\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"waterReading.dateTaken\\\" required>\\n        <owl-date-time #dateTaken [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n        <div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"dateTaken\\\">\\n            <!-- <mat-icon svgIcon=\\\"feather:calendar\\\"></mat-icon> -->\\n          </div>\\n          </div>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n\\n      <div *ngIf=\\\"isEdit\\\" class=\\\"list-inline float-right\\\">\\n        <button class=\\\"btn blue\\\" [disabled]=\\\"waterReadingDetailsForm.invalid\\\">Submit</button>\\n        <!-- <button class=\\\"btn blue\\\" [disabled]=\\\"waterReadingDetailsForm.invalid\\\">Update</button> -->\\n      </div>\\n\\n      <div class=\\\"icon-wrapper  mb-2\\\" *ngIf=\\\"!isEdit\\\">\\n        <i-feather class=\\\"icon edit\\\" name=\\\"edit\\\" (click)=\\\"showEditForm()\\\"></i-feather>\\n      </div>\\n\\n      <div class=\\\"icon-wrapper  mb-2\\\" *ngIf=\\\"isEdit\\\">\\n        <i-feather class=\\\"icon back\\\" name=\\\"chevron-left\\\" (click)=\\\"showEditForm()\\\"></i-feather>\\n      </div>\\n\\n    </div>\\n    </div>\\n </div>\\n\\n</form>\\n</div>\\n\"","export default \"<div class=\\\"property-details-wrapper profile-section\\\">\\n\\n  <form #setWaterReadingPeriodForm = \\\"ngForm\\\" name=\\\"setWaterReadingPeriodForm\\\"  (ngSubmit)=\\\"submitReadingPeriodForm(setWaterReadingPeriodForm)\\\" novalidate>\\n\\n    <div class=\\\"card ov mb-30\\\">\\n\\n      <div class=\\\"card-header\\\">\\n        <div class=\\\"float-left\\\">\\n            <h5>Select Reading Period</h5>\\n          </div>\\n      </div>\\n      <div class=\\\"card-body ov\\\">\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"input-box mb-3\\\">\\n                        <label>From<span class=\\\"mandatory\\\">*</span></label>\\n                        <input class=\\\"form-control\\\" name=\\\"reportFrom\\\" [owlDateTime]=\\\"reportFrom\\\" [owlDateTimeTrigger]=\\\"reportFrom\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"waterReadingFromDate\\\" required>\\n              <owl-date-time #reportFrom [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n              <div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"reportFrom\\\">\\n                  <mat-icon svgIcon=\\\"feather:calendar\\\"></mat-icon>\\n                </div>\\n                </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"input-box mb-3\\\">\\n                        <label>To<span class=\\\"mandatory\\\">*</span></label>\\n                        <input class=\\\"form-control\\\" name=\\\"reportTo\\\" [owlDateTime]=\\\"reportTo\\\" [owlDateTimeTrigger]=\\\"reportTo\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"waterReadingToDate\\\" required>\\n              <owl-date-time #reportTo [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n              <div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"reportTo\\\">\\n                  <mat-icon svgIcon=\\\"feather:calendar\\\"></mat-icon>\\n                </div>\\n                </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"list-inline  mt-4\\\">\\n                <button type=\\\"button\\\" class=\\\"btn blue mr-4\\\"  (click)=\\\"cancel()\\\">Cancel</button>\\n                <button class=\\\"btn blue mr-2\\\" [disabled]=\\\"setWaterReadingPeriodForm.invalid\\\">Submit</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n\\n  <app-loader *ngIf=\\\"!isSetPeriod\\\"></app-loader>\\n\\n\\n\\t<h4 *ngIf=\\\"waterReadingPeriodID\\\" class=\\\"main-title-mini float-left\\\">Towers</h4>\\n\\n\\t<div *ngIf=\\\"waterReadingPeriodID\\\" class=\\\"card clear\\\" id=\\\"propertyDetailsAccordion\\\">\\n\\n\\t\\t<div class=\\\"card-body p-0\\\">\\n\\n\\t\\t\\t<app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"isDataLoaded\\\">\\n\\n\\t\\t\\t\\t<ul class=\\\"list-group tabs clear\\\">\\n\\n\\t\\t\\t\\t\\t<ng-container  *ngFor=\\\"let tower of propertyTowerData; let i = index; first as isFirst\\\">\\n\\t\\t\\t\\t\\t\\t<li class=\\\"list-group-item collapsed\\\" data-toggle=\\\"collapse\\\" attr.data-target=\\\"#towerDetail{{i}}\\\" aria-expanded=\\\"true\\\" attr.aria-controls=\\\"towerDetail{{i}}\\\">\\n\\t\\t\\t\\t\\t\\t\\t<span>{{tower.apartmentBlockNumber}}</span>\\n\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t<div id=\\\"towerDetail{{i}}\\\" class=\\\"collapse\\\"  attr.aria-labelledby=\\\"towerDetail{{i}}\\\" data-parent=\\\"#propertyDetailsAccordion\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"details\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<app-tower-reading-info [tower]=\\\"tower\\\" [waterReadingPeriodID]=\\\"waterReadingPeriodID\\\" [allApartmentWaterCharge]=\\\"allApartmentWaterCharge\\\" [utility_selected_category]=\\\"utility_selected_category\\\"></app-tower-reading-info>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t</ul>\\n\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n</div>\\n\"","export default \"<div class=\\\"inventory-view-wrapper\\\">\\n\\n\\n\\t<form #viewUtilityCategoryForm = \\\"ngForm\\\" name=\\\"viewUtilityCategoryForm\\\"  novalidate>\\n\\n\\t\\t<div class=\\\"card ov mb-30\\\">\\n\\n\\t\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t\\t<div class=\\\"float-left\\\">\\n\\t    \\t\\t\\t<h5>Select Category</h5>\\n\\t    \\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-body ov\\\">\\n\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"input-box\\\">\\n                        <label>Utility Category<span class=\\\"mandatory\\\">*</span></label>\\n                        <select (change)=\\\"onUtilityCatregoryChange()\\\"\\n                    name=\\\"utilityCategory\\\"\\n                    id=\\\"utilityCategory\\\"\\n                    class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"selectedUtilityCategory\\\" required>\\n                    <option value=\\\"undefined\\\" selected>Select</option>\\n                    <option *ngFor=\\\"let item of utilityCategoryData\\\" [value]=\\\"item.category\\\">{{ item.category }}</option>\\n                </select>\\n            </div>\\n          </div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</form>\\n\\n\\n\\t<div *ngIf=\\\"selectedUtilityCategory\\\" class=\\\"card table-card\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All {{selectedUtilityCategory}} <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n\\t\\t\\t\\t\\t<li *ngIf=\\\"isWaterHistory()\\\" class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n\\t\\t\\t    \\t<select (change)=\\\"onFilterByTowerChange()\\\" name=\\\"utilityTowerFilter\\\" id=\\\"utilityTowerFilter\\\" class=\\\"form-control filter-width\\\" [(ngModel)]=\\\"selectedTower\\\" required>\\n\\t\\t\\t\\t    \\t<option value=\\\"All\\\" selected>Select Tower</option>\\n\\t\\t\\t\\t    \\t<option *ngFor=\\\"let tower of propertyTowerData\\\" [value]=\\\"tower.apartmentBlockNumber\\\">{{ tower.apartmentBlockNumber }}</option>\\n\\t\\t\\t    \\t</select>\\n\\t\\t    \\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"utilitySearch\\\" >\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n    \\t\\t\\t\\t<a class=\\\"btn trans-white mt_5\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Print</span>\\n    \\t\\t\\t\\t</a>\\n    \\t\\t\\t</li>\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n\\n  \\t\\t<app-loader *ngIf=\\\"!isUltilityInsuranceHisLoaded && !isUltilityWaterHisLoaded && !isUltilityElectricHisLoaded\\\"></app-loader>\\n\\n  \\t\\t<div class=\\\"card-body p-0\\\">\\n\\n  \\t\\t\\t<ng-container *ngIf=\\\"selectedUtilityCategory == 'Common Electricity Charges' && isUltilityElectricHisLoaded\\\">\\n\\n  \\t\\t\\t\\t<table class=\\\"table table-checker table-resizable\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">From\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('fromDate')\\\" [ngClass]=\\\"getFieldOrderBy('fromDate')\\\"></span>\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">To\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('toDate')\\\" [ngClass]=\\\"getFieldOrderBy('toDate')\\\"></span>\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">Pre Reading\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('preReading')\\\" [ngClass]=\\\"getFieldOrderBy('preReading')\\\"></span>\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">Curr Reading\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('currReading')\\\" [ngClass]=\\\"getFieldOrderBy('currReading')\\\"></span>\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">Condo unit\\n                  <span (click)=\\\"sortUnitData('aptUnit')\\\" [ngClass]=\\\"getFieldOrderBy('aptUnit')\\\"></span>\\n\\t\\t\\t\\t\\t\\t  </th>\\n              <th scope=\\\"col\\\">Cost Per Unit\\n                <span (click)=\\\"sortUnitData('costPerUnit')\\\" [ngClass]=\\\"getFieldOrderBy('costPerUnit')\\\"></span>\\n              </th>\\n              <th scope=\\\"col\\\">Added By\\n                <span (click)=\\\"sortUnitData('addedBy')\\\" [ngClass]=\\\"getFieldOrderBy('addedBy')\\\"></span>\\n              </th>\\n\\t\\t\\t\\t\\t    </tr>\\n\\t\\t\\t\\t    </thead>\\n\\t\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t\\t    <tr *ngFor=\\\"let utility of utilityElecteicalListData | simpleSearch: utilitySearch | columnSearch: columnField:selectedInput | sort : unitFieldType: unitOrder | slice:ItemStartIndex:ItemEndIndex ; let i = index\\\" [ngClass]=\\\"utility.isActive ? '' : 'notactive'\\\">\\n\\t\\t\\t\\t\\t      <td class=\\\"name\\\">{{getUtilityFromPeriod(utility.utilityTrackerElectricityChargeId)}}</td>\\n\\t\\t\\t\\t\\t      <td class=\\\"grey\\\">{{getUtilityToPeriod(utility.utilityTrackerElectricityChargeId)}}</td>\\n\\t\\t\\t\\t\\t      <td class=\\\"grey\\\">{{utility.prevReading}}</td>\\n                <td class=\\\"grey\\\">{{utility.currReading}}</td>\\n                <td class=\\\"grey\\\">{{utility.electricalUnitPerAptUnit}}</td>\\n                <td class=\\\"grey\\\">{{utility.costPerAptUnit}}</td>\\n                <td class=\\\"grey\\\">{{utility.insertedByUser}}</td>\\n\\t\\t\\t\\t\\t      <td>\\n\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t    </tr>\\n\\t\\t\\t\\t    </tbody>\\n\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t<div class=\\\"button-wrapper border-top\\\" *ngIf=\\\"isNoItemsAvailable()\\\">\\n\\t    \\t\\t\\t<p class=\\\"snippet\\\">No Records Found</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<app-pagination\\n\\t\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"\\n\\t\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\n\\t\\t\\t\\t</app-pagination>\\n\\n  \\t\\t\\t</ng-container>\\n\\n\\n        <ng-container *ngIf=\\\"this.selectedUtilityCategory == 'Water Meter Charges' && isUltilityWaterHisLoaded\\\">\\n\\n          <table class=\\\"table table-checker table-resizable\\\" [ngClass]=\\\"isMobileView()\\\">\\n          <thead>\\n              <tr>\\n                <th scope=\\\"col\\\">Tower\\n                  <span (click)=\\\"sortUnitData('block')\\\" [ngClass]=\\\"getFieldOrderBy('block')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Condo Unit\\n                  <span (click)=\\\"sortUnitData('aptUnit')\\\" [ngClass]=\\\"getFieldOrderBy('aptUnit')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Connection No\\n                  <span (click)=\\\"sortUnitData('connectionNo')\\\" [ngClass]=\\\"getFieldOrderBy('connectionNo')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Previous Reading\\n                  <span (click)=\\\"sortUnitData('prevReading')\\\" [ngClass]=\\\"getFieldOrderBy('prevReading')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Current Reading\\n                  <span (click)=\\\"sortUnitData('currReading')\\\" [ngClass]=\\\"getFieldOrderBy('currReading')\\\"></span>\\n                </th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let utility of filteredUtilityWaterListData | simpleSearch: utilitySearch | sort : unitFieldType: unitOrder | slice:ItemStartIndex:ItemEndIndex ; let i = index\\\">\\n                <td class=\\\"grey\\\">{{utility.block}}</td>\\n                <td class=\\\"grey\\\">{{utility.aptUnit}}</td>\\n                <td class=\\\"grey\\\"><span *ngIf=\\\"utility.waterCharge.length>0\\\">{{utility.waterCharge[0].connectionNo}}</span></td>\\n                <td class=\\\"grey\\\"><span *ngIf=\\\"utility.waterCharge.length>0\\\">{{utility.waterCharge[0].prevReading}}</span></td>\\n                <td class=\\\"grey\\\"><span *ngIf=\\\"utility.waterCharge.length>0\\\">{{utility.waterCharge[0].currReading}}</span></td>\\n              </tr>\\n            </tbody>\\n        </table>\\n        <div class=\\\"button-wrapper border-top\\\" *ngIf=\\\"isNoItemsAvailable()\\\">\\n            <p class=\\\"snippet\\\">No Records Found</p>\\n        </div>\\n        <app-pagination\\n          [totalItems]=\\\"totalItems\\\"\\n          [ItemStartIndex]=\\\"ItemStartIndex\\\"\\n          [ItemEndIndex] = \\\"ItemEndIndex\\\"\\n          [itemLimit] = \\\"itemLimit\\\"\\n          (outputParams) = \\\"getIndexParams($event)\\\">\\n        </app-pagination>\\n\\n        </ng-container>\\n\\n        <ng-container *ngIf=\\\"this.selectedUtilityCategory == 'Common Insurance' && isUltilityInsuranceHisLoaded\\\">\\n\\n          <table class=\\\"table table-checker table-resizable\\\" [ngClass]=\\\"isMobileView()\\\">\\n          <thead>\\n              <tr>\\n                <th scope=\\\"col\\\">Insurance Number\\n                  <span (click)=\\\"sortUnitData('insuranceNo')\\\" [ngClass]=\\\"getFieldOrderBy('insuranceNo')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Condo Unit Count\\n                  <span (click)=\\\"sortUnitData('aptUnitCount')\\\" [ngClass]=\\\"getFieldOrderBy('aptUnitCount')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Total Cost\\n                  <span (click)=\\\"sortUnitData('totalCost')\\\" [ngClass]=\\\"getFieldOrderBy('totalCost')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Cost Per Condo\\n                  <span (click)=\\\"sortUnitData('costPerApt')\\\" [ngClass]=\\\"getFieldOrderBy('costPerApt')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Date Entered\\n                  <span (click)=\\\"sortUnitData('dateEntered')\\\" [ngClass]=\\\"getFieldOrderBy('dateEntered')\\\"></span>\\n                </th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let utility of utilityInsuranceListData | simpleSearch: utilitySearch | sort : unitFieldType: unitOrder | slice:ItemStartIndex:ItemEndIndex ; let i = index\\\">\\n                <td class=\\\"grey\\\">{{utility.insuranceNumber}}</td>\\n                <td class=\\\"grey\\\">{{utility.apartmentUnitCount}}</td>\\n                <td class=\\\"grey\\\">{{utility.totalCost}}</td>\\n                <td class=\\\"grey\\\">{{utility.costPerAptUnit}}</td>\\n                <td class=\\\"grey\\\">{{utility.dateEntered}}</td>\\n              </tr>\\n            </tbody>\\n        </table>\\n        <div class=\\\"button-wrapper border-top\\\" *ngIf=\\\"isNoItemsAvailable()\\\">\\n            <p class=\\\"snippet\\\">No Records Found</p>\\n        </div>\\n        <app-pagination\\n          [totalItems]=\\\"totalItems\\\"\\n          [ItemStartIndex]=\\\"ItemStartIndex\\\"\\n          [ItemEndIndex] = \\\"ItemEndIndex\\\"\\n          [itemLimit] = \\\"itemLimit\\\"\\n          (outputParams) = \\\"getIndexParams($event)\\\">\\n        </app-pagination>\\n\\n        </ng-container>\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n\\n</div>\\n\"","export default \"<div class=\\\"income-tracker-reports-customer-reports\\\">\\n\\n\\t<h4 class=\\\"main-title-mini\\\">Electricity Report</h4>\\n\\n\\n\\t<app-loader *ngIf=\\\"!isReportLoaded\\\"></app-loader>\\n\\n  <div *ngIf=\\\"isReportLoaded\\\" class=\\\"card table-card\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All Electricity Reading <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"utilitySearch\\\" >\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<!-- <li class=\\\"list-inline-item\\\">\\n    \\t\\t\\t\\t<a class=\\\"btn trans-white mt_5\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Print</span>\\n    \\t\\t\\t\\t</a>\\n    \\t\\t\\t</li> -->\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n\\n  \\t\\t<div class=\\\"card-body p-0\\\">\\n\\n  \\t\\t\\t<ng-container>\\n\\n  \\t\\t\\t\\t<table class=\\\"table table-checker table-resizable\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">From\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('fromDate')\\\" [ngClass]=\\\"getFieldOrderBy('fromDate')\\\"></span>\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">To\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('toDate')\\\" [ngClass]=\\\"getFieldOrderBy('toDate')\\\"></span>\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">Pre Reading\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('preReading')\\\" [ngClass]=\\\"getFieldOrderBy('preReading')\\\"></span>\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">Curr Reading\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('currReading')\\\" [ngClass]=\\\"getFieldOrderBy('currReading')\\\"></span>\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">Condo unit\\n                  <span (click)=\\\"sortUnitData('aptUnit')\\\" [ngClass]=\\\"getFieldOrderBy('aptUnit')\\\"></span>\\n\\t\\t\\t\\t\\t\\t  </th>\\n              <th scope=\\\"col\\\">Cost Per Unit\\n                <span (click)=\\\"sortUnitData('costPerUnit')\\\" [ngClass]=\\\"getFieldOrderBy('costPerUnit')\\\"></span>\\n              </th>\\n              <th scope=\\\"col\\\">Added By\\n                <span (click)=\\\"sortUnitData('addedBy')\\\" [ngClass]=\\\"getFieldOrderBy('addedBy')\\\"></span>\\n              </th>\\n\\t\\t\\t\\t\\t    </tr>\\n\\t\\t\\t\\t    </thead>\\n\\t\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t\\t    <tr *ngFor=\\\"let utility of utilityElecteicalListData | simpleSearch: utilitySearch | columnSearch: columnField:selectedInput | sort : unitFieldType: unitOrder | slice:ItemStartIndex:ItemEndIndex ; let i = index\\\" [ngClass]=\\\"utility.isActive ? '' : 'notactive'\\\">\\n\\t\\t\\t\\t\\t      <td class=\\\"name\\\">{{getUtilityFromPeriod(utility.utilityTrackerElectricityChargeId)}}</td>\\n\\t\\t\\t\\t\\t      <td class=\\\"grey\\\">{{getUtilityToPeriod(utility.utilityTrackerElectricityChargeId)}}</td>\\n\\t\\t\\t\\t\\t      <td class=\\\"grey\\\">{{utility.prevReading}}</td>\\n                <td class=\\\"grey\\\">{{utility.currReading}}</td>\\n                <td class=\\\"grey\\\">{{utility.electricalUnitPerAptUnit}}</td>\\n                <td class=\\\"grey\\\">{{utility.costPerAptUnit}}</td>\\n                <td class=\\\"grey\\\">{{utility.insertedByUser}}</td>\\n\\t\\t\\t\\t\\t      <td>\\n\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t    </tr>\\n\\t\\t\\t\\t    </tbody>\\n\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t<div class=\\\"button-wrapper border-top\\\" *ngIf=\\\"isNoItemsAvailable()\\\">\\n\\t    \\t\\t\\t<p class=\\\"snippet\\\">No Records Found</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<app-pagination\\n\\t\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"\\n\\t\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\n\\t\\t\\t\\t</app-pagination>\\n\\n  \\t\\t\\t</ng-container>\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n\\n</div>\\n\"","export default \"<div class=\\\"income-tracker-reports-customer-reports\\\">\\n\\n\\t<h4 class=\\\"main-title-mini\\\">Insurance Report</h4>\\n\\n\\n\\t<app-loader *ngIf=\\\"!isReportLoaded\\\"></app-loader>\\n\\n  <div *ngIf=\\\"isReportLoaded\\\" class=\\\"card table-card\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All Insurance <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"utilitySearch\\\" >\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<!-- <li class=\\\"list-inline-item\\\">\\n    \\t\\t\\t\\t<a class=\\\"btn trans-white mt_5\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Print</span>\\n    \\t\\t\\t\\t</a>\\n    \\t\\t\\t</li> -->\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n\\n  \\t\\t<div  class=\\\"card-body p-0\\\">\\n\\n        <ng-container>\\n\\n          <table class=\\\"table table-checker table-resizable\\\" [ngClass]=\\\"isMobileView()\\\">\\n          <thead>\\n              <tr>\\n                <th scope=\\\"col\\\">Insurance Number\\n                  <span (click)=\\\"sortUnitData('insuranceNo')\\\" [ngClass]=\\\"getFieldOrderBy('insuranceNo')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Condo Unit Count\\n                  <span (click)=\\\"sortUnitData('aptUnitCount')\\\" [ngClass]=\\\"getFieldOrderBy('aptUnitCount')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Total Cost\\n                  <span (click)=\\\"sortUnitData('totalCost')\\\" [ngClass]=\\\"getFieldOrderBy('totalCost')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Cost Per Condo\\n                  <span (click)=\\\"sortUnitData('costPerApt')\\\" [ngClass]=\\\"getFieldOrderBy('costPerApt')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Date Entered\\n                  <span (click)=\\\"sortUnitData('dateEntered')\\\" [ngClass]=\\\"getFieldOrderBy('dateEntered')\\\"></span>\\n                </th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let utility of utilityInsuranceListData | simpleSearch: utilitySearch | sort : unitFieldType: unitOrder | slice:ItemStartIndex:ItemEndIndex ; let i = index\\\">\\n                <td class=\\\"grey\\\">{{utility.insuranceNumber}}</td>\\n                <td class=\\\"grey\\\">{{utility.apartmentUnitCount}}</td>\\n                <td class=\\\"grey\\\">{{utility.totalCost}}</td>\\n                <td class=\\\"grey\\\">{{utility.costPerAptUnit}}</td>\\n                <td class=\\\"grey\\\">{{utility.dateEntered}}</td>\\n              </tr>\\n            </tbody>\\n        </table>\\n        <div class=\\\"button-wrapper border-top\\\" *ngIf=\\\"isNoItemsAvailable()\\\">\\n            <p class=\\\"snippet\\\">No Records Found</p>\\n        </div>\\n        <app-pagination\\n          [totalItems]=\\\"totalItems\\\"\\n          [ItemStartIndex]=\\\"ItemStartIndex\\\"\\n          [ItemEndIndex] = \\\"ItemEndIndex\\\"\\n          [itemLimit] = \\\"itemLimit\\\"\\n          (outputParams) = \\\"getIndexParams($event)\\\">\\n        </app-pagination>\\n\\n        </ng-container>\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n\\n</div>\\n\"","export default \"<div class=\\\"reports-wrapper\\\">\\n\\n\\t<app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n\\n\\t<ng-container *ngIf=\\\"isDataLoaded\\\">\\n\\n\\t\\t<h5 class=\\\"mb-4\\\"> Utility Reports</h5>\\n\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-sm-6 mb-20\\\" *ngFor=\\\"let report of reportDataList\\\">\\n\\n\\t\\t\\t\\t\\t<div class=\\\"card report-card\\\">\\n\\t\\t\\t\\t\\t\\t<a class=\\\"t-no-decor\\\" href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t\\t\\t\\trouterLink = \\\"/ams/utility/reports/{{report.lookupValueId}}\\\"\\n\\t\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<h6>{{report.lookupValueName}}</h6>\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>{{report.description}}</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t</ng-container>\\n\\n</div>\\n\"","export default \"<div class=\\\"income-tracker-reports-customer-reports\\\">\\n\\n\\t<h4 class=\\\"main-title-mini\\\">Water Reading Report</h4>\\n\\n\\n\\t<app-loader *ngIf=\\\"!isReportLoaded\\\"></app-loader>\\n\\n  <div *ngIf=\\\"isReportLoaded\\\" class=\\\"card table-card\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All Water Reading <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n\\t\\t\\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n\\t\\t\\t    \\t<select (change)=\\\"onFilterByTowerChange()\\\" name=\\\"utilityTowerFilter\\\" id=\\\"utilityTowerFilter\\\" class=\\\"form-control filter-width\\\" [(ngModel)]=\\\"selectedTower\\\" required>\\n\\t\\t\\t\\t    \\t<option value=\\\"All\\\" selected>Select Tower</option>\\n\\t\\t\\t\\t    \\t<option *ngFor=\\\"let tower of propertyTowerData\\\" [value]=\\\"tower.apartmentBlockNumber\\\">{{ tower.apartmentBlockNumber }}</option>\\n\\t\\t\\t    \\t</select>\\n\\t\\t    \\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"utilitySearch\\\" >\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<!-- <li class=\\\"list-inline-item\\\">\\n    \\t\\t\\t\\t<a class=\\\"btn trans-white mt_5\\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Print</span>\\n    \\t\\t\\t\\t</a>\\n    \\t\\t\\t</li> -->\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n\\n\\n  \\t\\t<div class=\\\"card-body p-0\\\">\\n\\n        <ng-container>\\n\\n          <table class=\\\"table table-checker table-resizable\\\" [ngClass]=\\\"isMobileView()\\\">\\n          <thead>\\n              <tr>\\n                <th scope=\\\"col\\\">Tower\\n                  <span (click)=\\\"sortUnitData('block')\\\" [ngClass]=\\\"getFieldOrderBy('block')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Condo Unit\\n                  <span (click)=\\\"sortUnitData('aptUnit')\\\" [ngClass]=\\\"getFieldOrderBy('aptUnit')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Connection No\\n                  <span (click)=\\\"sortUnitData('connectionNo')\\\" [ngClass]=\\\"getFieldOrderBy('connectionNo')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Previous Reading\\n                  <span (click)=\\\"sortUnitData('prevReading')\\\" [ngClass]=\\\"getFieldOrderBy('prevReading')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Current Reading\\n                  <span (click)=\\\"sortUnitData('currReading')\\\" [ngClass]=\\\"getFieldOrderBy('currReading')\\\"></span>\\n                </th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let utility of filteredUtilityWaterListData | simpleSearch: utilitySearch | sort : unitFieldType: unitOrder | slice:ItemStartIndex:ItemEndIndex ; let i = index\\\">\\n                <td class=\\\"grey\\\">{{utility.block}}</td>\\n                <td class=\\\"grey\\\">{{utility.aptUnit}}</td>\\n                <td class=\\\"grey\\\"><span *ngIf=\\\"utility.waterCharge.length>0\\\">{{utility.waterCharge[0].connectionNo}}</span></td>\\n                <td class=\\\"grey\\\"><span *ngIf=\\\"utility.waterCharge.length>0\\\">{{utility.waterCharge[0].prevReading}}</span></td>\\n                <td class=\\\"grey\\\"><span *ngIf=\\\"utility.waterCharge.length>0\\\">{{utility.waterCharge[0].currReading}}</span></td>\\n              </tr>\\n            </tbody>\\n        </table>\\n        <div class=\\\"button-wrapper border-top\\\" *ngIf=\\\"isNoItemsAvailable()\\\">\\n            <p class=\\\"snippet\\\">No Records Found</p>\\n        </div>\\n        <app-pagination\\n          [totalItems]=\\\"totalItems\\\"\\n          [ItemStartIndex]=\\\"ItemStartIndex\\\"\\n          [ItemEndIndex] = \\\"ItemEndIndex\\\"\\n          [itemLimit] = \\\"itemLimit\\\"\\n          (outputParams) = \\\"getIndexParams($event)\\\">\\n        </app-pagination>\\n\\n        </ng-container>\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n</div>\\n\"","export default \"<div class=\\\"vendors-setup-wrapper\\\">\\n\\n\\t<app-loader *ngIf=\\\"!isUtilityCategoryLoaded\\\"></app-loader>\\n\\n\\t<div class=\\\"category-list list-boxes\\\" *ngIf=\\\"isUtilityCategoryLoaded\\\">\\n\\t\\t<h4 class=\\\"main-title-mini\\\">Utility Categories</h4>\\n\\t\\t<ng-container *ngFor=\\\"let item of utilityCategoryData; let i = index\\\">\\n\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"card-body nohover\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"icons\\\">\\n\\t\\t\\t\\t\\t\\t\\t<!-- <a href=\\\"javascript:void(0)\\\" routerLink=\\\"/ams/vendor/all-vendors/{{item.lookupValueId}}\\\"\\n\\t\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\"><i-feather class=\\\"icon view\\\" name=\\\"eye\\\"></i-feather></a> -->\\n\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\"><i-feather class=\\\"icon edit\\\" name=\\\"edit\\\" (click)=\\\"updateUtilityCategory(item, i)\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\"><i-feather class=\\\"icon del\\\" name=\\\"x\\\" (click)=\\\"showRemoveCategoryConfirmModal(item)\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<h6>{{item.category}}</h6>\\n\\t\\t\\t\\t\\t\\t<p class=\\\"float-left\\\">{{item.ratePerUnit}} per unit</p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</li>\\n\\t\\t</ng-container>\\n\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t<div class=\\\"card-body new text-center\\\">\\n\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" class=\\\"rounded-btn green\\\" (click)=\\\"addNewUtilityCategory()\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"icon\\\">+</div>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t<h6 class=\\\"tc-green\\\">Add New Category</h6>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</li>\\n\\t</div>\\n\\n\\t<div class=\\\"card mt-30\\\" *ngIf=\\\"isUtilityCategoryNew || isUtilityCategoryUpdate\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h6 *ngIf=\\\"isUtilityCategoryNew\\\">Add Utility Category</h6>\\n    \\t\\t\\t<h6 *ngIf=\\\"!isUtilityCategoryNew\\\">Update Utility Category</h6>\\n    \\t\\t</div>\\n    \\t\\t<div class=\\\"float-right\\\" (click)=\\\"removeCategoryBox()\\\">\\n    \\t\\t\\t<i-feather class=\\\"icon del\\\" name=\\\"x\\\"></i-feather>\\n    \\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card-body\\\">\\n\\n\\t\\t\\t<app-alert-message [message]=\\\"alertMessage\\\" [isError]=\\\"isError\\\"></app-alert-message>\\n\\n\\t\\t\\t<app-loader *ngIf=\\\"!isUtilityCategorySubmitted\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"isUtilityCategorySubmitted\\\">\\n\\n\\t\\t\\t\\t<form #addUtilityCategoryForm = \\\"ngForm\\\" name=\\\"addUtilityCategoryForm\\\" (ngSubmit)=\\\"showConfirmModal(addUtilityCategoryForm)\\\"  novalidate>\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Category Name<span class=\\\"mandatory\\\">*</span></label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"UtilityCategory\\\" [(ngModel)]=\\\"UtilityCategory\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n            <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                          <label>Rate per Unit<span class=\\\"mandatory\\\">*</span></label>\\n                          <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"unitRate\\\" [(ngModel)]=\\\"UtilityRateUnit\\\" required>\\n                      </div>\\n            </div>\\n\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline float-right\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addUtilityCategoryForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t</div>\\n\\t</div>\\n\\n</div>\\n\"","export default \"<p>utility works!</p>\\n\"","export default \".mandatory {\\n  color: red;\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9tb2R1bGVzL2Ftcy91dGlsaXR5L2NvbXBvbmVudHMvdXRpbGl0eS1hZGQtcmVhZGluZy9hZGQtaW5zdXJhbmNlL2FkZC1pbnN1cmFuY2UuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vZHVsZXMvYW1zL3V0aWxpdHkvY29tcG9uZW50cy91dGlsaXR5LWFkZC1yZWFkaW5nL2FkZC1pbnN1cmFuY2UvYWRkLWluc3VyYW5jZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQUE7RUFDQSxlQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2Ftcy91dGlsaXR5L2NvbXBvbmVudHMvdXRpbGl0eS1hZGQtcmVhZGluZy9hZGQtaW5zdXJhbmNlL2FkZC1pbnN1cmFuY2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFuZGF0b3J5e1xuICBjb2xvcjogcmVkO1xuICBmb250LXNpemU6IDE2cHg7XG59XG4iLCIubWFuZGF0b3J5IHtcbiAgY29sb3I6IHJlZDtcbiAgZm9udC1zaXplOiAxNnB4O1xufSJdfQ== */\"","import { Component, OnInit,Output, EventEmitter } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\n\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n@Component({\n  selector: 'app-add-insurance',\n  templateUrl: './add-insurance.component.html',\n  styleUrls: ['./add-insurance.component.scss']\n})\nexport class AddInsuranceComponent implements OnInit {\n\n  @Output() onCancel = new EventEmitter();\n\n  insuranceCharge: any;\n\n  isInsuranceSubmitted: boolean = true;\n  isEdit: boolean = false;\n  isError: boolean = false;\n  categoryCostPerApt: any;\n  alertMessage:string = \"\";\n\n  public params = {\n    apartmentId: parseInt(this.cookieService.get('apartmentId'))\n  }\n  constructor(  private router: Router,\n    private route: ActivatedRoute,\n    private utilityTrackerService:UtilityTrackerService,\n    private lookupService: LookupService,\n    private apartmentService: ApartmentService,\n    private sharedService:SharedService,\n    private cookieService:CookieService) { }\n\n\n  Cancel(){\n    this.onCancel.emit(false)\n  }\n\n  submitInsuranceChargeForm(form) {\n\n    this.isInsuranceSubmitted = false;\n\n      let details = {\n\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"apartmentUnitCount\": this.insuranceCharge.AptunitCount,\n        \"insuranceNumber\": this.insuranceCharge.InsuranceNo,\n        \"totalCost\": this.insuranceCharge.TotalCost,\n        \"costPerAptUnit\": this.insuranceCharge.CostPerApt,\n        \"dateEntered\": this.insuranceCharge.DateEntered,\n        \"comments\": this.insuranceCharge.Comments,\n        \"isActive\": true,\n        \"insertedBy\": parseInt(this.cookieService.get('userId')),\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": null,\n        \"updatedOn\": null\n\n      }\n      let params ={\n        utilityTrackerInsuranceCharge: details\n      }\n\n      this.utilityTrackerService.addUtilityTrackerInsuranceCharge(params).subscribe((res:any) => {\n\n          if(res.message) {\n            this.isInsuranceSubmitted = true;\n            this.resetData();\n            this.sharedService.setAlertMessage(\"Insurance added successfully\");\n          }\n          else {\n            this.isInsuranceSubmitted = true;\n            this.isError = true;\n            this.alertMessage = res.errorMessage;\n          }\n        }, error => {\n          this.isInsuranceSubmitted = true;\n          this.isError = true;\n          this.alertMessage = \"Some error occured\";\n      });\n\n  }\n\n  calculateCostPerAptFrmTotalCost(e){\n    if(this.insuranceCharge.TotalCost){\n      let result_des = this.insuranceCharge.TotalCost/this.insuranceCharge.AptunitCount;\n     this.insuranceCharge.CostPerApt = result_des.toFixed(2);\n    }\n  }\n\n  resetData(){\n    this.insuranceCharge.InsuranceNo = undefined;\n    this.insuranceCharge.TotalCost = undefined;\n    this.insuranceCharge.CostPerApt = undefined;\n    this.insuranceCharge.Comments = undefined;\n  }\n\n  ngOnInit(): void {\n    this.insuranceCharge = {};\n\n    this.insuranceCharge.DateEntered = new Date().toISOString();\n\n    let params = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n    this.apartmentService.getApartmentBlockUnitByApartmentId(params).subscribe((res:any) =>{\n      this.insuranceCharge.AptunitCount = res.length;\n    })\n    // this.utilityTrackerService.getUtilityTrackerCategorysByApartmentId(apartment_id).subscribe((res:any) => {\n    //     let electric_category = res.find(x=> x.category == 'Common Electricity Charges')\n    //     this.categoryCostPerApt = electric_category.ratePerUnit;\n    //   });\n   }\n\n\n}\n","export default \".mandatory {\\n  color: red;\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9tb2R1bGVzL2Ftcy91dGlsaXR5L2NvbXBvbmVudHMvdXRpbGl0eS1hZGQtcmVhZGluZy9lbGVjdHJpY2l0eS1yZWFkaW5nL2VsZWN0cmljaXR5LXJlYWRpbmcuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vZHVsZXMvYW1zL3V0aWxpdHkvY29tcG9uZW50cy91dGlsaXR5LWFkZC1yZWFkaW5nL2VsZWN0cmljaXR5LXJlYWRpbmcvZWxlY3RyaWNpdHktcmVhZGluZy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQUE7RUFDQSxlQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2Ftcy91dGlsaXR5L2NvbXBvbmVudHMvdXRpbGl0eS1hZGQtcmVhZGluZy9lbGVjdHJpY2l0eS1yZWFkaW5nL2VsZWN0cmljaXR5LXJlYWRpbmcuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFuZGF0b3J5e1xuICBjb2xvcjogcmVkO1xuICBmb250LXNpemU6IDE2cHg7XG59XG4iLCIubWFuZGF0b3J5IHtcbiAgY29sb3I6IHJlZDtcbiAgZm9udC1zaXplOiAxNnB4O1xufSJdfQ== */\"","import { Component, OnInit,Output, EventEmitter } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\n\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-electricity-reading',\n  templateUrl: './electricity-reading.component.html',\n  styleUrls: ['./electricity-reading.component.scss']\n})\n\n\nexport class ElectricityReadingComponent implements OnInit {\n\n  @Output() onCancel = new EventEmitter();\n\n  electricReading: any;\n\n  isReadingSubmitted: boolean = true;\n  isEditReading: boolean = false;\n  isEdit: boolean = false;\n  isError: boolean = false;\n  categoryCostPerApt: any;\n  alertMessage:string = \"\";\n\n  public params = {\n    apartmentId: parseInt(this.cookieService.get('apartmentId'))\n  }\n  constructor(  private router: Router,\n    private route: ActivatedRoute,\n    private utilityTrackerService:UtilityTrackerService,\n    private lookupService: LookupService,\n    private apartmentService: ApartmentService,\n    private sharedService:SharedService,\n    private cookieService:CookieService) { }\n\n\n  Cancel(){\n    this.onCancel.emit(false)\n  }\n\n  submitReadingForm(form){\n\n      let electric_period = {\n\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"periodFrom\": this.electricReading.fromDate,\n        \"periodTo\": this.electricReading.toDate,\n        \"isActive\": true,\n        \"insertedBy\": parseInt(this.cookieService.get('userId')),\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": 0,\n        \"updatedOn\": null\n      }\n      let params ={\n        utilityTrackerElectricityPeriod: electric_period\n      }\n\n      this.utilityTrackerService.addUtilityTrackerElectricityPeriod(params).subscribe((period_res:any) =>{\n        this.electricReading.ElectricityPeriodId = period_res.message\n        this.addOrUpdateElectricityReading(form)\n      })\n  }\n\n  addOrUpdateElectricityReading(form) {\n\n    this.isReadingSubmitted = false;\n\n    if(!this.isEditReading){\n\n      let details = {\n\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"apartmentUnitCount\": this.electricReading.AptunitCount,\n        \"utilityTrackerElectricityPeriodId\": this.electricReading.ElectricityPeriodId,\n        \"prevReading\": this.electricReading.PrevReading,\n        \"currReading\": this.electricReading.CurrReading,\n        \"electricalUnitPerAptUnit\": this.electricReading.ElectricalUnit,\n        \"costPerAptUnit\": this.electricReading.CostPerApt,\n        \"dateTaken\": this.electricReading.DateTaken,\n        \"comments\": this.electricReading.comments,\n        \"isActive\": true,\n        \"insertedBy\": parseInt(this.cookieService.get('userId')),\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": 0,\n        \"updatedOn\": null\n\n      }\n      let params ={\n        utilityTrackerElectricityCharge: details\n      }\n\n      this.utilityTrackerService.addUtilityTrackerElectricityCharge(params).subscribe((res:any) => {\n\n          if(res.message) {\n            this.isReadingSubmitted = true;\n            this.resetData();\n            this.sharedService.setAlertMessage(\"Electricity reading added successfully\");\n          }\n          else {\n            this.isReadingSubmitted = true;\n            this.isError = true;\n            this.alertMessage = res.errorMessage;\n          }\n        }, error => {\n          this.isReadingSubmitted = true;\n          this.isError = true;\n          this.alertMessage = \"Some error occured\";\n      });\n    }\n\n    else {\n\n      let details = {\n\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n        \"apartmentUnitCount\": this.electricReading.AptunitCount,\n        \"utilityTrackerElectricityPeriodId\": this.electricReading.ElectricityPeriodId,\n        \"prevReading\": this.electricReading.PrevReading,\n        \"currReading\": this.electricReading.CurrReading,\n        \"electricalUnitPerAptUnit\": this.electricReading.ElectricalUnitPerApT,\n        \"costPerAptUnit\": this.electricReading.CostPerApt,\n        \"dateTaken\": this.electricReading.DateTaken,\n        \"comments\": this.electricReading.Comments,\n        \"isActive\": true,\n        \"insertedBy\": parseInt(this.cookieService.get('userId')),\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": 0,\n        \"updatedOn\": null\n      }\n\n      let params ={\n        utilityTrackerElectricityCharge: details\n      }\n\n      this.utilityTrackerService.addUtilityTrackerElectricityCharge(params).subscribe((res:any) => {\n\n          if(res.message) {\n            this.isReadingSubmitted = true;\n            this.resetData();\n            this.sharedService.setAlertMessage(\"Electricity reading updated successfully\");\n          }\n          else {\n            this.isError = true;\n            this.isReadingSubmitted = true;\n            this.alertMessage = res.errorMessage;\n          }\n        }, error => {\n          this.isReadingSubmitted = true;\n          this.isError = true;\n          this.alertMessage = \"Some error occured\";\n      });\n    }\n  }\n\n  calculateUnitPerAptFrmCurReading(e){\n    //this.electricReading.CurrReading = e;\n    if(this.electricReading.CurrReading && this.electricReading.PrevReading){\n      let sub = (this.electricReading.CurrReading - this.electricReading.PrevReading);\n      let result_des = sub/this.electricReading.AptunitCount;\n     this.electricReading.ElectricalUnitPerApT = result_des.toFixed(2);\n     this.electricReading.CostPerApt = (this.electricReading.ElectricalUnitPerApT * this.categoryCostPerApt).toFixed(2);\n    }\n  }\n\n  calculateUnitPerAptFrmPreReading(e){\n    //this.electricReading.PrevReading = e\n    if(this.electricReading.CurrReading && this.electricReading.PrevReading){\n      let sub = (this.electricReading.CurrReading - this.electricReading.PrevReading);\n      let result_des = sub/this.electricReading.AptunitCount;\n     this.electricReading.ElectricalUnitPerApT = result_des.toFixed(2);\n     this.electricReading.CostPerApt = (this.electricReading.ElectricalUnitPerApT * this.categoryCostPerApt).toFixed(2);\n\n    }\n  }\n\n\n  resetData(){\n    this.electricReading.fromDate = undefined;\n    this.electricReading.toDate = undefined;\n    this.electricReading.PrevReading = undefined;\n    this.electricReading.CurrReading = undefined;\n    this.electricReading.ElectricalUnitPerApT = undefined;\n    this.electricReading.Comments = undefined;\n    this.electricReading.CostPerApt = undefined;\n  }\n\n  ngOnInit(): void {\n    this.electricReading = {};\n\n    this.electricReading.dateTaken = new Date().toISOString();\n\n    let params = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n    this.apartmentService.getApartmentBlockUnitByApartmentId(params).subscribe((res:any) =>{\n      this.electricReading.AptunitCount = res.length;\n    })\n    this.utilityTrackerService.getUtilityTrackerCategorysByApartmentId(params).subscribe((res:any) => {\n        let electric_category = res.find(x=> x.category == 'Common Electricity Charges')\n        this.categoryCostPerApt = electric_category.ratePerUnit;\n      });\n   }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3V0aWxpdHkvY29tcG9uZW50cy91dGlsaXR5LWFkZC1yZWFkaW5nL3V0aWxpdHktYWRkLXJlYWRpbmcuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Injector } from '@angular/core';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ModalService } from 'src/app/shared/services/modal.service';\n\n@Component({\n  selector: 'app-utility-add-reading',\n  templateUrl: './utility-add-reading.component.html',\n  styleUrls: ['./utility-add-reading.component.scss']\n})\nexport class UtilityAddReadingComponent implements OnInit {\n\n  utilityCategoryData:any;\n  apartment_id: number;\n  isUtilityCategoryLoaded:boolean = false;\n  selected_utility_type: boolean = false;\n  utility_selected_category: any;\n  utilityReading: any;\n  selected_index: any;\n\n  modalService:any;\n\n  \n  public params = {\n    apartmentId: parseInt(this.cookieService.get('apartmentId'))\n  }\n  constructor( private injector: Injector,\n    private utilityTrackerService:UtilityTrackerService,\n  \tprivate lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) {this.modalService = this.injector.get(ModalService);\n }\n\n  loadUtilityCategory(){\n    let params = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n  this.utilityTrackerService.getUtilityTrackerCategorysByApartmentId(params).subscribe((res:any) => {\n      this.utilityCategoryData = res.filter(item => {\n          return item.isActive;\n       });\n         this.isUtilityCategoryLoaded = true;\n       },\n       error => {\n     });\n  }\n\n  onSelectCat(i){\n    this.selected_index = i;\n  }\n\n  onCancel(e){\n    this.selected_utility_type = false;\n  }\n\n  selectUtility(category){\n   this.selected_utility_type = true;\n   this.utility_selected_category = category;\n  }\n\n  ngOnInit(): void {\n    this.apartment_id = parseInt(this.cookieService.get('apartmentId'))\n    this.loadUtilityCategory()\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3V0aWxpdHkvY29tcG9uZW50cy91dGlsaXR5LWFkZC1yZWFkaW5nL3dhdGVyLXJlYWRpbmcvdG93ZXItcmVhZGluZy1pbmZvL3Rvd2VyLXJlYWRpbmctaW5mby5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-tower-reading-info',\n  templateUrl: './tower-reading-info.component.html',\n  styleUrls: ['./tower-reading-info.component.scss']\n})\nexport class TowerReadingInfoComponent implements OnInit {\n\n  @Input() tower:any;\n\n  @Input() waterReadingPeriodID:any;\n\n  @Input() allApartmentWaterCharge:any;\n\n  @Input() utility_selected_category:any;\n\n  isEdit:boolean = false;\n  waterReading: any;\n  isTowersLoaded:boolean = false;\n\n  isUnitSold:boolean = false;\n  isUnitVacant:boolean = false;\n\n  towerUnitData:any;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n\n  public params = {\n    apartmentBlockId: parseInt(this.tower.apartmentBlockId)\n  }\n  constructor(\n  \tprivate apartmentService:ApartmentService,\n    private lookupService: LookupService,\n    private utilityTrackerService:UtilityTrackerService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) { }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n\n  ngOnInit() {\n\n    this.waterReading = {};\n\n    let params = {\n      apartmentBlockId: parseInt(this.tower.apartmentBlockId)\n    }\n    this.apartmentService.getApartmentBlockUnitByBlockId(params).subscribe((res: any) => {\n\n      this.towerUnitData = res;\n      this.totalItems = this.towerUnitData.length;\n\n      if (this.totalItems > this.itemLimit) {\n        this.ItemEndIndex = this.itemLimit;\n      }\n      else {\n        this.ItemEndIndex = this.totalItems;\n      }\n      for (let unit of this.towerUnitData) {\n        let block_unit = this.allApartmentWaterCharge.find(x => x.aptUnit == unit.apartmentBlockUnitNumber)\n        if (block_unit) {\n          unit.water_charge = block_unit.waterCharge[0];\n        } else {\n          unit.water_charge = {};\n        }\n      }\n      this.isTowersLoaded = true;\n\n    });\n\n  }\n\n}\n","export default \".mandatory {\\n  color: red;\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9tb2R1bGVzL2Ftcy91dGlsaXR5L2NvbXBvbmVudHMvdXRpbGl0eS1hZGQtcmVhZGluZy93YXRlci1yZWFkaW5nL3Rvd2VyLXJlYWRpbmctaW5mby91bml0LXJlYWRpbmctaW5mby91bml0LXJlYWRpbmctaW5mby5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbW9kdWxlcy9hbXMvdXRpbGl0eS9jb21wb25lbnRzL3V0aWxpdHktYWRkLXJlYWRpbmcvd2F0ZXItcmVhZGluZy90b3dlci1yZWFkaW5nLWluZm8vdW5pdC1yZWFkaW5nLWluZm8vdW5pdC1yZWFkaW5nLWluZm8uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFBO0VBQ0EsZUFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9hbXMvdXRpbGl0eS9jb21wb25lbnRzL3V0aWxpdHktYWRkLXJlYWRpbmcvd2F0ZXItcmVhZGluZy90b3dlci1yZWFkaW5nLWluZm8vdW5pdC1yZWFkaW5nLWluZm8vdW5pdC1yZWFkaW5nLWluZm8uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFuZGF0b3J5e1xuICBjb2xvcjogcmVkO1xuICBmb250LXNpemU6IDE2cHg7XG59XG4iLCIubWFuZGF0b3J5IHtcbiAgY29sb3I6IHJlZDtcbiAgZm9udC1zaXplOiAxNnB4O1xufSJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport * as _ from 'underscore';\n@Component({\n  selector: 'app-unit-reading-info',\n  templateUrl: './unit-reading-info.component.html',\n  styleUrls: ['./unit-reading-info.component.scss']\n})\nexport class UnitReadingInfoComponent implements OnInit {\n\n  @Input() tower:any;\n  @Input() unit:any;\n  @Input() waterReadingPeriodID:any;\n  @Input() utility_selected_category:any;\n\n  unitTypeData:any;\n  unitTypeId:any;\n\n  categoryCostPerApt: any;\n  waterReading: any;\n  isError: boolean = false;\n  alertMessage:string = \"\";\n\n  isEdit:boolean = false;\n\n  constructor(\n  \tprivate apartmentService:ApartmentService,\n    private lookupService: LookupService,\n    private utilityTrackerService:UtilityTrackerService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) { }\n\n  showEditForm(){\n  \tthis.isEdit = !this.isEdit;\n  }\n\n  getBooleanStatus(status){\n    return status ? 'Yes' : 'No'\n  }\n\n  getUnitType(name){\n\n    var data = _.filter( this.unitTypeData, function( item ) {\n      if(item.lookupValueName === name)\n        return item;\n    } );\n\n    if(data === undefined || data.length == 0){\n      this.unitTypeId = \"\";\n    }\n    else {\n      this.unitTypeId = data[0].lookupValueId;\n    }\n  }\n\n\n  submitWaterMeterReading(form){\n\n  \tlet details = {\n\n      \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n      \"apartmentBlockId\": this.tower.apartmentBlockId,\n      \"apartmentBlockUnitId\": this.unit.apartmentBlockUnitId,\n      \"waterChargeTypeId\": null,\n      \"utilityTrackerWaterChargePeriodId\": this.waterReadingPeriodID,\n      \"prevReading\": this.waterReading.prevReading,\n      \"currReading\": this.waterReading.currReading,\n      \"units\": this.waterReading.units,\n      \"unitNumber\": null,\n      \"cost\": parseInt(this.waterReading.cost),\n      \"dateTaken\": this.waterReading.dateTaken,\n      \"comments\": this.waterReading.comments,\n      \"isActive\": true,\n      \"insertedBy\": parseInt(this.cookieService.get('userId')),\n      \"insertedOn\": new Date().toISOString(),\n      \"updatedBy\":null,\n      \"updatedOn\": null\n\t}\n\n  let params = {\n    utilityTrackerWaterCharge: details\n  }\n\n  this.utilityTrackerService.addUtilityTrackerWaterCharge(params).subscribe((res:any) => {\n\n      if(res.message) {\n        this.isEdit = false;\n        this.sharedService.setAlertMessage(\"Water reading added successfully\");\n      }\n      else {\n        this.isError = true;\n        this.alertMessage = res.errorMessage;\n      }\n    }, error => {\n       this.isError = true;\n       this.alertMessage = \"Some error occured\";\n   });\n  }\n\n  calculateUnitPerAptFrmCurReading(e){\n    if(this.waterReading.currReading && this.waterReading.prevReading){\n      this.waterReading.units = (this.waterReading.currReading - this.waterReading.prevReading);\n     this.waterReading.cost = (this.waterReading.units * this.utility_selected_category.ratePerUnit).toFixed(2);\n    }\n  }\n\n  calculateUnitPerAptFrmPreReading(e){\n    if(this.waterReading.currReading && this.waterReading.prevReading){\n      this.waterReading.units = (this.waterReading.currReading - this.waterReading.prevReading);\n     this.waterReading.cost = (this.waterReading.units * this.utility_selected_category.ratePerUnit).toFixed(2);\n    }\n  }\n\n\n  ngOnInit() {\n    this.waterReading = {};\n    //let apartment_id = parseInt(this.cookieService.get('apartmentId'));\n    if(this.unit.water_charge == undefined){\n      this.unit.water_charge = {};\n    }\n    if(this.unit.water_charge.prevReading && this.unit.water_charge.currReading){\n      this.isEdit = false;\n      this.waterReading.units = (this.unit.water_charge.currReading - this.unit.water_charge.prevReading);\n    }else{\n      this.isEdit = true;\n    }\n    this.waterReading.prevReading = this.unit.water_charge.prevReading;\n    this.waterReading.currReading = this.unit.water_charge.currReading;\n    this.waterReading.dateTaken = new Date().toISOString();\n\n  \tthis.unitTypeId = \"\";\n\n  \t//get unit type\n    let params = {\n      LookupTypeId: 1\n    }\n    this.lookupService.getLookupValueByLookupTypeId(params).subscribe((res:any) => {\n      this.unitTypeData = res;\n\n      setTimeout(() => {\n      \tthis.getUnitType(this.unit.unitType);\n      }, 1000);\n\n    },\n    error => {\n\n    });\n\n   }\n\n  }\n","export default \".mandatory {\\n  color: red;\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9tb2R1bGVzL2Ftcy91dGlsaXR5L2NvbXBvbmVudHMvdXRpbGl0eS1hZGQtcmVhZGluZy93YXRlci1yZWFkaW5nL3dhdGVyLXJlYWRpbmcuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vZHVsZXMvYW1zL3V0aWxpdHkvY29tcG9uZW50cy91dGlsaXR5LWFkZC1yZWFkaW5nL3dhdGVyLXJlYWRpbmcvd2F0ZXItcmVhZGluZy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQUE7RUFDQSxlQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2Ftcy91dGlsaXR5L2NvbXBvbmVudHMvdXRpbGl0eS1hZGQtcmVhZGluZy93YXRlci1yZWFkaW5nL3dhdGVyLXJlYWRpbmcuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFuZGF0b3J5e1xuICBjb2xvcjogcmVkO1xuICBmb250LXNpemU6IDE2cHg7XG59XG4iLCIubWFuZGF0b3J5IHtcbiAgY29sb3I6IHJlZDtcbiAgZm9udC1zaXplOiAxNnB4O1xufSJdfQ== */\"","import { Component, OnInit, Output,Input,  EventEmitter } from '@angular/core';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\n\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-water-reading',\n  templateUrl: './water-reading.component.html',\n  styleUrls: ['./water-reading.component.scss']\n})\nexport class WaterReadingComponent implements OnInit {\n\n  @Output() onCancel = new EventEmitter();\n  @Input() utility_selected_category:any;\n\n  isDataLoaded:boolean = false;\n  isSetPeriod:boolean = true;\n\n  propertyTowerData:any;\n\n  waterReadingFromDate: any\n  waterReadingToDate: any\n  allApartmentWaterCharge: any;\n\n  waterReadingPeriodID: any;\n\n  unitsLength:any;\n\n  public params = {\n    apartmentId: parseInt(this.cookieService.get('apartmentId'))\n  }\n  constructor(\n  \tprivate apartmentService:ApartmentService,\n    private lookupService: LookupService,\n    private utilityTrackerService:UtilityTrackerService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) { }\n\n  cancel(){\n    this.onCancel.emit(false)\n  }\n\n  submitReadingPeriodForm(form){\n    this.isSetPeriod = false;\n    let water_reading_period = {\n\n      \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n      \"periodFrom\": this.waterReadingFromDate,\n      \"periodTo\": this.waterReadingToDate,\n      \"isActive\": true,\n      \"insertedBy\": parseInt(this.cookieService.get('userId')),\n      \"insertedOn\": new Date().toISOString(),\n      \"updatedBy\": 0,\n      \"updatedOn\": null\n    }\n\n    let params = {\n      utilityTrackerWaterChargePeriod: water_reading_period\n    }\n\n    this.utilityTrackerService.addUtilityTrackerWaterChargePeriod(params).subscribe((period_res:any) =>{\n      this.waterReadingPeriodID = period_res.message\n      this.isSetPeriod = true;\n    })\n  }\n\n  ngOnInit() {\n    this.waterReadingPeriodID = undefined;\n    let params = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n    }\n  \tthis.apartmentService.getApartmentBlockByApartmentId(params).subscribe((res:any) => {\n  \t\tthis.propertyTowerData = res;\n  \t\tthis.isDataLoaded = true;\n\n  \t});\n\n    this.utilityTrackerService.getUtilityTrackerWaterChargesByApartmentId(params).subscribe((res:any) => {\n      this.allApartmentWaterCharge = res;\n    });\n\n  }\n\n}\n","export default \".mandatory {\\n  color: red;\\n  font-size: 16px;\\n}\\n\\n.filter-width {\\n  width: 150px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9tb2R1bGVzL2Ftcy91dGlsaXR5L2NvbXBvbmVudHMvdXRpbGl0eS1oaXN0b3J5L3V0aWxpdHktaGlzdG9yeS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbW9kdWxlcy9hbXMvdXRpbGl0eS9jb21wb25lbnRzL3V0aWxpdHktaGlzdG9yeS91dGlsaXR5LWhpc3RvcnkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFBO0VBQ0EsZUFBQTtBQ0NGOztBREVBO0VBQ0UsWUFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9hbXMvdXRpbGl0eS9jb21wb25lbnRzL3V0aWxpdHktaGlzdG9yeS91dGlsaXR5LWhpc3RvcnkuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFuZGF0b3J5e1xuICBjb2xvcjogcmVkO1xuICBmb250LXNpemU6IDE2cHg7XG59XG5cbi5maWx0ZXItd2lkdGh7XG4gIHdpZHRoOiAxNTBweDtcbn1cbiIsIi5tYW5kYXRvcnkge1xuICBjb2xvcjogcmVkO1xuICBmb250LXNpemU6IDE2cHg7XG59XG5cbi5maWx0ZXItd2lkdGgge1xuICB3aWR0aDogMTUwcHg7XG59Il19 */\"","import { Component, OnInit, Injector } from '@angular/core';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\n\nimport { ModalService } from 'src/app/shared/services/modal.service';\n\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-utility-history',\n  templateUrl: './utility-history.component.html',\n  styleUrls: ['./utility-history.component.scss']\n})\nexport class UtilityHistoryComponent implements OnInit {\n\n  utilityCategoryData:string = \"\";\n\n  isUtilityCategoryLoaded:boolean = false;\n  isUltilityElectricHisLoaded:boolean = false;\n  isUltilityWaterHisLoaded: boolean = false;\n  isUltilityInsuranceHisLoaded: boolean = false;\n  selectedUtilityCategory: any;\n  filteredUtilityWaterListData: any;\n  propertyTowerData: any;\n  selectedTower: any;\n\n\n  utilitySearch:string = \"\";\n\n  utilityElecteicalListPeriods: any;\n\n  apartment_id: number;\n  utilityElecteicalListData:any;\n  utilityWaterListData:any;\n  utilityInsuranceListData:any;\n\n  unitFieldType:string = \"utilityName\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n  totalFilterItems:any;\n\n  selectedInput:string = \"\";\n  columnField: any = {}\n\n  modalService:any;\n\n  public params = {\n    apartmentId: parseInt(this.cookieService.get('apartmentId'))\n  }\n  constructor(\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private apartmentService:ApartmentService,\n    private utilityTrackerService:UtilityTrackerService,\n    private cookieService:CookieService\n  ) {\n\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  selectColInput(value){\n    this.selectedInput = value;\n  }\n\n  isWaterHistory(){\n    if(this.selectedUtilityCategory == 'Water Meter Charges'){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n  onFilterByTowerChange(){\n    console.log(\"this.selectedTower\", this.selectedTower)\n    if(this.selectedTower == 'All'){\n      this.filteredUtilityWaterListData= this.utilityWaterListData;\n    }else{\n      this.filteredUtilityWaterListData= this.utilityWaterListData.filter(x=> x.block == this.selectedTower);\n   }\n   this.totalItems = this.filteredUtilityWaterListData.length;\n  }\n\n  onUtilityCatregoryChange(){\n   this.ItemStartIndex = 0;\n\n\n   if(this.selectedUtilityCategory == 'Common Electricity Charges' ){\n     this.isUltilityWaterHisLoaded = false;\n     this.isUltilityInsuranceHisLoaded = false;\n     this.getAllElectricalUtiliy();\n\n    }else if(this.selectedUtilityCategory == 'Water Meter Charges' ){\n      this.isUltilityElectricHisLoaded = false;\n      this.isUltilityInsuranceHisLoaded = false;\n     this.getAllWaterUtiliy();\n\n    }else if(this.selectedUtilityCategory == 'Common Insurance'){\n     this.isUltilityWaterHisLoaded = false;\n     this.isUltilityElectricHisLoaded = false;\n     this.getAllInsuranceUtiliy();\n\n   }else if(this.selectedUtilityCategory == 'undefined'){\n     this.selectedUtilityCategory = undefined;\n   }\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  isNoItemsAvailable(){\n    return this.totalItems == 0 ? true : false;\n  }\n\n  getUtilityFromPeriod(period_id){\n    let electeicalListPeriods = this.utilityElecteicalListPeriods.find(x=> x.period_id == period_id);\n    if(electeicalListPeriods){\n      return  electeicalListPeriods.periods[0].periodFrom.slice(0,10)\n    }\n  }\n\n  getUtilityToPeriod(period_id){\n    let electeicalListPeriods = this.utilityElecteicalListPeriods.find(x=> x.period_id == period_id);\n    if(electeicalListPeriods){\n      return electeicalListPeriods.periods[0].periodTo.slice(0,10)\n    }\n  }\n\n\n  getAllElectricalUtiliy(){\n  this.isUltilityElectricHisLoaded = false;\n  let params = {\n    apartmentId: parseInt(this.cookieService.get('apartmentId'))\n  }\n  this.utilityTrackerService.getElectricityChargesByApartmentId(params).subscribe((res: any) => {\n    this.utilityElecteicalListData = res.filter(item => {\n      return item.isActive;\n    });\n    this.utilityElecteicalListPeriods = []\n    for(let electrical_list of this.utilityElecteicalListData){\n    let period_param = {\"apartmentId\": parseInt(this.cookieService.get('apartmentId')), \"utilityTrackerElectricityPeriodId\": electrical_list.utilityTrackerElectricityPeriodId}\n    this.utilityTrackerService.getUtilityTrackerElectricityPeriodsById(period_param).subscribe((res: any) => {\n\n      let period_data={\"periods\": res, \"period_id\": electrical_list.utilityTrackerElectricityPeriodId}\n      this.utilityElecteicalListPeriods.push(period_data)\n    })\n   }\n\n    this.totalItems = this.utilityElecteicalListData.length;\n\n    if (this.totalItems > this.itemLimit) {\n      this.ItemEndIndex = this.itemLimit;\n    }\n    else {\n      this.ItemEndIndex = this.totalItems;\n    }\n\n    this.isUltilityElectricHisLoaded = true;\n\n  });\n\n}\n\n\ngetAllWaterUtiliy(){\nthis.selectedTower = 'All';\nthis.isUltilityWaterHisLoaded = false;\nlet params = {\n  apartmentId: parseInt(this.cookieService.get('apartmentId'))\n}\nthis.utilityTrackerService.getUtilityTrackerWaterChargesByApartmentId(params).subscribe((res: any) => {\n\n  this.utilityWaterListData = res;\n  this.filteredUtilityWaterListData= this.utilityWaterListData;\n  this.totalItems = this.filteredUtilityWaterListData.length;\n\n  if (this.totalItems > this.itemLimit) {\n    this.ItemEndIndex = this.itemLimit;\n  }\n  else {\n    this.ItemEndIndex = this.totalItems;\n  }\n\n  this.isUltilityWaterHisLoaded = true;\n\n});\n\n}\n\n\ngetAllInsuranceUtiliy(){\nthis.isUltilityInsuranceHisLoaded = false;\nlet params = {\n  apartmentId: parseInt(this.cookieService.get('apartmentId'))\n}\nthis.utilityTrackerService.getUtilityTrackerInsuranceChargesByApartmentId(params).subscribe((res: any) => {\n\n  this.utilityInsuranceListData = res.filter(item => {\n    return item.isActive;\n  });\n  this.utilityInsuranceListData.sort(function(a, b) {\n    a = new Date(a.dateEntered);\n    b = new Date(b.dateEntered);\n    return a>b ? -1 : a<b ? 1 : 0;\n  });\n  this.totalItems = this.utilityInsuranceListData.length;\n\n  if (this.totalItems > this.itemLimit) {\n    this.ItemEndIndex = this.itemLimit;\n  }\n  else {\n    this.ItemEndIndex = this.totalItems;\n  }\n\n  this.isUltilityInsuranceHisLoaded = true;\n\n});\n\n}\n\n\n  ngOnInit() {\n\n    let params = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n     }\n      this.utilityTrackerService.getUtilityTrackerCategorysByApartmentId(params).subscribe((res: any) => {\n      this.utilityCategoryData = res.filter(item => {\n        return item.isActive;\n      });\n      this.isUtilityCategoryLoaded = true;\n    },\n      error => {\n      });\n      this.apartmentService.getApartmentBlockByApartmentId(params).subscribe((res:any) => {\n        \tthis.propertyTowerData = res;\n    });\n   }\n\n  }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3V0aWxpdHkvY29tcG9uZW50cy91dGlsaXR5LXJlcG9ydHMvZWxlY3RyaWNpdHktcmVwb3J0L2VsZWN0cmljaXR5LXJlcG9ydC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Injector } from '@angular/core';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\n\nimport { ModalService } from 'src/app/shared/services/modal.service';\n\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-electricity-report',\n  templateUrl: './electricity-report.component.html',\n  styleUrls: ['./electricity-report.component.scss']\n})\nexport class ElectricityReportComponent implements OnInit {\n\n\n  isReportLoaded: boolean = false;\n  propertyTowerData: any;\n  selectedTower: any;\n\n  utilitySearch:string = \"\";\n\n  utilityElecteicalListPeriods: any;\n\n  apartment_id: number;\n  utilityElecteicalListData:any;\n\n  unitFieldType:string = \"utilityName\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n  totalFilterItems:any;\n\n  selectedInput:string = \"\";\n  columnField: any = {}\n\n  modalService:any;\n\n  public params = {\n    apartmentId: parseInt(this.cookieService.get('apartmentId'))\n  }\n  constructor(\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private apartmentService:ApartmentService,\n    private utilityTrackerService:UtilityTrackerService,\n    private cookieService:CookieService\n  ) {\n\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  selectColInput(value){\n    this.selectedInput = value;\n  }\n\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  isNoItemsAvailable(){\n    return this.totalItems == 0 ? true : false;\n  }\n\n  getUtilityFromPeriod(period_id){\n    let electeicalListPeriods = this.utilityElecteicalListPeriods.find(x=> x.period_id == period_id);\n    if(electeicalListPeriods){\n      return  electeicalListPeriods.periods[0].periodFrom.slice(0,10)\n    }\n  }\n\n  getUtilityToPeriod(period_id){\n    let electeicalListPeriods = this.utilityElecteicalListPeriods.find(x=> x.period_id == period_id);\n    if(electeicalListPeriods){\n      return electeicalListPeriods.periods[0].periodTo.slice(0,10)\n    }\n  }\n\n\n  getAllElectricalUtiliy(){\n  this.isReportLoaded = false;\n  let params = {\n    apartmentId: parseInt(this.cookieService.get('apartmentId'))\n  }\n  this.utilityTrackerService.getElectricityChargesByApartmentId(params).subscribe((res: any) => {\n    this.utilityElecteicalListData = res.filter(item => {\n      return item.isActive;\n    });\n    this.utilityElecteicalListPeriods = []\n    for(let electrical_list of this.utilityElecteicalListData){\n    let period_param = {\"apartmentId\": parseInt(this.cookieService.get('apartmentId')), \"utilityTrackerElectricityPeriodId\": electrical_list.utilityTrackerElectricityPeriodId}\n    this.utilityTrackerService.getUtilityTrackerElectricityPeriodsById(period_param).subscribe((res: any) => {\n\n      let period_data={\"periods\": res, \"period_id\": electrical_list.utilityTrackerElectricityPeriodId}\n      this.utilityElecteicalListPeriods.push(period_data)\n    })\n   }\n\n    this.totalItems = this.utilityElecteicalListData.length;\n\n    if (this.totalItems > this.itemLimit) {\n      this.ItemEndIndex = this.itemLimit;\n    }\n    else {\n      this.ItemEndIndex = this.totalItems;\n    }\n\n    this.isReportLoaded = true;\n\n  });\n\n}\n\n\n  ngOnInit() {\n    this.getAllElectricalUtiliy();\n   }\n  }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3V0aWxpdHkvY29tcG9uZW50cy91dGlsaXR5LXJlcG9ydHMvaW5zdXJhbmNlLXJlcG9ydC9pbnN1cmFuY2UtcmVwb3J0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Injector } from '@angular/core';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\n\nimport { ModalService } from 'src/app/shared/services/modal.service';\n\nimport * as _ from 'underscore';\n@Component({\n  selector: 'app-insurance-report',\n  templateUrl: './insurance-report.component.html',\n  styleUrls: ['./insurance-report.component.scss']\n})\nexport class InsuranceReportComponent implements OnInit {\n\n  isReportLoaded:boolean = false;\n\n  filteredUtilityWaterListData: any;\n  propertyTowerData: any;\n  selectedTower: any;\n\n\n  utilitySearch:string = \"\";\n\n  utilityElecteicalListPeriods: any;\n\n  apartment_id: number;\n  utilityInsuranceListData:any;\n\n  unitFieldType:string = \"utilityName\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n  totalFilterItems:any;\n\n  selectedInput:string = \"\";\n  columnField: any = {}\n\n  modalService:any;\n\n  public params = {\n    apartmentId: parseInt(this.cookieService.get('apartmentId'))\n  }\n  constructor(\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private apartmentService:ApartmentService,\n    private utilityTrackerService:UtilityTrackerService,\n    private cookieService:CookieService\n  ) {\n\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  selectColInput(value){\n    this.selectedInput = value;\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  isNoItemsAvailable(){\n    return this.totalItems == 0 ? true : false;\n  }\n\n  getUtilityFromPeriod(period_id){\n    let electeicalListPeriods = this.utilityElecteicalListPeriods.find(x=> x.period_id == period_id);\n    if(electeicalListPeriods){\n      return  electeicalListPeriods.periods[0].periodFrom.slice(0,10)\n    }\n  }\n\n  getUtilityToPeriod(period_id){\n    let electeicalListPeriods = this.utilityElecteicalListPeriods.find(x=> x.period_id == period_id);\n    if(electeicalListPeriods){\n      return electeicalListPeriods.periods[0].periodTo.slice(0,10)\n    }\n  }\n\n\ngetAllInsuranceUtiliy(){\n  this.isReportLoaded = false;\n  let params = {\n    apartmentId: parseInt(this.cookieService.get('apartmentId'))\n  }\n  this.utilityTrackerService.getUtilityTrackerInsuranceChargesByApartmentId(params).subscribe((res: any) => {\n\n    this.utilityInsuranceListData = res.filter(item => {\n      return item.isActive;\n    });\n    this.utilityInsuranceListData.sort(function(a, b) {\n      a = new Date(a.dateEntered);\n      b = new Date(b.dateEntered);\n      return a>b ? -1 : a<b ? 1 : 0;\n    });\n    this.totalItems = this.utilityInsuranceListData.length;\n\n    if (this.totalItems > this.itemLimit) {\n      this.ItemEndIndex = this.itemLimit;\n    }\n    else {\n      this.ItemEndIndex = this.totalItems;\n    }\n\n    this.isReportLoaded = true;\n\n  });\n\n}\n\n  ngOnInit() {\n\n  this.getAllInsuranceUtiliy()\n\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3V0aWxpdHkvY29tcG9uZW50cy91dGlsaXR5LXJlcG9ydHMvdXRpbGl0eS1yZXBvcnRzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-utility-reports',\n  templateUrl: './utility-reports.component.html',\n  styleUrls: ['./utility-reports.component.scss']\n})\nexport class UtilityReportsComponent implements OnInit {\n\n  reportDataList: any;\n  isDataLoaded:boolean = false;\n\n  constructor(private cookieService:CookieService) { }\n\n  ngOnInit() {\n    this.reportDataList = [\n      {lookupValueId: 'electricity',lookupValueName: 'List of electrical reading', description:'Gives the list of electrical reading in the condo',type:'customer'},\n      {lookupValueId: 'water', lookupValueName: 'List of water reading',description:'Gives the list of  water reading in the condo',type:'customer'},\n      {lookupValueId: 'insurance', lookupValueName: 'List of insurance charges',description:'Gives the list of insurance charges in the condo',type:'customer'},\n\n    ]\n     this.isDataLoaded = true;\n   }\n\n}\n","export default \".filter-width {\\n  width: 150px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9tb2R1bGVzL2Ftcy91dGlsaXR5L2NvbXBvbmVudHMvdXRpbGl0eS1yZXBvcnRzL3dhdGVyLXJlcG9ydC93YXRlci1yZXBvcnQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vZHVsZXMvYW1zL3V0aWxpdHkvY29tcG9uZW50cy91dGlsaXR5LXJlcG9ydHMvd2F0ZXItcmVwb3J0L3dhdGVyLXJlcG9ydC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3V0aWxpdHkvY29tcG9uZW50cy91dGlsaXR5LXJlcG9ydHMvd2F0ZXItcmVwb3J0L3dhdGVyLXJlcG9ydC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5maWx0ZXItd2lkdGh7XG4gIHdpZHRoOiAxNTBweDtcbn1cbiIsIi5maWx0ZXItd2lkdGgge1xuICB3aWR0aDogMTUwcHg7XG59Il19 */\"","import { Component, OnInit, Injector } from '@angular/core';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\n\nimport { ModalService } from 'src/app/shared/services/modal.service';\n\nimport * as _ from 'underscore';\n@Component({\n  selector: 'app-water-report',\n  templateUrl: './water-report.component.html',\n  styleUrls: ['./water-report.component.scss']\n})\nexport class WaterReportComponent implements OnInit {\n\n\n  isReportLoaded:boolean = false;\n\n  filteredUtilityWaterListData: any;\n  propertyTowerData: any;\n  selectedTower: any;\n\n\n  utilitySearch:string = \"\";\n\n  utilityElecteicalListPeriods: any;\n\n  apartment_id: number;\n  utilityWaterListData:any;\n\n  unitFieldType:string = \"utilityName\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n  totalFilterItems:any;\n\n  selectedInput:string = \"\";\n  columnField: any = {}\n\n  modalService:any;\n\n  public params = {\n    apartmentId: parseInt(this.cookieService.get('apartmentId'))\n  }\n  constructor(\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private apartmentService:ApartmentService,\n    private utilityTrackerService:UtilityTrackerService,\n    private cookieService:CookieService\n  ) {\n\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  selectColInput(value){\n    this.selectedInput = value;\n  }\n\n\n  onFilterByTowerChange(){\n    console.log(\"this.selectedTower\", this.selectedTower)\n    if(this.selectedTower == 'All'){\n      this.filteredUtilityWaterListData= this.utilityWaterListData;\n    }else{\n      this.filteredUtilityWaterListData= this.utilityWaterListData.filter(x=> x.block == this.selectedTower);\n   }\n   this.totalItems = this.filteredUtilityWaterListData.length;\n  }\n\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  isNoItemsAvailable(){\n    return this.totalItems == 0 ? true : false;\n  }\n\n  getUtilityFromPeriod(period_id){\n    let electeicalListPeriods = this.utilityElecteicalListPeriods.find(x=> x.period_id == period_id);\n    if(electeicalListPeriods){\n      return  electeicalListPeriods.periods[0].periodFrom.slice(0,10)\n    }\n  }\n\n  getUtilityToPeriod(period_id){\n    let electeicalListPeriods = this.utilityElecteicalListPeriods.find(x=> x.period_id == period_id);\n    if(electeicalListPeriods){\n      return electeicalListPeriods.periods[0].periodTo.slice(0,10)\n    }\n  }\n\n\n\ngetAllWaterUtiliy(){\n  this.selectedTower = 'All';\n  this.isReportLoaded = false;\n  let params = {\n    apartmentId: parseInt(this.cookieService.get('apartmentId'))\n  }\n  this.utilityTrackerService.getUtilityTrackerWaterChargesByApartmentId(params).subscribe((res: any) => {\n\n    this.utilityWaterListData = res;\n    this.filteredUtilityWaterListData= this.utilityWaterListData;\n    this.totalItems = this.filteredUtilityWaterListData.length;\n\n    if (this.totalItems > this.itemLimit) {\n      this.ItemEndIndex = this.itemLimit;\n    }\n    else {\n      this.ItemEndIndex = this.totalItems;\n    }\n\n    this.isReportLoaded = true;\n\n  });\n\n}\n\n\n  ngOnInit() {\n    let params = {\n      apartmentId: parseInt(this.cookieService.get('apartmentId'))\n     }\n      this.apartmentService.getApartmentBlockByApartmentId(params).subscribe((res:any) => {\n        this.propertyTowerData = res;\n    });\n     this.getAllWaterUtiliy()\n   }\n\n  }\n","export default \".mandatory {\\n  color: red;\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zZW50aGlsa3VtYXJzZWV0aGFyYW1hbi9Eb2N1bWVudHMvd29ya3MvY2xpY2tteWNvbmRvL2FwcC1uZzkvc3JjL2FwcC9tb2R1bGVzL2Ftcy91dGlsaXR5L2NvbXBvbmVudHMvdXRpbGl0eS1zZXR1cC91dGlsaXR5LXNldHVwLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tb2R1bGVzL2Ftcy91dGlsaXR5L2NvbXBvbmVudHMvdXRpbGl0eS1zZXR1cC91dGlsaXR5LXNldHVwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBQTtFQUNBLGVBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3V0aWxpdHkvY29tcG9uZW50cy91dGlsaXR5LXNldHVwL3V0aWxpdHktc2V0dXAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFuZGF0b3J5e1xuICBjb2xvcjogcmVkO1xuICBmb250LXNpemU6IDE2cHg7XG59XG4iLCIubWFuZGF0b3J5IHtcbiAgY29sb3I6IHJlZDtcbiAgZm9udC1zaXplOiAxNnB4O1xufSJdfQ== */\"","import { Component, OnInit, Injector } from '@angular/core';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ModalService } from 'src/app/shared/services/modal.service';\n\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-utility-setup',\n  templateUrl: './utility-setup.component.html',\n  styleUrls: ['./utility-setup.component.scss']\n})\nexport class UtilitySetupComponent implements OnInit {\n\n  utilityCategoryData:any;\n  apartment_id: number;\n\n  isUtilityCategoryLoaded:boolean = false;\n  isUtilityCategorySubmitted:boolean = true;\n\n  isUtilityCategoryNew:boolean = false;\n  isUtilityCategoryUpdate:boolean = false;\n\n  selectedItem: any;\n\n  UtilityCategory:string = \"\";\n  UtilityRateUnit:number;\n  UtilityCategoryUpdateId:number = 0;\n\n  alertMessage:string = \"\";\n  isError:boolean = false;\n\n  utilityListData:any;\n\n  modalService:any;\n\n  public params = {\n    apartmentId: parseInt(this.cookieService.get('apartmentId'))\n  }\n  constructor(\n    private injector: Injector,\n    private utilityTrackerService:UtilityTrackerService,\n  \tprivate lookupService: LookupService,\n    private sharedService:SharedService,\n    private cookieService:CookieService\n  ) {this.modalService = this.injector.get(ModalService);\n }\n\n  addNewUtilityCategory(){\n    this.UtilityCategory = \"\";\n    this.UtilityRateUnit = undefined;\n  \tthis.isUtilityCategoryNew = true;\n  \tthis.isUtilityCategoryUpdate = false;\n  }\n\n  updateUtilityCategory(item){\n  \tthis.isUtilityCategoryUpdate = true;\n  \tthis.isUtilityCategoryNew = false;\n    this.selectedItem = item;\n  \tthis.UtilityCategory = item.category;\n    this.UtilityRateUnit =  item.ratePerUnit;\n  \tthis.UtilityCategoryUpdateId = item.utilityTrackerCategoryId;\n  }\n\n  deleteUtilityCategory(item){\n\n  \tthis.isUtilityCategoryLoaded = false;\n    console.log(item);\n  \tvar params = {\n      utilityId: item.utilityTrackerCategoryId,\n      deleteBy: parseInt(this.cookieService.get('userId'))\n    }\n\n  \tthis.utilityTrackerService.deleteUtilityTrackerCategory(params).subscribe((res:any) => {\n      this.loadUtilityCategory()\n  \t});\n  }\n\n  showConfirmModal(form) {\n    if (this.isUtilityCategoryNew) {\n    //  this.modalService.showCategoryModal(form);\n     this.submitUtilityCategoryForm(form)\n    } else {\n      this.addOrUpdateUtilityCategoryForm(form)\n    }\n }\n\n showRemoveCategoryConfirmModal(item) {\n    this.modalService.showConfirmModal(item);\n }\n\n  removeCategoryBox(){\n  \tthis.isUtilityCategoryNew = false;\n  \tthis.isUtilityCategoryUpdate = false;\n    this.isUtilityCategorySubmitted = true;\n  \tthis.isError = false;\n  }\n\n  getUtilitysCount(id){\n\n    var data = this.utilityListData.filter( item => {\n      return item.utilityCategoryId == id;\n    });\n\n    if(data === undefined || data.length === 0) {\n      return 0\n    }\n    else {\n      return data.length\n    }\n\n  }\n\n  submitUtilityCategoryForm(form) {\n   //adding new category not supporting  now..\n   this.isError = true;\n\n    this.alertMessage = \"Please raise Service Ticket\"\n  }\n\n  addOrUpdateUtilityCategoryForm(form) {\n\n  \tthis.isUtilityCategorySubmitted = false;\n    this.isError = false;\n\n  \tif(this.isUtilityCategoryNew) {\n\n  \t\tlet details = {\n\n\t\t  \"apartmentId\": this.apartment_id,\n\t\t  \"category\": this.UtilityCategory,\n\t\t  \"ratePerUnit\": this.UtilityRateUnit,\n      \"comments\": \"\",\n\t\t  \"isActive\": true,\n\t\t  \"insertedBy\": parseInt(this.cookieService.get('userId')),\n\t\t  \"insertedOn\": new Date().toISOString(),\n\t\t  \"updatedBy\": null,\n\t\t  \"updatedOn\": null,\n\n\t\t}\n\n    let params = {\n      utilityTrackerCategory: details\n    }\n\n\t\tthis.utilityTrackerService.addUtilityTrackerCategory(params).subscribe((res:any) => {\n\n\t  \t\tif(res.message) {\n          let params = {\n            apartmentId: parseInt(this.cookieService.get('apartmentId'))\n          }\n\t  \t\t\tthis.utilityTrackerService.getUtilityTrackerCategorysByApartmentId(params).subscribe((res:any) => {\n\t  \t\t\t\tthis.isUtilityCategorySubmitted = true;\n\t\t          \tthis.sharedService.setAlertMessage(\"Category added Successfully!\");\n\n\t\t          \tthis.utilityCategoryData = res.filter(item => {\n\t                \treturn item.isActive;\n\t              \t});\n\n\t  \t\t\t});\n\t  \t\t}\n\t  \t\telse {\n\t  \t\t\tthis.isUtilityCategorySubmitted = true;\n\t          \tthis.isError = true;\n\t          \tthis.alertMessage = res.errorMessage;\n\t  \t\t}\n  \t\t});\n  \t}\n  \telse {\n\n  \t\tlet details = {\n\n        \"utilityTrackerCategoryId\": this.UtilityCategoryUpdateId,\n        \"apartmentId\": parseInt(this.cookieService.get('apartmentId')),\n  \t\t  \"category\": this.UtilityCategory,\n  \t\t  \"ratePerUnit\": this.UtilityRateUnit,\n        \"comments\": \"\",\n  \t\t  \"isActive\": true,\n  \t\t  \"insertedBy\": this.selectedItem.insertedBy,\n  \t\t  \"insertedOn\": this.selectedItem.insertedOn,\n  \t\t  \"updatedBy\": parseInt(this.cookieService.get('userId')),\n  \t\t  \"updatedOn\": new Date().toISOString(),\n\n\t\t}\n    let params = {\n      utilityTrackerCategory: details\n    }\n\n\t\tthis.utilityTrackerService.updateUtilityTrackerCategory(params).subscribe((res:any) => {\n\n\t  \t\tif(res.message) {\n          let params = {\n            apartmentId: parseInt(this.cookieService.get('apartmentId'))\n          }\n\t        this.utilityTrackerService.getUtilityTrackerCategorysByApartmentId(params).subscribe((res:any) => {\n\t  \t\t\t\tthis.isUtilityCategorySubmitted = true;\n\t  \t\t\t\tthis.sharedService.setAlertMessage(\"Category updated Successfully!\");\n\n\t\t          \tthis.utilityCategoryData = res.filter(item => {\n\t                \treturn item.isActive;\n\t              \t});\n                  this.isUtilityCategoryNew = false;\n                  this.isUtilityCategoryUpdate = false;\n\n\t  \t\t\t});\n\t  \t\t}\n\t  \t\telse {\n\t  \t\t\tthis.isUtilityCategorySubmitted = true;\n\t          \tthis.isError = true;\n\t          \tthis.alertMessage = res.errorMessage;\n\t  \t\t}\n  \t\t});\n  \t}\n   }\n\n   loadUtilityCategory(){\n     let params = {\n       apartmentId: parseInt(this.cookieService.get('apartmentId'))\n     }\n\t this.utilityTrackerService.getUtilityTrackerCategorysByApartmentId(params).subscribe((res:any) => {\n       this.utilityCategoryData = res.filter(item => {\n           return item.isActive;\n        });\n          this.isUtilityCategoryLoaded = true;\n        },\n        error => {\n      });\n   }\n\n  ngOnInit() {\n    this.apartment_id = parseInt(this.cookieService.get('apartmentId'))\n    this.loadUtilityCategory()\n\n    this.sharedService.newcategoryadd.subscribe(is_category_form => {\n\n      if(is_category_form){\n        this.submitUtilityCategoryForm(is_category_form);\n      }\n    })\n\n    this.sharedService.unitlistdeleteindexcast.subscribe(item_id => {\n\n      if(item_id){\n        this.deleteUtilityCategory(item_id);\n      }\n    })\n }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nimport { UtilityComponent } from './utility.component';\nimport { UtilityReportsComponent } from './components/utility-reports/utility-reports.component';\nimport { ElectricityReportComponent } from './components/utility-reports/electricity-report/electricity-report.component';\nimport { InsuranceReportComponent } from './components/utility-reports/insurance-report/insurance-report.component';\nimport { WaterReportComponent } from './components/utility-reports/water-report/water-report.component';\nimport { UtilitySetupComponent } from './components/utility-setup/utility-setup.component';\nimport { UtilityAddReadingComponent } from './components/utility-add-reading/utility-add-reading.component';\nimport { ElectricityReadingComponent } from './components/utility-add-reading/electricity-reading/electricity-reading.component';\nimport { WaterReadingComponent } from './components/utility-add-reading/water-reading/water-reading.component';\nimport { UtilityHistoryComponent } from './components/utility-history/utility-history.component';\n\nconst routes: Routes = [\n\n\t{ path: '', redirectTo: 'settings', pathMatch: 'full'},\n\t{ path: 'settings', component: UtilitySetupComponent},\n\t{ path: 'reading', component: UtilityAddReadingComponent},\n\t{ path: 'reading/electric', component: ElectricityReadingComponent},\n\t{ path: 'reading/water', component: WaterReadingComponent},\n\t{ path: 'history', component: UtilityHistoryComponent},\n\t{ path: 'reports', component: UtilityReportsComponent},\n\t{ path: 'reports/electricity', component: ElectricityReportComponent},\n\t{ path: 'reports/water', component: WaterReportComponent},\n\t{ path: 'reports/insurance', component: InsuranceReportComponent},\n\t{ path: '**', redirectTo: 'settings', pathMatch: 'full'}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UtilityRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3V0aWxpdHkvdXRpbGl0eS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-utility',\n  templateUrl: './utility.component.html',\n  styleUrls: ['./utility.component.scss']\n})\nexport class UtilityComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UtilityRoutingModule } from './utility-routing.module';\n\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nimport { UtilityComponent } from './utility.component';\nimport { UtilityReportsComponent } from './components/utility-reports/utility-reports.component';\nimport { UtilitySetupComponent } from './components/utility-setup/utility-setup.component';\nimport { UtilityAddReadingComponent } from './components/utility-add-reading/utility-add-reading.component';\nimport { ElectricityReadingComponent } from './components/utility-add-reading/electricity-reading/electricity-reading.component';\nimport { WaterReadingComponent } from './components/utility-add-reading/water-reading/water-reading.component';\nimport { UtilityHistoryComponent } from './components/utility-history/utility-history.component';\nimport { TowerReadingInfoComponent } from './components/utility-add-reading/water-reading/tower-reading-info/tower-reading-info.component';\nimport { UnitReadingInfoComponent } from './components/utility-add-reading/water-reading/tower-reading-info/unit-reading-info/unit-reading-info.component';\nimport { AddInsuranceComponent } from './components/utility-add-reading/add-insurance/add-insurance.component';\nimport { ElectricityReportComponent } from './components/utility-reports/electricity-report/electricity-report.component';\nimport { WaterReportComponent } from './components/utility-reports/water-report/water-report.component';\nimport { InsuranceReportComponent } from './components/utility-reports/insurance-report/insurance-report.component';\n\n@NgModule({\n  declarations: [\n  UtilityComponent,\n  UtilityReportsComponent,\n  UtilitySetupComponent,\n  UtilityAddReadingComponent,\n  ElectricityReadingComponent,\n  WaterReadingComponent,\n  UtilityHistoryComponent,\n  TowerReadingInfoComponent,\n  UnitReadingInfoComponent,\n  AddInsuranceComponent,\n  ElectricityReportComponent,\n  WaterReportComponent,\n  InsuranceReportComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    UtilityRoutingModule\n  ],\n  bootstrap: [ UtilityComponent ]\n})\nexport class UtilityModule { }\n"]}