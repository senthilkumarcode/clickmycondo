{"version":3,"sources":["webpack:///src/app/modules/ams/utility/components/utility-add-reading/add-insurance/add-insurance.component.html","webpack:///src/app/modules/ams/utility/components/utility-add-reading/electricity-reading/electricity-reading.component.html","webpack:///src/app/modules/ams/utility/components/utility-add-reading/utility-add-reading.component.html","webpack:///src/app/modules/ams/utility/components/utility-add-reading/water-reading/tower-reading-info/tower-reading-info.component.html","webpack:///src/app/modules/ams/utility/components/utility-add-reading/water-reading/tower-reading-info/unit-reading-info/unit-reading-info.component.html","webpack:///src/app/modules/ams/utility/components/utility-add-reading/water-reading/water-reading.component.html","webpack:///src/app/modules/ams/utility/components/utility-history/utility-history.component.html","webpack:///src/app/modules/ams/utility/components/utility-reports/electricity-report/electricity-report.component.html","webpack:///src/app/modules/ams/utility/components/utility-reports/insurance-report/insurance-report.component.html","webpack:///src/app/modules/ams/utility/components/utility-reports/utility-reports.component.html","webpack:///src/app/modules/ams/utility/components/utility-reports/water-report/water-report.component.html","webpack:///src/app/modules/ams/utility/components/utility-setup/utility-setup.component.html","webpack:///src/app/modules/ams/utility/utility.component.html","webpack:///src/app/modules/ams/utility/components/utility-add-reading/add-insurance/add-insurance.component.scss","webpack:///src/app/modules/ams/utility/components/utility-add-reading/add-insurance/add-insurance.component.ts","webpack:///src/app/modules/ams/utility/components/utility-add-reading/electricity-reading/electricity-reading.component.scss","webpack:///src/app/modules/ams/utility/components/utility-add-reading/electricity-reading/electricity-reading.component.ts","webpack:///src/app/modules/ams/utility/components/utility-add-reading/utility-add-reading.component.scss","webpack:///src/app/modules/ams/utility/components/utility-add-reading/utility-add-reading.component.ts","webpack:///src/app/modules/ams/utility/components/utility-add-reading/water-reading/tower-reading-info/tower-reading-info.component.scss","webpack:///src/app/modules/ams/utility/components/utility-add-reading/water-reading/tower-reading-info/tower-reading-info.component.ts","webpack:///src/app/modules/ams/utility/components/utility-add-reading/water-reading/tower-reading-info/unit-reading-info/unit-reading-info.component.scss","webpack:///src/app/modules/ams/utility/components/utility-add-reading/water-reading/tower-reading-info/unit-reading-info/unit-reading-info.component.ts","webpack:///src/app/modules/ams/utility/components/utility-add-reading/water-reading/water-reading.component.scss","webpack:///src/app/modules/ams/utility/components/utility-add-reading/water-reading/water-reading.component.ts","webpack:///src/app/modules/ams/utility/components/utility-history/utility-history.component.scss","webpack:///src/app/modules/ams/utility/components/utility-history/utility-history.component.ts","webpack:///src/app/modules/ams/utility/components/utility-reports/electricity-report/electricity-report.component.scss","webpack:///src/app/modules/ams/utility/components/utility-reports/electricity-report/electricity-report.component.ts","webpack:///src/app/modules/ams/utility/components/utility-reports/insurance-report/insurance-report.component.scss","webpack:///src/app/modules/ams/utility/components/utility-reports/insurance-report/insurance-report.component.ts","webpack:///src/app/modules/ams/utility/components/utility-reports/utility-reports.component.scss","webpack:///src/app/modules/ams/utility/components/utility-reports/utility-reports.component.ts","webpack:///src/app/modules/ams/utility/components/utility-reports/water-report/water-report.component.scss","webpack:///src/app/modules/ams/utility/components/utility-reports/water-report/water-report.component.ts","webpack:///src/app/modules/ams/utility/components/utility-setup/utility-setup.component.scss","webpack:///src/app/modules/ams/utility/components/utility-setup/utility-setup.component.ts","webpack:///src/app/modules/ams/utility/utility-routing.module.ts","webpack:///src/app/modules/ams/utility/utility.component.scss","webpack:///src/app/modules/ams/utility/utility.component.ts","webpack:///src/app/modules/ams/utility/utility.module.ts"],"names":["AddInsuranceComponent","router","route","utilityTrackerService","lookupService","apartmentService","sharedService","sessionService","onCancel","isInsuranceSubmitted","isEdit","isError","alertMessage","params","apartmentId","emit","form","details","insuranceCharge","AptunitCount","InsuranceNo","TotalCost","CostPerApt","DateEntered","Comments","parseInt","userId","Date","toISOString","utilityTrackerInsuranceCharge","addUtilityTrackerInsuranceCharge","subscribe","res","message","resetData","setAlertMessage","errorMessage","error","e","result_des","toFixed","undefined","getApartmentBlockUnitByApartmentId","length","selector","template","ElectricityReadingComponent","isReadingSubmitted","isEditReading","electric_period","electricReading","fromDate","toDate","utilityTrackerElectricityPeriod","addUtilityTrackerElectricityPeriod","period_res","ElectricityPeriodId","addOrUpdateElectricityReading","PrevReading","CurrReading","ElectricalUnit","DateTaken","comments","utilityTrackerElectricityCharge","addUtilityTrackerElectricityCharge","ElectricalUnitPerApT","sub","categoryCostPerApt","dateTaken","getUtilityTrackerCategorysByApartmentId","electric_category","find","x","category","ratePerUnit","UtilityAddReadingComponent","injector","isUtilityCategoryLoaded","selected_utility_type","modalService","get","utilityCategoryData","filter","item","isActive","i","selected_index","utility_selected_category","apartment_id","loadUtilityCategory","TowerReadingInfoComponent","isTowersLoaded","isUnitSold","isUnitVacant","ItemStartIndex","itemLimit","apartmentBlockId","tower","event","ItemEndIndex","waterReading","getApartmentBlockUnitByBlockId","towerUnitData","totalItems","unit","block_unit","allApartmentWaterCharge","aptUnit","apartmentBlockUnitNumber","water_charge","waterCharge","UnitReadingInfoComponent","status","name","data","unitTypeData","lookupValueName","unitTypeId","lookupValueId","apartmentBlockUnitId","waterReadingPeriodID","prevReading","currReading","units","cost","utilityTrackerWaterCharge","addUtilityTrackerWaterCharge","LookupTypeId","getLookupValueByLookupTypeId","setTimeout","getUnitType","unitType","WaterReadingComponent","isDataLoaded","isSetPeriod","water_reading_period","waterReadingFromDate","waterReadingToDate","utilityTrackerWaterChargePeriod","addUtilityTrackerWaterChargePeriod","getApartmentBlockByApartmentId","propertyTowerData","getUtilityTrackerWaterChargesByApartmentId","UtilityHistoryComponent","isUltilityElectricHisLoaded","isUltilityWaterHisLoaded","isUltilityInsuranceHisLoaded","utilitySearch","unitFieldType","unitOrder","selectedInput","columnField","type","value","selectedUtilityCategory","selectedTower","filteredUtilityWaterListData","utilityWaterListData","block","getAllElectricalUtiliy","getAllWaterUtiliy","getAllInsuranceUtiliy","window","innerWidth","period_id","electeicalListPeriods","utilityElecteicalListPeriods","periods","periodFrom","slice","periodTo","getElectricityChargesByApartmentId","utilityElecteicalListData","electrical_list","period_param","utilityTrackerElectricityPeriodId","getUtilityTrackerElectricityPeriodsById","period_data","push","getUtilityTrackerInsuranceChargesByApartmentId","utilityInsuranceListData","sort","a","b","dateEntered","ElectricityReportComponent","isReportLoaded","cellsrenderer","row","column","columnrenderer","columnData","text","datafield","minwidth","format","renderer","width","gridSourceData","localdata","datatype","electricityReportDataList","jqx","dataAdapter","showItems","filtergroup","filter_or_operator","filtervalue","filtercondition","filterData","createfilter","operator","addfilter","datagrid","showfiltercolumnbackground","forEach","applyfilters","clearfilters","InsuranceReportComponent","insuranceReportDataList","UtilityReportsComponent","reportDataList","description","WaterReportComponent","apartmentBlockNumber","filterGroup","filterOperator","filterValue","filterCondition","content","waterReportDataList","records","deliveryTypeId","UtilitySetupComponent","isUtilityCategorySubmitted","isUtilityCategoryNew","isUtilityCategoryUpdate","UtilityCategory","UtilityCategoryUpdateId","UtilityRateUnit","selectedItem","utilityTrackerCategoryId","utilityId","deleteBy","deleteUtilityTrackerCategory","submitUtilityCategoryForm","addOrUpdateUtilityCategoryForm","showConfirmModal","id","utilityListData","utilityCategoryId","utilityTrackerCategory","addUtilityTrackerCategory","insertedBy","insertedOn","updateUtilityTrackerCategory","newcategoryadd","is_category_form","unitlistdeleteindexcast","item_id","deleteUtilityCategory","routes","path","redirectTo","pathMatch","component","canActivate","UtilityRoutingModule","imports","forChild","exports","UtilityComponent","UtilityModule","declarations","bootstrap"],"mappings":"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","file":"modules-ams-utility-utility-module-es5.js","sourcesContent":["export default \"<div class=\\\"vendor-create-wrapper\\\">\\n\\n      <app-alert-message [message]=\\\"errorMessage\\\" [isAlert]=\\\"isError\\\"></app-alert-message>\\n      <form #createInsuranceChargeForm = \\\"ngForm\\\" name=\\\"createInsuranceChargeForm\\\" (ngSubmit)=\\\"submitInsuranceChargeForm(createInsuranceChargeForm)\\\"  novalidate>\\n        <h4 class=\\\"main-title-mini float-left mt-3\\\">\\n          <span>Add Insurance</span>\\n        </h4>\\n\\n        <div class=\\\"card ov clear\\\">\\n\\n          <div class=\\\"card-body ov\\\">\\n\\n            <app-loader *ngIf=\\\"!isInsuranceSubmitted\\\"></app-loader>\\n\\n            <app-alert-message [message]=\\\"alertMessage\\\" [isError]=\\\"isError\\\" ></app-alert-message>\\n\\n        <ng-container *ngIf=\\\"isInsuranceSubmitted\\\">\\n        <div class=\\\"row\\\">\\n\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                  <label>Condo Unit count<span class=\\\"mandatory\\\">*</span></label>\\n                  <input type=\\\"text\\\" [disabled]=true class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"aptunitCount\\\" [(ngModel)]=\\\"insuranceCharge.AptunitCount\\\" required>\\n              </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                  <label>Insurance Number<span class=\\\"mandatory\\\">*</span></label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"insuranceNo\\\" [(ngModel)]=\\\"insuranceCharge.InsuranceNo\\\" required>\\n              </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                  <label>Total Cost<span class=\\\"mandatory\\\">*</span></label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" (keyup)=\\\"calculateCostPerAptFrmTotalCost($event)\\\" placeholder=\\\"Enter\\\" name=\\\"totalUnit\\\" [(ngModel)]=\\\"insuranceCharge.TotalCost\\\" required>\\n              </div>\\n          </div>\\n\\n        </div>\\n          <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                  <label>Cost per Condo<span class=\\\"mandatory\\\">*</span></label>\\n                  <input type=\\\"text\\\" [disabled]=true class=\\\"form-control\\\"  placeholder=\\\"Enter\\\" name=\\\"costPerUnit\\\" [(ngModel)]=\\\"insuranceCharge.CostPerApt\\\" required>\\n              </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"input-box mb-3\\\">\\n                        <label>Date Entered<span class=\\\"mandatory\\\">*</span></label>\\n                        <input class=\\\"form-control\\\" name=\\\"dateTaken\\\" [owlDateTime]=\\\"dateTaken\\\" [owlDateTimeTrigger]=\\\"dateTaken\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"insuranceCharge.DateEntered\\\" required>\\n              <owl-date-time #dateTaken [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n              <div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"dateTaken\\\">\\n                  <mat-icon svgIcon=\\\"feather:calendar\\\"></mat-icon>\\n                </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"input-box\\\">\\n              <label>Comments</label>\\n              <textarea placeholder=\\\"some text here\\\" name=\\\"insuranceComments\\\" [(ngModel)]=\\\"insuranceCharge.Comments\\\"></textarea>\\n            </div>\\n          </div>\\n          </div>\\n        </ng-container>\\n      </div>\\n    </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"list-inline float-right mt-4\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn blue mr-4\\\"  (click)=\\\"Cancel()\\\">Cancel</button>\\n                  <button class=\\\"btn blue mr-2\\\" [disabled]=\\\"createInsuranceChargeForm.invalid\\\" *ngIf=\\\"!isEdit\\\">Submit</button>\\n                  <button class=\\\"btn blue mr-2\\\" [disabled]=\\\"createInsuranceChargeForm.invalid\\\" *ngIf=\\\"isEdit\\\">Update</button>\\n              </div>\\n            </div>\\n          </div>\\n      </form>\\n\\n</div>\\n\";","export default \"<div class=\\\"vendor-create-wrapper\\\">\\n\\n      <app-alert-message [message]=\\\"errorMessage\\\" [isAlert]=\\\"isError\\\"></app-alert-message>\\n      <form #createElectricityReadingForm = \\\"ngForm\\\" name=\\\"createElectricityReadingForm\\\" (ngSubmit)=\\\"submitReadingForm(createElectricityReadingForm)\\\"  novalidate>\\n        <h4 class=\\\"main-title-mini float-left mt-3\\\">\\n          <span>Add Electricity Reading</span>\\n        </h4>\\n\\n        <div class=\\\"card ov clear\\\">\\n\\n          <div class=\\\"card-body ov\\\">\\n\\n            <app-loader *ngIf=\\\"!isReadingSubmitted\\\"></app-loader>\\n\\n            <app-alert-message [message]=\\\"alertMessage\\\" [isError]=\\\"isError\\\" ></app-alert-message>\\n\\n        <ng-container *ngIf=\\\"isReadingSubmitted\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"input-box mb-3\\\">\\n                        <label>From<span class=\\\"mandatory\\\">*</span></label>\\n                        <input class=\\\"form-control\\\" name=\\\"reportFrom\\\" [owlDateTime]=\\\"reportFrom\\\" [owlDateTimeTrigger]=\\\"reportFrom\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"electricReading.fromDate\\\" required>\\n              <owl-date-time #reportFrom [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n              <div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"reportFrom\\\">\\n                  <mat-icon svgIcon=\\\"feather:calendar\\\"></mat-icon>\\n                </div>\\n                </div>\\n          </div>\\n\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"input-box mb-3\\\">\\n                        <label>To<span class=\\\"mandatory\\\">*</span></label>\\n                        <input class=\\\"form-control\\\" name=\\\"reportTo\\\" [owlDateTime]=\\\"reportTo\\\" [owlDateTimeTrigger]=\\\"reportTo\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"electricReading.toDate\\\" required>\\n              <owl-date-time #reportTo [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n              <div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"reportTo\\\">\\n                  <mat-icon svgIcon=\\\"feather:calendar\\\"></mat-icon>\\n                </div>\\n                </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                  <label>Condo Unit count<span class=\\\"mandatory\\\">*</span></label>\\n                  <input type=\\\"text\\\" [disabled]=true class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"aptunitCount\\\" [(ngModel)]=\\\"electricReading.AptunitCount\\\" required>\\n              </div>\\n          </div>\\n\\n        </div>\\n          <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                  <label>Previous Reading<span class=\\\"mandatory\\\">*</span></label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" (keyup)=\\\"calculateUnitPerAptFrmPreReading($event)\\\" placeholder=\\\"Enter\\\" name=\\\"prevReading\\\" [(ngModel)]=\\\"electricReading.PrevReading\\\" required>\\n              </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                  <label>Current Reading<span class=\\\"mandatory\\\">*</span></label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" (keyup)=\\\"calculateUnitPerAptFrmCurReading($event)\\\" placeholder=\\\"Enter\\\" name=\\\"currReading\\\" [(ngModel)]=\\\"electricReading.CurrReading\\\" required>\\n              </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"input-box mb-3\\\">\\n                        <label>Date Taken<span class=\\\"mandatory\\\">*</span></label>\\n                        <input class=\\\"form-control\\\" name=\\\"dateTaken\\\" [owlDateTime]=\\\"dateTaken\\\" [owlDateTimeTrigger]=\\\"dateTaken\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"electricReading.dateTaken\\\" required>\\n              <owl-date-time #dateTaken [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n              <div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"dateTaken\\\">\\n                  <mat-icon svgIcon=\\\"feather:calendar\\\"></mat-icon>\\n                </div>\\n                </div>\\n          </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                  <label>Electrical Units per Condo<span class=\\\"mandatory\\\">*</span></label>\\n                  <input type=\\\"text\\\" [disabled]=true  class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"electricUnit\\\" [(ngModel)]=\\\"electricReading.ElectricalUnitPerApT\\\" required>\\n              </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                  <label>Cost per Condo Unit<span class=\\\"mandatory\\\">*</span></label>\\n                  <input type=\\\"text\\\" [disabled]=true  class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"electricCost\\\" [(ngModel)]=\\\"electricReading.CostPerApt\\\" required>\\n              </div>\\n          </div>\\n          <div class=\\\"col-sm-6\\\">\\n\\n            <div class=\\\"input-box\\\">\\n                        <label>Comments</label>\\n                        <textarea placeholder=\\\"some text here\\\" name=\\\"UtilityReadingComments\\\" [(ngModel)]=\\\"electricReading.Comments\\\"></textarea>\\n                    </div>\\n\\n          </div>\\n          </div>\\n        </ng-container>\\n      </div>\\n\\n    </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"list-inline float-right mt-4\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn blue mr-4\\\"  (click)=\\\"Cancel()\\\">Cancel</button>\\n                  <button class=\\\"btn blue mr-2\\\" [disabled]=\\\"createElectricityReadingForm.invalid\\\" *ngIf=\\\"!isEdit\\\">Submit</button>\\n                  <button class=\\\"btn blue mr-2\\\" [disabled]=\\\"createElectricityReadingForm.invalid\\\" *ngIf=\\\"isEdit\\\">Update</button>\\n              </div>\\n            </div>\\n          </div>\\n      </form>\\n\\n</div>\\n\";","export default \"<div *ngIf=\\\"!selected_utility_type \\\"class=\\\"gl-other-reports-wrapper\\\">\\n\\n\\t<h4 class=\\\"main-title-mini\\\">Select the reports</h4>\\n\\t<div class=\\\"card\\\">\\n\\t\\t<div class=\\\"card-body p-0\\\">\\n\\t\\t\\t<div class=\\\"simple-lists\\\">\\n\\t\\t\\t\\t<ng-container *ngFor=\\\"let utility of utilityCategoryData; let i = index\\\">\\n\\t\\t\\t\\t\\t<a (click)=\\\"selectUtility(utility)\\\">{{utility.category}}</a>\\n\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\\n<ng-container *ngIf=\\\"selected_utility_type\\\">\\n    <app-electricity-reading *ngIf=\\\"utility_selected_category.category == 'Common Electricity Charges'\\\" (onCancel)=\\\"onCancel($event)\\\"></app-electricity-reading>\\n    <app-water-reading *ngIf=\\\"utility_selected_category.category == 'Water Meter Charges'\\\" (onCancel)=\\\"onCancel($event)\\\" [utility_selected_category]=\\\"utility_selected_category\\\"></app-water-reading>\\n\\t\\t<app-add-insurance *ngIf=\\\"utility_selected_category.category == 'Common Insurance'\\\" (onCancel)=\\\"onCancel($event)\\\" ></app-add-insurance>\\n</ng-container>\\n\";","export default \"<div class=\\\"property-tower-wrapper\\\">\\n\\n\\t<ng-container>\\n\\n\\t\\t<form #propertyDetailsForm = \\\"ngForm\\\" name=\\\"propertyDetailsForm\\\" novalidate>\\n\\n\\t\\t\\t<div class=\\\"data-wrapper\\\">\\n\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                <label>Total Units: {{totalItems}}</label>\\n\\t\\t\\t    \\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t</div>\\n\\n\\t\\t</form>\\n\\n\\t</ng-container>\\n\\n  <app-loader *ngIf=\\\"!isTowersLoaded\\\"></app-loader>\\n\\n\\t<ng-container *ngIf=\\\"isTowersLoaded\\\">\\n\\n\\t\\t<div id=\\\"propertyUnitDetailsAccordion\\\">\\n\\n\\t\\t\\t<!-- <h4 class=\\\"main-title-mini float-left mb-3\\\">Units</h4> -->\\n\\n\\t\\t\\t<ul class=\\\"list-group tabs clear\\\">\\n        <div class=\\\"row\\\">\\n          <div  class=\\\"col-sm-2\\\">\\n                  <label>Block Unit<span class=\\\"mandatory\\\">*</span></label>\\n          </div>\\n          <div  class=\\\"col-sm-2\\\">\\n                  <label>Previous reading<span class=\\\"mandatory\\\">*</span></label>\\n          </div>\\n          <div class=\\\"col-sm-2\\\">\\n                  <label>Current Reading<span class=\\\"mandatory\\\">*</span></label>\\n          </div>\\n          <div class=\\\"col-sm-2\\\">\\n                <label>Units this month<span class=\\\"mandatory\\\">*</span></label>\\n          </div>\\n          <div class=\\\"col-sm-2\\\">\\n                <label>Date Taken<span class=\\\"mandatory\\\">*</span></label>\\n          </div>\\n          </div>\\n\\t\\t\\t\\t<ng-container  *ngFor=\\\"let unit of towerUnitData | slice:ItemStartIndex:ItemEndIndex; let i = index; first as isFirst\\\">\\n          <app-unit-reading-info [unit]=\\\"unit\\\"  [tower]=\\\"tower\\\" [waterReadingPeriodID]=\\\"waterReadingPeriodID\\\" [utility_selected_category]=\\\"utility_selected_category\\\"></app-unit-reading-info>\\n\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t</ul>\\n\\n\\t\\t\\t<app-pagination\\n\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"\\n\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\n\\t\\t\\t</app-pagination>\\n\\n\\t\\t</div>\\n\\n\\t</ng-container>\\n\\n</div>\\n\";","export default \"<div class=\\\"property-tower-unit-wrapper\\\">\\n  <app-alert-message [message]=\\\"alertMessage\\\" [isError]=\\\"isError\\\" ></app-alert-message>\\n\\n  <form  #waterReadingDetailsForm = \\\"ngForm\\\" name=\\\"waterReadingDetailsForm\\\" (ngSubmit)=\\\"submitWaterMeterReading(waterReadingDetailsForm)\\\" novalidate>\\n\\n  <div class=\\\"data-wrapper\\\">\\n  <div class=\\\"row\\\">\\n    <div  class=\\\"col-sm-2\\\">\\n        <div class=\\\"input-box\\\">\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" [disabled]=true placeholder=\\\"Enter\\\" name=\\\"blockUnitNo\\\" [(ngModel)]=\\\"unit.apartmentBlockUnitNumber\\\" required>\\n        </div>\\n    </div>\\n    <div  class=\\\"col-sm-2\\\">\\n        <div class=\\\"input-box\\\">\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" [disabled]=\\\"unit.water_charge.prevReading || !isEdit\\\"  placeholder=\\\"Enter\\\" (keyup)=\\\"calculateUnitPerAptFrmPreReading($event)\\\" name=\\\"prevReading\\\" [(ngModel)]=\\\"waterReading.prevReading\\\" required>\\n        </div>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n        <div class=\\\"input-box\\\">\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" [disabled]=!isEdit placeholder=\\\"Enter\\\" (keyup)=\\\"calculateUnitPerAptFrmCurReading($event)\\\" name=\\\"currReading\\\" [(ngModel)]=\\\"waterReading.currReading\\\" required>\\n        </div>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n        <div class=\\\"input-box\\\">\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" [disabled]=true placeholder=\\\"Enter\\\" name=\\\"currUnit\\\" [(ngModel)]=\\\"waterReading.units\\\" required>\\n        </div>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n      <div class=\\\"input-box mb-3\\\">\\n                  <input class=\\\"form-control\\\" name=\\\"dateTaken\\\" [disabled]=!isEdit [owlDateTime]=\\\"dateTaken\\\" [owlDateTimeTrigger]=\\\"dateTaken\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"waterReading.dateTaken\\\" required>\\n        <owl-date-time #dateTaken [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n        <div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"dateTaken\\\">\\n            <!-- <mat-icon svgIcon=\\\"feather:calendar\\\"></mat-icon> -->\\n          </div>\\n          </div>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n\\n      <div *ngIf=\\\"isEdit\\\" class=\\\"list-inline float-right\\\">\\n        <button class=\\\"btn blue\\\" [disabled]=\\\"waterReadingDetailsForm.invalid\\\">Submit</button>\\n        <!-- <button class=\\\"btn blue\\\" [disabled]=\\\"waterReadingDetailsForm.invalid\\\">Update</button> -->\\n      </div>\\n\\n      <div class=\\\"icon-wrapper  mb-2\\\" *ngIf=\\\"!isEdit\\\">\\n        <i-feather class=\\\"icon edit\\\" name=\\\"edit\\\" (click)=\\\"showEditForm()\\\"></i-feather>\\n      </div>\\n\\n      <div class=\\\"icon-wrapper  mb-2\\\" *ngIf=\\\"isEdit\\\">\\n        <i-feather class=\\\"icon back\\\" name=\\\"chevron-left\\\" (click)=\\\"showEditForm()\\\"></i-feather>\\n      </div>\\n\\n    </div>\\n    </div>\\n </div>\\n\\n</form>\\n</div>\\n\";","export default \"<div class=\\\"property-details-wrapper profile-section\\\">\\n\\n  <form #setWaterReadingPeriodForm = \\\"ngForm\\\" name=\\\"setWaterReadingPeriodForm\\\"  (ngSubmit)=\\\"submitReadingPeriodForm(setWaterReadingPeriodForm)\\\" novalidate>\\n\\n    <div class=\\\"card ov mb-5\\\">\\n\\n      <div class=\\\"card-header\\\">\\n        <div class=\\\"float-left\\\">\\n            <h5>Select Reading Period</h5>\\n          </div>\\n      </div>\\n      <div class=\\\"card-body ov\\\">\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"input-box mb-3\\\">\\n                        <label>From<span class=\\\"mandatory\\\">*</span></label>\\n                        <input class=\\\"form-control\\\" name=\\\"reportFrom\\\" [owlDateTime]=\\\"reportFrom\\\" [owlDateTimeTrigger]=\\\"reportFrom\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"waterReadingFromDate\\\" required>\\n              <owl-date-time #reportFrom [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n              <div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"reportFrom\\\">\\n                  <mat-icon svgIcon=\\\"feather:calendar\\\"></mat-icon>\\n                </div>\\n                </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"input-box mb-3\\\">\\n                        <label>To<span class=\\\"mandatory\\\">*</span></label>\\n                        <input class=\\\"form-control\\\" name=\\\"reportTo\\\" [owlDateTime]=\\\"reportTo\\\" [owlDateTimeTrigger]=\\\"reportTo\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"waterReadingToDate\\\" required>\\n              <owl-date-time #reportTo [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n              <div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"reportTo\\\">\\n                  <mat-icon svgIcon=\\\"feather:calendar\\\"></mat-icon>\\n                </div>\\n                </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"list-inline  mt-4\\\">\\n                <button type=\\\"button\\\" class=\\\"btn blue mr-4\\\"  (click)=\\\"cancel()\\\">Cancel</button>\\n                <button class=\\\"btn blue mr-2\\\" [disabled]=\\\"setWaterReadingPeriodForm.invalid\\\">Submit</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n\\n  <app-loader *ngIf=\\\"!isSetPeriod\\\"></app-loader>\\n\\n\\n\\t<h4 *ngIf=\\\"waterReadingPeriodID\\\" class=\\\"main-title-mini float-left\\\">Towers</h4>\\n\\n\\t<div *ngIf=\\\"waterReadingPeriodID\\\" class=\\\"card clear\\\" id=\\\"propertyDetailsAccordion\\\">\\n\\n\\t\\t<div class=\\\"card-body p-0\\\">\\n\\n\\t\\t\\t<app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"isDataLoaded\\\">\\n\\n\\t\\t\\t\\t<ul class=\\\"list-group tabs clear\\\">\\n\\n\\t\\t\\t\\t\\t<ng-container  *ngFor=\\\"let tower of propertyTowerData; let i = index; first as isFirst\\\">\\n\\t\\t\\t\\t\\t\\t<li class=\\\"list-group-item collapsed\\\" data-toggle=\\\"collapse\\\" attr.data-target=\\\"#towerDetail{{i}}\\\" aria-expanded=\\\"true\\\" attr.aria-controls=\\\"towerDetail{{i}}\\\">\\n\\t\\t\\t\\t\\t\\t\\t<span>{{tower.apartmentBlockNumber}}</span>\\n\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t<div id=\\\"towerDetail{{i}}\\\" class=\\\"collapse\\\"  attr.aria-labelledby=\\\"towerDetail{{i}}\\\" data-parent=\\\"#propertyDetailsAccordion\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"details\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<app-tower-reading-info [tower]=\\\"tower\\\" [waterReadingPeriodID]=\\\"waterReadingPeriodID\\\" [allApartmentWaterCharge]=\\\"allApartmentWaterCharge\\\" [utility_selected_category]=\\\"utility_selected_category\\\"></app-tower-reading-info>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t</ul>\\n\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n</div>\\n\";","export default \"<div class=\\\"inventory-view-wrapper\\\">\\n\\n\\n\\t<form #viewUtilityCategoryForm = \\\"ngForm\\\" name=\\\"viewUtilityCategoryForm\\\"  novalidate>\\n\\n\\t\\t<div class=\\\"card ov mb-5\\\">\\n\\n\\t\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t\\t<div class=\\\"float-left\\\">\\n\\t    \\t\\t\\t<h5>Select Category</h5>\\n\\t    \\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-body ov\\\">\\n\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"input-box\\\">\\n                        <label>Utility Category<span class=\\\"mandatory\\\">*</span></label>\\n                        <select (change)=\\\"onUtilityCatregoryChange()\\\"\\n                    name=\\\"utilityCategory\\\"\\n                    id=\\\"utilityCategory\\\"\\n                    class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"selectedUtilityCategory\\\" required>\\n                    <option value=\\\"undefined\\\" selected>Select</option>\\n                    <option *ngFor=\\\"let item of utilityCategoryData\\\" [value]=\\\"item.category\\\">{{ item.category }}</option>\\n                </select>\\n            </div>\\n          </div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</form>\\n\\n\\n\\t<div *ngIf=\\\"selectedUtilityCategory\\\" class=\\\"card table-card\\\">\\n\\n\\t\\t<div class=\\\"card-header\\\">\\n    \\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h5>All {{selectedUtilityCategory}} <span class=\\\"badge lime-green\\\">{{totalItems}}</span></h5>\\n    \\t\\t</div>\\n    \\t\\t<ul class=\\\"list-inline\\\">\\n\\t\\t\\t\\t\\t<li *ngIf=\\\"isWaterHistory()\\\" class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n\\t\\t\\t    \\t<select (change)=\\\"onFilterByTowerChange()\\\" name=\\\"utilityTowerFilter\\\" id=\\\"utilityTowerFilter\\\" class=\\\"form-control filter-width\\\" [(ngModel)]=\\\"selectedTower\\\" required>\\n\\t\\t\\t\\t    \\t<option value=\\\"All\\\" selected>Select Tower</option>\\n\\t\\t\\t\\t    \\t<option *ngFor=\\\"let tower of propertyTowerData\\\" [value]=\\\"tower.apartmentBlockNumber\\\">{{ tower.apartmentBlockNumber }}</option>\\n\\t\\t\\t    \\t</select>\\n\\t\\t    \\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item search d-none d-md-inline-block\\\">\\n    \\t\\t\\t\\t<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n    \\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"utilitySearch\\\" >\\n    \\t\\t\\t</li>\\n    \\t\\t\\t<li class=\\\"list-inline-item\\\">\\n    \\t\\t\\t\\t<a class=\\\"btn trans-white \\\">\\n    \\t\\t\\t\\t\\t<i-feather class=\\\"icon print\\\" name=\\\"printer\\\"></i-feather>\\n    \\t\\t\\t\\t\\t<span>Print</span>\\n    \\t\\t\\t\\t</a>\\n    \\t\\t\\t</li>\\n    \\t\\t</ul>\\n  \\t\\t</div>\\n\\n  \\t\\t<app-loader *ngIf=\\\"!isUltilityInsuranceHisLoaded && !isUltilityWaterHisLoaded && !isUltilityElectricHisLoaded\\\"></app-loader>\\n\\n  \\t\\t<div class=\\\"card-body p-0\\\">\\n\\n  \\t\\t\\t<ng-container *ngIf=\\\"selectedUtilityCategory == 'Common Electricity Charges' && isUltilityElectricHisLoaded\\\">\\n\\n  \\t\\t\\t\\t<table class=\\\"table table-checker table-resizable\\\" [ngClass]=\\\"isMobileView()\\\">\\n\\t\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t    <tr>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">From\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('fromDate')\\\" [ngClass]=\\\"getFieldOrderBy('fromDate')\\\"></span>\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">To\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('toDate')\\\" [ngClass]=\\\"getFieldOrderBy('toDate')\\\"></span>\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">Pre Reading\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('preReading')\\\" [ngClass]=\\\"getFieldOrderBy('preReading')\\\"></span>\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">Curr Reading\\n\\t\\t\\t\\t\\t      \\t<span (click)=\\\"sortUnitData('currReading')\\\" [ngClass]=\\\"getFieldOrderBy('currReading')\\\"></span>\\n\\t\\t\\t\\t\\t      </th>\\n\\t\\t\\t\\t\\t      <th scope=\\\"col\\\">Condo unit\\n                  <span (click)=\\\"sortUnitData('aptUnit')\\\" [ngClass]=\\\"getFieldOrderBy('aptUnit')\\\"></span>\\n\\t\\t\\t\\t\\t\\t  </th>\\n              <th scope=\\\"col\\\">Cost Per Unit\\n                <span (click)=\\\"sortUnitData('costPerUnit')\\\" [ngClass]=\\\"getFieldOrderBy('costPerUnit')\\\"></span>\\n              </th>\\n              <th scope=\\\"col\\\">Added By\\n                <span (click)=\\\"sortUnitData('addedBy')\\\" [ngClass]=\\\"getFieldOrderBy('addedBy')\\\"></span>\\n              </th>\\n\\t\\t\\t\\t\\t    </tr>\\n\\t\\t\\t\\t    </thead>\\n\\t\\t\\t\\t    <tbody>\\n\\t\\t\\t\\t\\t    <tr *ngFor=\\\"let utility of utilityElecteicalListData | simpleSearch: utilitySearch | columnSearch: columnField:selectedInput | sort : unitFieldType: unitOrder | slice:ItemStartIndex:ItemEndIndex ; let i = index\\\" [ngClass]=\\\"utility.isActive ? '' : 'notactive'\\\">\\n\\t\\t\\t\\t\\t      <td class=\\\"name\\\">{{getUtilityFromPeriod(utility.utilityTrackerElectricityChargeId)}}</td>\\n\\t\\t\\t\\t\\t      <td class=\\\"grey\\\">{{getUtilityToPeriod(utility.utilityTrackerElectricityChargeId)}}</td>\\n\\t\\t\\t\\t\\t      <td class=\\\"grey\\\">{{utility.prevReading}}</td>\\n                <td class=\\\"grey\\\">{{utility.currReading}}</td>\\n                <td class=\\\"grey\\\">{{utility.electricalUnitPerAptUnit}}</td>\\n                <td class=\\\"grey\\\">{{utility.costPerAptUnit}}</td>\\n                <td class=\\\"grey\\\">{{utility.insertedByUser}}</td>\\n\\t\\t\\t\\t\\t      <td>\\n\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t    </tr>\\n\\t\\t\\t\\t    </tbody>\\n\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t<div class=\\\"button-wrapper border-top\\\" *ngIf=\\\"isNoItemsAvailable()\\\">\\n\\t    \\t\\t\\t<p class=\\\"snippet\\\">No Records Found</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<app-pagination\\n\\t\\t\\t\\t\\t[totalItems]=\\\"totalItems\\\"\\n\\t\\t\\t\\t\\t[ItemStartIndex]=\\\"ItemStartIndex\\\"\\n\\t\\t\\t\\t\\t[ItemEndIndex] = \\\"ItemEndIndex\\\"\\n\\t\\t\\t\\t\\t[itemLimit] = \\\"itemLimit\\\"\\n\\t\\t\\t\\t\\t(outputParams) = \\\"getIndexParams($event)\\\">\\n\\t\\t\\t\\t</app-pagination>\\n\\n  \\t\\t\\t</ng-container>\\n\\n\\n        <ng-container *ngIf=\\\"this.selectedUtilityCategory == 'Water Meter Charges' && isUltilityWaterHisLoaded\\\">\\n\\n          <table class=\\\"table table-checker table-resizable\\\" [ngClass]=\\\"isMobileView()\\\">\\n          <thead>\\n              <tr>\\n                <th scope=\\\"col\\\">Tower\\n                  <span (click)=\\\"sortUnitData('block')\\\" [ngClass]=\\\"getFieldOrderBy('block')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Condo Unit\\n                  <span (click)=\\\"sortUnitData('aptUnit')\\\" [ngClass]=\\\"getFieldOrderBy('aptUnit')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Connection No\\n                  <span (click)=\\\"sortUnitData('connectionNo')\\\" [ngClass]=\\\"getFieldOrderBy('connectionNo')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Previous Reading\\n                  <span (click)=\\\"sortUnitData('prevReading')\\\" [ngClass]=\\\"getFieldOrderBy('prevReading')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Current Reading\\n                  <span (click)=\\\"sortUnitData('currReading')\\\" [ngClass]=\\\"getFieldOrderBy('currReading')\\\"></span>\\n                </th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let utility of filteredUtilityWaterListData | simpleSearch: utilitySearch | sort : unitFieldType: unitOrder | slice:ItemStartIndex:ItemEndIndex ; let i = index\\\">\\n                <td class=\\\"grey\\\">{{utility.block}}</td>\\n                <td class=\\\"grey\\\">{{utility.aptUnit}}</td>\\n                <td class=\\\"grey\\\"><span *ngIf=\\\"utility.waterCharge.length>0\\\">{{utility.waterCharge[0].connectionNo}}</span></td>\\n                <td class=\\\"grey\\\"><span *ngIf=\\\"utility.waterCharge.length>0\\\">{{utility.waterCharge[0].prevReading}}</span></td>\\n                <td class=\\\"grey\\\"><span *ngIf=\\\"utility.waterCharge.length>0\\\">{{utility.waterCharge[0].currReading}}</span></td>\\n              </tr>\\n            </tbody>\\n        </table>\\n        <div class=\\\"button-wrapper border-top\\\" *ngIf=\\\"isNoItemsAvailable()\\\">\\n            <p class=\\\"snippet\\\">No Records Found</p>\\n        </div>\\n        <app-pagination\\n          [totalItems]=\\\"totalItems\\\"\\n          [ItemStartIndex]=\\\"ItemStartIndex\\\"\\n          [ItemEndIndex] = \\\"ItemEndIndex\\\"\\n          [itemLimit] = \\\"itemLimit\\\"\\n          (outputParams) = \\\"getIndexParams($event)\\\">\\n        </app-pagination>\\n\\n        </ng-container>\\n\\n        <ng-container *ngIf=\\\"this.selectedUtilityCategory == 'Common Insurance' && isUltilityInsuranceHisLoaded\\\">\\n\\n          <table class=\\\"table table-checker table-resizable\\\" [ngClass]=\\\"isMobileView()\\\">\\n          <thead>\\n              <tr>\\n                <th scope=\\\"col\\\">Insurance Number\\n                  <span (click)=\\\"sortUnitData('insuranceNo')\\\" [ngClass]=\\\"getFieldOrderBy('insuranceNo')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Condo Unit Count\\n                  <span (click)=\\\"sortUnitData('aptUnitCount')\\\" [ngClass]=\\\"getFieldOrderBy('aptUnitCount')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Total Cost\\n                  <span (click)=\\\"sortUnitData('totalCost')\\\" [ngClass]=\\\"getFieldOrderBy('totalCost')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Cost Per Condo\\n                  <span (click)=\\\"sortUnitData('costPerApt')\\\" [ngClass]=\\\"getFieldOrderBy('costPerApt')\\\"></span>\\n                </th>\\n                <th scope=\\\"col\\\">Date Entered\\n                  <span (click)=\\\"sortUnitData('dateEntered')\\\" [ngClass]=\\\"getFieldOrderBy('dateEntered')\\\"></span>\\n                </th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let utility of utilityInsuranceListData | simpleSearch: utilitySearch | sort : unitFieldType: unitOrder | slice:ItemStartIndex:ItemEndIndex ; let i = index\\\">\\n                <td class=\\\"grey\\\">{{utility.insuranceNumber}}</td>\\n                <td class=\\\"grey\\\">{{utility.apartmentUnitCount}}</td>\\n                <td class=\\\"grey\\\">{{utility.totalCost}}</td>\\n                <td class=\\\"grey\\\">{{utility.costPerAptUnit}}</td>\\n                <td class=\\\"grey\\\">{{utility.dateEntered}}</td>\\n              </tr>\\n            </tbody>\\n        </table>\\n        <div class=\\\"button-wrapper border-top\\\" *ngIf=\\\"isNoItemsAvailable()\\\">\\n            <p class=\\\"snippet\\\">No Records Found</p>\\n        </div>\\n        <app-pagination\\n          [totalItems]=\\\"totalItems\\\"\\n          [ItemStartIndex]=\\\"ItemStartIndex\\\"\\n          [ItemEndIndex] = \\\"ItemEndIndex\\\"\\n          [itemLimit] = \\\"itemLimit\\\"\\n          (outputParams) = \\\"getIndexParams($event)\\\">\\n        </app-pagination>\\n\\n        </ng-container>\\n\\n  \\t\\t</div>\\n\\n\\t</div>\\n\\n\\n</div>\\n\";","export default \"<div class=\\\"income-tracker-reports-customer-reports\\\">\\n\\t\\t<div class=\\\"main\\\">\\n\\t<h4 class=\\\"mb-4\\\">Electricity Report</h4>\\n\\n\\n\\t<app-loader *ngIf=\\\"!isReportLoaded\\\"></app-loader>\\n\\n\\n\\t\\t<condo-card *ngIf=\\\"isReportLoaded\\\">\\n\\t\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t<h4>All Electricity Reading </h4>\\n\\t\\t\\t\\t\\t\\t\\t<p>{{totalItems}} results</p>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"ml-auto d-none d-md-block mr-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control mt-4\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"utilitySearch\\\" (ngModelChange)=\\\"onSearchFilter()\\\">\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n  \\t\\t<div CondoCardBody>\\n\\t\\t\\t\\t<jqxGrid [theme]=\\\"'material'\\\" [width]=\\\"'100%'\\\" [rowsheight]=\\\"48\\\" [autoheight]=\\\"true\\\" [pageable]=\\\"true\\\"\\n\\t\\t\\t\\t[filterable]=\\\"true\\\" [sortable]=\\\"true\\\" [source]=\\\"electricityReportDataList\\\" [columns]=\\\"columnData\\\"\\n\\t\\t\\t\\t[enablehover]=\\\"false\\\"[columnsresize]=\\\"true\\\"   #datagrid>\\n\\t\\t\\t</jqxGrid>\\n  \\t\\t\\t\\n\\n  \\t\\t</div>\\n\\t</condo-card>\\n\\n\\n</div>\\n</div>\\n\";","export default \"<div class=\\\"income-tracker-reports-customer-reports\\\">\\n\\t\\t<div class=\\\"main\\\">\\n\\t<h4 class=\\\"mb-4\\\">Insurance Report</h4>\\n\\n\\n\\t<app-loader *ngIf=\\\"!isReportLoaded\\\"></app-loader>\\n\\n  \\n      <condo-card *ngIf=\\\"isReportLoaded\\\">\\n\\n\\t\\t<div CondoCardHeader>\\n        <div class=\\\"d-flex\\\">\\n        <div>\\n          <h4>All Insurance</h4>\\n          <p>{{totalItems}} results</p>\\n        </div>\\n        <div class=\\\"ml-auto d-none d-md-block my-auto\\\">\\n          <!-- <condo-select [fieldModel]=\\\"selectedTower\\\" labelText=\\\"\\\" fieldPlaceholder=\\\"Select Tower\\\" fieldId=\\\"apartmentBlockId\\\"\\n            [fieldRequired]=\\\"\\\" [fieldList]=\\\"propertyTowerData\\\" [isDisabled]=\\\"false\\\" fieldValue=\\\"apartmentBlockNumber\\\"\\n            (fieldParams)=\\\"getSelectedDeliveryType($event)\\\"></condo-select> -->\\n\\n        </div>\\n        \\n        \\n        <div class=\\\"d-none d-md-block mr-3 my-auto ml-3\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control mt-4\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"utilitySearch\\\" (ngModelChange)=\\\"onSearchFilter()\\\">\\n        </div>\\n        \\n      </div>\\n  \\t\\t</div>\\n\\n  \\t\\t<div  CondoCardBody>\\n          <jqxGrid [theme]=\\\"'material'\\\" [width]=\\\"'100%'\\\" [rowsheight]=\\\"48\\\" [autoheight]=\\\"true\\\" [pageable]=\\\"true\\\"\\n          [filterable]=\\\"true\\\" [sortable]=\\\"true\\\" [source]=\\\"insuranceReportDataList\\\" [columns]=\\\"columnData\\\"\\n          [enablehover]=\\\"false\\\"[columnsresize]=\\\"true\\\"   #datagrid>\\n      </jqxGrid>\\n       \\n\\n  \\t\\t</div>\\n    </condo-card>\\n\\t\\n\\n</div>\\n</div>\\n\";","export default \"<div class=\\\"reports-wrapper\\\">\\n\\t\\t<div class=\\\"main\\\">\\n\\t<app-loader *ngIf=\\\"!isDataLoaded\\\"></app-loader>\\n\\n\\t<ng-container *ngIf=\\\"isDataLoaded\\\">\\n\\n\\t\\t<h4 class=\\\"mb-4\\\"> Utility Reports</h4>\\n\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-sm-6 mb-4\\\" *ngFor=\\\"let report of reportDataList; let i = index\\\"> \\n\\n\\t\\t\\t\\t\\t<condo-card>\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"t-no-decor\\\" href=\\\"javascript:void(0)\\\" routerLink=\\\"/ams/utility/reports/{{report.lookupValueId}}\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<h6>{{report.lookupValueName}}</h6>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p>{{report.description}}</p>\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div CondoCardBody>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"p-4 bg-cool-gray-50\\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\n\\t\\t\\t\\t\\t\\t</condo-card>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\n\\n\\t</ng-container>\\n\\n</div>\\n</div>\\n\";","export default \"<div class=\\\"income-tracker-reports-customer-reports\\\">\\n    <div class=\\\"main\\\">\\n\\t<h4 class=\\\"mb-4\\\">Water Reading Report</h4>\\n\\n\\n\\t<app-loader *ngIf=\\\"!isReportLoaded\\\"></app-loader>\\n\\n  <condo-card *ngIf=\\\"isReportLoaded\\\">\\n\\n\\t\\t<div CondoCardHeader>\\n        <div class=\\\"d-flex\\\">\\n    \\t\\t<div>\\n          <h4>All Water Reading </h4>\\n          <p>{{totalItems}} results</p>\\n    \\t\\t</div>\\n    \\t\\n              <div class=\\\"ml-auto d-none d-md-block my-auto\\\">\\n                  <condo-select [fieldModel]=\\\"selectedTower\\\" labelText=\\\"\\\" fieldPlaceholder=\\\"Select Tower\\\" fieldId=\\\"apartmentBlockId\\\"\\n                  [fieldRequired]=\\\"\\\" [fieldList]=\\\"propertyTowerData\\\" [isDisabled]=\\\"false\\\"  fieldValue=\\\"apartmentBlockNumber\\\" (fieldParams)=\\\"getSelectedDeliveryType($event)\\\"></condo-select>\\n\\n\\t\\t\\t    \\t\\n          </div>\\n\\t\\t  \\n    \\t\\n            <div class=\\\"d-none d-md-block mr-3 my-auto ml-3\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control mt-4\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"utilitySearch\\\" (ngModelChange)=\\\"onSearchFilter()\\\">\\n            </div>\\n      </div>\\n  \\t\\t</div>\\n\\n\\n  \\t\\t<div CondoCardBody>\\n          <jqxGrid [theme]=\\\"'material'\\\" [width]=\\\"'100%'\\\" [rowsheight]=\\\"48\\\" [autoheight]=\\\"true\\\" [pageable]=\\\"true\\\"\\n          [filterable]=\\\"true\\\" [sortable]=\\\"true\\\" [source]=\\\"waterReportDataList\\\" [columns]=\\\"columnData\\\"\\n          [enablehover]=\\\"false\\\"[columnsresize]=\\\"true\\\"   #datagrid>\\n      </jqxGrid>\\n     \\n\\n  \\t\\t</div>\\n\\n  </condo-card>\\n  \\n</div>\\n\\n</div>\\n\";","export default \"<div class=\\\"vendors-setup-wrapper\\\">\\n\\n\\t<app-loader *ngIf=\\\"!isUtilityCategoryLoaded\\\"></app-loader>\\n\\n\\t<div class=\\\"category-list list-boxes\\\" *ngIf=\\\"isUtilityCategoryLoaded\\\">\\n\\t\\t<h4 class=\\\"main-title-mini\\\">Utility Categories</h4>\\n\\t\\t<ng-container *ngFor=\\\"let item of utilityCategoryData; let i = index\\\">\\n\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"card-body nohover\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"icons\\\">\\n\\t\\t\\t\\t\\t\\t\\t<!-- <a href=\\\"javascript:void(0)\\\" routerLink=\\\"/ams/vendor/all-vendors/{{item.lookupValueId}}\\\"\\n\\t\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\"><i-feather class=\\\"icon view\\\" name=\\\"eye\\\"></i-feather></a> -->\\n\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\"><i-feather class=\\\"icon edit\\\" name=\\\"edit\\\" (click)=\\\"updateUtilityCategory(item, i)\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\"><i-feather class=\\\"icon del\\\" name=\\\"x\\\" (click)=\\\"showRemoveCategoryConfirmModal(item)\\\"></i-feather></a>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<h6>{{item.category}}</h6>\\n\\t\\t\\t\\t\\t\\t<p class=\\\"float-left\\\">{{item.ratePerUnit}} per unit</p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</li>\\n\\t\\t</ng-container>\\n\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t<div class=\\\"card-body new text-center\\\">\\n\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" class=\\\"rounded-btn green\\\" (click)=\\\"addNewUtilityCategory()\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"icon\\\">+</div>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t<h6 class=\\\"tc-green\\\">Add New Category</h6>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</li>\\n\\t</div>\\n\\n\\t<div class=\\\"card mt-5\\\" *ngIf=\\\"isUtilityCategoryNew || isUtilityCategoryUpdate\\\">\\n\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t<div class=\\\"float-left\\\">\\n    \\t\\t\\t<h6 *ngIf=\\\"isUtilityCategoryNew\\\">Add Utility Category</h6>\\n    \\t\\t\\t<h6 *ngIf=\\\"!isUtilityCategoryNew\\\">Update Utility Category</h6>\\n    \\t\\t</div>\\n    \\t\\t<div class=\\\"float-right\\\" (click)=\\\"removeCategoryBox()\\\">\\n    \\t\\t\\t<i-feather class=\\\"icon del\\\" name=\\\"x\\\"></i-feather>\\n    \\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card-body\\\">\\n\\n\\t\\t\\t<app-alert-message [message]=\\\"alertMessage\\\" [isError]=\\\"isError\\\"></app-alert-message>\\n\\n\\t\\t\\t<app-loader *ngIf=\\\"!isUtilityCategorySubmitted\\\"></app-loader>\\n\\n\\t\\t\\t<ng-container *ngIf=\\\"isUtilityCategorySubmitted\\\">\\n\\n\\t\\t\\t\\t<form #addUtilityCategoryForm = \\\"ngForm\\\" name=\\\"addUtilityCategoryForm\\\" (ngSubmit)=\\\"showConfirmModal(addUtilityCategoryForm)\\\"  novalidate>\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t                    <label>Category Name<span class=\\\"mandatory\\\">*</span></label>\\n\\t\\t\\t                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"UtilityCategory\\\" [(ngModel)]=\\\"UtilityCategory\\\" required>\\n\\t                \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n            <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"input-box\\\">\\n                          <label>Rate per Unit<span class=\\\"mandatory\\\">*</span></label>\\n                          <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Enter\\\" name=\\\"unitRate\\\" [(ngModel)]=\\\"UtilityRateUnit\\\" required>\\n                      </div>\\n            </div>\\n\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-inline float-right\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"list-inline-item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn blue mr-2\\\" [disabled]=\\\"addUtilityCategoryForm.invalid\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t</div>\\n\\t</div>\\n\\n</div>\\n\";","export default \"<p>utility works!</p>\\n\";","export default \".mandatory {\\n  color: red;\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9hbXMvdXRpbGl0eS9jb21wb25lbnRzL3V0aWxpdHktYWRkLXJlYWRpbmcvYWRkLWluc3VyYW5jZS9hZGQtaW5zdXJhbmNlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBQTtFQUNBLGVBQUE7QUFDRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3V0aWxpdHkvY29tcG9uZW50cy91dGlsaXR5LWFkZC1yZWFkaW5nL2FkZC1pbnN1cmFuY2UvYWRkLWluc3VyYW5jZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYW5kYXRvcnl7XG4gIGNvbG9yOiByZWQ7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cbiJdfQ== */\";","import { Component, OnInit,Output, EventEmitter } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\n\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\n\n\n@Component({\n  selector: 'app-add-insurance',\n  templateUrl: './add-insurance.component.html',\n  styleUrls: ['./add-insurance.component.scss']\n})\nexport class AddInsuranceComponent implements OnInit {\n\n  @Output() onCancel = new EventEmitter();\n\n  insuranceCharge: any;\n\n  isInsuranceSubmitted: boolean = true;\n  isEdit: boolean = false;\n  isError: boolean = false;\n  categoryCostPerApt: any;\n  alertMessage:string = \"\";\n\n  public params = {\n    apartmentId: this.sessionService.apartmentId\n  }\n  constructor(  private router: Router,\n    private route: ActivatedRoute,\n    private utilityTrackerService:UtilityTrackerService,\n    private lookupService: LookupService,\n    private apartmentService: ApartmentService,\n    private sharedService:SharedService,\n    private sessionService:SessionService) { }\n\n\n  Cancel(){\n    this.onCancel.emit(false)\n  }\n\n  submitInsuranceChargeForm(form) {\n\n    this.isInsuranceSubmitted = false;\n\n      let details = {\n\n        \"apartmentId\": this.sessionService.apartmentId,\n        \"apartmentUnitCount\": this.insuranceCharge.AptunitCount,\n        \"insuranceNumber\": this.insuranceCharge.InsuranceNo,\n        \"totalCost\": this.insuranceCharge.TotalCost,\n        \"costPerAptUnit\": this.insuranceCharge.CostPerApt,\n        \"dateEntered\": this.insuranceCharge.DateEntered,\n        \"comments\": this.insuranceCharge.Comments,\n        \"isActive\": true,\n        \"insertedBy\": parseInt(this.sessionService.userId),\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": null,\n        \"updatedOn\": null\n\n      }\n      let params ={\n        utilityTrackerInsuranceCharge: details\n      }\n\n      this.utilityTrackerService.addUtilityTrackerInsuranceCharge(params).subscribe((res:any) => {\n\n          if(res.message) {\n            this.isInsuranceSubmitted = true;\n            this.resetData();\n            this.sharedService.setAlertMessage(\"Insurance added successfully\");\n          }\n          else {\n            this.isInsuranceSubmitted = true;\n            this.isError = true;\n            this.alertMessage = res.errorMessage;\n          }\n        }, error => {\n          this.isInsuranceSubmitted = true;\n          this.isError = true;\n          this.alertMessage = \"Some error occured\";\n      });\n\n  }\n\n  calculateCostPerAptFrmTotalCost(e){\n    if(this.insuranceCharge.TotalCost){\n      let result_des = this.insuranceCharge.TotalCost/this.insuranceCharge.AptunitCount;\n     this.insuranceCharge.CostPerApt = result_des.toFixed(2);\n    }\n  }\n\n  resetData(){\n    this.insuranceCharge.InsuranceNo = undefined;\n    this.insuranceCharge.TotalCost = undefined;\n    this.insuranceCharge.CostPerApt = undefined;\n    this.insuranceCharge.Comments = undefined;\n  }\n\n  ngOnInit(): void {\n    this.insuranceCharge = {};\n\n    this.insuranceCharge.DateEntered = new Date().toISOString();\n\n    let params = {\n      apartmentId: this.sessionService.apartmentId\n    }\n    this.apartmentService.getApartmentBlockUnitByApartmentId(params).subscribe((res:any) =>{\n      this.insuranceCharge.AptunitCount = res.length;\n    })\n    // this.utilityTrackerService.getUtilityTrackerCategorysByApartmentId(apartment_id).subscribe((res:any) => {\n    //     let electric_category = res.find(x=> x.category == 'Common Electricity Charges')\n    //     this.categoryCostPerApt = electric_category.ratePerUnit;\n    //   });\n   }\n\n\n}\n","export default \".mandatory {\\n  color: red;\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9hbXMvdXRpbGl0eS9jb21wb25lbnRzL3V0aWxpdHktYWRkLXJlYWRpbmcvZWxlY3RyaWNpdHktcmVhZGluZy9lbGVjdHJpY2l0eS1yZWFkaW5nLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBQTtFQUNBLGVBQUE7QUFDRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3V0aWxpdHkvY29tcG9uZW50cy91dGlsaXR5LWFkZC1yZWFkaW5nL2VsZWN0cmljaXR5LXJlYWRpbmcvZWxlY3RyaWNpdHktcmVhZGluZy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYW5kYXRvcnl7XG4gIGNvbG9yOiByZWQ7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cbiJdfQ== */\";","import { Component, OnInit,Output, EventEmitter } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\n\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\n\n@Component({\n  selector: 'app-electricity-reading',\n  templateUrl: './electricity-reading.component.html',\n  styleUrls: ['./electricity-reading.component.scss']\n})\n\n\nexport class ElectricityReadingComponent implements OnInit {\n\n  @Output() onCancel = new EventEmitter();\n\n  electricReading: any;\n\n  isReadingSubmitted: boolean = true;\n  isEditReading: boolean = false;\n  isEdit: boolean = false;\n  isError: boolean = false;\n  categoryCostPerApt: any;\n  alertMessage:string = \"\";\n\n  public params = {\n    apartmentId: this.sessionService.apartmentId\n  }\n  constructor(  private router: Router,\n    private route: ActivatedRoute,\n    private utilityTrackerService:UtilityTrackerService,\n    private lookupService: LookupService,\n    private apartmentService: ApartmentService,\n    private sharedService:SharedService,\n    private sessionService:SessionService) { }\n\n\n  Cancel(){\n    this.onCancel.emit(false)\n  }\n\n  submitReadingForm(form){\n\n      let electric_period = {\n\n        \"apartmentId\": this.sessionService.apartmentId,\n        \"periodFrom\": this.electricReading.fromDate,\n        \"periodTo\": this.electricReading.toDate,\n        \"isActive\": true,\n        \"insertedBy\": parseInt(this.sessionService.userId),\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": 0,\n        \"updatedOn\": null\n      }\n      let params ={\n        utilityTrackerElectricityPeriod: electric_period\n      }\n\n      this.utilityTrackerService.addUtilityTrackerElectricityPeriod(params).subscribe((period_res:any) =>{\n        this.electricReading.ElectricityPeriodId = period_res.message\n        this.addOrUpdateElectricityReading(form)\n      })\n  }\n\n  addOrUpdateElectricityReading(form) {\n\n    this.isReadingSubmitted = false;\n\n    if(!this.isEditReading){\n\n      let details = {\n\n        \"apartmentId\": this.sessionService.apartmentId,\n        \"apartmentUnitCount\": this.electricReading.AptunitCount,\n        \"utilityTrackerElectricityPeriodId\": this.electricReading.ElectricityPeriodId,\n        \"prevReading\": this.electricReading.PrevReading,\n        \"currReading\": this.electricReading.CurrReading,\n        \"electricalUnitPerAptUnit\": this.electricReading.ElectricalUnit,\n        \"costPerAptUnit\": this.electricReading.CostPerApt,\n        \"dateTaken\": this.electricReading.DateTaken,\n        \"comments\": this.electricReading.comments,\n        \"isActive\": true,\n        \"insertedBy\": parseInt(this.sessionService.userId),\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": 0,\n        \"updatedOn\": null\n\n      }\n      let params ={\n        utilityTrackerElectricityCharge: details\n      }\n\n      this.utilityTrackerService.addUtilityTrackerElectricityCharge(params).subscribe((res:any) => {\n\n          if(res.message) {\n            this.isReadingSubmitted = true;\n            this.resetData();\n            this.sharedService.setAlertMessage(\"Electricity reading added successfully\");\n          }\n          else {\n            this.isReadingSubmitted = true;\n            this.isError = true;\n            this.alertMessage = res.errorMessage;\n          }\n        }, error => {\n          this.isReadingSubmitted = true;\n          this.isError = true;\n          this.alertMessage = \"Some error occured\";\n      });\n    }\n\n    else {\n\n      let details = {\n\n        \"apartmentId\": this.sessionService.apartmentId,\n        \"apartmentUnitCount\": this.electricReading.AptunitCount,\n        \"utilityTrackerElectricityPeriodId\": this.electricReading.ElectricityPeriodId,\n        \"prevReading\": this.electricReading.PrevReading,\n        \"currReading\": this.electricReading.CurrReading,\n        \"electricalUnitPerAptUnit\": this.electricReading.ElectricalUnitPerApT,\n        \"costPerAptUnit\": this.electricReading.CostPerApt,\n        \"dateTaken\": this.electricReading.DateTaken,\n        \"comments\": this.electricReading.Comments,\n        \"isActive\": true,\n        \"insertedBy\": parseInt(this.sessionService.userId),\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": 0,\n        \"updatedOn\": null\n      }\n\n      let params ={\n        utilityTrackerElectricityCharge: details\n      }\n\n      this.utilityTrackerService.addUtilityTrackerElectricityCharge(params).subscribe((res:any) => {\n\n          if(res.message) {\n            this.isReadingSubmitted = true;\n            this.resetData();\n            this.sharedService.setAlertMessage(\"Electricity reading updated successfully\");\n          }\n          else {\n            this.isError = true;\n            this.isReadingSubmitted = true;\n            this.alertMessage = res.errorMessage;\n          }\n        }, error => {\n          this.isReadingSubmitted = true;\n          this.isError = true;\n          this.alertMessage = \"Some error occured\";\n      });\n    }\n  }\n\n  calculateUnitPerAptFrmCurReading(e){\n    //this.electricReading.CurrReading = e;\n    if(this.electricReading.CurrReading && this.electricReading.PrevReading){\n      let sub = (this.electricReading.CurrReading - this.electricReading.PrevReading);\n      let result_des = sub/this.electricReading.AptunitCount;\n     this.electricReading.ElectricalUnitPerApT = result_des.toFixed(2);\n     this.electricReading.CostPerApt = (this.electricReading.ElectricalUnitPerApT * this.categoryCostPerApt).toFixed(2);\n    }\n  }\n\n  calculateUnitPerAptFrmPreReading(e){\n    //this.electricReading.PrevReading = e\n    if(this.electricReading.CurrReading && this.electricReading.PrevReading){\n      let sub = (this.electricReading.CurrReading - this.electricReading.PrevReading);\n      let result_des = sub/this.electricReading.AptunitCount;\n     this.electricReading.ElectricalUnitPerApT = result_des.toFixed(2);\n     this.electricReading.CostPerApt = (this.electricReading.ElectricalUnitPerApT * this.categoryCostPerApt).toFixed(2);\n\n    }\n  }\n\n\n  resetData(){\n    this.electricReading.fromDate = undefined;\n    this.electricReading.toDate = undefined;\n    this.electricReading.PrevReading = undefined;\n    this.electricReading.CurrReading = undefined;\n    this.electricReading.ElectricalUnitPerApT = undefined;\n    this.electricReading.Comments = undefined;\n    this.electricReading.CostPerApt = undefined;\n  }\n\n  ngOnInit(): void {\n    this.electricReading = {};\n\n    this.electricReading.dateTaken = new Date().toISOString();\n\n    let params = {\n      apartmentId: this.sessionService.apartmentId\n    }\n    this.apartmentService.getApartmentBlockUnitByApartmentId(params).subscribe((res:any) =>{\n      this.electricReading.AptunitCount = res.length;\n    })\n    this.utilityTrackerService.getUtilityTrackerCategorysByApartmentId(params).subscribe((res:any) => {\n        let electric_category = res.find(x=> x.category == 'Common Electricity Charges')\n        this.categoryCostPerApt = electric_category.ratePerUnit;\n      });\n   }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3V0aWxpdHkvY29tcG9uZW50cy91dGlsaXR5LWFkZC1yZWFkaW5nL3V0aWxpdHktYWRkLXJlYWRpbmcuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, Injector } from '@angular/core';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { ModalService } from 'src/app/shared/services/modal.service';\n\n@Component({\n  selector: 'app-utility-add-reading',\n  templateUrl: './utility-add-reading.component.html',\n  styleUrls: ['./utility-add-reading.component.scss']\n})\nexport class UtilityAddReadingComponent implements OnInit {\n\n  utilityCategoryData:any;\n  apartment_id: number;\n  isUtilityCategoryLoaded:boolean = false;\n  selected_utility_type: boolean = false;\n  utility_selected_category: any;\n  utilityReading: any;\n  selected_index: any;\n\n  modalService:any;\n\n  \n  public params = {\n    apartmentId: this.sessionService.apartmentId\n  }\n  constructor( private injector: Injector,\n    private utilityTrackerService:UtilityTrackerService,\n  \tprivate lookupService: LookupService,\n    private sharedService:SharedService,\n    private sessionService:SessionService\n  ) {this.modalService = this.injector.get(ModalService);\n }\n\n  loadUtilityCategory(){\n    let params = {\n      apartmentId: this.sessionService.apartmentId\n    }\n  this.utilityTrackerService.getUtilityTrackerCategorysByApartmentId(params).subscribe((res:any) => {\n      this.utilityCategoryData = res.filter(item => {\n          return item.isActive;\n       });\n         this.isUtilityCategoryLoaded = true;\n       },\n       error => {\n     });\n  }\n\n  onSelectCat(i){\n    this.selected_index = i;\n  }\n\n  onCancel(e){\n    this.selected_utility_type = false;\n  }\n\n  selectUtility(category){\n   this.selected_utility_type = true;\n   this.utility_selected_category = category;\n  }\n\n  ngOnInit(): void {\n    this.apartment_id = this.sessionService.apartmentId\n    this.loadUtilityCategory()\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3V0aWxpdHkvY29tcG9uZW50cy91dGlsaXR5LWFkZC1yZWFkaW5nL3dhdGVyLXJlYWRpbmcvdG93ZXItcmVhZGluZy1pbmZvL3Rvd2VyLXJlYWRpbmctaW5mby5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, Input } from '@angular/core';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { SessionService } from 'src/app/core/session/session.service';\n\n@Component({\n  selector: 'app-tower-reading-info',\n  templateUrl: './tower-reading-info.component.html',\n  styleUrls: ['./tower-reading-info.component.scss']\n})\nexport class TowerReadingInfoComponent implements OnInit {\n\n  @Input() tower:any;\n\n  @Input() waterReadingPeriodID:any;\n\n  @Input() allApartmentWaterCharge:any;\n\n  @Input() utility_selected_category:any;\n\n  isEdit:boolean = false;\n  waterReading: any;\n  isTowersLoaded:boolean = false;\n\n  isUnitSold:boolean = false;\n  isUnitVacant:boolean = false;\n\n  towerUnitData:any;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n\n  public params = {\n    apartmentBlockId: parseInt(this.tower.apartmentBlockId)\n  }\n  constructor(\n  \tprivate apartmentService:ApartmentService,\n    private lookupService: LookupService,\n    private utilityTrackerService:UtilityTrackerService,\n    private sharedService:SharedService,\n    private sessionService:SessionService\n  ) { }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n\n  ngOnInit() {\n\n    this.waterReading = {};\n\n    let params = {\n      apartmentBlockId: parseInt(this.tower.apartmentBlockId)\n    }\n    this.apartmentService.getApartmentBlockUnitByBlockId(params).subscribe((res: any) => {\n\n      this.towerUnitData = res;\n      this.totalItems = this.towerUnitData.length;\n\n      if (this.totalItems > this.itemLimit) {\n        this.ItemEndIndex = this.itemLimit;\n      }\n      else {\n        this.ItemEndIndex = this.totalItems;\n      }\n      for (let unit of this.towerUnitData) {\n        let block_unit = this.allApartmentWaterCharge.find(x => x.aptUnit == unit.apartmentBlockUnitNumber)\n        if (block_unit) {\n          unit.water_charge = block_unit.waterCharge[0];\n        } else {\n          unit.water_charge = {};\n        }\n      }\n      this.isTowersLoaded = true;\n\n    });\n\n  }\n\n}\n","export default \".mandatory {\\n  color: red;\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9hbXMvdXRpbGl0eS9jb21wb25lbnRzL3V0aWxpdHktYWRkLXJlYWRpbmcvd2F0ZXItcmVhZGluZy90b3dlci1yZWFkaW5nLWluZm8vdW5pdC1yZWFkaW5nLWluZm8vdW5pdC1yZWFkaW5nLWluZm8uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFBO0VBQ0EsZUFBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9hbXMvdXRpbGl0eS9jb21wb25lbnRzL3V0aWxpdHktYWRkLXJlYWRpbmcvd2F0ZXItcmVhZGluZy90b3dlci1yZWFkaW5nLWluZm8vdW5pdC1yZWFkaW5nLWluZm8vdW5pdC1yZWFkaW5nLWluZm8uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFuZGF0b3J5e1xuICBjb2xvcjogcmVkO1xuICBmb250LXNpemU6IDE2cHg7XG59XG4iXX0= */\";","import { Component, OnInit, Input } from '@angular/core';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { SessionService } from 'src/app/core/session/session.service';\n\nimport * as _ from 'underscore';\n@Component({\n  selector: 'app-unit-reading-info',\n  templateUrl: './unit-reading-info.component.html',\n  styleUrls: ['./unit-reading-info.component.scss']\n})\nexport class UnitReadingInfoComponent implements OnInit {\n\n  @Input() tower:any;\n  @Input() unit:any;\n  @Input() waterReadingPeriodID:any;\n  @Input() utility_selected_category:any;\n\n  unitTypeData:any;\n  unitTypeId:any;\n\n  categoryCostPerApt: any;\n  waterReading: any;\n  isError: boolean = false;\n  alertMessage:string = \"\";\n\n  isEdit:boolean = false;\n\n  constructor(\n  \tprivate apartmentService:ApartmentService,\n    private lookupService: LookupService,\n    private utilityTrackerService:UtilityTrackerService,\n    private sharedService:SharedService,\n    private sessionService:SessionService\n  ) { }\n\n  showEditForm(){\n  \tthis.isEdit = !this.isEdit;\n  }\n\n  getBooleanStatus(status){\n    return status ? 'Yes' : 'No'\n  }\n\n  getUnitType(name){\n\n    var data = _.filter( this.unitTypeData, function( item ) {\n      if(item.lookupValueName === name)\n        return item;\n    } );\n\n    if(data === undefined || data.length == 0){\n      this.unitTypeId = \"\";\n    }\n    else {\n      this.unitTypeId = data[0].lookupValueId;\n    }\n  }\n\n\n  submitWaterMeterReading(form){\n\n  \tlet details = {\n\n      \"apartmentId\": this.sessionService.apartmentId,\n      \"apartmentBlockId\": this.tower.apartmentBlockId,\n      \"apartmentBlockUnitId\": this.unit.apartmentBlockUnitId,\n      \"waterChargeTypeId\": null,\n      \"utilityTrackerWaterChargePeriodId\": this.waterReadingPeriodID,\n      \"prevReading\": this.waterReading.prevReading,\n      \"currReading\": this.waterReading.currReading,\n      \"units\": this.waterReading.units,\n      \"unitNumber\": null,\n      \"cost\": parseInt(this.waterReading.cost),\n      \"dateTaken\": this.waterReading.dateTaken,\n      \"comments\": this.waterReading.comments,\n      \"isActive\": true,\n      \"insertedBy\": parseInt(this.sessionService.userId),\n      \"insertedOn\": new Date().toISOString(),\n      \"updatedBy\":null,\n      \"updatedOn\": null\n\t}\n\n  let params = {\n    utilityTrackerWaterCharge: details\n  }\n\n  this.utilityTrackerService.addUtilityTrackerWaterCharge(params).subscribe((res:any) => {\n\n      if(res.message) {\n        this.isEdit = false;\n        this.sharedService.setAlertMessage(\"Water reading added successfully\");\n      }\n      else {\n        this.isError = true;\n        this.alertMessage = res.errorMessage;\n      }\n    }, error => {\n       this.isError = true;\n       this.alertMessage = \"Some error occured\";\n   });\n  }\n\n  calculateUnitPerAptFrmCurReading(e){\n    if(this.waterReading.currReading && this.waterReading.prevReading){\n      this.waterReading.units = (this.waterReading.currReading - this.waterReading.prevReading);\n     this.waterReading.cost = (this.waterReading.units * this.utility_selected_category.ratePerUnit).toFixed(2);\n    }\n  }\n\n  calculateUnitPerAptFrmPreReading(e){\n    if(this.waterReading.currReading && this.waterReading.prevReading){\n      this.waterReading.units = (this.waterReading.currReading - this.waterReading.prevReading);\n     this.waterReading.cost = (this.waterReading.units * this.utility_selected_category.ratePerUnit).toFixed(2);\n    }\n  }\n\n\n  ngOnInit() {\n    this.waterReading = {};\n    //let apartment_id = this.sessionService.apartmentId;\n    if(this.unit.water_charge == undefined){\n      this.unit.water_charge = {};\n    }\n    if(this.unit.water_charge.prevReading && this.unit.water_charge.currReading){\n      this.isEdit = false;\n      this.waterReading.units = (this.unit.water_charge.currReading - this.unit.water_charge.prevReading);\n    }else{\n      this.isEdit = true;\n    }\n    this.waterReading.prevReading = this.unit.water_charge.prevReading;\n    this.waterReading.currReading = this.unit.water_charge.currReading;\n    this.waterReading.dateTaken = new Date().toISOString();\n\n  \tthis.unitTypeId = \"\";\n\n  \t//get unit type\n    let params = {\n      LookupTypeId: 1\n    }\n    this.lookupService.getLookupValueByLookupTypeId(params).subscribe((res:any) => {\n      this.unitTypeData = res;\n\n      setTimeout(() => {\n      \tthis.getUnitType(this.unit.unitType);\n      }, 1000);\n\n    },\n    error => {\n\n    });\n\n   }\n\n  }\n","export default \".mandatory {\\n  color: red;\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9hbXMvdXRpbGl0eS9jb21wb25lbnRzL3V0aWxpdHktYWRkLXJlYWRpbmcvd2F0ZXItcmVhZGluZy93YXRlci1yZWFkaW5nLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBQTtFQUNBLGVBQUE7QUFDRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3V0aWxpdHkvY29tcG9uZW50cy91dGlsaXR5LWFkZC1yZWFkaW5nL3dhdGVyLXJlYWRpbmcvd2F0ZXItcmVhZGluZy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYW5kYXRvcnl7XG4gIGNvbG9yOiByZWQ7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cbiJdfQ== */\";","import { Component, OnInit, Output,Input,  EventEmitter } from '@angular/core';\n\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\n\nimport { SessionService } from 'src/app/core/session/session.service';\n\n@Component({\n  selector: 'app-water-reading',\n  templateUrl: './water-reading.component.html',\n  styleUrls: ['./water-reading.component.scss']\n})\nexport class WaterReadingComponent implements OnInit {\n\n  @Output() onCancel = new EventEmitter();\n  @Input() utility_selected_category:any;\n\n  isDataLoaded:boolean = false;\n  isSetPeriod:boolean = true;\n\n  propertyTowerData:any;\n\n  waterReadingFromDate: any\n  waterReadingToDate: any\n  allApartmentWaterCharge: any;\n\n  waterReadingPeriodID: any;\n\n  unitsLength:any;\n\n  public params = {\n    apartmentId: this.sessionService.apartmentId\n  }\n  constructor(\n  \tprivate apartmentService:ApartmentService,\n    private lookupService: LookupService,\n    private utilityTrackerService:UtilityTrackerService,\n    private sharedService:SharedService,\n    private sessionService:SessionService\n  ) { }\n\n  cancel(){\n    this.onCancel.emit(false)\n  }\n\n  submitReadingPeriodForm(form){\n    this.isSetPeriod = false;\n    let water_reading_period = {\n\n      \"apartmentId\": this.sessionService.apartmentId,\n      \"periodFrom\": this.waterReadingFromDate,\n      \"periodTo\": this.waterReadingToDate,\n      \"isActive\": true,\n      \"insertedBy\": parseInt(this.sessionService.userId),\n      \"insertedOn\": new Date().toISOString(),\n      \"updatedBy\": 0,\n      \"updatedOn\": null\n    }\n\n    let params = {\n      utilityTrackerWaterChargePeriod: water_reading_period\n    }\n\n    this.utilityTrackerService.addUtilityTrackerWaterChargePeriod(params).subscribe((period_res:any) =>{\n      this.waterReadingPeriodID = period_res.message\n      this.isSetPeriod = true;\n    })\n  }\n\n  ngOnInit() {\n    this.waterReadingPeriodID = undefined;\n    let params = {\n      apartmentId: this.sessionService.apartmentId\n    }\n  \tthis.apartmentService.getApartmentBlockByApartmentId(params).subscribe((res:any) => {\n  \t\tthis.propertyTowerData = res;\n  \t\tthis.isDataLoaded = true;\n\n  \t});\n\n    this.utilityTrackerService.getUtilityTrackerWaterChargesByApartmentId(params).subscribe((res:any) => {\n      this.allApartmentWaterCharge = res;\n    });\n\n  }\n\n}\n","export default \".mandatory {\\n  color: red;\\n  font-size: 16px;\\n}\\n\\n.filter-width {\\n  width: 150px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9hbXMvdXRpbGl0eS9jb21wb25lbnRzL3V0aWxpdHktaGlzdG9yeS91dGlsaXR5LWhpc3RvcnkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFBO0VBQ0EsZUFBQTtBQUNGOztBQUVBO0VBQ0UsWUFBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9hbXMvdXRpbGl0eS9jb21wb25lbnRzL3V0aWxpdHktaGlzdG9yeS91dGlsaXR5LWhpc3RvcnkuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFuZGF0b3J5e1xuICBjb2xvcjogcmVkO1xuICBmb250LXNpemU6IDE2cHg7XG59XG5cbi5maWx0ZXItd2lkdGh7XG4gIHdpZHRoOiAxNTBweDtcbn1cbiJdfQ== */\";","import { Component, OnInit, Injector } from '@angular/core';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\n\nimport { ModalService } from 'src/app/shared/services/modal.service';\n\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-utility-history',\n  templateUrl: './utility-history.component.html',\n  styleUrls: ['./utility-history.component.scss']\n})\nexport class UtilityHistoryComponent implements OnInit {\n\n  utilityCategoryData:string = \"\";\n\n  isUtilityCategoryLoaded:boolean = false;\n  isUltilityElectricHisLoaded:boolean = false;\n  isUltilityWaterHisLoaded: boolean = false;\n  isUltilityInsuranceHisLoaded: boolean = false;\n  selectedUtilityCategory: any;\n  filteredUtilityWaterListData: any;\n  propertyTowerData: any;\n  selectedTower: any;\n\n\n  utilitySearch:string = \"\";\n\n  utilityElecteicalListPeriods: any;\n\n  apartment_id: number;\n  utilityElecteicalListData:any;\n  utilityWaterListData:any;\n  utilityInsuranceListData:any;\n\n  unitFieldType:string = \"utilityName\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n  totalFilterItems:any;\n\n  selectedInput:string = \"\";\n  columnField: any = {}\n\n  modalService:any;\n\n  public params = {\n    apartmentId: this.sessionService.apartmentId\n  }\n  constructor(\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private apartmentService:ApartmentService,\n    private utilityTrackerService:UtilityTrackerService,\n    private sessionService:SessionService\n  ) {\n\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  selectColInput(value){\n    this.selectedInput = value;\n  }\n\n  isWaterHistory(){\n    if(this.selectedUtilityCategory == 'Water Meter Charges'){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n  onFilterByTowerChange(){\n    if(this.selectedTower == 'All'){\n      this.filteredUtilityWaterListData= this.utilityWaterListData;\n    }else{\n      this.filteredUtilityWaterListData= this.utilityWaterListData.filter(x=> x.block == this.selectedTower);\n   }\n   this.totalItems = this.filteredUtilityWaterListData.length;\n  }\n\n  onUtilityCatregoryChange(){\n   this.ItemStartIndex = 0;\n\n\n   if(this.selectedUtilityCategory == 'Common Electricity Charges' ){\n     this.isUltilityWaterHisLoaded = false;\n     this.isUltilityInsuranceHisLoaded = false;\n     this.getAllElectricalUtiliy();\n\n    }else if(this.selectedUtilityCategory == 'Water Meter Charges' ){\n      this.isUltilityElectricHisLoaded = false;\n      this.isUltilityInsuranceHisLoaded = false;\n     this.getAllWaterUtiliy();\n\n    }else if(this.selectedUtilityCategory == 'Common Insurance'){\n     this.isUltilityWaterHisLoaded = false;\n     this.isUltilityElectricHisLoaded = false;\n     this.getAllInsuranceUtiliy();\n\n   }else if(this.selectedUtilityCategory == 'undefined'){\n     this.selectedUtilityCategory = undefined;\n   }\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  isNoItemsAvailable(){\n    return this.totalItems == 0 ? true : false;\n  }\n\n  getUtilityFromPeriod(period_id){\n    let electeicalListPeriods = this.utilityElecteicalListPeriods.find(x=> x.period_id == period_id);\n    if(electeicalListPeriods){\n      return  electeicalListPeriods.periods[0].periodFrom.slice(0,10)\n    }\n  }\n\n  getUtilityToPeriod(period_id){\n    let electeicalListPeriods = this.utilityElecteicalListPeriods.find(x=> x.period_id == period_id);\n    if(electeicalListPeriods){\n      return electeicalListPeriods.periods[0].periodTo.slice(0,10)\n    }\n  }\n\n\n  getAllElectricalUtiliy(){\n  this.isUltilityElectricHisLoaded = false;\n  let params = {\n    apartmentId: this.sessionService.apartmentId\n  }\n  this.utilityTrackerService.getElectricityChargesByApartmentId(params).subscribe((res: any) => {\n    this.utilityElecteicalListData = res.filter(item => {\n      return item.isActive;\n    });\n    this.utilityElecteicalListPeriods = []\n    for(let electrical_list of this.utilityElecteicalListData){\n    let period_param = {\"apartmentId\": this.sessionService.apartmentId, \"utilityTrackerElectricityPeriodId\": electrical_list.utilityTrackerElectricityPeriodId}\n    this.utilityTrackerService.getUtilityTrackerElectricityPeriodsById(period_param).subscribe((res: any) => {\n\n      let period_data={\"periods\": res, \"period_id\": electrical_list.utilityTrackerElectricityPeriodId}\n      this.utilityElecteicalListPeriods.push(period_data)\n    })\n   }\n\n    this.totalItems = this.utilityElecteicalListData.length;\n\n    if (this.totalItems > this.itemLimit) {\n      this.ItemEndIndex = this.itemLimit;\n    }\n    else {\n      this.ItemEndIndex = this.totalItems;\n    }\n\n    this.isUltilityElectricHisLoaded = true;\n\n  });\n\n}\n\n\ngetAllWaterUtiliy(){\nthis.selectedTower = 'All';\nthis.isUltilityWaterHisLoaded = false;\nlet params = {\n  apartmentId: this.sessionService.apartmentId\n}\nthis.utilityTrackerService.getUtilityTrackerWaterChargesByApartmentId(params).subscribe((res: any) => {\n\n  this.utilityWaterListData = res;\n  this.filteredUtilityWaterListData= this.utilityWaterListData;\n  this.totalItems = this.filteredUtilityWaterListData.length;\n\n  if (this.totalItems > this.itemLimit) {\n    this.ItemEndIndex = this.itemLimit;\n  }\n  else {\n    this.ItemEndIndex = this.totalItems;\n  }\n\n  this.isUltilityWaterHisLoaded = true;\n\n});\n\n}\n\n\ngetAllInsuranceUtiliy(){\nthis.isUltilityInsuranceHisLoaded = false;\nlet params = {\n  apartmentId: this.sessionService.apartmentId\n}\nthis.utilityTrackerService.getUtilityTrackerInsuranceChargesByApartmentId(params).subscribe((res: any) => {\n\n  this.utilityInsuranceListData = res.filter(item => {\n    return item.isActive;\n  });\n  this.utilityInsuranceListData.sort(function(a, b) {\n    a = new Date(a.dateEntered);\n    b = new Date(b.dateEntered);\n    return a>b ? -1 : a<b ? 1 : 0;\n  });\n  this.totalItems = this.utilityInsuranceListData.length;\n\n  if (this.totalItems > this.itemLimit) {\n    this.ItemEndIndex = this.itemLimit;\n  }\n  else {\n    this.ItemEndIndex = this.totalItems;\n  }\n\n  this.isUltilityInsuranceHisLoaded = true;\n\n});\n\n}\n\n\n  ngOnInit() {\n\n    let params = {\n      apartmentId: this.sessionService.apartmentId\n     }\n      this.utilityTrackerService.getUtilityTrackerCategorysByApartmentId(params).subscribe((res: any) => {\n      this.utilityCategoryData = res.filter(item => {\n        return item.isActive;\n      });\n      this.isUtilityCategoryLoaded = true;\n    },\n      error => {\n      });\n      this.apartmentService.getApartmentBlockByApartmentId(params).subscribe((res:any) => {\n        \tthis.propertyTowerData = res;\n    });\n   }\n\n  }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3V0aWxpdHkvY29tcG9uZW50cy91dGlsaXR5LXJlcG9ydHMvZWxlY3RyaWNpdHktcmVwb3J0L2VsZWN0cmljaXR5LXJlcG9ydC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, Injector, ViewChild } from '@angular/core';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\n\nimport { ModalService } from 'src/app/shared/services/modal.service';\n\nimport * as _ from 'underscore';\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\n\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-electricity-report',\n  templateUrl: './electricity-report.component.html',\n  styleUrls: ['./electricity-report.component.scss']\n})\nexport class ElectricityReportComponent implements OnInit {\n\n\n  isReportLoaded: boolean = false;\n  propertyTowerData: any;\n  selectedTower: any;\n\n  utilitySearch:string = \"\";\n\n  utilityElecteicalListPeriods: any;\n\n  apartment_id: number;\n  utilityElecteicalListData:any;\n\n  unitFieldType:string = \"utilityName\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n  totalFilterItems:any;\n\n  selectedInput:string = \"\";\n  columnField: any = {}\n\n  modalService:any;\n\n  public params = {\n    apartmentId: this.sessionService.apartmentId\n  }\n\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n  columnData: any;\n  @ViewChild('gridResident', { static: false }) gridResident: jqxGridComponent;\n  electricityReportDataList: any;\n\n  constructor(\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private apartmentService:ApartmentService,\n    private utilityTrackerService:UtilityTrackerService,\n    private sessionService:SessionService\n  ) {\n\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  selectColInput(value){\n    this.selectedInput = value;\n  }\n\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  isNoItemsAvailable(){\n    return this.totalItems == 0 ? true : false;\n  }\n\n  getUtilityFromPeriod(period_id){\n    let electeicalListPeriods = this.utilityElecteicalListPeriods.find(x=> x.period_id == period_id);\n    if(electeicalListPeriods){\n      return  electeicalListPeriods.periods[0].periodFrom.slice(0,10)\n    }\n  }\n\n  getUtilityToPeriod(period_id){\n    let electeicalListPeriods = this.utilityElecteicalListPeriods.find(x=> x.period_id == period_id);\n    if(electeicalListPeriods){\n      return electeicalListPeriods.periods[0].periodTo.slice(0,10)\n    }\n  }\n\n\n  getAllElectricalUtiliy(){\n  this.isReportLoaded = false;\n\n  this.selectedTower = '';\n  this.isReportLoaded = false;\n\n  \t// jqx column generating\n\t\tvar cellsrenderer = (row, column, value) => {\n\t\t\treturn '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n\t\t}\n\n\t\tvar columnrenderer = (value) => {\n\t\t\treturn '<div style=\"padding: 14px\">' + value + '</div>';\n\t\t}\n\n\t\tthis.isReportLoaded = false;\n\n\n\n\t\t\tthis.columnData = [\n\t\t\t{\n\t\t\t\ttext: 'From',\n\t\t\t\tdatafield: 'periodFrom',\n\t\t\t\tminwidth: 100,\n        cellsrenderer: (row, column, value) => {\n          return '<div class=\"jqx-custom-inner-cell\">'+ moment(value).format(\"DD-MM-YYYY\") +'</div>'\n        },\n\t\t\t\trenderer: columnrenderer\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: 'To',\n\t\t\t\tdatafield: 'periodTo',\n\t\t\t\tminwidth: 100,\n        cellsrenderer: (row, column, value) => {\n          return '<div class=\"jqx-custom-inner-cell\">'+ moment(value).format(\"DD-MM-YYYY\") +'</div>'\n        },\n\t\t\t\trenderer: columnrenderer\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: 'Pre Reading',\n\t\t\t\tdatafield: 'prevReading',\n\t\t\t\twidth: 200,\n\t\t\t\tcellsrenderer:  cellsrenderer,\n\t\t\t\trenderer: columnrenderer\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: 'Curr Reading',\n\t\t\t\tdatafield: 'currReading',\n\t\t\t\twidth: 200,\n\t\t\t\tcellsrenderer:  cellsrenderer,\n\t\t\t\trenderer: columnrenderer\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: 'Condo Unit',\n\t\t\t\tdatafield: 'electricalUnitPerAptUnit',\n\t\t\t\twidth: 200,\n\t\t\t\tcellsrenderer:  cellsrenderer,\n\t\t\t\trenderer: columnrenderer\n      },\n      {\n\t\t\t\ttext: 'Cost Per Unit',\n\t\t\t\tdatafield: 'costPerAptUnit',\n\t\t\t\twidth: 200,\n\t\t\t\tcellsrenderer:  cellsrenderer,\n\t\t\t\trenderer: columnrenderer\n      },\n      {\n\t\t\t\ttext: 'Added By',\n\t\t\t\tdatafield: 'insertedByUser',\n\t\t\t\twidth: 200,\n\t\t\t\tcellsrenderer:  cellsrenderer,\n\t\t\t\trenderer: columnrenderer\n\t\t\t},\n\n\n\t\t\t];\n\n\n\n\n\n  let params = {\n    apartmentId: this.sessionService.apartmentId\n  }\n  this.utilityTrackerService.getElectricityChargesByApartmentId(params).subscribe((res: any) => {\n    this.utilityElecteicalListData = res.filter(item => {\n      return item.isActive;\n    });\n    this.utilityElecteicalListPeriods = []\n    for(let electrical_list of this.utilityElecteicalListData){\n    let period_param = {\"apartmentId\": this.sessionService.apartmentId, \"utilityTrackerElectricityPeriodId\": electrical_list.utilityTrackerElectricityPeriodId}\n    this.utilityTrackerService.getUtilityTrackerElectricityPeriodsById(period_param).subscribe((res: any) => {\n\n      let period_data={\"periods\": res, \"period_id\": electrical_list.utilityTrackerElectricityPeriodId}\n      this.utilityElecteicalListPeriods.push(period_data)\n    })\n   }\n\n   let gridSourceData = {\n    localdata: this.utilityElecteicalListData,\n    datatype: \"array\"\n  }\n\n\nthis.electricityReportDataList = new jqx.dataAdapter(gridSourceData);\n\nthis.isReportLoaded = true;\nthis.showItems();\n\n    this.totalItems = this.utilityElecteicalListData.length;\n\n    if (this.totalItems > this.itemLimit) {\n      this.ItemEndIndex = this.itemLimit;\n    }\n    else {\n      this.ItemEndIndex = this.totalItems;\n    }\n\n    this.isReportLoaded = true;\n\n  });\n\n}\n\nshowItems() {\n\n  this.totalItems = this.electricityReportDataList.length;\n\n  if (this.totalItems > this.itemLimit) {\n    this.ItemEndIndex = this.itemLimit;\n  }\n  else {\n    this.ItemEndIndex = this.totalItems;\n  }\n\n}\n\nonSearchFilter(){\n  if(this.utilitySearch != \"\"){\n    let filtergroup = new jqx.filter();\n    let filter_or_operator = 1;\n    let filtervalue = this.utilitySearch;\n    let filtercondition = 'contains';\n    let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n    filtergroup.operator = 'or';\n    filtergroup.addfilter(filter_or_operator, filterData);\n    this.datagrid.showfiltercolumnbackground(false);\n    this.columnData.forEach(item => {\n      if(item.datafield != 'Actions') {\n        this.datagrid.addfilter(item.datafield, filtergroup, true);\n      }\n    })\n    this.datagrid.applyfilters();\n  }\n  else {\n    this.datagrid.clearfilters();\n  }\n }\n\n\n  ngOnInit() {\n    this.getAllElectricalUtiliy();\n   }\n  }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3V0aWxpdHkvY29tcG9uZW50cy91dGlsaXR5LXJlcG9ydHMvaW5zdXJhbmNlLXJlcG9ydC9pbnN1cmFuY2UtcmVwb3J0LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, Injector, ViewChild } from '@angular/core';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\n\nimport { ModalService } from 'src/app/shared/services/modal.service';\n\nimport * as _ from 'underscore';\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-insurance-report',\n  templateUrl: './insurance-report.component.html',\n  styleUrls: ['./insurance-report.component.scss']\n})\nexport class InsuranceReportComponent implements OnInit {\n\n  isReportLoaded:boolean = false;\n\n  filteredUtilityWaterListData: any;\n  propertyTowerData: any;\n  selectedTower: any;\n\n\n  utilitySearch:string = \"\";\n\n  utilityElecteicalListPeriods: any;\n\n  apartment_id: number;\n  utilityInsuranceListData:any;\n\n  unitFieldType:string = \"utilityName\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n  totalFilterItems:any;\n\n  selectedInput:string = \"\";\n  columnField: any = {}\n\n  modalService:any;\n\n  public params = {\n    apartmentId: this.sessionService.apartmentId\n  }\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n  columnData: any;\n  @ViewChild('gridResident', { static: false }) gridResident: jqxGridComponent;\n  insuranceReportDataList: any;\n\n  constructor(\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private apartmentService:ApartmentService,\n    private utilityTrackerService:UtilityTrackerService,\n    private sessionService:SessionService\n  ) {\n\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  selectColInput(value){\n    this.selectedInput = value;\n  }\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  isNoItemsAvailable(){\n    return this.totalItems == 0 ? true : false;\n  }\n\n  getUtilityFromPeriod(period_id){\n    let electeicalListPeriods = this.utilityElecteicalListPeriods.find(x=> x.period_id == period_id);\n    if(electeicalListPeriods){\n      return  electeicalListPeriods.periods[0].periodFrom.slice(0,10)\n    }\n  }\n\n  getUtilityToPeriod(period_id){\n    let electeicalListPeriods = this.utilityElecteicalListPeriods.find(x=> x.period_id == period_id);\n    if(electeicalListPeriods){\n      return electeicalListPeriods.periods[0].periodTo.slice(0,10)\n    }\n  }\n\n\ngetAllInsuranceUtiliy(){\n  \n\n  this.selectedTower = '';\n  this.isReportLoaded = false;\n\n  \t// jqx column generating\n\t\tvar cellsrenderer = (row, column, value) => {\n\t\t\treturn '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n\t\t}\n\n\t\tvar columnrenderer = (value) => {\n\t\t\treturn '<div style=\"padding: 14px\">' + value + '</div>';\n\t\t}\n\n\t\tthis.isReportLoaded = false;\n\n\n\n\t\t\tthis.columnData = [\n\t\t\t{\n\t\t\t\ttext: 'Insurance Number',\n\t\t\t\tdatafield: 'insuranceNumber',\n\t\t\t\tminwidth: 100,\n\t\t\t\tcellsrenderer: cellsrenderer,\n\t\t\t\trenderer: columnrenderer\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: 'Condo Unit Count',\n\t\t\t\tdatafield: 'apartmentUnitCount',\n\t\t\t\tminwidth: 100,\n\t\t\t\tcellsrenderer: cellsrenderer,\n\t\t\t\trenderer: columnrenderer\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: 'Total Cost',\n\t\t\t\tdatafield: 'totalCost',\n\t\t\t\twidth: 200,\n\t\t\t\tcellsrenderer:  cellsrenderer,\n\t\t\t\trenderer: columnrenderer\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: 'Cost Per Condo',\n\t\t\t\tdatafield: 'costPerAptUnit',\n\t\t\t\twidth: 200,\n\t\t\t\tcellsrenderer:  cellsrenderer,\n\t\t\t\trenderer: columnrenderer\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: 'Date Entered',\n\t\t\t\tdatafield: 'dateEntered',\n\t\t\t\twidth: 200,\n        cellsrenderer: (row, column, value) => {\n          return '<div class=\"jqx-custom-inner-cell\">'+ moment(value).format(\"DD-MM-YYYY\") +'</div>'\n        },\n\t\t\t\trenderer: columnrenderer\n\t\t\t},\n\n\n\t\t\t];\n\n\n\n\n  let params = {\n    apartmentId: this.sessionService.apartmentId\n  }\n  this.utilityTrackerService.getUtilityTrackerInsuranceChargesByApartmentId(params).subscribe((res: any) => {\n\n    this.utilityInsuranceListData = res.filter(item => {\n      return item.isActive;\n    });\n    this.utilityInsuranceListData.sort(function(a, b) {\n      a = new Date(a.dateEntered);\n      b = new Date(b.dateEntered);\n      return a>b ? -1 : a<b ? 1 : 0;\n    });\n\n    let gridSourceData = {\n      localdata: this.utilityInsuranceListData,\n      datatype: \"array\"\n    }\n\n\n  this.insuranceReportDataList = new jqx.dataAdapter(gridSourceData);\n\n  this.isReportLoaded = true;\n  this.showItems();\n\n    this.totalItems = this.utilityInsuranceListData.length;\n\n    // if (this.totalItems > this.itemLimit) {\n    //   this.ItemEndIndex = this.itemLimit;\n    // }\n    // else {\n    //   this.ItemEndIndex = this.totalItems;\n    // }\n\n    this.isReportLoaded = true;\n\n  });\n\n}\nshowItems() {\n\n  this.totalItems = this.insuranceReportDataList.length;\n\n  if (this.totalItems > this.itemLimit) {\n    this.ItemEndIndex = this.itemLimit;\n  }\n  else {\n    this.ItemEndIndex = this.totalItems;\n  }\n\n}\n\n// getSelectedDeliveryType(event) {\n//   this.selectedTower = event[0].apartmentBlockId;\n\n//   if(this.selectedTower == null){\n//     this.filteredUtilityWaterListData= this.utilityInsuranceListData;\n//   }else{\n//     this.filteredUtilityWaterListData= this.utilityInsuranceListData.filter(x=> x.block == event[0].apartmentBlockNumber);\n//  }\n//  this.totalItems = this.filteredUtilityWaterListData.length;\n  \n\n \n//  if(this.selectedTower != \"\" && this.selectedTower != null){\n//   let filterGroup = new jqx.filter();\n//   let filterOperator = 1;\n//   let filterValue = event[0].apartmentBlockNumber;\n//   let filterCondition = 'contains';\n//   let filterData = filterGroup.createfilter('stringfilter', filterValue, filterCondition);\n//   filterGroup.operator = 'or';\n//   filterGroup.addfilter(filterOperator, filterData);\n//   this.datagrid.showfiltercolumnbackground(false);\n//   this.columnData.forEach(item => {\n//     if(item.datafield === 'block') {\n//       this.datagrid.addfilter(item.datafield, filterGroup, true);\n//     }\n//   })\n//   this.datagrid.applyfilters();\n// }\n// else {\n//   this.datagrid.clearfilters();\n// }\n\n\n \n//  }\n\n onSearchFilter(){\n  if(this.utilitySearch != \"\"){\n    let filtergroup = new jqx.filter();\n    let filter_or_operator = 1;\n    let filtervalue = this.utilitySearch;\n    let filtercondition = 'contains';\n    let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n    filtergroup.operator = 'or';\n    filtergroup.addfilter(filter_or_operator, filterData);\n    this.datagrid.showfiltercolumnbackground(false);\n    this.columnData.forEach(item => {\n      if(item.datafield != 'Actions') {\n        this.datagrid.addfilter(item.datafield, filtergroup, true);\n      }\n    })\n    this.datagrid.applyfilters();\n  }\n  else {\n    this.datagrid.clearfilters();\n  }\n }\n\n\n  ngOnInit() {\n\n  this.getAllInsuranceUtiliy();\n\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3V0aWxpdHkvY29tcG9uZW50cy91dGlsaXR5LXJlcG9ydHMvdXRpbGl0eS1yZXBvcnRzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { SessionService } from 'src/app/core/session/session.service';\n\n@Component({\n  selector: 'app-utility-reports',\n  templateUrl: './utility-reports.component.html',\n  styleUrls: ['./utility-reports.component.scss']\n})\nexport class UtilityReportsComponent implements OnInit {\n\n  reportDataList: any;\n  isDataLoaded:boolean = false;\n\n  constructor(private sessionService:SessionService) { }\n\n  ngOnInit() {\n    this.reportDataList = [\n      {lookupValueId: 'electricity',lookupValueName: 'List of electrical reading', description:'Gives the list of electrical reading in the condo',type:'customer'},\n      {lookupValueId: 'water', lookupValueName: 'List of water reading',description:'Gives the list of  water reading in the condo',type:'customer'},\n      {lookupValueId: 'insurance', lookupValueName: 'List of insurance charges',description:'Gives the list of insurance charges in the condo',type:'customer'},\n\n    ]\n     this.isDataLoaded = true;\n   }\n\n}\n","export default \".filter-width {\\n  width: 150px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9hbXMvdXRpbGl0eS9jb21wb25lbnRzL3V0aWxpdHktcmVwb3J0cy93YXRlci1yZXBvcnQvd2F0ZXItcmVwb3J0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9hbXMvdXRpbGl0eS9jb21wb25lbnRzL3V0aWxpdHktcmVwb3J0cy93YXRlci1yZXBvcnQvd2F0ZXItcmVwb3J0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZpbHRlci13aWR0aHtcbiAgd2lkdGg6IDE1MHB4O1xufVxuIl19 */\";","import { Component, OnInit, Injector, ViewChild } from '@angular/core';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\n\nimport { ModalService } from 'src/app/shared/services/modal.service';\n\nimport * as _ from 'underscore';\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\n@Component({\n  selector: 'app-water-report',\n  templateUrl: './water-report.component.html',\n  styleUrls: ['./water-report.component.scss']\n})\nexport class WaterReportComponent implements OnInit {\n\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n\n  isReportLoaded:boolean = false;\n\n  filteredUtilityWaterListData: any;\n  propertyTowerData: any;\n  selectedTower: any;\n\n\n  utilitySearch:string = \"\";\n\n  utilityElecteicalListPeriods: any;\n\n  apartment_id: number;\n  utilityWaterListData:any;\n\n  unitFieldType:string = \"utilityName\";\n  unitOrder:boolean = true;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n  totalFilterItems:any;\n\n  selectedInput:string = \"\";\n  columnField: any = {}\n\n  modalService:any;\n\n  public params = {\n    apartmentId: this.sessionService.apartmentId\n  }\n  package: any = {};\n  columnData: any;\n  @ViewChild('gridResident', { static: false }) gridResident: jqxGridComponent;\n  waterReportDataList: any;\n\n  constructor(\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private apartmentService:ApartmentService,\n    private utilityTrackerService:UtilityTrackerService,\n    private sessionService:SessionService\n  ) {\n\n  }\n\n  getIndexParams(event){\n    this.ItemStartIndex = event.ItemStartIndex;\n    this.ItemEndIndex = event.ItemEndIndex;\n    this.itemLimit = event.itemLimit;\n  }\n\n  sortUnitData(type){\n    this.unitFieldType = type;\n    this.unitOrder = !this.unitOrder;\n  }\n\n  getFieldOrderBy(type) {\n    if(this.unitFieldType == type){\n      return this.unitOrder ? 'asc' : 'desc';\n    }\n    else return '';\n  }\n\n  selectColInput(value){\n    this.selectedInput = value;\n  }\n  getSelectedDeliveryType(event) {\n    this.selectedTower = event[0].apartmentBlockId;\n\n    if(this.selectedTower == null){\n      this.filteredUtilityWaterListData= this.utilityWaterListData;\n    }else{\n      this.filteredUtilityWaterListData= this.utilityWaterListData.filter(x=> x.block == event[0].apartmentBlockNumber);\n   }\n   this.totalItems = this.filteredUtilityWaterListData.length;\n    \n\n   \n   if(this.selectedTower != \"\" && this.selectedTower != null){\n    let filterGroup = new jqx.filter();\n    let filterOperator = 1;\n    let filterValue = event[0].apartmentBlockNumber;\n    let filterCondition = 'contains';\n    let filterData = filterGroup.createfilter('stringfilter', filterValue, filterCondition);\n    filterGroup.operator = 'or';\n    filterGroup.addfilter(filterOperator, filterData);\n    this.datagrid.showfiltercolumnbackground(false);\n    this.columnData.forEach(item => {\n      if(item.datafield === 'block') {\n        this.datagrid.addfilter(item.datafield, filterGroup, true);\n      }\n    })\n    this.datagrid.applyfilters();\n  }\n  else {\n    this.datagrid.clearfilters();\n  }\n  \n\n   \n   }\n\n   onSearchFilter(){\n    if(this.utilitySearch != \"\"){\n      let filtergroup = new jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = this.utilitySearch;\n      let filtercondition = 'contains';\n      let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n      filtergroup.operator = 'or';\n      filtergroup.addfilter(filter_or_operator, filterData);\n      this.datagrid.showfiltercolumnbackground(false);\n      this.columnData.forEach(item => {\n        if(item.datafield != 'Actions') {\n          this.datagrid.addfilter(item.datafield, filtergroup, true);\n        }\n      })\n      this.datagrid.applyfilters();\n    }\n    else {\n      this.datagrid.clearfilters();\n    }\n   }\n\n  onFilterByTowerChange(){\n    this.selectedTower = event[0].apartmentBlockId;\n    \n    if(this.selectedTower == 'All'){\n      this.filteredUtilityWaterListData= this.utilityWaterListData;\n    }else{\n      this.filteredUtilityWaterListData= this.utilityWaterListData.filter(x=> x.block == this.selectedTower);\n\n      \n   }\n   this.totalItems = this.filteredUtilityWaterListData.length;\n\n  \n\n  }\n\n\n  isMobileView() {\n    return window.innerWidth <= 767 ? 'table-responsive' : '';\n  }\n\n  isNoItemsAvailable(){\n    return this.totalItems == 0 ? true : false;\n  }\n\n  getUtilityFromPeriod(period_id){\n    let electeicalListPeriods = this.utilityElecteicalListPeriods.find(x=> x.period_id == period_id);\n    if(electeicalListPeriods){\n      return  electeicalListPeriods.periods[0].periodFrom.slice(0,10)\n    }\n  }\n\n  getUtilityToPeriod(period_id){\n    let electeicalListPeriods = this.utilityElecteicalListPeriods.find(x=> x.period_id == period_id);\n    if(electeicalListPeriods){\n      return electeicalListPeriods.periods[0].periodTo.slice(0,10)\n    }\n  }\n\n\n\ngetAllWaterUtiliy(){\n  this.selectedTower = '';\n  this.isReportLoaded = false;\n\n  \t// jqx column generating\n\t\tvar cellsrenderer = (row, column, value) => {\n\t\t\treturn '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n\t\t}\n\n\t\tvar columnrenderer = (value) => {\n\t\t\treturn '<div style=\"padding: 14px\">' + value + '</div>';\n\t\t}\n\n\t\tthis.isReportLoaded = false;\n\n\n\n\t\t\tthis.columnData = [\n\t\t\t{\n\t\t\t\ttext: 'Block Number',\n\t\t\t\tdatafield: 'block',\n\t\t\t\tminwidth: 100,\n\t\t\t\tcellsrenderer: cellsrenderer,\n\t\t\t\trenderer: columnrenderer\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: 'Unit Number',\n\t\t\t\tdatafield: 'aptUnit',\n\t\t\t\tminwidth: 100,\n\t\t\t\tcellsrenderer: cellsrenderer,\n\t\t\t\trenderer: columnrenderer\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: 'Connection No',\n\t\t\t\t// datafield: 'waterCharge[0].connectionNo',\n\t\t\t\twidth: 200,\n\t\t\t\tcellsrenderer:  (row, column, value) => {\n          var content = this.waterReportDataList.records[row].waterCharge.length > 0 ? this.waterReportDataList.records[row].waterCharge[0][\"connectionNo\"] === null ? '' : this.waterReportDataList.records[row].waterCharge[0][\"connectionNo\"] : ''\n          return '<div class=\"jqx-custom-inner-cell\">' +  content + '</div>';\n        },\n\t\t\t\trenderer: columnrenderer\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: 'Prev Reading',\n\t\t\t\t// datafield: 'waterCharge[0].prevReading',\n\t\t\t\twidth: 200,\n\t\t\t\tcellsrenderer:  (row, column, value) => {\n          var content = this.waterReportDataList.records[row].waterCharge.length > 0 ? this.waterReportDataList.records[row].waterCharge[0][\"prevReading\"] : ''\n          return '<div class=\"jqx-custom-inner-cell\">' +  content + '</div>';\n        },\n\t\t\t\trenderer: columnrenderer\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: 'currReading',\n\t\t\t\t// datafield: 'currReading',\n\t\t\t\twidth: 200,\n\t\t\t\tcellsrenderer:  (row, column, value) => {\n          var content = this.waterReportDataList.records[row].waterCharge.length > 0 ? this.waterReportDataList.records[row].waterCharge[0][\"currReading\"] : ''\n          return '<div class=\"jqx-custom-inner-cell\">' +  content + '</div>';\n        },\n\t\t\t\trenderer: columnrenderer\n\t\t\t},\n\n\n\t\t\t];\n\n\n\n\n  const params = {\n    apartmentId: this.sessionService.apartmentId\n  }\n  this.utilityTrackerService.getUtilityTrackerWaterChargesByApartmentId(params).subscribe((res: any) => {\n    let gridSourceData = {\n        localdata: res,\n        datatype: \"array\"\n      }\n\n\n    this.waterReportDataList = new jqx.dataAdapter(gridSourceData);\n\n    this.isReportLoaded = true;\n    this.showItems();\n\n\n    this.utilityWaterListData = res;\n    this.filteredUtilityWaterListData= this.utilityWaterListData;\n    this.totalItems = this.filteredUtilityWaterListData.length;\n\n    if (this.totalItems > this.itemLimit) {\n      this.ItemEndIndex = this.itemLimit;\n    }\n    else {\n      this.ItemEndIndex = this.totalItems;\n    }\n\n    this.isReportLoaded = true;\n\n  });\n\n}\n\nshowItems() {\n\n  this.totalItems = this.waterReportDataList.length;\n\n  if (this.totalItems > this.itemLimit) {\n    this.ItemEndIndex = this.itemLimit;\n  }\n  else {\n    this.ItemEndIndex = this.totalItems;\n  }\n\n}\n\n\n  ngOnInit() {\n    this.package.deliveryTypeId = '';\n\n\n\n\n    let params = {\n      apartmentId: this.sessionService.apartmentId\n     }\n      this.apartmentService.getApartmentBlockByApartmentId(params).subscribe((res:any) => {\n        this.propertyTowerData = res;\n    });\n     this.getAllWaterUtiliy();\n\n   }\n\n\n\n\n  }\n","export default \".mandatory {\\n  color: red;\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9hbXMvdXRpbGl0eS9jb21wb25lbnRzL3V0aWxpdHktc2V0dXAvdXRpbGl0eS1zZXR1cC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQUE7RUFDQSxlQUFBO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2Ftcy91dGlsaXR5L2NvbXBvbmVudHMvdXRpbGl0eS1zZXR1cC91dGlsaXR5LXNldHVwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hbmRhdG9yeXtcbiAgY29sb3I6IHJlZDtcbiAgZm9udC1zaXplOiAxNnB4O1xufVxuIl19 */\";","import { Component, OnInit, Injector } from '@angular/core';\nimport { UtilityTrackerService } from 'src/app/api/controllers/UtilityTracker';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { ModalService } from 'src/app/shared/services/modal.service';\n\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-utility-setup',\n  templateUrl: './utility-setup.component.html',\n  styleUrls: ['./utility-setup.component.scss']\n})\nexport class UtilitySetupComponent implements OnInit {\n\n  utilityCategoryData:any;\n  apartment_id: number;\n\n  isUtilityCategoryLoaded:boolean = false;\n  isUtilityCategorySubmitted:boolean = true;\n\n  isUtilityCategoryNew:boolean = false;\n  isUtilityCategoryUpdate:boolean = false;\n\n  selectedItem: any;\n\n  UtilityCategory:string = \"\";\n  UtilityRateUnit:number;\n  UtilityCategoryUpdateId:number = 0;\n\n  alertMessage:string = \"\";\n  isError:boolean = false;\n\n  utilityListData:any;\n\n  modalService:any;\n\n  public params = {\n    apartmentId: this.sessionService.apartmentId\n  }\n  constructor(\n    private injector: Injector,\n    private utilityTrackerService:UtilityTrackerService,\n  \tprivate lookupService: LookupService,\n    private sharedService:SharedService,\n    private sessionService:SessionService\n  ) {this.modalService = this.injector.get(ModalService);\n }\n\n  addNewUtilityCategory(){\n    this.UtilityCategory = \"\";\n    this.UtilityRateUnit = undefined;\n  \tthis.isUtilityCategoryNew = true;\n  \tthis.isUtilityCategoryUpdate = false;\n  }\n\n  updateUtilityCategory(item){\n  \tthis.isUtilityCategoryUpdate = true;\n  \tthis.isUtilityCategoryNew = false;\n    this.selectedItem = item;\n  \tthis.UtilityCategory = item.category;\n    this.UtilityRateUnit =  item.ratePerUnit;\n  \tthis.UtilityCategoryUpdateId = item.utilityTrackerCategoryId;\n  }\n\n  deleteUtilityCategory(item){\n\n  \tthis.isUtilityCategoryLoaded = false;\n  \tvar params = {\n      utilityId: item.utilityTrackerCategoryId,\n      deleteBy: parseInt(this.sessionService.userId)\n    }\n\n  \tthis.utilityTrackerService.deleteUtilityTrackerCategory(params).subscribe((res:any) => {\n      this.loadUtilityCategory()\n  \t});\n  }\n\n  showConfirmModal(form) {\n    if (this.isUtilityCategoryNew) {\n    //  this.modalService.showCategoryModal(form);\n     this.submitUtilityCategoryForm(form)\n    } else {\n      this.addOrUpdateUtilityCategoryForm(form)\n    }\n }\n\n showRemoveCategoryConfirmModal(item) {\n    this.modalService.showConfirmModal(item);\n }\n\n  removeCategoryBox(){\n  \tthis.isUtilityCategoryNew = false;\n  \tthis.isUtilityCategoryUpdate = false;\n    this.isUtilityCategorySubmitted = true;\n  \tthis.isError = false;\n  }\n\n  getUtilitysCount(id){\n\n    var data = this.utilityListData.filter( item => {\n      return item.utilityCategoryId == id;\n    });\n\n    if(data === undefined || data.length === 0) {\n      return 0\n    }\n    else {\n      return data.length\n    }\n\n  }\n\n  submitUtilityCategoryForm(form) {\n   //adding new category not supporting  now..\n   this.isError = true;\n\n    this.alertMessage = \"Please raise Service Ticket\"\n  }\n\n  addOrUpdateUtilityCategoryForm(form) {\n\n  \tthis.isUtilityCategorySubmitted = false;\n    this.isError = false;\n\n  \tif(this.isUtilityCategoryNew) {\n\n  \t\tlet details = {\n\n\t\t  \"apartmentId\": this.apartment_id,\n\t\t  \"category\": this.UtilityCategory,\n\t\t  \"ratePerUnit\": this.UtilityRateUnit,\n      \"comments\": \"\",\n\t\t  \"isActive\": true,\n\t\t  \"insertedBy\": parseInt(this.sessionService.userId),\n\t\t  \"insertedOn\": new Date().toISOString(),\n\t\t  \"updatedBy\": null,\n\t\t  \"updatedOn\": null,\n\n\t\t}\n\n    let params = {\n      utilityTrackerCategory: details\n    }\n\n\t\tthis.utilityTrackerService.addUtilityTrackerCategory(params).subscribe((res:any) => {\n\n\t  \t\tif(res.message) {\n          let params = {\n            apartmentId: this.sessionService.apartmentId\n          }\n\t  \t\t\tthis.utilityTrackerService.getUtilityTrackerCategorysByApartmentId(params).subscribe((res:any) => {\n\t  \t\t\t\tthis.isUtilityCategorySubmitted = true;\n\t\t          \tthis.sharedService.setAlertMessage(\"Category added Successfully!\");\n\n\t\t          \tthis.utilityCategoryData = res.filter(item => {\n\t                \treturn item.isActive;\n\t              \t});\n\n\t  \t\t\t});\n\t  \t\t}\n\t  \t\telse {\n\t  \t\t\tthis.isUtilityCategorySubmitted = true;\n\t          \tthis.isError = true;\n\t          \tthis.alertMessage = res.errorMessage;\n\t  \t\t}\n  \t\t});\n  \t}\n  \telse {\n\n  \t\tlet details = {\n\n        \"utilityTrackerCategoryId\": this.UtilityCategoryUpdateId,\n        \"apartmentId\": this.sessionService.apartmentId,\n  \t\t  \"category\": this.UtilityCategory,\n  \t\t  \"ratePerUnit\": this.UtilityRateUnit,\n        \"comments\": \"\",\n  \t\t  \"isActive\": true,\n  \t\t  \"insertedBy\": this.selectedItem.insertedBy,\n  \t\t  \"insertedOn\": this.selectedItem.insertedOn,\n  \t\t  \"updatedBy\": parseInt(this.sessionService.userId),\n  \t\t  \"updatedOn\": new Date().toISOString(),\n\n\t\t}\n    let params = {\n      utilityTrackerCategory: details\n    }\n\n\t\tthis.utilityTrackerService.updateUtilityTrackerCategory(params).subscribe((res:any) => {\n\n\t  \t\tif(res.message) {\n          let params = {\n            apartmentId: this.sessionService.apartmentId\n          }\n\t        this.utilityTrackerService.getUtilityTrackerCategorysByApartmentId(params).subscribe((res:any) => {\n\t  \t\t\t\tthis.isUtilityCategorySubmitted = true;\n\t  \t\t\t\tthis.sharedService.setAlertMessage(\"Category updated Successfully!\");\n\n\t\t          \tthis.utilityCategoryData = res.filter(item => {\n\t                \treturn item.isActive;\n\t              \t});\n                  this.isUtilityCategoryNew = false;\n                  this.isUtilityCategoryUpdate = false;\n\n\t  \t\t\t});\n\t  \t\t}\n\t  \t\telse {\n\t  \t\t\tthis.isUtilityCategorySubmitted = true;\n\t          \tthis.isError = true;\n\t          \tthis.alertMessage = res.errorMessage;\n\t  \t\t}\n  \t\t});\n  \t}\n   }\n\n   loadUtilityCategory(){\n     let params = {\n       apartmentId: this.sessionService.apartmentId\n     }\n\t this.utilityTrackerService.getUtilityTrackerCategorysByApartmentId(params).subscribe((res:any) => {\n       this.utilityCategoryData = res.filter(item => {\n           return item.isActive;\n        });\n          this.isUtilityCategoryLoaded = true;\n        },\n        error => {\n      });\n   }\n\n  ngOnInit() {\n    this.apartment_id = this.sessionService.apartmentId\n    this.loadUtilityCategory()\n\n    this.sharedService.newcategoryadd.subscribe(is_category_form => {\n\n      if(is_category_form){\n        this.submitUtilityCategoryForm(is_category_form);\n      }\n    })\n\n    this.sharedService.unitlistdeleteindexcast.subscribe(item_id => {\n\n      if(item_id){\n        this.deleteUtilityCategory(item_id);\n      }\n    })\n }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from 'src/app/core/auth/guards/auth.guard';\n\nimport { UtilityReportsComponent } from './components/utility-reports/utility-reports.component';\nimport { ElectricityReportComponent } from './components/utility-reports/electricity-report/electricity-report.component';\nimport { InsuranceReportComponent } from './components/utility-reports/insurance-report/insurance-report.component';\nimport { WaterReportComponent } from './components/utility-reports/water-report/water-report.component';\nimport { UtilitySetupComponent } from './components/utility-setup/utility-setup.component';\nimport { UtilityAddReadingComponent } from './components/utility-add-reading/utility-add-reading.component';\nimport { ElectricityReadingComponent } from './components/utility-add-reading/electricity-reading/electricity-reading.component';\nimport { WaterReadingComponent } from './components/utility-add-reading/water-reading/water-reading.component';\nimport { UtilityHistoryComponent } from './components/utility-history/utility-history.component';\n\nconst routes: Routes = [\n\n\t{ path: '', redirectTo: 'settings', pathMatch: 'full'},\n\t{ path: 'settings', component: UtilitySetupComponent, canActivate: [AuthGuard]},\n\t{ path: 'reading', component: UtilityAddReadingComponent, canActivate: [AuthGuard]},\n\t{ path: 'reading/electric', component: ElectricityReadingComponent, canActivate: [AuthGuard]},\n\t{ path: 'reading/water', component: WaterReadingComponent, canActivate: [AuthGuard]},\n\t{ path: 'history', component: UtilityHistoryComponent, canActivate: [AuthGuard]},\n\t{ path: 'reports', component: UtilityReportsComponent, canActivate: [AuthGuard]},\n\t{ path: 'reports/electricity', component: ElectricityReportComponent, canActivate: [AuthGuard]},\n\t{ path: 'reports/water', component: WaterReportComponent, canActivate: [AuthGuard]},\n\t{ path: 'reports/insurance', component: InsuranceReportComponent, canActivate: [AuthGuard]},\n\t{ path: '**', redirectTo: 'settings', pathMatch: 'full'}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UtilityRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3V0aWxpdHkvdXRpbGl0eS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-utility',\n  templateUrl: './utility.component.html',\n  styleUrls: ['./utility.component.scss']\n})\nexport class UtilityComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nimport { CondoCardModule } from 'src/app/modules/ui/card/card.module';\nimport { SelectModule } from 'src/app/modules/ui/select/select.module';\nimport { ListModule } from 'src/app/modules/ui/list/list.module';\n\nimport { UtilityRoutingModule } from './utility-routing.module';\n\nimport { UtilityComponent } from './utility.component';\nimport { UtilityReportsComponent } from './components/utility-reports/utility-reports.component';\nimport { UtilitySetupComponent } from './components/utility-setup/utility-setup.component';\nimport { UtilityAddReadingComponent } from './components/utility-add-reading/utility-add-reading.component';\nimport { ElectricityReadingComponent } from './components/utility-add-reading/electricity-reading/electricity-reading.component';\nimport { WaterReadingComponent } from './components/utility-add-reading/water-reading/water-reading.component';\nimport { UtilityHistoryComponent } from './components/utility-history/utility-history.component';\nimport { TowerReadingInfoComponent } from './components/utility-add-reading/water-reading/tower-reading-info/tower-reading-info.component';\nimport { UnitReadingInfoComponent } from './components/utility-add-reading/water-reading/tower-reading-info/unit-reading-info/unit-reading-info.component';\nimport { AddInsuranceComponent } from './components/utility-add-reading/add-insurance/add-insurance.component';\nimport { ElectricityReportComponent } from './components/utility-reports/electricity-report/electricity-report.component';\nimport { WaterReportComponent } from './components/utility-reports/water-report/water-report.component';\nimport { InsuranceReportComponent } from './components/utility-reports/insurance-report/insurance-report.component';\n\n\n@NgModule({\n  declarations: [\n  UtilityComponent,\n  UtilityReportsComponent,\n  UtilitySetupComponent,\n  UtilityAddReadingComponent,\n  ElectricityReadingComponent,\n  WaterReadingComponent,\n  UtilityHistoryComponent,\n  TowerReadingInfoComponent,\n  UnitReadingInfoComponent,\n  AddInsuranceComponent,\n  ElectricityReportComponent,\n  WaterReportComponent,\n  InsuranceReportComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    CondoCardModule,\n    SelectModule,\n    ListModule,\n    UtilityRoutingModule\n  ],\n  bootstrap: [ UtilityComponent ]\n})\nexport class UtilityModule { }\n"]}