{"version":3,"sources":["./src/app/modules/ams/role-type/components/add-role/add-role.component.html","./src/app/modules/ams/role-type/components/add-role/add-role.component.scss","./src/app/modules/ams/role-type/components/add-role/add-role.component.ts","./src/app/modules/ams/role-type/role-type-routing.module.ts","./src/app/modules/ams/role-type/role-type.module.ts"],"names":[],"mappings":"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","file":"modules-ams-role-type-role-type-module-es2015.js","sourcesContent":["export default \"<div class=\\\"parking-create-parking-slot-wrapper\\\">\\n\\t<div class=\\\"main\\\">\\n\\t\\t<form #createParkingSlotForm=\\\"ngForm\\\" name=\\\"addSlotForm\\\" novalidate>\\n\\t\\t\\t<condo-card>\\n\\t\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h4>Create Roles</h4>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div CondoCardBody>\\n\\t\\t\\t\\t\\t<div class=\\\"p-5\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Roles Type</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select name=\\\"roleTypeId\\\" [(ngModel)]=\\\"roleTypeId\\\" class=\\\"form-control\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of allRoles\\\" value=\\\"{{item.value}}\\\">{{item?.name}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Roles Name</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"roleName\\\" [(ngModel)]=\\\"roleName\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Description</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea name=\\\"description\\\" [(ngModel)]=\\\"description\\\" cols=\\\"10\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trows=\\\"3\\\"></textarea>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12 d-flex justify-content-end\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"mr-3\\\" mat-flat-button\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trouterLink=\\\"/ams/roles-permissions/role-permissions-list\\\" routerLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions]=\\\"{exact:true}\\\">Cancel</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" *ngIf=\\\"isCreate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"addRole()\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" *ngIf=\\\"!isCreate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"updateRole()\\\">Update</button>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</condo-card>\\n\\t\\t</form>\\n\\t</div>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3JvbGUtdHlwZS9jb21wb25lbnRzL2FkZC1yb2xlL2FkZC1yb2xlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/api/controllers/User';\nimport { ScreenService } from 'src/app/api/controllers/Screen';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SessionService } from 'src/app/core/session/session.service';\n\n@Component({\n  selector: 'app-add-role',\n  templateUrl: './add-role.component.html',\n  styleUrls: ['./add-role.component.scss']\n})\nexport class AddRoleComponent implements OnInit {\n\n  allRoles: Array<any> = [];\n  roleTypeId: any;\n  roleName: any;\n  description: any;\n  menuRoleSecLevelId:any;\n  isCreate:boolean=true;\n  menuRole:any;\n  constructor(private userService: UserService,\n    private router: Router,\n    private activatedRoute : ActivatedRoute,\n    private sessionService : SessionService,\n    private screenService: ScreenService) { }\n\n  ngOnInit(): void {\n    if (this.activatedRoute.params['value'].id != undefined) {\n      this.menuRoleSecLevelId = this.activatedRoute.params['value'].id;\n      this.isCreate = false;\n      this.getRole();\n    }\n    this.getAllRoles();\n  }\n\n  getRole(){\n      let queryParamBase = {\n      apartmentId: this.sessionService.apartmentId,\n      menuRoleSecLevelId: this.menuRoleSecLevelId,\n    };\n    this.screenService.getMenuRoleSecLevelbyRoleSecLevelId(queryParamBase).subscribe(\n      resp =>{\n        this.menuRole = resp[0];\n        this.roleTypeId = this.menuRole.roleId;\n        this.roleName = this.menuRole.roleName;\n      }\n    )\n  }\n\n  getAllRoles() {\n    this.userService.getAllRoleTypes().subscribe(\n      (resp: any) => {\n        this.allRoles = resp;\n        if (this.allRoles && this.allRoles.length) {\n          this.allRoles.filter(key => {\n            if (key.value == 2 || key.value == 4 || key.value == 5) {\n              this.allRoles.splice(this.allRoles.indexOf(key), 1);\n            }\n          })\n        }\n      }\n    )\n  }\n\n  addRole() {\n    let addMenuLevelParam = {\n      \"menuSecLevelId\": 0,\n      \"apartmentId\": this.sessionService.apartmentId,\n      \"name\": this.roleName,\n      \"isActive\": true,\n      \"insertedBy\": this.sessionService.userId,\n      \"insertedOn\": new Date().toISOString(),\n      \"updatedBy\": this.sessionService.userId,\n      \"updatedOn\": \"2020-08-09T06:22:21.539Z\"\n    }\n    let secLevelParam = {\n      seclevel: addMenuLevelParam\n    }\n    this.screenService.addMenuSecLevel(secLevelParam).subscribe(\n      (resp:any) => {\n        if (resp && resp.message) {\n          let addMenuRoleSecLevel = {\n            \"menuRoleSecLevelId\": 0,\n            \"apartmentId\": this.sessionService.apartmentId,\n            \"roleId\": parseInt(this.roleTypeId),\n            \"secLevelId\": resp.message,\n            \"isActive\": true,\n            \"insertedBy\": this.sessionService.userId,\n            \"insertedOn\": new Date().toISOString(),\n            \"updatedBy\": this.sessionService.userId,\n            \"updatedOn\": \"2020-08-09T06:22:21.539Z\"\n          }\n          let roleSecLevelParam = {\n            roleseclevel: addMenuRoleSecLevel\n          }\n          this.screenService.addMenuRoleSecLevel(roleSecLevelParam).subscribe(\n            resp => {\n              this.router.navigate(['/ams/roles-permissions/role-permissions-list']);\n            }\n          )\n        }\n      }\n    )\n  }\n\n  updateRole(){\n    let updataParam = {\n      \"menuSecLevelId\": this.menuRole.menuRoleSecLevelId,\n      \"apartmentId\":  this.sessionService.apartmentId,\n      \"name\": this.roleName,\n      \"isActive\": true,\n      \"insertedBy\": 0,\n      \"insertedOn\": new Date().toISOString(),\n      \"updatedBy\": this.sessionService.userId,\n      \"updatedOn\": new Date().toISOString()\n    }\n    let updateRoleParam = {\n      menuSecLevel : updataParam\n    }\n    this.screenService.updateMenuSecLevel(updateRoleParam).subscribe(\n      resp =>{\n        this.router.navigate(['/ams/roles-permissions/role-permissions-list']);\n      }\n    )\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddRoleComponent } from './components/add-role/add-role.component';\n\n\n\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: 'roles-type-list', pathMatch: 'full'},\n\t{ path: 'add-roles-permissions', component: AddRoleComponent},\n\t{ path: 'edit-roles-permissions/:id', component: AddRoleComponent},\n\t{ path: '**', redirectTo: 'roles-type-list', pathMatch: 'full'}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RoleTypeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddRoleComponent } from './components/add-role/add-role.component';\nimport { RoleTypeRoutingModule } from './role-type-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [AddRoleComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RoleTypeRoutingModule\n  ]\n})\nexport class RoleTypeModule { }\n"],"sourceRoot":"webpack:///"}