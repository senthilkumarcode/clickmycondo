{"version":3,"sources":["webpack:///src/app/modules/common/meetings/meeting-calendar/meeting-calendar.component.html","webpack:///src/app/modules/common/meetings/meeting-calendar/meeting-calendar-routing.module.ts","webpack:///src/app/modules/common/meetings/meeting-calendar/meeting-calendar.component.scss","webpack:///src/app/modules/common/meetings/meeting-calendar/meeting-calendar.component.ts","webpack:///src/app/modules/common/meetings/meeting-calendar/meeting-calendar.module.ts"],"names":["routes","path","component","MeetingCalendarRoutingModule","imports","forChild","exports","MeetingCalendarComponent","meetingService","sharedService","sessionService","dialog","selector","template","MeetingCalendarModule","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIf,UAAMA,MAAM,GAAW,CACrB;AAACC,YAAI,EAAC,EAAN;AAAUC,iBAAS,EAAC;AAApB,OADqB,CAAvB;;UAQaC,4BAA4B;AAAA;AAAA,O;;AAA5BA,kCAA4B,6DAJxC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIwC,GAA5BH,4BAA4B,CAA5B;;;;;;;;;;;;;;;;ACZb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCgBFI,wBAAwB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,0CACUC,cADV,EAEUC,aAFV,EAGUC,cAHV,EAISC,MAJT,EAI0B;AAAA;;AAHhB,eAAAH,cAAA,GAAAA,cAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACD,eAAAC,MAAA,GAAAA,MAAA;AACL,SAxB+B,CA0BnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA5EmC;AAAA;AAAA,qCA8E3B,CAEN;AAEA;AACD;AAnFkC;;AAAA;AAAA,S;;;;gBAb5B;;gBAFA;;gBACA;;gBAIA;;;;AAUIJ,8BAAwB,6DANpC,gEAAU;AACTK,gBAAQ,EAAE,sBADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,+IAFS;;;;AAAA,OAAV,CAMoC,E,+EAoBV,8E,EACD,oF,EACC,mF,EACR,kE,EAvBkB,GAAxBN,wBAAwB,CAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCAAO,qBAAqB;AAAA;AAAA,O;;AAArBA,2BAAqB,6DARjC,+DAAS;AACRC,oBAAY,EAAE,CAAC,oFAAD,CADN;AAERX,eAAO,EAAE,CACP,4DADO,EAEP,yEAFO,EAGP,6FAHO;AAFD,OAAT,CAQiC,GAArBU,qBAAqB,CAArB","file":"modules-common-meetings-meeting-calendar-meeting-calendar-module-es5.js","sourcesContent":["export default \"<!-- <div class=\\\"meeting-view-calendar-wrapper\\\">\\n    <div class=\\\"main\\\">\\n        <app-loader *ngIf=\\\"!loadingData\\\"></app-loader>\\n        <div class=\\\"bg-card shadow\\\" *ngIf=\\\"loadingData\\\">\\n            <full-calendar #calendar [options]=\\\"calendarOptions\\\"></full-calendar>\\n        </div>\\n    </div>\\n</div> -->\\n\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MeetingCalendarComponent } from './meeting-calendar.component';\n\nconst routes: Routes = [\n  {path:'', component:MeetingCalendarComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MeetingCalendarRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tbW9uL21lZXRpbmdzL21lZXRpbmctY2FsZW5kYXIvbWVldGluZy1jYWxlbmRhci5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { MeetingService } from 'src/app/api/controllers/Meeting';\nimport * as moment from 'moment';\nimport _moment from \"moment-timezone\";\nimport { MatDialog } from '@angular/material/dialog';\n// import { CalendarOptions } from '@fullcalendar/angular';\nimport { MeetingEditDisplayComponent } from '../meeting-setting/meeting-edit-display/meeting-edit-display.component';\n\n@Component({\n  selector: 'app-meeting-calendar',\n  templateUrl: './meeting-calendar.component.html',\n  styleUrls: ['./meeting-calendar.component.scss']\n})\n\nexport class MeetingCalendarComponent implements OnInit {\n  // loadingData = false;\n  // calendarOptions: CalendarOptions = {\n  //   initialView: 'dayGridMonth',\n  //   headerToolbar: {\n  //     left: 'prev,next',\n  //     center: 'title',\n  //     right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n  //   },\n  //   aspectRatio: 2,\n  //   resourceAreaHeaderContent: 'Facility',\n  //   selectable : true, \n  //   select : this.appointmentAdd.bind(this),\n  //   eventClick: this.appointmentClick.bind(this),\n  //   schedulerLicenseKey: \"CC-Attribution-NonCommercial-NoDerivatives\"\n  // };\n\n  //timeZone:any;\n\n  constructor(\n    private meetingService:MeetingService,\n    private sharedService:SharedService,\n    private sessionService:SessionService,\n    public dialog: MatDialog\n  ) {}\n  \n  // appointmentClick(info) {\n  //   if(this.sessionService.isAdmin()) {\n  //     let data:any = {id:info.event.extendedProps.meetingId,type:'edit',from:'calendar'};\n  //     const dialogRef = this.dialog.open(MeetingEditDisplayComponent, {\n  //       panelClass: 'material-dialog-big',\n  //       height:'inherit',\n  //       width:'auto',\n  //       data:data\n  //     });\n  //     dialogRef.afterClosed().subscribe(result => {\n  //       if(result) {\n  //         this.getMeetingList();\n  //       }\n  //     });\n  //   }\n  // }\n\n  // appointmentAdd(event) {\n  //   if(this.sessionService.isAdmin()) {\n  //     let data = {type:'create',from:'calendar',event:event} \n  //     const dialogRef = this.dialog.open(MeetingEditDisplayComponent, {\n  //       panelClass: 'material-dialog-big',\n  //       height:'inherit',\n  //       width:'auto',\n  //       data:data\n  //     });\n  //     dialogRef.afterClosed().subscribe(result => {\n  //       if(result) {\n  //         this.getMeetingList();\n  //       }\n  //     });\n  //   }\n  // }\n\n  // getMeetingList() {\n  //   let params = {\n  //     apartmentId : this.sessionService.apartmentId\n  //   }\n  //   this.meetingService.getMeetingByApartmentId(params).subscribe((res : any) => {\n  //     if(res.length > 0) {\n  //       res.forEach((data)=>{\n  //         data.title = data.subject,\n  //         data.start =  `${moment(data.meetingDate).format('YYYY-MM-DD')} ${data.fromTime}`\n  //         data.end =  `${moment(data.meetingDate).format('YYYY-MM-DD')} ${data.toTime}`\n  //         data.color = 'red'\n  //       })\n  //       this.calendarOptions.events = res;\n  //     }\n  //     this.loadingData = true;\n  //   })\n  // }\n\n  ngOnInit(): void {\n\n    // this.sharedService.timezonecast.subscribe( timeZone => this.timeZone = timeZone )\n\n    // this.getMeetingList();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MeetingCalendarRoutingModule } from './meeting-calendar-routing.module';\nimport { MeetingCalendarComponent } from './meeting-calendar.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n  declarations: [MeetingCalendarComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MeetingCalendarRoutingModule\n  ]\n})\nexport class MeetingCalendarModule { }\n"]}