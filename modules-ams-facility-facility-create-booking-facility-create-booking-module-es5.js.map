{"version":3,"sources":["webpack:///src/app/modules/ams/facility/facility-create-booking/facility-calender/facility-calender.component.html","webpack:///src/app/modules/ams/facility/facility-create-booking/facility-create-booking/facility-create-booking.component.html","webpack:///src/app/modules/ams/facility/facility-create-booking/facility-expected-visitor/facility-expected-visitor.component.html","webpack:///src/app/modules/ams/facility/facility-create-booking/facility-modal/facility-modal.component.html","webpack:///src/app/modules/ams/facility/facility-create-booking/user-facility-booking-list/user-facility-booking-list.component.html","webpack:///src/app/modules/ams/facility/facility-create-booking/facility-calender/facility-calender.component.scss","webpack:///src/app/modules/ams/facility/facility-create-booking/facility-calender/facility-calender.component.ts","webpack:///src/app/modules/ams/facility/facility-create-booking/facility-create-booking-routing.module.ts","webpack:///src/app/modules/ams/facility/facility-create-booking/facility-create-booking.module.ts","webpack:///src/app/modules/ams/facility/facility-create-booking/facility-create-booking/facility-create-booking.component.scss","webpack:///src/app/modules/ams/facility/facility-create-booking/facility-create-booking/facility-create-booking.component.ts","webpack:///src/app/modules/ams/facility/facility-create-booking/facility-expected-visitor/facility-expected-visitor.component.scss","webpack:///src/app/modules/ams/facility/facility-create-booking/facility-expected-visitor/facility-expected-visitor.component.ts","webpack:///src/app/modules/ams/facility/facility-create-booking/facility-modal/facility-modal.component.scss","webpack:///src/app/modules/ams/facility/facility-create-booking/facility-modal/facility-modal.component.ts","webpack:///src/app/modules/ams/facility/facility-create-booking/user-facility-booking-list/user-facility-booking-list.component.scss","webpack:///src/app/modules/ams/facility/facility-create-booking/user-facility-booking-list/user-facility-booking-list.component.ts"],"names":["FacilityCalenderComponent","facilityService","sessionService","sharedService","dialog","selector","template","routes","path","redirectTo","pathMatch","component","canActivate","FacilityCreateBookingRoutingModule","imports","forChild","exports","FacilityCreateBookingModule","declarations","forRoot","FacilityCreateBookingComponent","router","route","userService","changeDetect","lookupService","apartmentService","visitorService","info","modalResult","facilitySlotData","towerList","unitList","facilityStatus","facilityCatList","taxPecentage","visitorsList","booking","apartmentFacilityId","slotId","apartmentBlockId","apartmentBlockUnitId","facilityBookingStatusId","tax","primaryName","advanceBookingDate","url","subscribe","data","urlType","radio","isBookingforGuest","facilityBookingForm","reset","bookedForDate","event","isAdmin","guestName","guestPhone","guestRelation","totalofguestsforevent","categoryParams","apartmentId","getApartmentFacilitiesByApartmentId","tower","getApartmentBlockAndBlockUnitByApartmentId","length","selectFacility","bookedFromTime","bookedToTime","facilityBookingDetail","securityDepositAmount","rateBaseId","totalBillAmount","amount","termsCondion","selectedFacility","filter","item","parseInt","advanceBookingDays","advanceBookingindays","add","cautionDeposit","apartmentFacilitySlot","toFixed","description","replace","open","panelClass","type","facilityId","facilityTypeId","time","date","toDate","format","forEach","apartmentFacilitySlotId","cost","discount","membershipDiscountAmount","fromTime","toTime","difference","diff","diffHours","hours","diffMinutes","minutes","totalDiffHrs","minHoursBooking","memberShipDis","totalDiscount","block_Id","getUnits","apartmentBlockUnitUserId","blockUnit","getVisitorsList","getPrimaryName","buId","neededUserId","pc_Label","blockUnitUserId","dialogRef","location","selectedCountryISO","afterClosed","result","message","id","split","Number","params","apartmentUnitId","getExpectedVisitorsByApartmentUnitId","res","ele","customLabel","expectedVisitorName","block_Unit","expectedVisitorInTime","expectedVisitorOutTime","expectedVisitorId","navigate","emit","openSnackBar","routerConfig","errorMessage","isSlotBooking","apartmentFacilityIsSlotBooking_List","lookupValueId","valid","window","scroll","top","behavior","appearance","content","shake","showIcon","markForCheck","isBookingSubmitted","setSlotStructure","apartmentFacilityBooking","isCancelled","cancelledBy","cancelledOn","cancelledAmount","rateBaseIdName","isApproved","bookedOn","toISOString","isActive","insertedBy","userId","insertedOn","updatedBy","updatedOn","addApartmentFacilityBooking","pageNavigate","error","updateApartmentFacilityBooking","dialogData","disableClose","dialogResult","apartmentFacilityBookingId","getApartmentFacilityBookingsByFacilityBookingId","response","getFacilityCategoryList","facility","getTower","timezonecast","timeZone","parent","initialData","apartment","country","toLowerCase","apartmentBlockID","apartmentBlockUnitID","statusParams","LookupTypeId","ApartmentId","getLookupValueByLookupTypeId","calendarInfo","calendarData","resource","_resource","startStr","pesoParams","pesoValue","lookupValueName","taxListParams","bookingId","editFacilityBooking","encapsulation","None","animations","FacilityExpectedVisitorComponent","activateRouter","_changeDetectorRef","visitor","expectedDurationInfo","visitTypeList","visitCategoryList","isDataSubmitted","SearchCountryField","CountryISO","preferredCountries","UnitedStates","UnitedKingdom","expectedDurationChange","inDate","outDate","diffDuration","days","isSingleDigit","asHours","expectedDuration","Math","round","digit","toString","visitTypeId","visitorCategoryId","form","expectedVisitor","expectedVisitorPhone","number","tomeetStaffId","countryCode","addExpectedVisitor","offset","resetField","visitParams","visitCategoryParams","FacilityModalComponent","close","UserFacilityBookingListComponent","injector","bookingSearch","isBookingDataLoaded","totalItems","modalService","get","detail","dataRecord","datagrid","getrowdata","rowId","showConfirmModal","filtergroup","jqx","filter_or_operator","filtervalue","filtercondition","filterData","createfilter","operator","addfilter","showfiltercolumnbackground","columnData","datafield","applyfilters","clearfilters","exportdata","getApartmentFacilityBookingsByBlockunituserId","localdata","reverse","datatype","bookingListData","dataAdapter","getBookingList","cellsrenderer","row","column","value","columnrenderer","text","minwidth","renderer","loadedData","cellsalign","align","status","facilityBookingStatusId_Label","apiSubscribe","unitlistdeleteindexcast","deleteBy","deleteApartmentFacilityBooking","setUnitListDeleteIndex","deleterow","refresh","unsubscribe","CustomEvent","dispatchEvent","deleteFacilityBooking"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2ECIf;;;UAYaA,yBAAyB;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,2CAAoBC,eAApB,EAA4DC,cAA5D,EACUC,aADV,EAESC,MAFT,EAE0B;AAAA;;AAFN,eAAAH,eAAA,GAAAA,eAAA;AAAwC,eAAAC,cAAA,GAAAA,cAAA;AAClD,eAAAC,aAAA,GAAAA,aAAA;AACD,eAAAC,MAAA,GAAAA,MAAA;AAAsB,SAvBK,CAyBpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAvGoC;AAAA;AAAA,qCAyG5B,CAEN;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AApImC;;AAAA;AAAA,S;;;;gBAf7B;;gBAEA;;gBADA;;gBAGA;;;;AAWIJ,+BAAyB,6DALrC,gEAAU;AACTK,gBAAQ,EAAE,uBADD;AAE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","file":"modules-ams-facility-facility-create-booking-facility-create-booking-module-es5.js","sourcesContent":["export default \"<!-- <div class=\\\"facility-view-calendar-wrapper\\\">\\n    <div class=\\\"main\\\">\\n        <app-loader *ngIf=\\\"!loadingData\\\"></app-loader>\\n        <div class=\\\"bg-card shadow\\\" *ngIf=\\\"loadingData\\\">\\n            <div class=\\\"text-right mb-4\\\" *ngIf=\\\"info && info.facilityId\\\">\\n                <mat-icon [svgIcon]=\\\"'close'\\\" mat-dialog-close></mat-icon>\\n            </div>\\n            <full-calendar [options]=\\\"calendarOptions\\\"></full-calendar>\\n        </div>\\n    </div>\\n</div> -->\\n\";","export default \"<div class=\\\"facility-create-booking-wrapper\\\">\\n\\t<div class=\\\"main\\\">\\n\\t\\t<form #facilityBookingForm = \\\"ngForm\\\" name=\\\"facilityBookingForm\\\" novalidate>\\n\\t\\t\\t<!-- create,edit and view using Router -->\\n\\t\\t\\t<h4 class=\\\"mb-4\\\" *ngIf=\\\"!info.type\\\">\\n\\t\\t\\t\\t<span *ngIf=\\\"urlType == 'create'\\\">Create Booking</span>\\n\\t\\t\\t\\t<span *ngIf=\\\"urlType == 'edit'\\\">Edit Booking</span>\\n\\t\\t\\t\\t<span *ngIf=\\\"urlType == 'view'\\\">View Booking</span>\\n\\t\\t\\t</h4>\\n\\t\\t\\t<condo-message class=\\\"mb-3\\\" *ngIf=\\\"message\\\"\\n\\t\\t\\t\\t[appearance]=\\\"message.appearance\\\"\\n\\t\\t\\t\\t[showIcon]=\\\"message.showIcon\\\"\\n\\t\\t\\t\\t[type]=\\\"message.type\\\"\\n\\t\\t\\t\\t[@shake]=\\\"message.shake\\\">\\n\\t\\t\\t\\t{{message.content}}\\n\\t\\t\\t</condo-message>\\n\\t\\t\\t<div class=\\\"bg-card shadow\\\">\\n\\t\\t\\t\\t<!--Create,edit and view using popup -->\\n\\t\\t\\t\\t<div class=\\\"d-flex mb-4\\\" *ngIf=\\\"info.type\\\">\\n\\t\\t\\t\\t\\t<h4>\\n\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"urlType == 'create'\\\">Create Booking</span>\\n\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"urlType == 'view'\\\">View Booking</span>\\n\\t\\t\\t\\t\\t</h4>\\n\\t\\t\\t\\t\\t<mat-icon class=\\\"ml-auto\\\" *ngIf=\\\"info.type\\\" [svgIcon]=\\\"'close'\\\" mat-dialog-close></mat-icon>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<!-- Facility Details -->\\n\\t\\t\\t\\t<div class=\\\"row text-center\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box mb-0\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Booking For </label>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input  name=\\\"isBookingforGuest\\\" id=\\\"Yes\\\" [(ngModel)]=\\\"booking.isBookingforGuest\\\" (click)=\\\"bookedForChange()\\\" [value]=\\\"true\\\" type=\\\"radio\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[disabled]=\\\"isDisable()\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"Yes\\\">Guest</label>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input  name=\\\"isBookingforGuest\\\" id=\\\"No\\\" [(ngModel)]=\\\"booking.isBookingforGuest\\\" (click)=\\\"bookedForChange()\\\" [value]=\\\"false\\\" type=\\\"radio\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[disabled]=\\\"isDisable()\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"radio-inline\\\" for=\\\"No\\\">User</label>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<h6 class=\\\"mb-4\\\">Facility Details</h6>\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<condo-select \\n\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"Facility Name\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldPlaceholder=\\\"Select Facility Name\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldList]=\\\"facilityCatList\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldValue=\\\"facilityName\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldModel]=\\\"booking.apartmentFacilityId\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldId=\\\"apartmentFacilityId\\\"\\n\\t\\t\\t\\t\\t\\t\\t[isDisabled]=\\\"isDisable()\\\"\\n\\t\\t\\t\\t\\t\\t\\t(fieldParams)=\\\"setFacility($event)\\\" \\n\\t\\t\\t\\t\\t\\t  ></condo-select>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<a *ngIf=\\\"booking.apartmentFacilityId && !info.type\\\" class=\\\"float-right\\\"  href=\\\"javascript:void(0)\\\" (click)=\\\"viewBookingDetails()\\\">View Booking Details</a>\\n\\t\\t\\t\\t\\t\\t<app-datepicker\\n\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"Select Date\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldName=\\\"eventDateTo\\\"\\n\\t\\t\\t\\t\\t\\t\\ttype=\\\"date\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldModel]=\\\"booking.bookedForDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t[min]=\\\"advanceBookingDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t[isDisabled]=\\\"isDisable()\\\"\\n\\t\\t\\t\\t\\t\\t\\t(fieldParams)=\\\"setBookedForDate($event)\\\">\\n\\t\\t\\t\\t\\t\\t</app-datepicker>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"booking.apartmentFacilityId && facilitySlotData?.length > 0\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Select Slot<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<select name=\\\"slotId\\\" id=\\\"slotId\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"booking.slotId\\\" (ngModelChange)=\\\"selectSlot()\\\" [disabled]=\\\"isDisable()\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option [ngValue]=\\\"null\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of facilitySlotData\\\" [ngValue]=\\\"item.apartmentFacilitySlotId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{getSlotTime(item.slotBeginTime)}} - {{getSlotTime(item.slotEndTime)}}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"booking.apartmentFacilityId && facilitySlotData?.length == 0 && booking.rateBaseId == 138\\\"> \\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>From Time<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<input  class=\\\"form-control\\\" name=\\\"bookedFromTime\\\" [owlDateTime]=\\\"bookedFromTime\\\" [owlDateTimeTrigger]=\\\"bookedFromTime\\\" placeholder=\\\"Time\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"booking.bookedFromTime\\\" (dateTimeInput)=\\\"setMinTime()\\\" [disabled]=\\\"isDisable()\\\" autocomplete=\\\"off\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t<owl-date-time  [pickerType]=\\\"'timer'\\\" #bookedFromTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"bookedFromTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon svgIcon=\\\"feather:clock\\\"></mat-icon>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"booking.apartmentFacilityId && facilitySlotData?.length == 0 && booking.rateBaseId == 138\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>To Time<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<input  class=\\\"form-control\\\" name=\\\"bookedToTime\\\" [owlDateTime]=\\\"bookedToTime\\\" [owlDateTimeTrigger]=\\\"bookedToTime\\\" placeholder=\\\"Time\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"booking.bookedToTime\\\" (dateTimeInput)=\\\"setMinTime()\\\" [disabled]=\\\"isDisable()\\\" autocomplete=\\\"off\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t<owl-date-time  [pickerType]=\\\"'timer'\\\" #bookedToTime></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"bookedToTime\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon svgIcon=\\\"feather:clock\\\"></mat-icon>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\\"error\\\" *ngIf=\\\"facilityBookingForm.controls.bookedToTime?.errors?.min\\\">Please Enter Min {{facilityBookingDetail.minHoursBooking}} Hours or Max {{facilityBookingDetail.minHoursBooking}} Hours</p>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Event Name<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<input  type=\\\"text\\\"  class=\\\"form-control\\\" placeholder=\\\"Event Name\\\" name=\\\"eventName\\\" [(ngModel)]=\\\"booking.eventName\\\" [disabled]=\\\"isDisable()\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t<help-tooltip title=\\\"eventName\\\"></help-tooltip>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<!-- Payment Details -->\\n\\t\\t\\t<div class=\\\"bg-card shadow\\\" *ngIf=\\\"showBookingDetail()\\\">\\n\\t\\t\\t\\t<h6 class=\\\"mb-4\\\">Booking Details</h6>\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Security Amount ({{pesoValue}})</label>\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Security Amount\\\" name=\\\"securityDepositAmount\\\" [value]=\\\"booking.securityDepositAmount\\\" readonly>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"facilityBookingDetail\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Booking Amount Per {{ booking.rateBaseId == 138 ? 'Hour' : 'Day'}} ({{pesoValue}})</label>\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Amount\\\" name=\\\"bookingAmoutPerRate\\\" [value]=\\\"facilityBookingDetail.amount\\\" readonly>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Cost ({{pesoValue}})*</label>\\n\\t\\t\\t\\t\\t\\t\\t<input OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Amount\\\" name=\\\"amount\\\" [value]=\\\"booking.amount\\\" readonly>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\"> \\n\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Tax ({{taxPecentage}}%)</label>\\n\\t\\t\\t\\t\\t\\t\\t<input OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Amount\\\" name=\\\"amount\\\" [value]=\\\"booking.tax\\\" readonly>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Discount Amount ({{pesoValue}})</label>\\n\\t\\t\\t\\t\\t\\t\\t<input OnlyNumber=\\\"true\\\" (keyup)=\\\"calcDiscount()\\\" class=\\\"form-control\\\" placeholder=\\\"Discount\\\" name=\\\"discountAmt\\\" [(ngModel)]=\\\"booking.discount\\\" [disabled]=\\\"isDisable()\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<!-- Need to integrate -->\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Membership Discount ({{pesoValue}})</label>\\n\\t\\t\\t\\t\\t\\t\\t<input OnlyNumber=\\\"true\\\" (keyup)=\\\"calcDiscount()\\\" class=\\\"form-control\\\" placeholder=\\\"MemberShip Discount\\\"  [(ngModel)]=\\\"booking.membershipDiscountAmount\\\" name=\\\"memberDiscount\\\" [disabled]=\\\"isDisable()\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Final Booking Amount ({{pesoValue}})</label>\\n\\t\\t\\t\\t\\t\\t\\t<input OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Total\\\" name=\\\"totalBillAmount\\\" [value]=\\\"booking.totalBillAmount\\\" readonly>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<!-- Unit Details -->\\n\\t\\t\\t<div class=\\\"bg-card shadow\\\" *ngIf=\\\"isAdmin()\\\">\\n\\t\\t\\t\\t<h6 class=\\\"mb-4\\\">Unit Resident Details</h6>\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<condo-select \\n\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"Tower No\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldPlaceholder=\\\"Select Tower\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldList]=\\\"towerList\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldValue=\\\"block_Label\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldModel]=\\\"booking.apartmentBlockId\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldId=\\\"block_Id\\\"\\n\\t\\t\\t\\t\\t\\t\\t[isDisabled]=\\\"isDisable()\\\"\\n\\t\\t\\t\\t\\t\\t\\t(fieldParams)=\\\"setSelectedBlock($event)\\\" \\n\\t\\t\\t\\t\\t\\t></condo-select>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"booking.apartmentBlockId\\\">\\n\\t\\t\\t\\t\\t\\t  <condo-select \\n\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"Unit No\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldPlaceholder=\\\"Select Unit\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldList]=\\\"unitList\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldValue=\\\"bu_Label\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldModel]=\\\"booking.apartmentBlockUnitId\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldId=\\\"buId\\\"\\n\\t\\t\\t\\t\\t\\t\\t[isDisabled]=\\\"isDisable()\\\"\\n\\t\\t\\t\\t\\t\\t\\t(fieldParams)=\\\"setSelectedBlockUnit($event)\\\" \\n\\t\\t\\t\\t\\t\\t></condo-select>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"booking.apartmentBlockUnitId\\\">\\n\\t\\t\\t\\t\\t  <div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t<label>Primary Name</label>\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Primary Name\\\" name=\\\"primaryName\\\" [value]=\\\"primaryName\\\" readonly>\\n\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<!-- Guest Details -->\\n\\t\\t\\t<div class=\\\"bg-card shadow\\\" *ngIf=\\\"booking.isBookingforGuest\\\">\\n\\t\\t\\t\\t<h6 class=\\\"mb-4\\\">Guest Details</h6>\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Guest Name <span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<input  type=\\\"text\\\"  class=\\\"form-control\\\" placeholder=\\\"Guest Name\\\" name=\\\"guestName\\\" [(ngModel)]=\\\"booking.guestName\\\" [disabled]=\\\"isDisable()\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t<help-tooltip title=\\\"guestName\\\"></help-tooltip>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Guest Phone <span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<input OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Guest Phone\\\" name=\\\"guestPhone\\\" [(ngModel)]=\\\"booking.guestPhone\\\" [disabled]=\\\"isDisable()\\\" required>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Relatioship To Guest <span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<input  type=\\\"text\\\"  class=\\\"form-control\\\" placeholder=\\\"Relationship\\\" name=\\\"guestRelation\\\" [(ngModel)]=\\\"booking.guestRelation\\\" [disabled]=\\\"isDisable()\\\" required>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>No Of Guest To Attend <span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<input OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"No Of Guest\\\" name=\\\"totalofguestsforevent\\\" [(ngModel)]=\\\"booking.totalofguestsforevent\\\" [disabled]=\\\"isDisable()\\\" required>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<!-- booked for, comment box and status -->\\n\\t\\t\\t<div class=\\\"bg-card shadow\\\">\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\" *ngIf=\\\"booking.apartmentBlockUnitId && booking.isBookingforGuest\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"float-right\\\">\\n\\t\\t\\t\\t\\t\\t\\t<a *ngIf=\\\"urlType != 'view'\\\" class=\\\"ml-auto\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"createVisitor()\\\">Create Visitor Pass</a>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<condo-select \\n\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"Visitor Pass\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldPlaceholder=\\\"Visitor Pass\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldList]=\\\"visitorsList | orderBy : 'expectedVisitorName'\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldValue=\\\"customLabel\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldModel]=\\\"booking.neededUserId\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldId=\\\"expectedVisitorId\\\"\\n\\t\\t\\t\\t\\t\\t\\ttoolTip=\\\"visitorPass\\\"\\n\\t\\t\\t\\t\\t\\t\\t(fieldParams)=\\\"setVisitor($event)\\\" \\n\\t\\t\\t\\t\\t\\t></condo-select> \\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\" *ngIf=\\\"isAdmin()\\\">\\n\\t\\t\\t\\t\\t\\t<condo-select \\n\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"Status\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldPlaceholder=\\\"Select Status\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldList]=\\\"facilityStatus\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldValue=\\\"lookupValueName\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldModel]=\\\"booking.facilityBookingStatusId\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldId=\\\"lookupValueId\\\"\\n\\t\\t\\t\\t\\t\\t\\t[isDisabled]=\\\"isDisable()\\\"\\n\\t\\t\\t\\t\\t\\t\\t(fieldParams)=\\\"setStatus($event)\\\" \\n\\t\\t\\t\\t\\t\\t  ></condo-select>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Comment</label>\\n\\t\\t\\t\\t\\t\\t\\t<textarea placeholder=\\\"Enter Comment\\\" name=\\\"comment\\\" [(ngModel)]=\\\"booking.comment\\\" [disabled]=\\\"isDisable()\\\"></textarea>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\" *ngIf=\\\"termsCondion\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t  <label>Terms and Condition</label>\\n\\t\\t\\t\\t\\t\\t  <textarea name=\\\"terms\\\" [value]=\\\"termsCondion\\\" readonly></textarea>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"d-flex justify-content-end\\\">\\n\\t\\t\\t\\t\\t\\t<button class=\\\"mr-2\\\" *ngIf=\\\"urlType == 'create'\\\" class=\\\"ml-2\\\" mat-button (click)=\\\"resetField()\\\">Clear</button>\\n\\t\\t\\t\\t\\t\\t<submit-button [isSubmit]=\\\"isBookingSubmitted\\\"*ngIf=\\\"urlType=='create'\\\" (click)=\\\"createFacilityBooking()\\\">Create</submit-button>\\n\\t\\t\\t\\t\\t\\t<button class=\\\"mr-2\\\" *ngIf=\\\"urlType == 'edit'\\\" class=\\\"ml-2\\\" mat-button (click)=\\\"back()\\\">Back</button>\\n\\t\\t\\t\\t\\t\\t<submit-button [isSubmit]=\\\"isBookingSubmitted\\\"*ngIf=\\\"urlType=='edit'\\\" (click)=\\\"updateFacilityBooking()\\\">Update</submit-button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</form>\\n\\t</div>\\n</div>\";","export default \"<div class=\\\"checkin-visitor-wrapper\\\">\\n\\t<div class=\\\"main\\\">\\n\\t\\t<form #expectedVisitorForm=\\\"ngForm\\\">\\n\\t\\t\\t<div class=\\\"bg-card shadow mb-0\\\">\\n\\t\\t\\t\\t<div class=\\\"d-flex mb-4\\\">\\n\\t\\t\\t\\t\\t<h4 class=\\\"mb-4\\\">Create Expected Visitor</h4>\\n\\t\\t\\t\\t\\t<mat-icon class=\\\"ml-auto\\\" [svgIcon]=\\\"'close'\\\" mat-dialog-close></mat-icon>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<condo-message class=\\\"mb-3\\\" *ngIf=\\\"message\\\"\\n\\t\\t\\t\\t\\t[appearance]=\\\"message.appearance\\\"\\n\\t\\t\\t\\t\\t[showIcon]=\\\"message.showIcon\\\"\\n\\t\\t\\t\\t\\t[type]=\\\"message.type\\\"\\n\\t\\t\\t\\t\\t[@shake]=\\\"message.shake\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{message.content}}\\n\\t\\t\\t\\t</condo-message>\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Expected Visitor Name<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Visitor Name\\\" name=\\\"visitorName\\\" [(ngModel)]=\\\"visitor.expectedVisitorName\\\" required>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Expected Visitor Count<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" OnlyNumber=\\\"true\\\" class=\\\"form-control\\\" placeholder=\\\"Visitor Count\\\" name=\\\"visitorCount\\\" [(ngModel)]=\\\"visitor.expectedVisitorCount\\\" required>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div> \\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Expected Phone/Mobile No<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<ngx-intl-tel-input [inputId]=\\\"'userMobile'\\\"\\n\\t\\t\\t\\t\\t\\t\\t[preferredCountries]=\\\"preferredCountries\\\"\\n\\t\\t\\t\\t\\t\\t\\t[enableAutoCountrySelect]=\\\"true\\\" [enablePlaceholder]=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t\\t[searchCountryFlag]=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t\\t[searchCountryField]=\\\"[SearchCountryField.Iso2, SearchCountryField.Name]\\\"\\n\\t\\t\\t\\t\\t\\t\\t[selectFirstCountry]=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t[selectedCountryISO]=\\\"selectedCountryISO\\\" [maxLength]=\\\"15\\\"\\n\\t\\t\\t\\t\\t\\t\\t[phoneValidation]=\\\"false\\\" [separateDialCode]=\\\"separateDialCode\\\"\\n\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"visitor.expectedVisitorPhone\\\" name=\\\"phone\\\">\\n\\t\\t\\t\\t\\t\\t</ngx-intl-tel-input>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<app-datepicker\\n\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"Expected Date/Time of Visit\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldName=\\\"visitorInTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\ttype=\\\"dateTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldModel]=\\\"visitor.expectedVisitorInTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t(fieldParams)=\\\"getExpectedVisitorInDate($event)\\\">\\n\\t\\t\\t\\t\\t\\t</app-datepicker>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<app-datepicker\\n\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"Expected Out/Time of Visit\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldName=\\\"visitorOutTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\ttype=\\\"dateTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldModel]=\\\"visitor.expectedVisitorOutTime\\\"\\n\\t\\t\\t\\t\\t\\t\\t(fieldParams)=\\\"getExpectedVisitorOutDate($event)\\\">\\n\\t\\t\\t\\t\\t\\t</app-datepicker>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Expected Duration of Visit<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" placeholder=\\\"Duration Info\\\" name=\\\"durationInfo\\\" [value]=\\\"expectedDurationInfo\\\" [disabled]=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box radio-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Expected Visit Category<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<select name=\\\"visitByCategory\\\" id=\\\"visitByCategory\\\" class=\\\"form-control\\\"[(ngModel)]=\\\"visitor.visitorCategoryId\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option [ngValue]=\\\"null\\\" disabled selected hidden>Select</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of visitCategoryList | orderBy : 'lookupValueName'\\\" [ngValue]=\\\"item.lookupValueId\\\">{{ item.lookupValueName }}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Reason for Visit<span class=\\\"required\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<textarea  type=\\\"text\\\" class=\\\"form-control purpose-box\\\" placeholder=\\\"Enter purpose\\\" name=\\\"visitorpurpose\\\" [(ngModel)]=\\\"visitor.purpose\\\" required></textarea>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-12 float-right\\\">\\n\\t\\t\\t\\t\\t\\t<submit-button (click)=\\\"createExpectedVisitor()\\\" [isSubmit]=\\\"isDataSubmitted\\\">Submit</submit-button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</form>\\n\\t</div>\\n</div>\";","export default \"<app-facility-create-booking *ngIf=\\\"data.type=='facility-booking'\\\" [popUpInfo]=\\\"data.info\\\" (modalResult)=\\\"popUpResult($event)\\\"></app-facility-create-booking>\\n<app-facility-calender *ngIf=\\\"data.type=='view-calendar-booking'\\\" [popUpInfo]=\\\"data.info\\\"></app-facility-calender>\\n<app-facility-expected-visitor *ngIf=\\\"data.type=='create-visitor'\\\" [popUpInfo]=\\\"data.info\\\" (modalResult)=\\\"popUpResult($event)\\\"></app-facility-expected-visitor>\";","export default \"<div class=\\\"user-facility-booking-list\\\">\\n\\t<div class=\\\"main\\\">\\n\\t\\t<!-- Loader -->\\n\\t\\t<app-loader *ngIf=\\\"!isBookingDataLoaded\\\"></app-loader>\\n\\t\\t<!-- Table -->\\n\\t\\t<condo-card *ngIf=\\\"isBookingDataLoaded\\\">\\n\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<h4>All Bookings</h4>\\n\\t\\t\\t\\t\\t\\t<p>{{totalItems}} results</p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"ml-auto mr-3\\\">\\n\\t\\t\\t\\t\\t\\t<app-table-search [input]=\\\"bookingSearch\\\" (outputParams)=\\\"onGlSearchFilter($event)\\\"></app-table-search>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"mr-3\\\">\\n\\t\\t\\t\\t\\t\\t<app-print-dropdown (outputParams) =\\\"getPrintParams($event)\\\"></app-print-dropdown>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" routerLink=\\\"/user/facility/bookings/create-booking\\\">Create Booking</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div CondoCardBody>\\n\\t\\t\\t\\t<jqxGrid \\n\\t\\t\\t\\t\\t[theme]=\\\"'material'\\\" \\n\\t\\t\\t\\t\\t[width]=\\\"'100%'\\\"\\n\\t\\t\\t\\t\\t[rowsheight]=\\\"48\\\"\\n\\t\\t\\t\\t\\t[autoheight]=\\\"true\\\"\\n\\t\\t\\t\\t\\t[pageable]=\\\"true\\\" \\n\\t\\t\\t\\t\\t[filterable]=\\\"true\\\" \\n\\t\\t\\t\\t\\t[sortable]=\\\"true\\\" \\n\\t\\t\\t\\t\\t[source]=\\\"bookingListData\\\"\\n\\t\\t\\t\\t\\t[columns]=\\\"columnData\\\"\\n\\t\\t\\t\\t\\t[columnsresize]=\\\"true\\\"\\n\\t\\t\\t\\t\\t[enablehover]=\\\"false\\\" #datagrid>\\n\\t\\t\\t\\t</jqxGrid> \\n\\t\\t\\t</div>\\n\\t\\t</condo-card>\\n\\t</div>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL2ZhY2lsaXR5L2ZhY2lsaXR5LWNyZWF0ZS1ib29raW5nL2ZhY2lsaXR5LWNhbGVuZGVyL2ZhY2lsaXR5LWNhbGVuZGVyLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { FacilityService } from 'src/app/api/controllers/Facility';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\n// import { CalendarOptions } from '@fullcalendar/angular';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FacilityModalComponent } from '../facility-modal/facility-modal.component';\n\nimport * as moment from 'moment';\nimport _moment from \"moment-timezone\";\n\n@Component({\n  selector: 'app-facility-calender',\n  templateUrl: './facility-calender.component.html',\n  styleUrls: ['./facility-calender.component.scss']\n})\nexport class FacilityCalenderComponent implements OnInit {\n  \n  // @Input('popUpInfo') info:any = {};\n  // loadingData = false;\n  // calendarOptions: CalendarOptions = {\n  //   initialView: 'resourceTimelineDay',\n  //   headerToolbar: {\n  //     left: 'prev,next',\n  //     center: 'title',\n  //     right: 'resourceTimelineDay,resourceTimelineWeek,resourceTimelineMonth'\n  //   },\n  //   aspectRatio: 2,\n  //   resourceAreaHeaderContent: 'Facility',\n  //   selectable : true,\n  //   select : this.addEvent.bind(this),\n  //   eventClick: this.dateEventClick.bind(this),\n  //   schedulerLicenseKey: \"CC-Attribution-NonCommercial-NoDerivatives\",\n  // };\n\n  //timeZone:any;\n\n  constructor(private facilityService:FacilityService,private sessionService:SessionService,\n    private sharedService:SharedService,\n    public dialog: MatDialog,) {}\n  \n  // addEvent(calendarInfo) {\n  //   if(!this.info.facilityId) {\n  //     const dialogRef = this.dialog.open(FacilityModalComponent, {\n  //       panelClass: 'material-dialog-big',\n  //       height:'inherit',\n  //       width:'auto',\n  //       data: {\n  //         type:'facility-booking',\n  //         info: {\n  //           type : 'create',\n  //           dataFrom:'calendar',\n  //           calendarData: calendarInfo\n  //         }\n  //       }\n  //     });\n  //     dialogRef.afterClosed().subscribe(result => {\n  //       if(result) {\n  //         this.facilityBookingList()\n  //       }\n  //     });\n  //   }\n  // }\n\n  // dateEventClick(info) {\n  //   if(!this.info.facilityId) {\n  //     let id = info.event.extendedProps.apartmentFacilityBookingId\n  //     const dialogRef = this.dialog.open(FacilityModalComponent, {\n  //       panelClass: 'material-dialog-big',\n  //       height:'inherit',\n  //       width:'auto',\n  //       data: {\n  //         type:'facility-booking',\n  //         info: {\n  //           type : 'view',\n  //           dataFrom:'calendar',\n  //           bookingId:id\n  //         }\n  //       }\n  //     });\n  //     dialogRef.afterClosed().subscribe(result => {\n  //       if(result) {\n  //         this.facilityBookingList()\n  //       }\n  //     });\n  //   }\n  // }\n\n  // facilityBookingList() {\n  //   let bookingParams = {\n  //     apartmentId: this.sessionService.apartmentId,\n  //     facilityBookingStatusID: 188, //ApprovedId\n  //   }\n  //   this.facilityService.getApartmentFacilityBookingsByApartmentId(bookingParams).subscribe((res:any) => {\n  //     if(res.length > 0) {\n  //       if(this.info.facilityId) {  //popup\n  //         for(let data of res) {\n  //           if(this.info.facilityId == data.apartmentFacilityId) {\n  //             data.resourceId = data.apartmentFacilityId;\n  //             data.title = data.eventName;\n  //             data.start =  `${moment(data.bookedForDate).format('YYYY-MM-DD')} ${data.bookedFromTime}`;\n  //             data.end =  `${moment(data.bookedForDate).format('YYYY-MM-DD')} ${data.bookedToTime}`;\n  //             data.color = 'red';\n  //             break;\n  //           } \n  //         }\n  //       } else {                       //router\n  //         res.forEach((data)=>{\n  //           data.resourceId = data.apartmentFacilityId;\n  //           data.title = data.eventName;\n  //           data.start =  `${moment(data.bookedForDate).format('YYYY-MM-DD')} ${data.bookedFromTime}`;\n  //           data.end =  `${moment(data.bookedForDate).format('YYYY-MM-DD')} ${data.bookedToTime}`;\n  //           data.color = 'red';\n  //         })\n  //       }\n  //       this.calendarOptions.events = res;\n  //     }\n  //     this.loadingData = true;\n  //   })\n  // }\n\n  ngOnInit(){\n\n    // this.sharedService.timezonecast.subscribe( timeZone => this.timeZone = timeZone )\n\n    // //Facility List\n    // let categoryParams = {\n    //   apartmentId: this.sessionService.apartmentId\n    // }\n    // this.facilityService.getApartmentFacilitiesByApartmentId(categoryParams).subscribe((res:any) => {\n    //   if(res.length > 0) {\n    //     let rooms = [];\n    //     if(this.info.facilityId) {  //popup\n    //       for(let facility of res) {\n    //         if(this.info.facilityId == facility.apartmentFacilityId) {\n    //           rooms.push({id:facility.apartmentFacilityId,title:facility.facilityName});\n    //           break;\n    //         }\n    //       }\n    //     } else {                        //router\n    //       res.forEach((data)=>{\n    //         rooms.push({id:data.apartmentFacilityId,title:data.facilityName});\n    //       })\n    //     }\n    //     this.calendarOptions.resources = rooms;\n    //   }\n    // })\n    // this.facilityBookingList();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FacilityCreateBookingComponent } from './facility-create-booking/facility-create-booking.component';\nimport { FacilityCalenderComponent } from './facility-calender/facility-calender.component';\nimport { UserFacilityBookingListComponent } from './user-facility-booking-list/user-facility-booking-list.component';\nimport { AuthGuard } from 'src/app/core/auth/guards/auth.guard';\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: 'create-booking', pathMatch: 'full'},\n  \t{ path: 'create-booking', component: FacilityCreateBookingComponent, canActivate: [AuthGuard]},\n\t{ path: 'edit-booking/:id', component: FacilityCreateBookingComponent, canActivate: [AuthGuard]},\n\t{ path: 'view-booking/:id', component: FacilityCreateBookingComponent, canActivate: [AuthGuard]},\n\t// { path: 'view-facility-calendar', component: FacilityCalenderComponent, canActivate: [AuthGuard]},\n\t{ path: 'all-bookings', component: UserFacilityBookingListComponent, canActivate: [AuthGuard]},\n\t{ path: '**', redirectTo: 'create-booking', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FacilityCreateBookingRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FacilityCreateBookingRoutingModule } from './facility-create-booking-routing.module';\nimport { FacilityCalenderComponent } from './facility-calender/facility-calender.component';\nimport { FacilityCreateBookingComponent } from './facility-create-booking/facility-create-booking.component';\nimport { FacilityModalComponent } from './facility-modal/facility-modal.component';\nimport { FacilityExpectedVisitorComponent } from './facility-expected-visitor/facility-expected-visitor.component';\nimport { UserFacilityBookingListComponent } from './user-facility-booking-list/user-facility-booking-list.component';\nimport { NgxIntlTelInputModule } from 'ngx-intl-tel-input';\nimport { SelectModule } from 'src/app/modules/ui/select/select.module';\nimport { CondoMessageModule } from 'src/app/modules/ui/message/message.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CondoCardModule } from 'src/app/modules/ui/card/card.module';\nimport { HelpTooltipModule } from 'src/app/modules/ui/help-tooltip/help-tooltip.module';\n\nimport { DatepickerModule } from 'src/app/modules/ui/datepicker/datepicker.module';\n\n\n@NgModule({\n  declarations: [\n    FacilityCalenderComponent,\n    FacilityCreateBookingComponent,\n    FacilityModalComponent,\n    FacilityExpectedVisitorComponent,\n    UserFacilityBookingListComponent,\n  ],\n  imports: [\n    CommonModule,\n    NgxIntlTelInputModule,\n    SelectModule,\n    CondoMessageModule,\n    CondoCardModule,\n    SharedModule,\n    DatepickerModule.forRoot(),\n    FacilityCreateBookingRoutingModule,\n    HelpTooltipModule\n  ]\n})\nexport class FacilityCreateBookingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL2ZhY2lsaXR5L2ZhY2lsaXR5LWNyZWF0ZS1ib29raW5nL2ZhY2lsaXR5LWNyZWF0ZS1ib29raW5nL2ZhY2lsaXR5LWNyZWF0ZS1ib29raW5nLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, ChangeDetectorRef, ViewChild, Input, Output, EventEmitter, ViewEncapsulation } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { UserService } from 'src/app/api/controllers/User';\nimport { FacilityService } from 'src/app/api/controllers/Facility';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport * as moment from 'moment';\nimport _moment from \"moment-timezone\";\nimport { VisitorService } from 'src/app/api/controllers/Visitor';\nimport { CondoAnimations } from 'src/@condo/animations';\nimport { FacilityModalComponent } from '../facility-modal/facility-modal.component';\nimport { ConfirmDialogModel, CommonConfirmModalComponent } from 'src/app/shared/components/common-confirm-modal/common-confirm-modal.component';\n\n@Component({\n  selector: 'app-facility-create-booking',\n  templateUrl: './facility-create-booking.component.html',\n  styleUrls: ['./facility-create-booking.component.scss'],\n  encapsulation  : ViewEncapsulation.None,\n  animations   : CondoAnimations\n})\n\nexport class FacilityCreateBookingComponent implements OnInit {\n  @Input('popUpInfo') info:any = {};  //value got from pop-up (edit mode,view mode and Calendar create Mode)\n  @Output() modalResult = new EventEmitter()\n  @ViewChild('facilityBookingForm') facilityBookingForm:any;\n  isBookingSubmitted:boolean;\n  pesoValue:string;\n  facilityBookingDetail:any;\n  facilitySlotData:any = [];\n  towerList:any = [];\n  unitList:any = [];\n  facilityStatus:any = [];\n  facilityCatList:any = [];\n  taxPecentage:number = 0;\n  visitorsList = [];\n  urlType:string;\n  booking:any = {\n    apartmentFacilityId : null,\n    slotId : null,\n    apartmentBlockId : null,\n    apartmentBlockUnitId : null,\n    facilityBookingStatusId : null,\n    tax : null\n  };\n  primaryName:string = '';\n  termsCondion:string;\n  message:any;\n  advanceBookingDate:any = moment();\n\n  timeZone:any;\n  selectedCountryISO:any;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private userService:UserService,\n    private changeDetect:ChangeDetectorRef,\n    private facilityService:FacilityService,\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private apartmentService:ApartmentService,\n    private sessionService:SessionService,\n    public dialog: MatDialog,\n    private visitorService:VisitorService,\n  ) { \n    this.route.url.subscribe((data)=>{\n      let path = data[0].path;\n      if(path == 'create-booking') \n        this.urlType = 'create';\n      else if(path == 'edit-booking')\n        this.urlType = 'edit';\n      else if(path == 'view-booking')\n        this.urlType = 'view';\n    })\n  }\n\n  resetField() {\n    let radio = this.booking.isBookingforGuest;\n    this.booking = {};\n    this.facilityBookingForm.reset();\n    this.booking.isBookingforGuest = radio;\n    this.booking.bookedForDate = moment();\n  }\n\n  setBookedForDate(event) {\n    this.booking.bookedForDate = event;\n  }\n\n  isAdmin(){\n    return this.sessionService.isAdmin()\n  }\n\n  bookedForChange(){\n    if(this.urlType != 'view' && !this.booking.isBookingforGuest) {\n      this.booking.guestName = null;\n      this.booking.guestPhone = null;\n      this.booking.guestRelation = null;\n      this.booking.totalofguestsforevent = null;\n    }\n  }\n\n  isDisable() {\n    return this.urlType == 'view'? true : false;\n  }\n\n  getFacilityCategoryList() {\n    let categoryParams = {\n      apartmentId: this.sessionService.apartmentId\n    }\n    return this.facilityService.getApartmentFacilitiesByApartmentId(categoryParams);\n  }\n\n  getTower() {\n    let tower = {\n      apartmentId: this.sessionService.apartmentId\n    }\n    return this.apartmentService.getApartmentBlockAndBlockUnitByApartmentId(tower);\n  }\n\n  setFacility(event) {\n    this.booking.apartmentFacilityId = event[0].apartmentFacilityId;\n    if(event.length > 0)\n    this.selectFacility('change');\n    else {\n      this.booking.slotId = '';\n      this.booking.bookedFromTime = null;\n      this.booking.bookedToTime = null;\n      this.facilityBookingDetail = null;\n      this.booking.securityDepositAmount = null;\n      this.booking.rateBaseId = null;\n      this.facilitySlotData = [];\n      this.booking.totalBillAmount = null;\n      this.booking.amount = null;\n      this.booking.tax = null;\n      this.termsCondion = '';\n      this.booking.bookedForDate = null;\n    }\n  }\n\n  selectFacility(event) {\n    if(event) {\n      this.booking.slotId = '';\n      this.booking.bookedFromTime = null;\n      this.booking.bookedToTime = null;\n      this.booking.bookedForDate = null;\n    }\n    let selectedFacility = this.facilityCatList.filter(item => {\n      if(item.apartmentFacilityId === parseInt(this.booking.apartmentFacilityId))\n      return item;\n    });\n    if(selectedFacility.length > 0) {\n      this.facilityBookingDetail = selectedFacility[0];\n      let advanceBookingDays = selectedFacility[0].advanceBookingindays;\n      if(advanceBookingDays) {\n        this.advanceBookingDate =  moment().add(advanceBookingDays, 'days')\n        this.booking.bookedForDate =this.advanceBookingDate; \n      }\n      this.booking.securityDepositAmount = this.facilityBookingDetail.cautionDeposit; \n      this.booking.rateBaseId =  this.facilityBookingDetail.rateBaseId;\n      if(this.facilityBookingDetail.apartmentFacilitySlot.length > 0)\n        this.facilitySlotData = selectedFacility[0].apartmentFacilitySlot;\n      else {\n        this.facilitySlotData = [];\n        if(event) {\n          this.booking.totalBillAmount = parseInt(this.facilityBookingDetail.amount);\n        }\n        this.booking.amount = parseInt(this.facilityBookingDetail.amount);\n        this.booking.tax = parseInt((this.booking.amount *  (this.taxPecentage/100)).toFixed(2));\n      }\n      if(this.facilityBookingDetail.description) {\n        this.termsCondion = this.facilityBookingDetail.description.replace(/<[^>]*>/g, '');\n      }\n    }\n  }\n\n  viewBookingDetails() {\n    this.dialog.open(FacilityModalComponent, {\n      panelClass: 'material-dialog-big',\n      data: {\n        type:'view-calendar-booking',\n        info: {\n          facilityId:this.booking.apartmentFacilityId\n        }\n      }\n    });\n  }\n\n  showBookingDetail() {\n    if(this.booking.apartmentFacilityId) \n      return this.booking.apartmentFacilityId && this.booking.bookedForDate && ((this.facilityBookingDetail && this.facilityBookingDetail.facilityTypeId == 184 && this.booking.slotId) || (this.booking.bookedFromTime && this.booking.bookedToTime && this.booking.amount))\n    else \n      return false;\n  }\n \n  getSlotTime(time) {\n    let date = moment(time, 'HH:mm:ss').toDate();\n    return moment(date).format('hh:mm A');\n  }\n\n  selectSlot() {\n    this.facilitySlotData.forEach((data)=>{\n      if(this.booking.slotId == data.apartmentFacilitySlotId) {\n        this.booking.amount = parseInt(data.cost);\n        this.booking.tax = parseInt((this.booking.amount *  (this.taxPecentage/100)).toFixed(2));\n        this.booking.totalBillAmount = parseInt((this.booking.amount + this.booking.tax).toFixed(2));\n        this.booking.discount = 0;\n        this.booking.membershipDiscountAmount = 0;\n      }\n    })\n  }\n\n  setMinTime() {\n    let fromTime = this.booking.bookedFromTime;\n    let toTime =   this.booking.bookedToTime;\n    let difference;\n    if(fromTime && toTime) {\n      difference = moment.duration(moment(toTime).diff(moment(fromTime)));\n      let diffHours = difference.hours();\n      let diffMinutes = difference.minutes();\n      let totalDiffHrs = diffHours + (diffMinutes/60);\n      if(totalDiffHrs >= this.facilityBookingDetail.minHoursBooking) {\n        let cost = ((this.facilityBookingDetail.amount/(this.facilityBookingDetail.minHoursBooking*60))*((diffHours*60)+(diffMinutes)));\n        this.booking.amount = parseInt(cost.toFixed(2));\n        this.booking.tax = parseInt((this.booking.amount *  (this.taxPecentage/100)).toFixed(2));\n        this.booking.totalBillAmount = parseInt((this.booking.amount + this.booking.tax).toFixed(2));\n       // this.facilityBookingForm.controls.bookedToTime.setErrors(null);\n      } else {\n        //this.facilityBookingForm.controls.bookedToTime.setErrors({min:true});\n        this.booking.amount = 0;\n        this.booking.totalBillAmount = 0;\n        this.booking.tax = 0;\n      }\n    }\n  }\n\n  calcDiscount() {\n    let discount,memberShipDis,amount,totalDiscount;\n    discount = parseInt(this.booking.discount ? this.booking.discount : 0);\n    memberShipDis = parseInt(this.booking.membershipDiscountAmount ? this.booking.membershipDiscountAmount : 0);\n    amount = parseInt(this.booking.amount ? this.booking.amount : 0);\n    totalDiscount = parseInt(discount + memberShipDis);\n    if(amount >= totalDiscount) {\n      this.booking.totalBillAmount =  parseInt(((amount + this.booking.tax) - totalDiscount).toFixed(2));\n      //this.facilityBookingForm.controls.discountAmt.setErrors({min:false})\n    } else {\n      //this.facilityBookingForm.controls.discountAmt.setErrors({min:true})\n      this.booking.totalBillAmount = 0;\n    }\n  }\n\n  setSelectedBlock(event) {\n    this.booking.apartmentBlockId = event[0].block_Id;\n    this.getUnits('change');\n  }\n\n  getUnits(type) {\n    if(type == 'change') {\n      this.booking.apartmentBlockUnitId = null;\n      this.booking.apartmentBlockUnitUserId = null;\n    } \n    for(let data of this.towerList) {\n      if(this.booking.apartmentBlockId == data.block_Id) {\n        this.unitList = data.blockUnit;\n        if(type == 'edit') {\n          this.getVisitorsList();\n          this.getPrimaryName();\n        }\n        break;\n      }\n    }\n  }\n\n  setSelectedBlockUnit(event) {\n    this.booking.apartmentBlockUnitId = event[0].buId;\n    this.booking.neededUserId = null;\n    this.visitorsList = [];\n    this.getVisitorsList();\n    this.getPrimaryName();\n  }\n\n  getPrimaryName() {\n    for(let data of this.unitList) {\n      if(this.booking.apartmentBlockUnitId == data.buId) {\n        this.primaryName = data.pc_Label;\n        this.booking.apartmentBlockUnitUserId = data.blockUnitUserId;\n        break;\n      }\n    }\n  }\n\n  createVisitor() {\n    const dialogRef = this.dialog.open(FacilityModalComponent, {\n      panelClass: 'material-dialog-big',\n      data: {\n        type:'create-visitor',\n        info: {\n          apartmentBlockUnitId : this.booking.apartmentBlockUnitId,\n          location : this.selectedCountryISO\n        }\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if(result && result.message && result.id) {\n        let id = result.id.split('#');\n        this.booking.neededUserId = Number(id[0]);\n        this.getVisitorsList();\n      }\n    });\n  }\n\n  getVisitorsList() {\n    let params = {\n      apartmentUnitId: this.booking.apartmentBlockUnitId\n    }\n    this.visitorService.getExpectedVisitorsByApartmentUnitId(params).subscribe((res:any) => {\n      if(res.length > 0) {\n        this.visitorsList =res;\n        this.visitorsList.forEach((ele)=>{\n          ele.customLabel = `${ele.expectedVisitorName} ${ele.block_Unit} ${ele.expectedVisitorInTime} ${ele.expectedVisitorOutTime}` \n        });\n      } \n    }) \n  }\n\n  setVisitor(event) {\n    this.booking.neededUserId = event[0].expectedVisitorId;\n  }\n\n  routerConfig() {\n    if(this.isAdmin()) {\n      if(this.booking.facilityBookingStatusId == 188)\n      this.router.navigate(['/ams/facility/bookings-status/confirmed']);\n      else if(this.booking.facilityBookingStatusId == 189)\n        this.router.navigate(['/ams/facility/bookings-status/pending']);\n      else if(this.booking.facilityBookingStatusId == 208)\n        this.router.navigate(['/ams/facility/bookings-status/cancelled']);\n      else if(this.booking.facilityBookingStatusId == 385)\n        this.router.navigate(['/ams/facility/bookings-status/rejected']);\n    } else {\n      this.router.navigate(['/user/facility/bookings/all-bookings']);\n    }\n  }\n\n  pageNavigate(res,type) {\n    if(res.message) {\n      if(this.info.type == 'create')  //popup\n        this.modalResult.emit(true);      \n      else  {\n        if(type == 'create')\n          this.sharedService.openSnackBar('ApartmentFacilityBooking Created','success');\n        else\n          this.sharedService.openSnackBar('ApartmentFacilityBooking Updated','success');\n          this.routerConfig();\n      }\n    } else {\n      this.sharedService.openSnackBar(res.errorMessage,'error');\n    }\n  }\n\n  setSlotStructure() {\n    if( this.booking.rateBaseId == 139) {  //BookingPerDay \n      this.booking.slotId = null;\n      this.booking.isSlotBooking = false;\n      this.booking.bookedFromTime = \"00:00:01\";\n      this.booking.bookedToTime = \"23:59:00\";\n      this.booking.apartmentFacilityIsSlotBooking_List = [{\n        \"slotId\": null,\n        \"isSlotBooking\": false,\n        \"bookedForDate\": this.booking.bookedForDate,\n        \"bookedFromTime\": \"00:00:01\",\n        \"bookedToTime\": \"23:59:00\"\n      }]\n    } else if(this.facilitySlotData.length == 0 &&  this.booking.rateBaseId == 138) {  // BookingPerHour Without Slot\n      this.booking.slotId = null;\n      this.booking.isSlotBooking = false;\n      this.booking.bookedFromTime = moment(this.booking.bookedFromTime).format('HH:mm:ss');\n      this.booking.bookedToTime =  moment(this.booking.bookedToTime).format('HH:mm:ss');\n      this.booking.apartmentFacilityIsSlotBooking_List = [{\n        \"slotId\": null,\n        \"isSlotBooking\": false,\n        \"bookedForDate\": this.booking.bookedForDate,\n        \"bookedFromTime\": this.booking.bookedFromTime,\n        \"bookedToTime\": this.booking.bookedToTime \n      }]\n    } else if(this.facilitySlotData.length > 0 &&  this.booking.rateBaseId == 138) { //BookingPerHour with Slot\n      this.booking.isSlotBooking = true;\n      this.booking.bookedFromTime = null;\n      this.booking.bookedToTime = null;\n      this.booking.apartmentFacilityIsSlotBooking_List = [{\n        \"slotId\": this.booking.slotId,\n        \"isSlotBooking\": true,\n        \"bookedForDate\": this.booking.bookedForDate,\n        \"bookedFromTime\":  null,\n        \"bookedToTime\": null \n      }]\n    }\n    if(!this.booking.isBookingforGuest) {  //Booked for USer\n      this.booking.guestName = null;\n      this.booking.guestPhone = null;\n      this.booking.guestRelation = null;\n      this.booking.totalofguestsforevent = null;\n    }\n  }\n\n  setStatus(event) {\n    this.booking.facilityBookingStatusId = event[0].lookupValueId;\n  }\n\n  createFacilityBooking() {\n    this.message = null;\n    if(!this.facilityBookingForm.valid){\n      window.scroll({\n        top: 0,\n        behavior: 'smooth'\n      });\n      // Show the validation message\n      this.message = {\n        appearance: 'outline',\n        content   : \"Fill the Required Fields\",\n        shake     : true,\n        showIcon  : true,\n        type      : 'error'\n      };\n      //Mark for check\n      this.changeDetect.markForCheck();\n    } else {\n      this.isBookingSubmitted = true;\n      this.setSlotStructure();\n      let params = {\n        apartmentFacilityBooking: {\n          ...this.booking,\n          isCancelled: false,\n          cancelledBy:null,\n          cancelledOn: '',\n          cancelledAmount: 0,\n          rateBaseIdName :  this.booking.rateBaseId == 138 ? 'Hour' : 'Day',\n          isApproved: false,\n          apartmentId: this.sessionService.apartmentId,\n          bookedOn: _moment().toISOString(),\n          isActive: true,\n          insertedBy: this.sessionService.userId,\n          insertedOn: _moment().toISOString(),\n          updatedBy: null,\n          updatedOn: null,\n        }\n      }\n      this.facilityService.addApartmentFacilityBooking(params).subscribe((res:any) => {\n        this.isBookingSubmitted = false;\n        this.pageNavigate(res,'create');\n      },(error)=>{\n        this.isBookingSubmitted = false;\n        this.sharedService.openSnackBar('Server Error','error');\n      }) \n    }\n  }\n\n  updateFacilityBooking() {\n    this.message = null;\n    if(!this.facilityBookingForm.valid){\n      window.scroll({\n        top: 0,\n        behavior: 'smooth'\n      });\n      // Show the validation message\n      this.message = {\n        appearance: 'outline',\n        content   : \"Fill the Required Fields\",\n        shake     : true,\n        showIcon  : true,\n        type      : 'error'\n      };\n      //Mark for check\n      this.changeDetect.markForCheck();\n    } else {\n      this.isBookingSubmitted = true;\n      this.setSlotStructure();\n      let params = {\n        apartmentFacilityBooking: {\n          ...this.booking,\n          rateBaseIdName :  this.booking.rateBaseId == 138 ? 'Hour' : 'Day',\n          updatedBy: this.sessionService.userId,\n          updatedOn: _moment().toISOString(),\n        }\n      }\n      this.facilityService.updateApartmentFacilityBooking(params).subscribe((res:any) => {\n        this.isBookingSubmitted = false;\n        this.pageNavigate(res,'update');\n      },(error)=>{\n        this.isBookingSubmitted = false;\n        this.sharedService.openSnackBar('Server Error','error');\n      }) \n    }\n  }\n\n  back() {\n    const message = `Are you sure, you want to exit the screen ?`;\n    const dialogData = new ConfirmDialogModel(\"Confirm Action\", message);\n    const dialogRef = this.dialog.open(CommonConfirmModalComponent, {\n      panelClass: 'material-dialog-medium',\n      disableClose: true,\n      data: dialogData\n    });\n    dialogRef.afterClosed().subscribe(dialogResult => {\n      if(dialogResult) {\n        this.routerConfig();\n      }\n    })\n  }\n\n  editFacilityBooking(id) {\n    let params = {\n      apartmentFacilityBookingId: id,\n    }\n    this.facilityService.getApartmentFacilityBookingsByFacilityBookingId(params).subscribe((res:any)=>{\n      let {bookedFromTime,bookedToTime,bookedForDate, ...response} = res[0];\n      this.booking = response;\n      this.booking.bookedFromTime = moment(bookedFromTime,'HH:mm:ss');\n      this.booking.bookedToTime = moment(bookedToTime,'HH:mm:ss');\n      this.getFacilityCategoryList().subscribe((facility)=>{\n        if(res.length > 0) {\n          this.facilityCatList = facility;\n          this.selectFacility(null);\n        }\n      })\n      this.getTower().subscribe((tower:any)=>{\n        if(res.length > 0) {\n          this.towerList = tower;\n          this.getUnits('edit');\n        }\n      })\n    })\n  }\n\n  ngOnInit() {\n\n    this.sharedService.timezonecast.subscribe( timeZone => this.timeZone = timeZone )\n\n      // Set TimeZone \n    if(this.route.parent) {\n      this.route.parent.parent.parent.data.subscribe((data)=>{\n        if(data) {\n          let response = data.initialData.apartment;\n          this.selectedCountryISO = response.country.toLowerCase();\n        }\n      })\n    }\n   \n\n    //User Login\n    if(!this.isAdmin()) {  \n      this.booking.apartmentBlockId = this.sessionService.apartmentBlockID;\n      this.booking.apartmentBlockUnitId = this.sessionService.apartmentBlockUnitID;\n      this.booking.apartmentBlockUnitUserId = this.sessionService.apartmentBlockUnitUserId;\n      this.booking.facilityBookingStatusId = 189 //pending\n    } else {\n       // Facility Status\n       let statusParams = {\n        LookupTypeId: 40,\n        ApartmentId: this.sessionService.apartmentId\n      }\n      this.lookupService.getLookupValueByLookupTypeId(statusParams).subscribe((res:any) => {\n        if(res.length > 0)\n        this.facilityStatus = res;\n      });\n    }\n    this.booking.isBookingforGuest = true;\n    this.booking.discount = 0;\n\n    // Create Method Using POPUP \n    if(this.info && this.info.type == 'create')\n      this.urlType = 'create';\n    else if(this.info && this.info.type == 'view') \n      this.urlType = 'view';\n   \n    if(this.urlType == 'create') {\n       // Facility Category List \n      this.getFacilityCategoryList().subscribe((res:any) => {\n        if(res.length > 0) {\n          this.facilityCatList = res;\n          if(this.info.type) {\n            let calendarInfo = this.info.calendarData;\n            this.booking.apartmentFacilityId = Number(calendarInfo.resource._resource.id);\n            this.booking.bookedForDate =  moment(calendarInfo.startStr).format(),\n            this.selectFacility(null);\n          }\n        }\n      })\n      // Tower List\n      this.getTower().subscribe((res:any)=>{\n        if(res.length > 0)\n        this.towerList = res;\n      })\n    }\n\n     // Currency Type\n    let pesoParams = {\n      LookupTypeId: 101,\n      ApartmentId: this.sessionService.apartmentId\n    }\n    this.lookupService.getLookupValueByLookupTypeId(pesoParams).subscribe((res:any) => {\n      if(res.length > 0)\n      this.pesoValue = res[0].lookupValueName;\n    });\n\n     // Tax List\n    let taxListParams = {\n\t\t\tApartmentId: this.sessionService.apartmentId,\n\t\t\tLookupTypeId: 183\n\t\t}\n\t\tthis.lookupService.getLookupValueByLookupTypeId(taxListParams).subscribe((res: any) => {\n\t\t\tif (res.length > 0) {\n\t\t\t\tthis.taxPecentage = parseInt(res[0].lookupValueName);\n\t\t\t}\n    });\n\n    if(this.urlType && this.urlType != 'create') {\n      let id;\n      if(this.route.params['value'] && this.route.params['value'].id)\n        id = this.route.params['value'].id;\n      else if(this.info.bookingId) \n        id = this.info.bookingId;\n      this.editFacilityBooking(id);\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL2ZhY2lsaXR5L2ZhY2lsaXR5LWNyZWF0ZS1ib29raW5nL2ZhY2lsaXR5LWV4cGVjdGVkLXZpc2l0b3IvZmFjaWxpdHktZXhwZWN0ZWQtdmlzaXRvci5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, Output, EventEmitter, Input, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, ChangeDetectorRef} from '@angular/core';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport * as moment from 'moment';\nimport _moment from \"moment-timezone\";\nimport { SearchCountryField, CountryISO } from 'ngx-intl-tel-input';\nimport { CondoAnimations } from 'src/@condo/animations';\nimport { VisitorService } from 'src/app/api/controllers/Visitor';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-facility-expected-visitor',\n  templateUrl: './facility-expected-visitor.component.html',\n  styleUrls: ['./facility-expected-visitor.component.scss'],\n  encapsulation  : ViewEncapsulation.None,\n  animations   : CondoAnimations\n})\n\nexport class FacilityExpectedVisitorComponent implements OnInit {\n  \n  @ViewChild('expectedVisitorForm') form:any;\n  @Input('popUpInfo') info:any = {};\n  @Output() modalResult = new EventEmitter()\n  visitor:any = {};\n  expectedDurationInfo:string = '';\n  visitTypeList:any = [];\n  visitCategoryList:any = [];\n  isDataSubmitted:boolean = false;\n  SearchCountryField = SearchCountryField;\n  CountryISO = CountryISO;\n  preferredCountries: CountryISO[] = [CountryISO.UnitedStates, CountryISO.UnitedKingdom];\n  message: any = null;\n  selectedCountryISO: any = \"\";\n  timeZone:any;\n\n  constructor(\n    private visitorService:VisitorService,\n    private lookupService: LookupService,\n    private sharedService:SharedService,\n    private sessionService:SessionService,\n    private activateRouter:ActivatedRoute,\n    private _changeDetectorRef: ChangeDetectorRef,\n  ) { \n  }\n\n  getExpectedVisitorInDate(event) {\n    this.visitor.expectedVisitorInTime = event;\n    this.expectedDurationChange();\n  }\n\n  getExpectedVisitorOutDate(event) {\n    this.visitor.expectedVisitorOutTime = event;\n    this.expectedDurationChange();\n  }\n\n  expectedDurationChange() {\n    if(this.visitor.expectedVisitorInTime && this.visitor.expectedVisitorOutTime) {\n      let inDate = moment(this.visitor.expectedVisitorInTime);\n      let outDate = moment(this.visitor.expectedVisitorOutTime);\n      let diffDuration = moment.duration(outDate.diff(inDate));\n      this.expectedDurationInfo = diffDuration.days()+\" days \"+this.isSingleDigit(diffDuration.hours())+\":\"+ this.isSingleDigit(diffDuration.minutes())+\" hours\";\n      let hours = diffDuration.asHours();\n      this.visitor.expectedDuration = Math.round(hours);\n    }\n  }\n\n  isSingleDigit(digit){\n    if(digit <= 0){\n      return '00';\n    } else {\n      return (digit.toString().length > 1) ? digit : '0'+digit;\n    }\n  }\n\n  resetField() {\n    this.visitor={};\n    this.visitor.visitTypeId = null;\n    this.visitor.visitorCategoryId = null;\n    this.expectedDurationInfo='';\n  }\n\n  createExpectedVisitor() {\n\n    this.isDataSubmitted = true;\n\n    this.message = null;\n    if(!this.form.valid){\n      window.scroll({\n        top: 0,\n        behavior: 'smooth'\n      });\n      // Show the validation message\n      this.message = {\n        appearance: 'outline',\n        content   : \"Fill the Required Fields\",\n        shake     : true,\n        showIcon  : true,\n        type      : 'error'\n      };\n      //Mark for check\n      this._changeDetectorRef.markForCheck();\n    } else {\n      let params = {\n        expectedVisitor : {\n          ...this.visitor,\n          \"apartmentUnitId\": this.info.apartmentBlockUnitId,\n          \"apartmentId\" : this.sessionService.apartmentId,\n          \"expectedVisitorPhone\": this.visitor.expectedVisitorPhone.number,\n          \"isActive\": true,\n          \"insertedBy\": this.sessionService.userId,\n          \"insertedOn\": _moment().toISOString(),\n          \"updatedBy\": null,\n          \"updatedOn\": null,\n          \"enteredBy\": parseInt(this.sessionService.userId),\n          \"meetingPersonId\": 1,\n          \"visitorsOrg\": \"string\",\n          \"entryGateId\": null,\n          \"exitGateId\": null,\n          \"tomeetStaffId\": this.visitor.tomeetStaffId,\n          \"phonecountrycode\":  this.visitor.expectedVisitorPhone.countryCode,\n        }\n      }\n      this.visitorService.addExpectedVisitor(params).subscribe((res:any) => {\n        this.isDataSubmitted = false;\n        if(res.message) {\n          this.modalResult.emit({message:'success',id:res.message});\n        }\n      })\n    }\n  }\n\n  ngOnInit() {\n\n    this.sharedService.timezonecast.subscribe( timeZone => this.timeZone = timeZone )\n\n    this.visitor.expectedVisitorInTime = moment().add(this.timeZone.offset, 'hours')\n\n    this.resetField();\n     //visit type\n    let visitParams = {\n      ApartmentId: this.sessionService.apartmentId,\n      LookupTypeId: 15\n    }\n    this.lookupService.getLookupValueByLookupTypeId(visitParams).subscribe((res:any) => {\n      this.visitTypeList = res;\n    });\n    //Visit Category\n    let visitCategoryParams = {\n      ApartmentId: this.sessionService.apartmentId,\n      LookupTypeId: 100\n    }\n    this.lookupService.getLookupValueByLookupTypeId(visitCategoryParams).subscribe((res:any) => {\n      this.visitCategoryList = res\n    });\n\n    this.selectedCountryISO = this.info.location;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL2ZhY2lsaXR5L2ZhY2lsaXR5LWNyZWF0ZS1ib29raW5nL2ZhY2lsaXR5LW1vZGFsL2ZhY2lsaXR5LW1vZGFsLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-facility-modal',\n  templateUrl: './facility-modal.component.html',\n  styleUrls: ['./facility-modal.component.scss']\n})\nexport class FacilityModalComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<FacilityModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  popUpResult(event) {\n    this.dialogRef.close(event);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL2ZhY2lsaXR5L2ZhY2lsaXR5LWNyZWF0ZS1ib29raW5nL3VzZXItZmFjaWxpdHktYm9va2luZy1saXN0L3VzZXItZmFjaWxpdHktYm9va2luZy1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, HostListener, ViewChild, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FacilityService } from 'src/app/api/controllers/Facility';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport * as moment from 'moment';\nimport _moment from \"moment-timezone\";\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ModalService } from 'src/app/shared/services/modal.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-user-facility-booking-list',\n  templateUrl: './user-facility-booking-list.component.html',\n  styleUrls: ['./user-facility-booking-list.component.scss']\n})\n\nexport class UserFacilityBookingListComponent implements OnInit { \n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n  columnData:any;\n  bookingListData:any;\n  bookingSearch:string = '';\n  modalService:any;\n  isBookingDataLoaded:boolean = false;\n  totalItems:number = 0;\n  apiSubscribe:Subscription;\n  \n  constructor(\n    private facilityService:FacilityService,\n    private sessionService:SessionService,\n    private router: Router,\n    private injector: Injector,\n    private sharedService:SharedService,\n    public dialog: MatDialog,\n  ) {\n    this.modalService = this.injector.get(ModalService);\n  }\n  \n  @HostListener('window:onEditFacility', ['$event.detail'])\n  editBooking(detail) {\n    let dataRecord = this.datagrid.getrowdata(detail.rowId);\n    this.router.navigate(['user/facility/bookings/edit-booking',dataRecord.apartmentFacilityBookingId]);\n  }\n\n  @HostListener('window:onDeleteFacility', ['$event.detail'])\n  deleteBooking(detail) {\n    this.modalService.showConfirmModal(detail.rowId);\n  }\n\n  onGlSearchFilter(event) {\n    if(event != \"\"){\n      let filtergroup = new jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = event;\n      let filtercondition = 'contains';\n      let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n      filtergroup.operator = 'or';\n      filtergroup.addfilter(filter_or_operator, filterData);\n      this.datagrid.showfiltercolumnbackground(false);\n      this.columnData.forEach(item => {\n        if(item.datafield != 'Actions') {\n          this.datagrid.addfilter(item.datafield, filtergroup, true);\n        }\n      })\n      this.datagrid.applyfilters();\n    }\n    else {\n      this.datagrid.clearfilters();\n    }\n  }\n  \n  getPrintParams(event) {\n    this.datagrid.exportdata(event, 'BookingList');\n  }\n\n  getBookingList() {\n    this.isBookingDataLoaded = false;\n    let params = {\n      apartmentId: this.sessionService.apartmentId,\n      apartmentBlockUnitUserId: this.sessionService.apartmentBlockUnitUserId\n    }\n    this.facilityService.getApartmentFacilityBookingsByBlockunituserId(params).subscribe((res:any) => {\n      if(res.length > 0) {\n        let facility = {\n          localdata: res.reverse(),\n          datatype: \"array\"\n        }\n        this.totalItems = facility.localdata.length;\n        this.bookingListData = new jqx.dataAdapter(facility);\n      }\n      this.isBookingDataLoaded = true;\n    })\n  }\n\n  ngOnInit() {\n    this.getBookingList();\n    var cellsrenderer = (row, column, value) => {\n      return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n    }\n    var columnrenderer = (value) => {\n      return '<div style=\"padding: 14px\">' + value + '</div>';\n    }\n\n    this.columnData = [{\n      text: 'Booking Id',\n      datafield: 'serialNo',\n      cellsrenderer: cellsrenderer,\n      minwidth: 80,\n      renderer: columnrenderer\n    },{\n      text: 'Facility Name',\n      datafield: 'apartmentFacilityName',\n      cellsrenderer: cellsrenderer,\n      minwidth: 80,\n      renderer: columnrenderer\n    },{\n      text: 'Event Date',\n      datafield: 'bookedForDate',\n      cellsrenderer: (row, column, value) => {\n        return '<div class=\"jqx-custom-inner-cell\">'+ moment(value).format(\"DD-MM-YYYY\")+'</div>'\n      },\n      minwidth: 80,\n      renderer: columnrenderer,\n    },{\n      text: 'Event Time',\n      datafield: 'bookedFromTime',\n        cellsrenderer: (row, column, value) => {\n          let time,fromTime,toTime = this.bookingListData.loadedData[row].bookedToTime;\n          if(value && toTime)  {\n          fromTime = moment(value,'HH:mm:ss').format('hh:mm A');\n          toTime = moment(toTime,'HH:mm:ss').format('hh:mm A');\n          time = `${fromTime} - ${toTime}`\n          } else {\n            time = '-'\n          }\n        return '<div class=\"jqx-custom-inner-cell\">'+ time +'</div>'\n      },\n      cellsalign: 'center', \n      align: 'center',\n      minwidth: 160,\n      renderer: columnrenderer\n    },{\n      text: 'Total Hours',\n      datafield: 'bookedToTime',\n      cellsrenderer: (row, column, value) => {\n        let time,toTime,fromTime = this.bookingListData.loadedData[row].bookedFromTime;\n        if(fromTime && value) {\n          fromTime = moment(fromTime,'HH:mm:ss').format();\n          toTime = moment(value,'HH:mm:ss').format();\n          time = moment.duration(moment(toTime).diff(moment(fromTime)));\n          if(time.minutes() == 0) {\n            time = `${time.hours()}hrs`\n          } else {\n            time = `${time.hours()}hrs ${time.minutes()}mins`\n          }\n          if(time == '23hrs 58mins') {\n            time = '24hrs'\n          }\n        } else {\n          time = '-'\n        }\n        return '<div class=\"jqx-custom-inner-cell ml-4\">'+ time +'</div>'\n      },\n      minwidth: 80,\n      renderer: columnrenderer\n    },{\n      text: 'Rate Type',\n      datafield: 'rateBaseIdName',\n      cellsrenderer: cellsrenderer,\n      minwidth: 80,\n      renderer: columnrenderer\n    },{\n      text: 'Cost',\n      datafield: 'amount',\n      cellsrenderer: cellsrenderer,\n      minwidth: 80,\n      renderer: columnrenderer\n    },{\n      text: 'Discount',\n      datafield: 'discount',\n      cellsrenderer: cellsrenderer,\n      minwidth: 80,\n      renderer: columnrenderer\n    },{\n      text: 'Final Bill',\n      datafield: 'totalBillAmount',\n      cellsalign: 'center', \n      align: 'center',\n      cellsrenderer: cellsrenderer,\n      minwidth: 80,\n      renderer: columnrenderer,\n    },{\n      text: 'Booked For',\n      datafield: 'isBookingforGuest',\n      cellsrenderer: (row, column, value) => {\n        value =  value ? 'Guest' : 'Unit User';\n        return '<div class=\"jqx-custom-inner-cell\">'+ value +'</div>'\n      },\n      minwidth: 80,\n      renderer: columnrenderer\n    },{\n      text: 'Status',\n      datafield: 'facilityBookingStatusId',\n      cellsrenderer: (row, column, value) => {\n        let status;\n        if(value == 189) {  //Pending\n          status = 'purple';\n        } else if (value == 188) {  //completed\n          status =  'green';\n        }  else if (value == 208 || value == 385) {  //Cancelled || Rejected\n          status = 'red';\n        }\n        return `<div class=\"jqx-custom-inner-cell\">\n          <div class=\"status-badge bg-status-${status}-700\">\n            <span class=\"font-bold text-status-${status}-900 text-uppercase\">${this.bookingListData.loadedData[row].facilityBookingStatusId_Label}</span>\n          </div>\n        </div>`\n      },\n      cellsalign: 'center', \n      align: 'center',\n      minwidth: 100,\n      renderer: columnrenderer\n    },{\n      text: 'Actions',\n      cellsalign: 'center',\n      cellsrenderer: (row: number): string => {\n        return '<div class=\"simple-actions\">'\n        +'<a href=\"javascript:void(0)\" class=\"mr-3\" onClick=\"editFacilityBooking('+ row +')\" title=\"Edit Facility\"><i class=\"fa fa-pencil icon edit\" aria-hidden=\"true\"></i></a>'\n        +'<a href=\"javascript:void(0)\" onClick=\"deleteFacilityBooking(' + row + ')\" title=\"Delete Facility\"><i class=\"fa fa-trash icon delete\" aria-hidden=\"true\"></i></a>'\n        +'</div>'\n      },\n      minwidth: 80,\n      renderer: columnrenderer\n    }];\n    //delete item\n    this.apiSubscribe = this.sharedService.unitlistdeleteindexcast.subscribe( id => {\n      if(id != null) {\n        let dataRecord = this.datagrid.getrowdata(id);\n        let params = {\n          apartmentFacilityBookingId: dataRecord.apartmentFacilityBookingId,\n          deleteBy: parseInt(this.sessionService.userId)\n        }\n        this.facilityService.deleteApartmentFacilityBooking(params).subscribe((res:any) => {\n          this.sharedService.setUnitListDeleteIndex(null);\n          if(res.message) {\n            this.datagrid.deleterow(id);\n            this.datagrid.refresh();\n            this.sharedService.openSnackBar(res.message,'success');\n          }  else {\n            this.sharedService.openSnackBar(res.errorMessage,'error');\n          }\n        });\n      }\n    });\n    \n  }\n\n  ngOnDestroy(){\n\t\tthis.apiSubscribe.unsubscribe();\n\t}\n}\n  \nfunction editFacilityBooking(row) {  \n  var event = new CustomEvent('onEditFacility', {\n    detail: {\n      rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).editFacilityBooking = editFacilityBooking;\n\nfunction deleteFacilityBooking(row) {\n  var event = new CustomEvent('onDeleteFacility', {\n    detail: {\n      rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).deleteFacilityBooking = deleteFacilityBooking;\n  \n"]}